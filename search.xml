<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>给带 QMK 功能的 Keychron 键盘增加 Apple 的 Globe 键</title>
      <link href="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/"/>
      <url>/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/</url>
      
        <content type="html"><![CDATA[<p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/apple_globe_key.jpg" alt="Apple Globe Key"></p><h2 id="为什么又发神经？"><a href="#为什么又发神经？" class="headerlink" title="为什么又发神经？"></a>为什么又发神经？</h2><h3 id="一个全屏快捷键引发的故事"><a href="#一个全屏快捷键引发的故事" class="headerlink" title="一个全屏快捷键引发的故事"></a>一个全屏快捷键引发的故事</h3><p>事情是这样的，某天我在用倒霉的 Microsoft Teams 开会的时候，我习惯性地使用 <code>^ + ⌘ + F</code> 快捷键尝试全屏显示。</p><p>结果反复按了几次快捷键都没有反应，我就奇了怪了，为什么不行呢？以前都可以的。</p><p>结果发现 Teams 的快捷键变了，跟原来的不一样了。如下图：</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/teams_fullscreen_shortcut.png"></p><p>是不是只有 Teams 在作妖，其它的应用呢？是不是快捷键也变了？</p><p>于是我打开了万年不用的 Safari 和 Chrome，hmm……</p><span id="more"></span><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/safari_fullscreen_shortcut.png"></p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/chrome_fullscreen_shortcut.png"></p><p>buer，苹果你这么玩儿是吧？！没事儿就瞎改快捷键是吧？！</p><p>行行行～～～你赢了，我改习惯还不行吗？不就是 <code>🌐︎ + F</code> 吗？</p><p>盐鹅，一顿操作猛如虎，发现我这「高级」的 Keychron 货，并不是尊贵的苹果键盘，根本没有 <code>🌐︎</code> 键啊……</p><h3 id="自信满满的-QMK-VIA-之旅"><a href="#自信满满的-QMK-VIA-之旅" class="headerlink" title="自信满满的 QMK + VIA 之旅"></a>自信满满的 QMK + VIA 之旅</h3><p>那怎么办？简单，咱这可是带 QMK 固件，支持 VIA 的高级货。</p><p>理论上来说，简单地修改一下配置，就可以实现 <code>🌐︎</code> 键的映射。</p><p>又天真了不是？！人家苹果的 <code>🌐︎</code> 键，那可是仅属于苹果的存在，「杂牌货」的 Keychron 不配。</p><p>就算在 Keychron 里面配置了 <code>fn</code> 键，也无法在 macOS 上成功激活 <code>🌐︎</code> 键。</p><h2 id="探索之旅"><a href="#探索之旅" class="headerlink" title="探索之旅"></a>探索之旅</h2><p>不信邪的我，开始了漫长的寻找解决方案之路……</p><h3 id="历代的苹果-Magic-Keyboard"><a href="#历代的苹果-Magic-Keyboard" class="headerlink" title="历代的苹果 Magic Keyboard"></a>历代的苹果 Magic Keyboard</h3><p>寻找的过程中，发现了一些苹果键盘变化的蛛丝马迹。</p><p>比如说，第一代的苹果 Magic Keyboard 是没有 <code>🌐︎</code> 键的，只有 <code>fn</code> 键。如下图：</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/magic_keyboard_1st_gen.png" alt="第一代的苹果 Magic Keyboard"></p><p>然后到了第二代的时候，苹果在键盘的右上角增加了一个 <code>🌐︎</code> 键和 <code>fn</code> 键共用的按键。如下图：</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/magic_keyboard_2nd_gen.png" alt="第二代的苹果 Magic Keyboard"></p><p>到了最新的第三代嘛，你懂的，苹果直接把 <code>🌐︎</code> 和 <code>fn</code> 键布置到了键盘的左下角，成为了新的「修饰键」（Modifier Keys）。如下图：</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/magic_keyboard_3rd_gen.png" alt="第三代的苹果 Magic Keyboard"></p><p>至此，恭喜 <code>fn</code> 键成功晋级为 <code>🌐︎</code> 键，并成为了 macOS 中的「修饰键」（Modifier Keys）。</p><p>从此在 macOS 中，和 <code>Control</code>、<code>Option</code>、<code>Command</code> 一样，拥有了「一席之地」。</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/modifier_keys.png" alt="macOS 中的「修饰键」（Modifier Keys）"></p><h3 id="开始找解题思路"><a href="#开始找解题思路" class="headerlink" title="开始找解题思路"></a>开始找解题思路</h3><p>看一下 QMK 官方的 Issue 里面就有一个 <a href="https://github.com/qmk/qmk_firmware/issues/16651">Add support for globe key (🌐︎︎) for macOS&#x2F;iPadOS&#x2F;iOS</a> 的讨论。</p><p>发现并没有什么好的解决方案，然后就顺藤摸瓜，找到了 <a href="https://gist.github.com/fauxpark/010dcf5d6377c3a71ac98ce37414c6c4">QMK Apple Fn Key</a> 这篇文章。</p><p>文中提到的方法，需要修改 USB 设备的 VID 和 PID，伪装成苹果的键盘，才能在 macOS 中正常使用。</p><p>个人使用来看似乎没什么问题，但是 VID 和 PID 也是要通过 USB 联盟认证的，直接修改 VID 和 PID 似乎有点不太优雅。</p><p>不过在搜索的过程中，发现了一个苹果的 <a href="https://developer.apple.com/accessories/Accessory-Design-Guidelines.pdf">Accessory Design Guidelines</a> 文档，里面提到了苹果的 <code>🌐︎</code> 键。哎嗨，这不就是我想要的吗？</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/hid_consumer_globe_key.png" alt="Hid Consumer Globe Key"></p><h2 id="又到了快乐编程时间"><a href="#又到了快乐编程时间" class="headerlink" title="又到了快乐编程时间"></a>又到了快乐编程时间</h2><p>经过了 N 个小时漫长的代码阅读，终于掌握了 Keychron QMK 实现的精髓。</p><p>这里省略一万字的心酸历程，直接上干货。</p><h3 id="增加相对应的-Keycode"><a href="#增加相对应的-Keycode" class="headerlink" title="增加相对应的 Keycode"></a>增加相对应的 Keycode</h3><h4 id="data-constants-keycodes-keycodes-0-0-2-basic-hjson"><a href="#data-constants-keycodes-keycodes-0-0-2-basic-hjson" class="headerlink" title="data/constants/keycodes/keycodes_0.0.2_basic.hjson"></a><code>data/constants/keycodes/keycodes_0.0.2_basic.hjson</code></h4><p>原始的 QMK 中，并没有 <code>KC_GLOBE</code> 这个 Keycode，所以需要我们自己增加。</p><p>先修改 <code>data/constants/keycodes/keycodes_0.0.2_basic.hjson</code> 文件，增加相对应的 Keycode。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;0x00C3&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;media&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;KC_GLOBE&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Apple Globe/FN Key&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aliases&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;KC_GLOB&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>在原文件中，<code>0x00C2</code> 是 <code>KC_LAUNCHPAD</code> 的 Keycode，所以这里我们使用 <code>0x00C3</code> 作为 <code>KC_GLOBE</code> 的 Keycode。</p><p>并把 <code>KC_GLOB</code> 作为 <code>KC_GLOBE</code> 的别名。</p><h4 id="quantum-keycodes-h"><a href="#quantum-keycodes-h" class="headerlink" title="quantum/keycodes.h"></a><code>quantum/keycodes.h</code></h4><p>接下来修改 <code>quantum/keycodes.h</code> 文件，在 <code>enum qk_keycode_defines</code> 中增加相对应的 Keycode。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">qk_keycode_defines</span> &#123;</span></span><br><span class="line">    ...</span><br><span class="line">    KC_GLOBE = <span class="number">0x00C3</span>, <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">    ...</span><br><span class="line">    KC_GLOB    = KC_GLOBE, <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>还记得苹果的 <a href="https://developer.apple.com/accessories/Accessory-Design-Guidelines.pdf">Accessory Design Guidelines</a> 文档吗？</p><p>其中 <code>KC_GLOBE</code> 键对应的 Usage ID 是 <code>0x029D</code>，名称是 <code>AC Keyboard Layout Select</code>，属于 <code>HID Consumer Page</code>。</p><p>所以我们还需要对应的修改 <code>IS_CONSUMER_KEYCODE</code> 和 <code>CONSUMER_KEYCODE_RANGE</code> 的宏定义。</p><p>把原来的 <code>KC_LAUNCHPAD</code>(0x00C2) 宏定义替换为数值更高的 <code>KC_GLOBE</code>(0x00C3)。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> IS_CONSUMER_KEYCODE(code) ((code) &gt;= KC_AUDIO_MUTE &amp;&amp; (code) &lt;= KC_GLOBE) <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CONSUMER_KEYCODE_RANGE              KC_AUDIO_MUTE ... KC_GLOBE <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span></span><br></pre></td></tr></table></figure><h4 id="tests-test-common-keycode-table-cpp"><a href="#tests-test-common-keycode-table-cpp" class="headerlink" title="tests/test_common/keycode_table.cpp"></a><code>tests/test_common/keycode_table.cpp</code></h4><p>修改 <code>tests/test_common/keycode_table.cpp</code> 文件，增加相对应的 Keycode。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">std::map&lt;<span class="type">uint16_t</span>, std::string&gt; KEYCODE_ID_TABLE = &#123;</span><br><span class="line">    ...</span><br><span class="line">    &#123;KC_GLOBE, <span class="string">&quot;KC_GLOBE&quot;</span>&#125;, <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>至此，Keycode 部分的添加就算修改完成了。</p><h3 id="修改按键触发逻辑"><a href="#修改按键触发逻辑" class="headerlink" title="修改按键触发逻辑"></a>修改按键触发逻辑</h3><p>按键 Keycode 的定义有了，接下来就是修改按键触发逻辑了。</p><h4 id="HID-Consumer-上报"><a href="#HID-Consumer-上报" class="headerlink" title="HID Consumer 上报"></a>HID Consumer 上报</h4><p>文件：<code>tmk_core/protocol/report.h</code></p><p>要使得新增的 Keycode 可用，我们需要修改 HID Consumer 相关的代码。</p><p>本来我还想根据苹果的规范，自己添加映射的，但是发现已经有<a href="https://github.com/qmk/qmk_firmware/pull/22256">好心人做好了映射</a>，如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">consumer_usages</span> &#123;</span></span><br><span class="line">    <span class="comment">// 15.16 Generic GUI Application Controls</span></span><br><span class="line">    AC_NEXT_KEYBOARD_LAYOUT_SELECT = <span class="number">0x29D</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>那我们就直接使用这个映射，来修改 <code>KEYCODE2CONSUMER</code> 函数，增加对 <code>KC_GLOBE</code> 按键的支持。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">uint16_t</span> <span class="title function_">KEYCODE2CONSUMER</span><span class="params">(<span class="type">uint8_t</span> key)</span> &#123;</span><br><span class="line">    <span class="keyword">case</span> KC_GLOBE: <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">        <span class="keyword">return</span> AC_NEXT_KEYBOARD_LAYOUT_SELECT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Keychron-部分的实现"><a href="#Keychron-部分的实现" class="headerlink" title="Keychron 部分的实现"></a>Keychron 部分的实现</h4><p>因为我使用的是 Keychron 的键盘，所以修改的方式跟直接用 QMK 的不大一样。</p><p>需要修改 <code>keychron_common.h</code> 和 <code>keychron_common.c</code> 这两个文件，来增加对 <code>KC_GLOBE</code> 按键的支持。</p><p>文件：<code>keyboards/keychron/common/keychron_common.h</code></p><p>这个很简单，只需要在 <code>enum</code> 的 <code>NEW_SAFE_RANGE</code> 之前增加一个新的按键定义即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    ...</span><br><span class="line">    KC_APFN, <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">    NEW_SAFE_RANGE,</span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure><p>需要注意的是 <code>KC_APFN</code> 是我根据 Keychron 的固件代码，自己定义的一个按键。</p><p>这个名字不能与之前定义的 <code>KC_GLOBE</code> 相同，因为 <code>KC_GLOBE</code> 是 QMK 的 Keycode，而 <code>KC_APFN</code> 是 Keychron 的 Keycode。</p><p>这里一定要区分清楚，不要混淆了，后面在配置键盘 Keymap 的时候，还会用到这个定义。</p><p>文件：<code>keyboards/keychron/common/keychron_common.c</code></p><p>这个文件的修改也很简单，只需要在 <code>process_record_user</code> 函数中，增加对 <code>KC_APFN</code> 按键的判断即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">process_record_keychron_common</span><span class="params">(<span class="type">uint16_t</span> keycode, <span class="type">keyrecord_t</span> *record)</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> (keycode) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">case</span> KC_APFN: <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">            <span class="keyword">if</span> (record-&gt;event.pressed) &#123;</span><br><span class="line">                register_code(KC_GLOBE);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                unregister_code(KC_GLOBE);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// Skip all further processing of this key</span></span><br><span class="line">         <span class="keyword">default</span>:</span><br><span class="line">             <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// Process all other keycodes normally</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里就是把 Keychron 的 <code>KC_APFN</code> 转换为 QMK 的 <code>KC_GLOBE</code> 并通过 HID Consumer 协议发给系统。</p><p>当按键按下的时候，通过 <code>register_code(KC_GLOBE);</code> 注册 <code>KC_GLOBE</code> 按键。</p><p>当按键释放的时候，通过 <code>unregister_code(KC_GLOBE);</code> 注销 <code>KC_GLOBE</code> 按键。</p><h3 id="特定键盘的配置"><a href="#特定键盘的配置" class="headerlink" title="特定键盘的配置"></a>特定键盘的配置</h3><p>经过上面的修改，Keychron 的键盘就可以正常使用 <code>KC_GLOBE</code> 按键了。</p><p>但是对于特定的键盘，比如我现在正在使用的 K7 Max，我们还需要修改 Keymap 才能正常使用。</p><h4 id="Keymap-配置"><a href="#Keymap-配置" class="headerlink" title="Keymap 配置"></a>Keymap 配置</h4><p>Keymap 的配置，根据不同的键盘是不一样的。</p><p>我这里以我自己修改的 K7 Max 为例，只需把你想作为 <code>🌐︎</code> 的按键定义为 <code>KC_APFN</code> 即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">uint16_t</span> PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = &#123;</span><br><span class="line">    [MAC] = LAYOUT_ansi_68(</span><br><span class="line">        QK_GESC,          KC_1,     KC_2,     KC_3,     KC_4,     KC_5,     KC_6,     KC_7,     KC_8,     KC_9,     KC_0,     KC_MINS,  KC_EQL,   KC_BSPC,           KC_DEL,</span><br><span class="line">        KC_TAB,           KC_Q,     KC_W,     KC_E,     KC_R,     KC_T,     KC_Y,     KC_U,     KC_I,     KC_O,     KC_P,     KC_LBRC,  KC_RBRC,  KC_BSLS,           KC_HOME,</span><br><span class="line">        LT(FN1, KC_BSPC), KC_A,     KC_S,     KC_D,     KC_F,     KC_G,     KC_H,     KC_J,     KC_K,     KC_L,     KC_SCLN,  KC_QUOT,            KC_ENT,            KC_PGUP,</span><br><span class="line">        KC_LSFT,          KC_Z,     KC_X,     KC_C,     KC_V,     KC_B,     KC_N,     KC_M,     KC_COMM,  KC_DOT,   KC_SLSH,                      KC_RSFT,  KC_UP,   KC_PGDN,</span><br><span class="line">        KC_LCTL,          KC_LOPTN, KC_LCMMD,                               KC_SPC,                                 KC_RCMMD, KC_APFN,  MO(KCF),  KC_LEFT,  KC_DOWN, KC_RGHT),</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>像上面这样，在 <code>KC_RCMMD</code> 后面增加一个 <code>KC_APFN</code> 按键。</p><p>在键盘上的位置，就是空格右边 <code>⌘</code> 键再右边的 <code>fn1</code> 键，按下去就相当于按下了 <code>🌐︎</code> 键。</p><p>对于只使用 <code>🌐︎</code> 键切换输入法的朋友，看到这里就可以结束了。</p><p>但是对于想要使用 <code>🌐︎</code> 键作为修饰键的朋友，请继续往下看。</p><h4 id="Makefile-配置"><a href="#Makefile-配置" class="headerlink" title="Makefile 配置"></a>Makefile 配置</h4><p>文件：<code>keyboards/keychron/k7_max/ansi/rgb/keymaps/tommy/rules.mk</code></p><p>默认情况下，经过上述的修改，我们就可以正常使用 <code>🌐︎</code> 键了。</p><p>但这里有一个小问题，就是 QMK 默认情况下会使用不同的 USB Endpoint 来发送数据。</p><p>而苹果会把不同 Endpoint 的数据认为是独立的键盘输入，从而导致 <code>🌐︎ + 其他按键</code> 无法正常工作。</p><p>比如说，单独按 <code>🌐︎</code> 键，可以正常切换输入法。</p><p>但是当我按下 <code>🌐︎ + F</code> 键的时候，系统会认为我分别按下了 <code>🌐︎</code> 键和 <code>F</code> 键，而不是 <code>🌐︎ + F</code> 键。</p><p>所以，我们需要增加 <code>KEYBOARD_SHARED_EP = yes</code> 这个配置，让设备以 Shared Endpoint 的方式来发送数据。</p><p>这样，苹果会把不同 Endpoint 的数据认为是同一个键盘输入，从而使得 <code>🌐︎ + 其他按键</code> 可以正常工作。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KEYBOARD_SHARED_EP = yes</span><br></pre></td></tr></table></figure><p>如果不使用 VIA 功能的话，到这里就可以结束了。</p><p>但是要想临时改个按键什么的，也不能每次都编译固件吧？</p><p>既然来都来了，那么……</p><h4 id="VIA-支持"><a href="#VIA-支持" class="headerlink" title="VIA 支持"></a>VIA 支持</h4><p>文件：<code>keyboards/keychron/k7_max/via_json/k7_max_ansi_rgb_v1.0.json</code></p><p>其实也很简单，只需要在上述文件的 <code>customKeycodes</code> 字段中，增加 <code>APFn</code> 的定义即可。如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;customKeycodes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Globe Key&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Apple Globe/FN Key&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;shortName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;APFn&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>这样我们就可以在 VIA 中看到我们自定义的 <code>APFn</code>，也就是 <code>🌐︎</code> 按键了。</p><p>需要特别注意的是，我们之前编辑过的 Makefile 文件中，必须要有 <code>VIA_ENABLE = yes</code> 这个配置，否则 VIA 功能无法正常工作。</p><p>不过一般默认情况下，新的 Keychron 键盘都是默认开启 VIA 功能的。</p><p>综合上面的配置，Makefile 文件内容类似如下：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">VIA_ENABLE = yes</span><br><span class="line">KEYBOARD_SHARED_EP = yes</span><br></pre></td></tr></table></figure><h3 id="编译固件"><a href="#编译固件" class="headerlink" title="编译固件"></a>编译固件</h3><p>我这里选择编译和烧录固件同时进行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make keychron/k7_max/ansi/rgb:tommy:flash</span><br></pre></td></tr></table></figure><p>编译成功后，会输出类似如下的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Linking: .build/keychron_k7_max_ansi_rgb_tommy.elf                                                  [OK]</span><br><span class="line">Creating binary load file <span class="keyword">for</span> flashing: .build/keychron_k7_max_ansi_rgb_tommy.bin                   [OK]</span><br><span class="line">Creating load file <span class="keyword">for</span> flashing: .build/keychron_k7_max_ansi_rgb_tommy.hex                          [OK]</span><br><span class="line"></span><br><span class="line">Size after:</span><br><span class="line">   text   data    bss    dec    hexfilename</span><br><span class="line">      0  61450      0  61450   f00akeychron_k7_max_ansi_rgb_tommy.bin</span><br><span class="line"></span><br><span class="line">Copying keychron_k7_max_ansi_rgb_tommy.bin to qmk_firmware folder                                   [OK]</span><br></pre></td></tr></table></figure><p>表示成功生成了可烧录的二进制文件 <code>keychron_k7_max_ansi_rgb_tommy.bin</code>。</p><p>接下来程序会进入刷机模式，并出现类似的提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Flashing <span class="keyword">for</span> bootloader: stm32-dfu</span><br><span class="line">Bootloader not found. Make sure the board is <span class="keyword">in</span> bootloader mode. See https://docs.qmk.fm/<span class="comment">#/newbs_flashing</span></span><br><span class="line"> Trying again every 0.5s (Ctrl+C to cancel)...</span><br></pre></td></tr></table></figure><p>这个时候我们需要把键盘上的开关调整到 <code>Cable</code> 模式，然后按住 <code>Esc</code> 键不放，再重新插入 USB 数据线。</p><p>找到 <code>DFU</code> 模式的设备后，程序会自动进入烧录阶段，出现类似如下的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">dfu-util 0.11</span><br><span class="line"></span><br><span class="line">Copyright 2005-2009 Weston Schmidt, Harald Welte and OpenMoko Inc.</span><br><span class="line">Copyright 2010-2021 Tormod Volden and Stefan Schmidt</span><br><span class="line">This program is Free Software and has ABSOLUTELY NO WARRANTY</span><br><span class="line">Please report bugs to http://sourceforge.net/p/dfu-util/tickets/</span><br><span class="line"></span><br><span class="line">Opening DFU capable USB device...</span><br><span class="line">Device ID 0483:df11</span><br><span class="line">Device DFU version 011a</span><br><span class="line">Claiming USB DFU Interface...</span><br><span class="line">Setting Alternate Interface <span class="comment">#0 ...</span></span><br><span class="line">Determining device status...</span><br><span class="line">DFU state(10) = dfuERROR, status(10) = Device<span class="string">&#x27;s firmware is corrupt. It cannot return to run-time (non-DFU) operations</span></span><br><span class="line"><span class="string">Clearing status</span></span><br><span class="line"><span class="string">Determining device status...</span></span><br><span class="line"><span class="string">DFU state(2) = dfuIDLE, status(0) = No error condition is present</span></span><br><span class="line"><span class="string">DFU mode device DFU version 011a</span></span><br><span class="line"><span class="string">Device returned transfer size 2048</span></span><br><span class="line"><span class="string">DfuSe interface name: &quot;Internal Flash  &quot;</span></span><br><span class="line"><span class="string">Downloading element to address = 0x08000000, size = 93740</span></span><br><span class="line"><span class="string">Erase   [=========================] 100%        93740 bytes</span></span><br><span class="line"><span class="string">Erase    done.</span></span><br><span class="line"><span class="string">Download[=========================] 100%        93740 bytes</span></span><br><span class="line"><span class="string">Download done.</span></span><br><span class="line"><span class="string">File downloaded successfully</span></span><br><span class="line"><span class="string">Submitting leave request...</span></span><br><span class="line"><span class="string">Transitioning to dfuMANIFEST state</span></span><br></pre></td></tr></table></figure><p>当 <code>Erase</code> 和 <code>Download</code> 都完成后，程序会自动退出烧录模式，并提示固件烧录成功。</p><p>键盘会自动重启，并进入正常工作模式。</p><h2 id="验证-VIA-模式"><a href="#验证-VIA-模式" class="headerlink" title="验证 VIA 模式"></a>验证 VIA 模式</h2><p>使用 USB 数据线连接键盘和电脑，并把键盘开关调整到 <code>Cable</code> 模式。</p><p>打开 <code>Chrome</code> 浏览器，访问 <code>https://usevia.app/</code>，会看到类似如下的界面：</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/usevia.png" alt="VIA Authorize"></p><p>点击 <code>Authorize</code> 按钮，选择 <code>Keychron K7 Max</code> 键盘并 <code>Connect</code>。</p><p>对于第一次使用的用户，我们需要开启 <code>Show Design tab</code> 选项，否则无法看到键盘的配置界面。</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/usevia_design.png" alt="VIA Design"></p><p>不管以前是否有加载过配置的 json 文件，我们都需要重新加载一次，因为我们刚才修改了 json 配置文件。</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/usevia_load.png"></p><p>点击 <code>Load</code> 按钮，选择我们刚才修改的 <code>keyboards/keychron/k7_max/via_json/k7_max_ansi_rgb_v1.0.json</code> 文件。</p><blockquote><p>注意：第一次使用的用户，需要重新 <code>Authorize</code> 并 <code>Connect</code> 一次键盘才能正常使用。</p></blockquote><p>然后我们切换到首页，就可以看到我们刚才定义的 <code>APFn</code> 按键，并可以正常配置键位了。</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/usevia_globe_key.png" alt="VIA Globe Key"></p><h2 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h2><p>最后，给大家分享一个 <code>🌐︎</code> 键的小彩蛋。</p><p>实际上，虽然 <code>🌐︎</code> 键与 <code>fn</code> 键共用一个按键，但是它与 <code>fn</code> 键并不相同。</p><p><code>🌐︎</code> 键仅用于系统快捷键，以下是目前我在新版 macOS 系统上会用到的一些快捷方式：</p><ul><li><code>🌐︎ + A</code>：把焦点转移到 Dock 栏，然后按应用的首字母，并输入 <code>↩︎</code> 可以快速切换到该应用。</li><li><code>🌐︎ + ⇧ + A</code>：打开应用程序库（Launchpad），按字母可以快速启动应用。</li><li><code>🌐︎ + D</code>：启动听写</li><li><code>🌐︎ + E</code>：选择 Emoji 表情</li><li><code>🌐︎ + H</code>：显示桌面</li><li><code>🌐︎ + C</code>：显示控制中心</li><li><code>🌐︎ + N</code>：显示通知中心</li><li><code>🌐︎ + Q</code>：启动快速笔记</li><li><code>🌐︎︎ + F</code>：进入全屏模式</li></ul><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><p>不会吧，不会吧，不会吧，真的有人能坚持看到这里？</p><p>好吧，既然你都看到这里了，那么……</p><p>你不会真的以为我会跟你分享源代码吧？</p><p>恭喜你，答对了！</p><p>相关源代码已上传到 GitHub 仓库，感兴趣的朋友可以参考下面的 Commit：</p><p><a href="https://github.com/TommyLau/qmk_firmware/commit/f403c031640d618dceeeb73d140ab4bf085ac251">https://github.com/TommyLau/qmk_firmware/commit/f403c031640d618dceeeb73d140ab4bf085ac251</a></p><p>Changelog 如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">feat: Add support for Apple Globe/FN key (KC<span class="emphasis">_GLOBE)</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">- Add new keycode KC_</span>GLOBE (0x00C3) for Apple&#x27;s Globe/FN key</span><br><span class="line"><span class="bullet">-</span> Implement KC<span class="emphasis">_APFN custom keycode in Keychron common code</span></span><br><span class="line"><span class="emphasis">- Update keycode tables and ranges to include the new Globe key</span></span><br><span class="line"><span class="emphasis">- Add Globe key to VIA JSON configuration</span></span><br><span class="line"><span class="emphasis">- Modify Tommy K7 Max keymap to use the Globe key</span></span><br><span class="line"><span class="emphasis">- Map Globe key to AC_</span>NEXT<span class="emphasis">_KEYBOARD_</span>LAYOUT<span class="emphasis">_SELECT in USB HID report</span></span><br><span class="line"><span class="emphasis">- Enable shared endpoint for better macOS compatibility</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">This change implements proper support for the Apple Globe/FN key,</span></span><br><span class="line"><span class="emphasis">allowing for better integration with macOS keyboard layout switching.</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://developer.apple.com/accessories/Accessory-Design-Guidelines.pdf">Accessory Design Guidelines for Apple Devices</a></li><li><a href="https://github.com/qmk/qmk_firmware/issues/16651">Add support for globe key (🌐︎︎) for macOS&#x2F;iPadOS&#x2F;iOS</a></li><li><a href="https://gist.github.com/fauxpark/010dcf5d6377c3a71ac98ce37414c6c4">QMK Apple Fn Key</a></li><li><a href="https://skip.house/blog/qmk-globe-key">Adding Globe Key (🌐︎) to QMK</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Software </tag>
            
            <tag> Apple </tag>
            
            <tag> Microsoft </tag>
            
            <tag> macOS </tag>
            
            <tag> Firmware </tag>
            
            <tag> Hardware </tag>
            
            <tag> Keyboard </tag>
            
            <tag> Keychron </tag>
            
            <tag> QMK </tag>
            
            <tag> Teams </tag>
            
            <tag> Keycode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI 行业的浮躁与长期主义的迷失</title>
      <link href="/2025/02/13/ai-industry-hype-vs-longtermism/"/>
      <url>/2025/02/13/ai-industry-hype-vs-longtermism/</url>
      
        <content type="html"><![CDATA[<p><img src="/2025/02/13/ai-industry-hype-vs-longtermism/deepseek.jpg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>人工智能行业正处于一个空前的变革时期，然而，在这一波新的热潮中，我们不仅看到了技术的突破，也目睹了市场的浮躁、短视与急功近利的现象。DeepSeek-R1 的横空出世，本应成为行业技术进步的<strong>催化剂</strong>，然而各大企业的盲目跟风、行业内的过度营销，以及资本市场的短期逐利，正让 AI 行业陷入一场表面繁荣、实则暗藏危机的狂欢。</p><span id="more"></span><h2 id="车企的盲目跟风：技术升级还是营销噱头？"><a href="#车企的盲目跟风：技术升级还是营销噱头？" class="headerlink" title="车企的盲目跟风：技术升级还是营销噱头？"></a>车企的盲目跟风：技术升级还是营销噱头？</h2><p>在 DeepSeek-R1 发布后，各大车企争相宣布「AI 上车」。感觉 2025 过的不是春节，而是「AI 盛宴」。在春节前后，铺天盖地的都是某某车企实现 DeepSeek 上车，某某运营商全面整合 DeepSeek。但仔细分析不难发现，这些所谓的「智能升级」几乎都是营销噱头，对于业务本身没有任何实质性的技术变革。</p><p>甚至某些车企不过是换了一个语音助手，界面稍作调整，就宣称其车载系统进入了「AI 时代」。但真正的智能驾驶、深度学习优化的驾驶体验、基于大模型的驾驶决策等技术，却仍然处于停滞状态。</p><p>更讽刺的是，车企宣传的 DeepSeek 语音助手功能，更多是伪命题和假场景。试想在驾驶过程中，用户真的需要与 AI 进行深度对话吗？导航、音乐播放、车内温度调节，这些本来就已经通过简单的语音指令实现，而基于大模型的「对话能力」在行车场景中反而显得冗余且危险。</p><p>例如，一个驾驶员如果在高速行驶中与 DeepSeek 进行深度闲聊，反而会影响注意力，增加驾驶风险。而对于乘客而言，在狭小的车内空间用语音聊天的方式操作 AI，不仅缺乏隐私，实际体验也远不如直接使用手机。</p><p>此外，许多车企强调 DeepSeek 能够提供「智能陪伴」，但这不过是对用户需求的误判。真正的智能化体验应当是无感化、自动化，而不是让用户主动发出冗长的语音指令，等待 AI 理解、回应甚至纠正错误输入。</p><p>相较之下，直接使用手机上的 AI 助手或触控操作更加便捷高效。这些所谓的「车载 AI 语音交互」更多是一种宣传话术，而非实际刚需。</p><h2 id="AI-平台的价格战：低价竞争是进步还是自残？"><a href="#AI-平台的价格战：低价竞争是进步还是自残？" class="headerlink" title="AI 平台的价格战：低价竞争是进步还是自残？"></a>AI 平台的价格战：低价竞争是进步还是自残？</h2><p>在 AI 大模型市场上，另一种不健康的趋势也在加剧——<strong>「价格战」</strong>。</p><p>某些平台为了快速获取用户，推出「免费试用」、「超低价订阅」等策略，短期内看似带来了用户增长，但实质上削弱了企业自身的技术投入能力。</p><p>开发高效、可靠的大模型需要长期的资金、人力和算力投入，而低价竞争无疑会挤压研发预算，迫使技术团队削减创新投入，进而导致产品质量下降。</p><p>对于高度依赖算力和数据的 AI 行业而言，价格战不仅削弱企业自身的技术积累，还可能引发资金枯竭、算力受限、研发停滞等连锁反应，最终阻碍技术的长期发展。</p><p>这种短视行为在互联网行业早有先例：视频网站的低价会员战让整个行业陷入亏损泥潭；外卖平台的补贴大战短暂吸引了用户，却最终导致行业生态恶化。AI 行业若继续沿袭这种路径，等待它的将是技术倒退和信任崩塌。</p><h3 id="低价竞争的三大致命危害："><a href="#低价竞争的三大致命危害：" class="headerlink" title="低价竞争的三大致命危害："></a>低价竞争的三大致命危害：</h3><ol><li><strong>劣币驱逐良币，行业整体退化</strong>：当价格成为竞争的核心要素，企业会优先考虑降低成本，而非提升技术。结果就是，真正投入研发的公司被市场边缘化，而投机取巧、依赖低成本方案的企业反而占据主导。最终，整个行业进入恶性循环，用户被迫接受低质量的 AI 服务，而真正的技术创新被压制甚至消亡。</li><li><strong>数据与隐私安全隐患加剧</strong>：低价甚至「免费」的 AI 服务背后，真正的商业模式往往是「数据换取收益」。一些平台为了维持低成本运营，会选择牺牲用户数据的安全性，将隐私数据用于商业用途，甚至出售给第三方。长期来看，这不仅破坏了用户对 AI 的信任，也可能引发一系列法律与伦理问题。</li><li><strong>短期盈利导向，AI 研发进入死胡同</strong>：资本市场本质上是逐利的，当 AI 企业的收入模式围绕低价甚至免费展开，投资者的耐心也会被快速消耗。研发周期长、见效慢的创新项目将难以获得持续的资金支持，而短期见效快但缺乏技术突破的项目则会大行其道。长此以往，AI 行业的发展方向将偏离技术升级，最终进入创新停滞的死胡同。</li></ol><h2 id="本地模型的迷思：宣传噱头还是技术倒退？"><a href="#本地模型的迷思：宣传噱头还是技术倒退？" class="headerlink" title="本地模型的迷思：宣传噱头还是技术倒退？"></a>本地模型的迷思：宣传噱头还是技术倒退？</h2><h3 id="本地模型：性能与宣传的巨大落差"><a href="#本地模型：性能与宣传的巨大落差" class="headerlink" title="本地模型：性能与宣传的巨大落差"></a>本地模型：性能与宣传的巨大落差</h3><p>随着 DeepSeek 的大火，最近一股新的潮流正在悄然兴起——本地部署 AI 模型。各大博主大肆宣扬以「小而美」为卖点的本地 AI 部署方案，号称人人都可以拥有自己的 DeepSeek-R1 模型。</p><p>而实际上使用的都是经过蒸馏处理后的产物。这种模型虽然体积较小、资源占用低，但其能力却远远无法与云端的大规模模型相媲美。以 DeepSeek-R1 的 671B 参数量为例，它在推理能力、理解能力和上下文记忆方面都远超本地小模型。</p><p>更关键的是，本地小模型的反馈准确性存在严重问题。经过测试发现，在一些专业领域中（如医学诊断），同样的输入文本可能会得到完全不同的输出结果。</p><p>例如：某肿瘤诊断报告被 671B 模型判断为「0.8 cm」，而某些本地 7B 模型却给出「0.1 cm」的结论——这种误差会对用户造成严重误导，甚至可能导致严重的医疗误判，危及患者生命。</p><p>这不仅仅是计算能力的差距，而是 AI 认知能力、数据训练规模和算法优化层面的全方位落后。</p><h3 id="被夸大的-AI-焦虑：谁在赚吆喝？"><a href="#被夸大的-AI-焦虑：谁在赚吆喝？" class="headerlink" title="被夸大的 AI 焦虑：谁在赚吆喝？"></a>被夸大的 AI 焦虑：谁在赚吆喝？</h3><p>有人认为，本地部署是一种技术进步。但在我看来，这可能是 AI 行业短暂的的一种「技术倒车」现象。</p><p>当前社会中，关于 AI 的讨论往往陷入两个极端：一边是过度鼓吹 AI 将取代人类工作的恐慌论调，另一边则是夸大 AI 能力的神话叙事。很多人声称「不会使用 AI 就会失业」、「AI 就是新的生产力工具」、「用 AI 就能日入斗金」等等。这些言论的本质是一种焦虑营销术。</p><p>试问：如果 AI 真的能够如此轻易地创造财富，为什么那些鼓吹者还要急于贩卖「致富秘籍」，而不是自己「闷声赚大钱」？吃饱了撑的，闲的没事儿干，为了早日实现共产主义？！</p><p>事实是，现阶段 AI 的变现能力依然非常有限。与其说他们是在传播技术，不如说他们是在贩卖焦虑、兜售课程。这才是他们真正的「致富秘籍」。</p><p>更荒诞的是，某些所谓的 AI 教练或顾问，将自己的成功归功于 AI 工具的使用，并声称普通人只要学会这些工具就能轻松实现财富自由。这种宣传不仅夸大了 AI 的能力，更是对用户心智的一种误导。它让人们误以为技术门槛已经降低到零，从而忽略了真正需要培养的专业技能和行业经验。</p><p>而现实是，<strong>AI 工具只能降低部分重复性工作的门槛</strong>，但真正能创造价值的，仍然是<strong>人的深度思考和专业知识</strong>。</p><h2 id="Tommy-怎么看？"><a href="#Tommy-怎么看？" class="headerlink" title="Tommy 怎么看？"></a>Tommy 怎么看？</h2><p>一句话，现在就是：「全民狂欢下的技术降级」。</p><h3 id="出路：回归理性与长期主义"><a href="#出路：回归理性与长期主义" class="headerlink" title="出路：回归理性与长期主义"></a>出路：回归理性与长期主义</h3><ol><li><strong>企业应摒弃短视，专注技术积累</strong>：AI 行业的健康发展，必须依靠长期的技术投入，而不是短期的市场炒作。企业应将更多资源投入到基础研究、数据优化、模型训练等关键环节，而不是一味迎合市场热点。</li><li><strong>车企与应用企业应理性选择合作伙伴</strong>：对于汽车、智能家居等下游应用企业来说，在选择 AI 合作伙伴时，不能仅凭市场热度做决定，而应真正考察技术能力、产品落地效果和长期可持续性。</li><li><strong>行业监管与用户教育的必要性</strong>：监管机构应加强对 AI 行业的审查，避免市场被低质量产品和虚假宣传占据。同时，加强对用户的科普，让公众能够更好地理解 AI 技术，形成健康的市场环境。</li><li><strong>AI 从业者应坚持长期主义</strong>：对于真正的 AI 从业者而言，最重要的是保持理性，坚持长期主义，专注于技术创新，而不是被市场的短期波动所左右。</li></ol><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>当前的 AI 行业正处于关键的发展节点，DeepSeek-R1 的成功不仅是一个行业标杆，也是一面镜子，映照出市场的浮躁与短视。</p><p>AI 不是万能的，它不是神话，也不是洪水猛兽。只有理性地理解其能力边界，并将其真正应用于生活、工作和社会发展的实际需求中，才能释放技术的价值并实现可持续发展。</p><p>与其沉醉于 AI 的未来想象，不如聚焦它已经带来的改变；与其追求所谓的「颠覆性创新」，不如脚踏实地解决实际问题。这才是技术发展的真正意义所在。</p><p>好了，我要用 DeepSeek 去「日入斗金」了，你信吗？🐶</p><blockquote><p>PS: 这个时候，我是不是该顺势留个联系方式，再来一句「评论 666 送你价值 3,999 元的 DeepSeek 百宝书，手把手教你在家躺赚 100 万，轻松实现财富自由」？😏</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Opinion </tag>
            
            <tag> Industry </tag>
            
            <tag> AI </tag>
            
            <tag> DeepSeek </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>M1 MacBook Pro 系统恢复指南</title>
      <link href="/2025/02/10/restore-m1-macbook-pro/"/>
      <url>/2025/02/10/restore-m1-macbook-pro/</url>
      
        <content type="html"><![CDATA[<p><img src="/2025/02/10/restore-m1-macbook-pro/macbook-pro-16-inch.jpg" alt="MacBook Pro"></p><h2 id="背景描述"><a href="#背景描述" class="headerlink" title="背景描述"></a>背景描述</h2><p>之前为了研究如何在 Linux Shell 下运行 Unreal Engine，给 MacBook Pro 安装了原生的 Ubuntu，并在安装系统时创建了一个 ext4 分区。</p><p>最近想恢复 macOS，于是按照以往使用 Intel 处理器 MacBook Pro 的陈年经验，不加思索地进入 Recovery，尝试删除整个磁盘并重新分区。结果毫无意外的，悲剧发生了……</p><p>因为 Apple 自带的磁盘处理工具无法删除 ext4 分区，于是用命令行删除了 ext4 和 APFS 分区，想着反正都是要重装，最后删掉其它分区一起重装就好了。结果发现有 2 个分区无法删除！</p><span id="more"></span><p>只要尝试抹除整个磁盘，就会报如下错误：</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The volume <span class="keyword">on</span> disk0 couldn<span class="symbol">&#x27;t</span> be unmounted because it <span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">use</span> by <span class="keyword">process</span> <span class="number">0</span> (kernel)</span><br></pre></td></tr></table></figure><p>通过命令行查看磁盘状况如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-bash-3.2<span class="comment"># diskutil list disk0</span></span><br><span class="line">/dev/disk0 (internal, physical):</span><br><span class="line">  <span class="comment">#:                       TYPE NAME                     SIZE       IDENTIFIER</span></span><br><span class="line">  0:      GUID_partition_scheme                         *500.3 GB   disk0</span><br><span class="line">  1:             Apple_APFS_ISC Container disk1          524.3 MB   disk0s1</span><br><span class="line">                   (free space)                          494.4 GB   -</span><br><span class="line">  2:        Apple_APFS_Recovery Container disk2          5.4 GB     disk0s2</span><br></pre></td></tr></table></figure><p>查了一圈资料发现，Apple Silicon 处理器的启动代码和 Firmware 也是存储在 NVMe 里面的！而不是像 Intel 处理器那样有 UEFI，也就是说要想正常启动，就无法删除这 2 个分区，否则系统就启动不起来，Recovery 也无法进入。</p><p>既然删不掉，那我们就换个思路，尝试从 U 盘引导系统（Intel 时代也是可以的）然后再重新分区。结果因为安全限制，Apple 完全不允许从外部设备引导，也就是说无法使用 U 盘重装系统。整一个大无语……🤦‍♂️</p><p>最后找到了 <a href="https://support.apple.com/en-us/108900">How to revive or restore Mac firmware</a> 这篇文章，才终于解决了系统的问题，不然就得亲自跑一趟苹果商店了。</p><p>而本文就是基于 Apple 官方支持文档，对如何恢复 M1 MacBook Pro 固件和操作系统所做的一个详细记录，方便跟我一样搞坏了系统的小伙伴恢复 macOS。</p><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在开始恢复操作之前，我们需要确保有以下设备和工具：</p><h3 id="设备要求"><a href="#设备要求" class="headerlink" title="设备要求"></a>设备要求</h3><ol><li><strong>需要恢复的 Mac（受影响的 Mac）</strong>：<ul><li>适用于搭载 <a href="https://support.apple.com/en-us/116943"><strong>Apple Silicon（M1、M2、M3 等芯片）</strong></a> 或 <a href="https://support.apple.com/en-us/103265"><strong>Apple T2 安全芯片</strong></a> 的 Mac。</li><li>我这里需要恢复的是一台搭载了 M1 处理器的 13 寸 MacBook Pro。</li></ul></li><li><strong>另一台 Mac（辅助 Mac）</strong>：<ul><li>需要运行 <strong>macOS Sonoma 14 或更新版本</strong>。</li><li>该 Mac 用于执行恢复或复活操作。</li><li>可通过 <strong>“关于本机”</strong>（ 菜单 &gt; 关于本机）查看当前 macOS 版本。</li><li>我这里使用的是 M3 处理器的 14 寸 MacBook Pro，系统版本是 Sequoia 15.3。</li></ul></li></ol><h3 id="连接线"><a href="#连接线" class="headerlink" title="连接线"></a>连接线</h3><ul><li>需要一根 <strong>USB-C to USB-C 数据线</strong>，必须同时支持 <strong>数据传输和充电</strong>。</li><li><strong>推荐使用</strong> Apple 附带的 <strong>USB-C 充电线</strong>（如部分 Mac 和 iPad 包装内的线）。</li><li><strong>请勿使用</strong> Thunderbolt 3 线缆，因其可能导致连接失败。</li></ul><hr><h2 id="DFU-模式"><a href="#DFU-模式" class="headerlink" title="DFU 模式"></a>DFU 模式</h2><h3 id="USB-C-连接"><a href="#USB-C-连接" class="headerlink" title="USB-C 连接"></a>USB-C 连接</h3><ol><li><strong>确保两台 Mac 都连接到电源</strong>。<ul><li>我这里只给辅助 Mac 连接了电源，辅助 Mac 可以通过 USB-C 线直接给受影响的 Mac 供电。</li></ul></li><li><strong>在受影响的 Mac 上</strong>：<ul><li>将 <strong>USB-C 数据线</strong>插入 <strong>DFU 端口</strong>（请参考<a href="https://support.apple.com/en-us/120694">DFU 端口识别指南</a>）。</li><li>根据官方说明，我的 Mac 需要使用左侧最靠近屏幕的 USB-C 接口作为 DFU 端口。</li></ul></li><li><strong>在另一台 Mac 上</strong>：<ul><li>将 USB-C 数据线的另一端插入<strong>任何一个</strong> USB-C 端口。</li><li>确保该 Mac 已开机并连接到互联网。</li></ul></li></ol><h3 id="进入-DFU-模式"><a href="#进入-DFU-模式" class="headerlink" title="进入 DFU 模式"></a>进入 DFU 模式</h3><ol><li><strong>按住电源键（Touch ID）</strong> 最多 <strong>10 秒钟</strong>，直到 Mac 关闭。如果 Mac 开机了，请重试此步骤。</li><li><strong>按下并释放电源键</strong>，然后立即按住以下四个键 <strong>（ 必须用内置键盘）</strong>：<ul><li><strong>Control（⌃）</strong> 键（左侧）</li><li><strong>Option（⌥）</strong> 键（左侧）</li><li><strong>Shift（⇧）</strong> 键（右侧）</li><li><strong>电源键</strong><br><img src="/2025/02/10/restore-m1-macbook-pro/macbook-pro-keyboard-dfu-mode-startup-keyboard-combination-diagram.png" alt="MacBook Pro 键盘"></li></ul></li><li><strong>Apple Silicon 设备</strong>（例如 M1、M2 芯片的 Mac）：<ul><li>持续按住这四个键 <strong>约 10 秒钟</strong>，然后释放所有按键，除了电源键。</li><li>继续按住电源键，最长 <strong>10 秒钟</strong>，直到另一台 Mac 在 Finder 中显示 DFU 窗口。如果出现提示要求允许连接配件，释放电源键并点击 <strong>“允许”</strong>。</li></ul></li><li><strong>带 T2 芯片的 Mac</strong>（例如某些 Intel 设备）：<ul><li>持续按住这四个键 <strong>约 3 秒钟</strong>，直到另一台 Mac 在 Finder 中显示 DFU 窗口。如果出现提示要求允许连接配件，释放所有按键并点击 <strong>“允许”</strong>。</li></ul></li></ol><h3 id="进入-DFU-模式后的状态"><a href="#进入-DFU-模式后的状态" class="headerlink" title="进入 DFU 模式后的状态"></a>进入 DFU 模式后的状态</h3><p>受影响的 Mac 此时应显示一个空白屏幕，表示已成功进入 DFU 模式。接下来，按照后续步骤进行恢复或复活操作。</p><hr><h2 id="复活或恢复操作"><a href="#复活或恢复操作" class="headerlink" title="复活或恢复操作"></a>复活或恢复操作</h2><p>在按照上述步骤准备好两台 Mac 后，另一台 Mac 的 Finder 中应该会显示 DFU 窗口，左侧边栏选中 <strong>Mac</strong>，右侧会显示 <strong>“Mac DFU Mode”</strong>。如果看不到此窗口，请检查连接是否正确。</p><p><img src="/2025/02/10/restore-m1-macbook-pro/macos-sonoma-finder-mac-dfu-mode-revive-restore-firmware.png" alt="Mac DFU Mode"></p><h3 id="复活（Revive）与恢复（Restore）的区别"><a href="#复活（Revive）与恢复（Restore）的区别" class="headerlink" title="复活（Revive）与恢复（Restore）的区别"></a>复活（Revive）与恢复（Restore）的区别</h3><p>在 Mac 设备维修过程中，<strong>Revive</strong> 和 <strong>Restore</strong> 是两种不同的操作方式：</p><ul><li><strong>Revive（复活）</strong>：刷新设备的固件（Firmware），不会影响磁盘数据。如果 macOS 出现问题但磁盘仍然完整，可以尝试此方法。</li><li><strong>Restore（恢复）</strong>：除了刷新固件外，还会<strong>完全擦除</strong>内置存储设备，并重新安装最新版本的 macOS。因此，<strong>此操作会删除所有数据</strong>，请确保提前备份重要信息。</li></ul><p>当磁盘结构损坏、macOS 无法安装或 Mac 无法正常启动时，<strong>Restore（恢复）</strong> 是最直接且可靠的解决方案。</p><p>而我现在的情况正是如此，因此 <strong>Restore</strong> 是唯一的选择。</p><h3 id="复活（Revive）操作"><a href="#复活（Revive）操作" class="headerlink" title="复活（Revive）操作"></a>复活（Revive）操作</h3><p>建议首先尝试<strong>复活</strong>，因为这比恢复（Restore）速度快，且不会擦除 Mac 上的数据。</p><ol><li>在 Finder 中的 DFU 窗口中，点击 <strong>复活 Mac（Revive Mac）</strong>，然后点击 <strong>继续（Continue）</strong> 确认操作。</li><li>进度条会显示复活过程。当复活完成后，受影响的 Mac 会自动重启。如果自动关机，请按下电源键重新开机。</li><li>选择要恢复的卷（例如 <strong>Macintosh HD</strong>），然后点击 <strong>下一步（Next）</strong>。</li><li>选择用户，并输入登录密码，点击 <strong>下一步（Next）</strong>，然后点击 <strong>重启（Restart）</strong>。</li><li>如果是带 <strong>Apple Silicon（M1、M2 芯片）</strong> 的 Mac，复活后的 Mac 可能会加载启动选项，显示你的启动磁盘（例如 <strong>Macintosh HD</strong>）以及带齿轮图标的 <strong>选项（Options）</strong>。选择你的启动磁盘，然后点击下方出现的 <strong>继续（Continue）</strong> 按钮。</li><li>复活完成后，Mac 将完成启动，整个过程结束。</li></ol><h3 id="恢复（Restore）操作"><a href="#恢复（Restore）操作" class="headerlink" title="恢复（Restore）操作"></a>恢复（Restore）操作</h3><p>如果复活操作无法修复你的 Mac，请按照以下步骤进行恢复。恢复操作将擦除所有数据并将 Mac 恢复到出厂设置。</p><ol><li>在 Finder 中的 DFU 窗口中，点击 <strong>恢复 Mac（Restore Mac）</strong>，然后点击 <strong>恢复并更新（Restore and Update）</strong> 确认操作。<br><img src="/2025/02/10/restore-m1-macbook-pro/macos-restore-and-update.png" alt="Restore and Update"></li><li>进度条会显示恢复过程。当恢复完成后，受影响的 Mac 会自动重启。如果它关机了，请按下电源键重新开机。<br><img src="/2025/02/10/restore-m1-macbook-pro/macos-preparing-mac-for-restore.png" alt="Preparing Mac for restore ..."><br><img src="/2025/02/10/restore-m1-macbook-pro/macos-mac-has-been-restored.png" alt="Mac has been restored"></li><li>适用于 Apple Silicon 的 Mac：<br>a. 登录你之前用于此 Mac 的 <strong>Apple ID</strong>。<br>b. 设置助手启动后，按照提示完成设置。  </li><li>适用于带 T2 芯片的 Mac：<br>a. 恢复后的 Mac 启动时会显示旋转的地球图标，表示它通过互联网进入 <strong>macOS 恢复模式</strong>。选择语言后点击 <strong>下一步</strong>。<br>b. 登录你之前用于此 Mac 的 <strong>Apple ID</strong>，然后点击 <strong>退出到恢复（Exit to Recovery）</strong>。<br>c. 在恢复模式中选择安装或重新安装 macOS。<br>d. 安装完成后，Mac 会重启并启动设置助手。使用设置助手完成 Mac 的初始化配置。</li></ol><blockquote><p>注意：恢复操作需要从网上下载 macOS 固件，请确保辅助 Mac 可以联网。</p></blockquote><hr><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>恢复（Restore）是修复 M1 MacBook Pro 重大系统故障的最可靠方法。</p><p>当你电脑坏到完全不能用的时候，可以本着「死马当活马医」的精神，参考本文，说不定就能恢复如初。</p><p>如果尝试后，问题仍然无法解决，那么还是建议联系 Apple 支持或前往 Apple Store 进行维修。</p><p>最后，没事儿不要手欠研究新东西，因为凡事都有代价……不作死就不会死，🐶</p><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://support.apple.com/guide/apple-configurator-mac/revive-or-restore-a-mac-with-apple-silicon-apdd5f3c75ad/mac">Revive or restore a Mac with Apple silicon using Apple Configurator</a></li><li><a href="https://support.apple.com/en-us/108900">How to revive or restore Mac firmware</a></li><li><a href="https://support.apple.com/en-us/120694">How to identify the DFU port on Mac</a></li><li><a href="https://support.apple.com/en-us/HT211683">How to download and install macOS</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> Hardware </tag>
            
            <tag> MacBook </tag>
            
            <tag> System </tag>
            
            <tag> Restore </tag>
            
            <tag> M1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么身边越来越多「伪单身」？</title>
      <link href="/2023/08/28/the-rise-of-pseudo-singledom/"/>
      <url>/2023/08/28/the-rise-of-pseudo-singledom/</url>
      
        <content type="html"><![CDATA[<p><img src="/2023/08/28/the-rise-of-pseudo-singledom/romance.jpg"></p><h2 id="伪单身们"><a href="#伪单身们" class="headerlink" title="伪单身们"></a>伪单身们</h2><p>我是一个非常讨厌秀恩爱的人，但是比起秀恩爱，我更讨厌「伪单身」的行为。而比「伪单身」更让我厌恶的，是那些你无情戳穿他们「伪单身」假象时，依然「矢口否认」的人。</p><p>有的人认为「伪单身」是那些明明非单身，却对外宣称自己「单身」的人。可我认为这种不能称之为「伪单身」，而应该称之为「渣」！可以直接拉黑，把它们归类为「伪单身」是对「伪单身」人士极大的侮辱。</p><p>不同于表面上的宣称，伪单身指的是那些既不宣称自己单身，也不表露自己非单身，但却给人造成一种单身假象的错觉。</p><span id="more"></span><h2 id="为什么伪单身这么「香」"><a href="#为什么伪单身这么「香」" class="headerlink" title="为什么伪单身这么「香」"></a>为什么伪单身这么「香」</h2><p>在现在这个社交致死的年代，人们的个人生活已完全的网络化，但尚伴随着一层薄薄的隐私膜。</p><p>那些不宣称单身，也不故意示爱的人，似乎在保持自己的状态模糊性的同时，也给予了自己某种社交自由。</p><p>这种微妙的状态可以让人们更加自由地在社交圈中游走，不受单身与非单身的拘束。</p><p>现代人越来越多地强调个人的自由和多样性，将任性解读为个性和自我。</p><p>而伪单身者正是在个体选择与社会期待之间寻求着一种平衡，以一种更加隐晦的方式展现自己，从而获得更多的空间去追求自己所期望的生活（或者是想要别人看到的样子）。</p><p>男生伪单身，秀房子，秀票子，秀车子，秀肌肉，秀事业，是为了广撒网，向更多潜在的对象表白，争取更多的交配机会。</p><p>因为对于男人来说，其生物本能就是传宗接代，延续血脉。</p><p>女生伪单身，大概是对眼前人觉得不够满意，也许下一个更好呢？</p><p>女人的本能，就是找到靠谱的男人，一起抚养后代，并且要有足够的资源保障。</p><p>既然下一个「接盘侠」还没有出现，眼前的人还能提供「资源」，何不骑驴找马，慢慢寻觅？</p><p>还有人伪单身，也许是因为感情不确定，又或者纯粹的只是因为人有我有的心态，必须有个对象。</p><p>但两个人的爱情不咸不淡，食之无味弃之可惜，宛若鸡肋。</p><p>说是在一起吧，也就是有个人陪着看看电影，逛逛街，吃吃饭，唠唠嗑，也没什么更深入的交流。</p><p>但是你说分手吧，又觉得有个长期饭票，也总比「单身狗」感觉好点。</p><p>说白了，还是大家的「贪欲」在作怪，试问谁不想当《泰坦尼克》的主角，谈一场轰轰烈烈的爱情呢？</p><p>就算最后悲剧收场，那又如何，不也是「不在乎天长地久，只在乎曾经拥有了」吗？</p><p>而现实是，我们都只是普普通通的小人物，活在普普通通的小世界，过着普普通通的小生活，这种轰轰烈烈的爱情本就不属于你我。</p><p>而物质极大丰富的现代人，从小就饱受浪漫影视作品的「毒害」，岂能接受「柴米油盐酱醋茶」，这种中规中矩，毫无波澜的爱情？</p><p>所以伪单身男女们，内心一直在期望用一段完美的恋情，给自己的生命点缀上绚烂的色彩。</p><p>不伪单身，怎么有可能认识更多的人？又怎么可能产生新的机会？</p><p>只有广撒网才能钓到大鱼，似乎是小朋友都能理解的事情。</p><p>就算最后觅不到真命天子，男生也可以后宫佳丽三千，女生也可以花团锦簇，舔狗无数。岂不乐哉？</p><p>如此这般，睡梦中也会笑醒吧……「伪单身」真香！</p><h2 id="伪单身真的香吗？"><a href="#伪单身真的香吗？" class="headerlink" title="伪单身真的香吗？"></a>伪单身真的香吗？</h2><p>先说观点：</p><p>伪单身这种行为不仅影响个人心理，还可能伤害他人情感。</p><p>不单止影响恋人之间的感情，也有可能影响朋友之间的相处。</p><h3 id="内心"><a href="#内心" class="headerlink" title="内心"></a>内心</h3><p>伪单身者在维护他人对自己单身状态错觉的同时，往往也会面临内心的焦虑与矛盾。</p><p>他们需要时刻在自己的言行中保持一种微妙的平衡，以防止被人识破。</p><p>而被人识破以后，承认也不是，不承认也不是的尴尬状态，也会让某些人产生强烈地愤怒感。</p><p>这种不真实的生活状态会导致内心的紧张和不安，整日提心吊胆，又如何寻得内心平静？</p><h3 id="朋友"><a href="#朋友" class="headerlink" title="朋友"></a>朋友</h3><p>而说到朋友，当周遭的亲朋好友发现被伪单身者欺骗时，会产生严重的信任缺失。</p><p>进而导致到人际关系的疏远，甚至可能让别人产生被欺骗的感觉，从而伤害彼此之间的情感。</p><p>朋友之间本就不涉及情感问题，却都无法如实相告，我又如何相信你其他事情所言属实呢？</p><p>没有了「信任」的基础，朋友还做得下去吗？就算勉强还能做朋友，还能走得远吗？</p><h3 id="情感"><a href="#情感" class="headerlink" title="情感"></a>情感</h3><p>俗话说得好：「舔狗，舔狗，舔到最后一无所有」，这一切真的全是「舔狗」的错吗？被舔的人就没有错吗？还是说被舔的人一直在享受被舔的感觉？</p><p>因为大量伪单身人士的存在，让那些对伪单身者有好感的人，无法有效地判断伪单身者们的真实情感状态，进而产生错误地判断。</p><p>我相信除了少部分人，没有人那么热衷于「挖墙脚」这件事儿。毕竟，再喜欢，也会有道德层面的压力。</p><p>而那些伪单身者，很容易让「舔狗」们产生「被爱妄想症」，从而产生误导性的想法，进而导致感情的升温。</p><p>然而，一旦真相大白，会给别人造成深深的伤害和失望，影响到双方的情感和心理健康。</p><p>你真的不怕对方「宁为玉碎不为瓦全」，跟你来个「玉石俱焚」？这种新闻现在也屡见不鲜吧？</p><p>反而是让对方清楚地知道了自己的感情状态，让别人断了念想，说不定还能做个好朋友。</p><h2 id="胡言乱语"><a href="#胡言乱语" class="headerlink" title="胡言乱语"></a>胡言乱语</h2><p>伪单身现象的背后，我思考的是如何在社交互动中保持真实和尊重。</p><p>不仅为了个人的身心健康，也是为了维护良好的人际关系和情感健康。</p><p>我们可以选择不秀恩爱，但我们绝不能假装「伪单身」。</p><p>诚实和尊重是构建健康社会关系的基石，只有通过真实的表达，我们才能更加坦诚地面对自己和他人，进而创造出更加真实和美好的人际互动。</p><p>为何会选择伪单身，其背后的动机也许来源于对真爱的渴望。</p><p>然而这一行为本就充满了迷惑，犹如寻宝者长年累月地寻找宝石，却不断地拾起石块。</p><p>终于有一天，他发现了真正的钻石，却在毫无意识的情况下，将其随手丢弃了。</p><p>我们不应该爱自己想象的人，而应该爱具体的人，所谓的真爱是经过时间的洗礼沉淀下来的亲情，而不是感情冲动，荷尔蒙爆发后的一时激情。</p><p>与其担忧无法觅得真爱，不如担心当真爱降临之时，我们是否还有辨别真爱的能力？</p>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Society </tag>
            
            <tag> Love </tag>
            
            <tag> Authenticity </tag>
            
            <tag> Man </tag>
            
            <tag> Pseudo </tag>
            
            <tag> Relationship </tag>
            
            <tag> Singledom </tag>
            
            <tag> Social </tag>
            
            <tag> Woman </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT 真的比人类更聪明吗？</title>
      <link href="/2023/04/02/is-chatgpt-really-smarter-than-humans/"/>
      <url>/2023/04/02/is-chatgpt-really-smarter-than-humans/</url>
      
        <content type="html"><![CDATA[<p><img src="/2023/04/02/is-chatgpt-really-smarter-than-humans/ai.jpg"></p><p>随着 GPT-4 的发布，ChatGPT 最近又双叒叕成了热门话题。</p><p>有鉴于 ChatGPT 火得出圈的程度，我就不再解释什么是 ChatGPT 了，我相信相关的报道已经烂大街了。</p><p>作为一种通用人工智能，它在很多方面都展现出了强大的能力，引发了人们对未来社会和职业发展的思考。</p><p>ChatGPT 是不是真的比人类聪明？它到底能做什么？我们将面临怎样的挑战？又有哪些机会？</p><p>带着这些问题，我做了一些不成熟地思考，而这篇文章就是我最近关于 ChatGPT 思考的结果……</p><span id="more"></span><h2 id="ChatGPT-的现状"><a href="#ChatGPT-的现状" class="headerlink" title="ChatGPT 的现状"></a>ChatGPT 的现状</h2><h3 id="基层工作者-Game-Over"><a href="#基层工作者-Game-Over" class="headerlink" title="基层工作者 Game Over"></a>基层工作者 Game Over</h3><p>ChatGPT 的崛起可以说，革了很多基层工作者的命。</p><p>这里的基层工作者首当其冲的就是坐办公室的白领，尤其是做执行相关的文员，其杀伤力绝对是毁灭性的。</p><p>除了部分生活不能自理的老板需要秘书之外，我们可以大胆预测一下，未来所有的文员将不复存在。</p><p>而秘书的存在，可能只有一些「懂得都懂」的原因，而非工作的不可或缺性。</p><p>甚至底层的码农也将无法幸免，虽然很多的程序是他们写出来的，最后他们也将被程序（AI）干掉，听起来多少有些讽刺。</p><h3 id="ChatGPT-是否比人聪明"><a href="#ChatGPT-是否比人聪明" class="headerlink" title="ChatGPT 是否比人聪明"></a>ChatGPT 是否比人聪明</h3><p>直接说我认为的结论：ChatGPT 还远不如人类聪明，只不过是知识储备丰富罢了。</p><p>对于 ChatGPT 是否具备人工智能的问题，有很多不同的看法。</p><p>虽然很多人认为 ChatGPT 已经具备了人工智能，甚至在 GPT-4 的时代已经超越了人类。</p><p>但在我看来，ChatGPT 只是刚刚达到了通用人工智能的水平。</p><p>虽然相较于以前的「人工智障」有了很大的进步，但距离真正的人工智能仍有不少的差距。</p><h3 id="ChatGPT-是否有创造力"><a href="#ChatGPT-是否有创造力" class="headerlink" title="ChatGPT 是否有创造力"></a>ChatGPT 是否有创造力</h3><p>同样是：没有！</p><p>有些人认为 ChatGPT 具有创造力，可以完成作画、写文章等任务。</p><p>然而，事实上 ChatGPT 只能利用已有的知识进行拓展和衍生，并无法创造出真正「新」的东西。</p><p>这意味着它在创意产业上的应用仍存在局限。</p><p>之所以我们会误以为它有创造性，那是因为它的知识库非常的庞大。</p><p>它通过引用和组合的方式，可以「创造」出我们以为的新东西，但实际上只是一种模仿而已。</p><p>比如我上一遍<a href="../../../../2023/03/31/future-development-of-the-automotive-industry/">关于汽车产业未来发展</a>的文章，为了验证我自己的观点，我曾经尝试让 ChatGPT 给出一些新的观点。</p><p>但无论我用何种 Prompt（提示词）去引导，它给出的结论始终都是网上到处都能找得到的「专家」的「陈词滥调」，并没有自己独创和原创思考的东西。</p><p>用它来「洗稿」什么的是不错的，但是用它来「原创」那是铁定不行的，至少现在不行。</p><h3 id="用-ChatGPT-完成非自己专业领域的工作"><a href="#用-ChatGPT-完成非自己专业领域的工作" class="headerlink" title="用 ChatGPT 完成非自己专业领域的工作"></a>用 ChatGPT 完成非自己专业领域的工作</h3><p>有不少朋友被 ChatGPT 洗了脑，觉得只要会「聊天」就可以把原来很多需要专业人士才能做的事情，自己动动嘴皮子就完成了，比如：编程。</p><p>我可以很负责任的说，这种想法就是不切实际的「幻想」。</p><p>虽然现阶段 GPT-4 在代码的输出能力上确实出现了长足的进步，但本质上只是它学习人类开源代码后所做的重新组合，它并不没有创造出新的逻辑和编程方式。</p><p>说人话就是，它干的更多的就是 copy &amp; paste，只不过把搜索查找的过程给简化了，同时可以按照你的上下文，把函数名和变量名给你改好了而已。</p><p>如果你自身不会编程的话，便无法理解代码的逻辑，也就根本无法完善程序。</p><p>网上很多把 GPT-4 编程吹上天的，大多就是：「帮我写个计数器」、「帮我写个贪食蛇」这些完全没有现实工程意义的东西。</p><p>对于那些期望通过 ChatGPT 实现编程自由或某个专业自由的人来说，我劝您还是早点死了这条心吧。</p><p>要想真正用好 ChatGPT 这本「葵花宝典」，根本还是要自己对于自身领域业务的深入洞察和理解，以及相关专业知识和技能的掌握。</p><h2 id="我的-ChatGPT-应用场景"><a href="#我的-ChatGPT-应用场景" class="headerlink" title="我的 ChatGPT 应用场景"></a>我的 ChatGPT 应用场景</h2><p>下面是我现在使用 ChatGPT 的一些场景，大家可以根据自身的需求，举一反三，找到适合自己的应用方式。</p><h3 id="私人助理"><a href="#私人助理" class="headerlink" title="私人助理"></a>私人助理</h3><p>不得不说，有了 ChatGPT 以后，对于我这种有强迫症又要求过高的屌丝来说，再也不用纠结请不请助理这件事儿了。</p><p>ChatGPT 作为私人助理，其投入产出比远超雇佣一名高薪助手。</p><p>日常事务性的工作如邮件、文书、表格处理等繁琐工作完全不在话下，极大地提高了生产效率。</p><p>甚至还可以让它学习个人的文书写作风格，写出好像出自本人手笔的资料。</p><p>虽然我已经开通了 ChatGPT Plus 的会员，但是考虑到将来工作的便利性，很有可能在不久的将来我还会开通 Office 365 的会员。</p><p>毕竟整合了 Copilot 的 Office 可以让我们更关注于业务本身，而不是深陷于冗长的「繁文缛节」和虚情假意「嘘寒问暖」的泥潭中无法自拔。</p><blockquote><p>PS: 这里绝对没有卖广告的意思，主要是没有 Office 365 也用不了 Copilot 啊，😮‍💨</p></blockquote><h3 id="个性化外语私教"><a href="#个性化外语私教" class="headerlink" title="个性化外语私教"></a>个性化外语私教</h3><p>由于我最近在学习德语和日语，所以 ChatGPT 成了我最好的外语老师，没有之一！</p><p>如果有学外语的小伙伴，我强烈推荐 ChatGPT，因为它本身就是最先进的自然语言处理技术。</p><p>它可以准确地理解各种语言问题，无论是语法、词汇还是发音等方面的问题，ChatGPT 都能提供相应的解答。</p><p>此外，更重要的一点是我们可以通过互动的方式结合上下文来提问，这比自己搜索网站一个一个问题地查询要来的方便快捷的多。</p><p>虽然 ChatGPT 在学外语的时候用起来是真的香。但是，可是，但可是，有很多次它睁眼说瞎话，一本正经地胡说，比如日语里面助词的使用，还有形容词否定句的变形等都有问题。</p><p>所以严肃的学习，还是要去伪求真。正式的教材，懂外语的朋友，善用搜索引擎还是必不可少的。</p><h3 id="快速了解未知行业的相关知识"><a href="#快速了解未知行业的相关知识" class="headerlink" title="快速了解未知行业的相关知识"></a>快速了解未知行业的相关知识</h3><p>最近无聊，在看各种行业机会，这个时候 ChatGPT 就派上了大大的用场。</p><p>有了 ChatGPT 的加持，我可以在很短的时间内对所关心的行业有一个相对全面的了解。</p><p>无论是涉及行业背景、技术细节还是市场趋势等问题，ChatGPT 都可以给出合适的解答，帮助我迅速了解所需的行业知识。</p><p>此外，ChatGPT 还可以提供所涉及领域的深入分析和专业见解。</p><p>当然，前面我也说了，这种「见解」也都是基于网上公开数据，来源于各种「专家」的。</p><p>不过，因为是为了快速了解行业和相关知识，所以这种「分析」和「见解」对我来说也已经很足够了。</p><h3 id="辅助代码编程"><a href="#辅助代码编程" class="headerlink" title="辅助代码编程"></a>辅助代码编程</h3><p>我现在使用 ChatGPT 辅助编程还比较简单，主要都是通过 ChatGPT 获得一些代码片段，和进行一些编程相关问题的提问。</p><p>虽然使用强度不大，但是感觉已经可以抛弃 Google 和 Stackoverflow 了。</p><p>随着 GitHub 最新 <a href="https://github.com/features/preview/copilot-x">GitHub Copilot X</a> 的发布，现在从代码的编写、测试，到 Pull Request，绝大多数的工作都已经 GPT 化了。</p><p>保守估计编程效率将最少提高 50% 以上，甚至架构师完全可以在没有初级工程师的支持下，开发出复杂的系统也不是没有可能。</p><p>如此看来，未来绝大多数的程序员真的要失业了，全栈工程师可能是唯一的出路了。</p><p>不过因为最近都在卷外语，没怎么写代码，所以这块还没有深入研究。</p><p>等有时间的时候开个 Copilot 会员，好好体验一下……</p><blockquote><p>为什么现在没有开？主要还是因为贫穷，说多了都是泪……😭</p></blockquote><h2 id="关于未来的思考"><a href="#关于未来的思考" class="headerlink" title="关于未来的思考"></a>关于未来的思考</h2><p>该说的前面基本上都已经覆盖到了，那么简单说一下我对 ChatGPT 未来发展的判断。</p><h3 id="人工智能的发展趋势"><a href="#人工智能的发展趋势" class="headerlink" title="人工智能的发展趋势"></a>人工智能的发展趋势</h3><p>虽然我认为现阶段的 GPT-4 无法超越人类，但随着 GPT-5、GPT-6 等后续版本的推出，人工智能的发展趋势将变得扑朔迷离。</p><p>尤其是随着算力的进一步增强，也许在某一个时刻，会再次发生涌现（Emerge）的现象。</p><p>又或者是某天 AI 可以理解超过人类认知的三维空间，在四维甚至更高的纬度上有了全面超越人类的理解。</p><p>到了那个时候，可能就是人类的至暗时刻了。</p><p>当然还有另外一种可能，就是某一天程序可以自己写程序迭代了，机器人可以自己造机器人了。</p><p>那样的话，我真的想不到在 AI 的眼中，人类存在的价值是什么……</p><p>也许真的是黑客帝国（Matrix）中，人肉电池一样的存在？</p><p>当然，我觉得在我有生之年，不大可能看到 AI 超越人类智慧的那一天。</p><p>而且就现在的技术路线发展来看，我也不大相信所谓的 AI 能产生真正的自主意识。</p><h3 id="人工智能与就业"><a href="#人工智能与就业" class="headerlink" title="人工智能与就业"></a>人工智能与就业</h3><p>既然 AI 不可能「消灭」人类，但是又会让人类失业，那么我们就得思考如何不被社会淘汰，以及如何与 AI 共存，并让 AI 更好的为人类服务。</p><p>就好像前文说过的，我认为在未来，大约有 80% 至 90% 的工作将被 AI 取代，而且这是不可避免的趋势。</p><p>以我现在有限的认知，如果让我做选择，我会看以下几个机会：</p><ul><li>**从事 AI 研发工作：**很简单，搞 AI 好过被 AI 搞。别人都被 AI 弄失业了，但是搞 AI 的在未来很长一段时间内不单止不会失业，还会收入节节高升。</li><li>**从事创造性的工作：**比如艺术家、音乐家、创业设计师等。因为 AI 强大的是模仿（抄袭）以及衍生能力，真正全新的创造性的能力，暂时还是不具备的。</li><li>**人文类的工作：**比如国学、厨师等。国学好理解，属于文化类的。为什么还有厨师？因为我觉得未来绝大多数人每天都只能吃「工业垃圾」生产出来的食物，也就是从生产加工到制造全部是由机器完成的（包括炒菜）。而有锅气的人炒出来的菜将变得稀缺，没准以后不是谁都能吃得起厨师炒的菜。</li><li>**能提供垂直领域个性化服务的工作：**在垂直领域深入发展以及提供个性化服务的工作，很可能不会被工业化和规模化经济所摧毁。尽管难以成为大企业，但可以保证温饱，甚至实现小康。因为没有人喜欢工业批量化生产的东西，未来的人会更追求自我，因此对定制化的需求会持续走高。</li></ul><p>不得不说，那些没有核心竞争力的小作坊，将在未来遭受毁灭性打击。</p><p>也许我们现在所熟悉的街头小巷的那些大排档、便利店、小商铺会在某一天我们不经意之间消失殆尽。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>最近大家热议的关于各方大佬叫停 GPT 一事儿，其实我个人觉得大可不必上升到人类威胁论这一高度。说白了，其实还是各方利益的问题。</p><p>因为 OpenAI 实在走得太快了，已经甩开竞争对手几条街了，其他人不想看到 OpenAI 一家独大而已。</p><p>更何况，现在 GPT 技术应用到商业上最溜的就是微软了，你让别的公司怎么混？</p><p>如果非要说，为什么希望 GPT 能停一停，缓一缓？</p><p>那大概就是不暂停一下的话，会有更多无所事事的所谓管理者和底层苦力要失业了吧。</p><p>虽然说从生产力就是第一发展力的角度来看没有问题，但是从社会层面看，在短期内会造成非常多的社会问题和不稳定因素，这可能才是某些领导者真正担心的事情。</p><p>但我觉得 Elon Musk 显然不是关心社会福祉的人，他着急叫停 GPT 的主要原因还是因为 OpenAI 不在他手上，如果在他手上，他还会叫停吗？</p><p>那么，各位看官老爷，您又是如何看待这一问题的呢？</p>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GPT </tag>
            
            <tag> ChatGPT </tag>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汽车行业未来发展展望：电动化、智能化与产业链机遇</title>
      <link href="/2023/03/31/future-development-of-the-automotive-industry/"/>
      <url>/2023/03/31/future-development-of-the-automotive-industry/</url>
      
        <content type="html"><![CDATA[<p><img src="/2023/03/31/future-development-of-the-automotive-industry/ev_development.jpg"></p><p>最近，我一直在思考汽车行业的一些变化。随着电动汽车逐渐成为主流，自动驾驶技术的普及，以及智能网联汽车的迅猛发展，我们的出行方式正在发生翻天覆地的变化。有时候，我不禁问自己：「这些变化究竟意味着什么？我们将如何适应这个瞬息万变的世界？」</p><p>那些曾经引领潮流的汽车制造商是否还能保持竞争力？还是说新兴的电动汽车品牌将主导未来的市场？这场变革中，供应链上的其他参与者，如 Tier 1 供应商，又将何去何从？</p><p>汽车行业的未来充满了无尽的可能性，而未来的挑战和机遇究竟在哪里呢？到底是主机厂更值得加入还是 Tier 1 更值得考虑？</p><span id="more"></span><h2 id="电动汽车行业的现状"><a href="#电动汽车行业的现状" class="headerlink" title="电动汽车行业的现状"></a>电动汽车行业的现状</h2><p>在开始前，我们先简单聊聊汽车产业的现状。</p><h3 id="市场趋势"><a href="#市场趋势" class="headerlink" title="市场趋势"></a>市场趋势</h3><p>随着全球对环保的重视和新能源政策的推动，电动汽车市场正迎来快速发展。各国政府纷纷制定了严格的排放标准和补贴政策，以推动新能源汽车的普及。根据国际能源署（IEA）的数据，2020年全球电动汽车销量超过300万辆，同比增长43%。预计到2030年，全球电动汽车销量将达到1.25亿辆，占总汽车销量的比重将超过30%。</p><h3 id="技术创新"><a href="#技术创新" class="headerlink" title="技术创新"></a>技术创新</h3><p>市场需求和技术创新推动了电池、电机、电子控制等核心零部件的不断进步。例如，电池能量密度的提高和成本的降低使得电动汽车的续航里程得到显著提升，同时降低了消费者购车的成本负担。此外，充电基础设施的建设和智能充电技术的发展，也为电动汽车的普及创造了有利条件。</p><h3 id="品牌竞争"><a href="#品牌竞争" class="headerlink" title="品牌竞争"></a>品牌竞争</h3><p>在这个大背景下，新兴电动汽车品牌如蔚来、理想和小鹏等迅速崛起，与传统车企展开激烈竞争。一方面，这些新兴品牌凭借创新的商业模式、独特的产品设计和领先的技术实力，在市场上取得了显著的成绩。另一方面，传统车企也在积极进行技术创新和市场布局，以应对新能源汽车带来的挑战。例如，大众集团推出了其全新的电动汽车平台MEB，并计划在未来几年内投放多款电动汽车产品；特斯拉则凭借其在电动汽车和自动驾驶技术方面的领先地位，稳居市场份额的前列。</p><h2 id="主机厂的机会"><a href="#主机厂的机会" class="headerlink" title="主机厂的机会"></a>主机厂的机会</h2><h3 id="技术积累与品牌优势"><a href="#技术积累与品牌优势" class="headerlink" title="技术积累与品牌优势"></a>技术积累与品牌优势</h3><p>传统主机厂在汽车制造领域拥有深厚的技术积累和品牌影响力。这使得它们在面临新能源汽车、智能驾驶等新技术战时，仍具有一定的生存空间。通过加大研发投入、与领先技术供应商合作或收购创新企业等途径，传统车企可以实现在智能化、网联化市场的转型。例如，宝马在电动汽车和自动驾驶技术方面进行了大量的研发投入，与英特尔、Mobileye 等合作开发自动驾驶系统，以提升自身技术实力。</p><h3 id="产业链体系与资本实力"><a href="#产业链体系与资本实力" class="headerlink" title="产业链体系与资本实力"></a>产业链体系与资本实力</h3><p>传统车企具有完善的产业链体系、资本实力和全球布局等优势。这有助于它们在新能源汽车市场中快速扩张，实现规模化生产和市场渗透。例如，大众集团在全球范围内建立了多个生产基地，确保了其电动汽车产品的快速推广和供应。同时，大众还计划在未来几年内投资约300亿欧元，用于电动汽车和数字化技术的研发。</p><h3 id="合作与创新"><a href="#合作与创新" class="headerlink" title="合作与创新"></a>合作与创新</h3><p>新兴电动汽车品牌如蔚来、理想等通过创新商业模式和技术优势，为汽车行业注入了新的活力和竞争力。这也为传统车企提供了合作与创新的机会。比如，原来被誉为抄袭王的比亚迪，就成功的实现了翻身上位。当年学习借鉴的丰田车，现在反过来采购比亚迪的整车和电池技术。而很多新造车势力也是比亚迪这种传统车企的大客户。</p><h2 id="Tier-1-的机会"><a href="#Tier-1-的机会" class="headerlink" title="Tier 1 的机会"></a>Tier 1 的机会</h2><h3 id="技术创新与市场需求"><a href="#技术创新与市场需求" class="headerlink" title="技术创新与市场需求"></a>技术创新与市场需求</h3><p>随着新能源汽车、智能网联汽车和自动驾驶等技术的普及， Tier 1 供应商的市场需求将持续增长。具有技术创新能力和前瞻性的 Tier 1 供应商将在汽车行业中脱颖而出，为主机厂提供先进的技术和产品。例如，德国博世公司在自动驾驶、车载传感器和电子控制等领域拥有领先的技术，为全球多家主机厂提供了高质量的零部件和系统解决方案。</p><h3 id="合作关系与产业链整合"><a href="#合作关系与产业链整合" class="headerlink" title="合作关系与产业链整合"></a>合作关系与产业链整合</h3><p>主机厂与 Tier 1 供应商之间的紧密合作将推动整个汽车产业链的升级和发展。通过建立长期稳定的合作关系，双方可以实现资源共享、技术创新和市场拓展，从而提升整体竞争力。例如，丹麦的智能音频解决方案提供商 GN 集团与特斯拉建立了战略合作关系，为其提供高质量的音频系统和降噪技术，进一步提升特斯拉汽车的用户体验。</p><h3 id="产业生态与创新驱动"><a href="#产业生态与创新驱动" class="headerlink" title="产业生态与创新驱动"></a>产业生态与创新驱动</h3><p>Tier 1 供应商需要不断提升自身的技术水平和服务能力，为整个汽车产业链带来更高的价值。在新能源汽车、智能网联汽车和自动驾驶等领域，产业生态的建设和创新驱动对于整个行业的发展至关重要。例如，美国 NVIDIA 公司在图形处理器、人工智能和自动驾驶领域具有领先优势，通过与各大车企合作，为汽车行业的智能化发展提供了强大动力。</p><h2 id="个人拙见"><a href="#个人拙见" class="headerlink" title="个人拙见"></a>个人拙见</h2><p>虽然看起来传统主机厂和 Tier 1 在未来都有新的机会，但是我更看好有技术创新能力和前瞻性的 Tier 1 供应商，而不看好传统车企。这主要是因为企业的 DNA 决定了它们在面对未来的挑战时是否能够取得成功。传统车企往往在技术创新、市场预判和新产品开发方面相对保守，这使得它们在新能源汽车、自动驾驶和智能网联汽车等领域的发展上相对滞后。</p><p>相比之下，具有创新实力和前瞻性的 Tier 1 供应商，如博世、康明斯和 NVIDIA 等，凭借其在技术研发和产业链整合方面的优势，更有可能在未来汽车行业中取得成功。它们能够为客户提供先进的技术和产品，进而推动整个行业的发展。</p><p>在主机厂领域，就现在看，只有「理想」和「蔚来」机会大些。这两家公司凭借其在电动汽车、自动驾驶和智能网联汽车方面的技术优势，以及对市场的敏锐洞察力，成功吸引了众多消费者的关注。与「理想」和「蔚来」相比，「小鹏」除了在智能化和自动驾驶方面有一定的特色，其总体技术实力和品牌影响力相对较弱。可谓产品打不过「理想」，品牌干不过「蔚来」，几年过去了依然要靠 P7 打天下，使得它在激烈的市场竞争中逐渐失去优势。不得不说，留给「小鹏」的时间不多了……</p><p>总之，在未来的汽车行业中，技术创新和前瞻性将成为关键的竞争要素。只有具备这些条件的企业，无论是主机厂还是 Tier 1 供应商，才有可能在这个充满变革和挑战的行业中立于不败之地。</p><p>最后，尽管智能座舱在近年来得到了广泛关注和发展，但可以预见它的潜力已经接近极限。相反，在未来几年里，值得我们关注和投入的领域是人机共驾。人机共驾作为一种新兴的出行模式，将人类驾驶员的经验和自动驾驶技术相结合，实现了驾驶安全、舒适和效率的最佳平衡。</p><p>未来几年的汽车行业将不再局限于智能座舱的改进，而是转向更具前瞻性和实用性的人机共驾技术。这将为汽车制造商和 Tier 1 供应商带来新的市场机遇，同时为消费者提供更加安全、便捷和愉悦的驾驶体验。</p><p>所以，汽车行业的小伙伴们，知道接下来该干什么了吗？😏</p>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Car </tag>
            
            <tag> EV </tag>
            
            <tag> Automotive </tag>
            
            <tag> Industry </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「元宇宙」短期内可能是个伪命题</title>
      <link href="/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/"/>
      <url>/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/metaverse.png"></p><p>最近很火的一个词，想必大家都已经耳熟能详了，那就是「元宇宙」。</p><p>这个词有多火，看它出圈的程度就知道了。</p><p>自从 Mark Zuckerberg 同学宣布将「Facebook」改名为「Meta」开始，「元宇宙」一夜之间从科技圈，传遍大街小巷。</p><span id="more"></span><h2 id="元宇宙是什么？"><a href="#元宇宙是什么？" class="headerlink" title="元宇宙是什么？"></a>元宇宙是什么？</h2><p>大家想象中的元宇宙，应该是一个虚拟现实的环境，就好像我们看过的《头号玩家》  (Ready Player One) 里面所表现的那样。</p><p>或者像 Minecraft 或者扎克伯格展示的 Facebook Demo 那样。</p><p>但，如果我们都错了呢？如果「元宇宙」并不是一个空间的维度而是时间维度呢？</p><p>就好比在人工智能领域我们经常说的一个词，叫做「奇点」 (The Singularity)。</p><p>引用 Wikipedia 上的原文如下：</p><blockquote><p>The technological singularity - or simply the singularity - is <strong>a hypothetical point in time at which technological growth becomes uncontrollable and irreversible</strong>, resulting in unforeseeable changes to human civilization.</p></blockquote><p>简单说，就是在某个假定的时间节点，科技的发展将变得不可控和不可逆，同时对人类文明造成不可预知的影响。</p><p>其实这种说法已经比较委婉了，很多悲观主义者认为，人类最终将会被 AI 统治，终有一天「黑客帝国」 (Matrix) 将会来临。</p><p>当然，聊这个有点跑题了，回归我们讨论的内容。</p><p>29 年前，也就是 1992 年，美国科幻作家<strong>尼尔·斯蒂芬森 (Neal Stephenson)</strong> 出版了一本名为**《雪崩 (Snow Crash) 》**的科幻小说。</p><p>并在书中首次提出了「Metaverse」（元宇宙）这一个概念。</p><p>就好比罗马不是一天建成的，元宇宙也不是喊个口号就来了的。</p><p>事实上「元宇宙」一直存在于我们身边，而且可能已经发展了超过 20 年。</p><p>真正元宇宙的到来，就好像「奇点」的到来一样。</p><p>当某一天，我们在「元宇宙」中的存在比在现实世界中更重要的时候，我们就真正的步入了「黑客帝国」或「头号玩家」的时代。</p><p>想想也有点可怕……</p><h2 id="每个人都被数字化-ing"><a href="#每个人都被数字化-ing" class="headerlink" title="每个人都被数字化 ing"></a>每个人都被数字化 ing</h2><p><img src="/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/digital.jpg"></p><p>其实，比起「元宇宙」的到来，我们现在的生活也被不断的数字化了。</p><p>想想我们的日常生活，息息相关的，哪个没有被数字化？</p><ul><li>工作：从工厂到台式电脑，再到笔记本和 Pad；从面对面会议，到网络会议（尤其疫情后）</li><li>学习：上课除了听讲外，很重要的一个环节是同学之间的思想交流，然而这种交流也越来越多地被网课所抹杀了</li><li>生活：很多人的购物问题也是网上解决了，作为移动互联网世界第一的中国，只需要微信和支付宝就能解决所有的支付问题，出门根本不需要带现金</li><li>交友：从街坊邻居变成了网络上的「关注」与「一键三连」，连找男女朋友都得上网🐶</li><li>游戏：越来越多的小朋友沉溺于虚拟游戏，而不是选择足球、篮球等运动</li><li>身份：看看朋友圈，不难发现「美图秀秀」已经成了新的「化妆」了，大家在网上是不是「活」得更精彩？</li></ul><p>当网络上的人越来越多，当大家使用网络的时间越来越长，当你身边的好友都长时间在网的情况下，请问，我们该如何选择？</p><p>无可奈何的我们也许只能向「恶势力」低头，「随波逐流」地投入数字化浪潮的洪流之中……</p><p>以前我们的精力都是放在现实世界中的，而现在我们都成了自己手机的牵线木偶。</p><p>如果将时间快进 10 到 20 年，说不定我们就已经身处「元宇宙」的时代了。</p><h2 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h2><p>「元宇宙」的爆火，离不开三种人：<strong>「教主」</strong>、<strong>「骗子」<strong>和</strong>「傻子」</strong>。</p><p><img src="/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/fasnet.jpg"></p><h3 id="教主"><a href="#教主" class="headerlink" title="教主"></a>教主</h3><p>教主，怎么说呢，也可以叫他们为神棍、巫师或者是疯子吧。在我的观点里乔布斯、马斯克还有扎克伯格都属于这个范畴的。</p><p>我觉得他们都有一种叫做「现实力场扭曲」的能力，虽然这一词来自乔帮主，但是另外两位教主也适用。</p><p>他们往往笃定一件事情，就大刀破斧地宣传推广，哪怕这是一个不靠谱，不接地气的事情。</p><p>但他们总能找到合适的人，忽悠别人相信他们的观点，并最终把这个事情给促成了。</p><p>更可怕的是，他们还有一众疯狂的信徒，所以我管他们叫「教主」一点都不为过。</p><p>教主们的行为已经不能用商业、科技和产品来定义了，再加上「信徒」对他们的迷信和盲从，这跟宗教又有什么区别呢？</p><h3 id="骗子"><a href="#骗子" class="headerlink" title="骗子"></a>骗子</h3><p>另外一类是骗子，这个就很好理解了，明知道「元宇宙」是一个假大空的概念，还要用这个概念忽悠别人来骗钱，自己赚得盆满钵满的那种人。</p><p>这么说比较容易得罪人，或者被某些人的粉丝攻击。</p><p>但是，那些着急宣布自己进军元宇宙的，贩卖元宇宙课程的，推荐元宇宙概念股的，等等这一类，都是骗子无疑。</p><p>比如说罗老师，前段时间不就大大声地说，自己要重回科技圈，并进军元宇宙产业吗？🐶</p><h3 id="傻子"><a href="#傻子" class="headerlink" title="傻子"></a>傻子</h3><p>傻子，也可以叫韭菜，冤大头，属于绝大多数不知道发生了什么事情的普通群众。</p><p>因为经济环境的整体下行，大家都急于进行资产保值（你还想增值？）。</p><p>一听说有个新名词，就蠢蠢欲动，感觉赚钱的机会来了？</p><p>可是大家想想，赚钱的机会这么容易，就你能嗅到，别人都是傻子？</p><p>这样说，有人可能会觉得被冒犯到，但是喝醉酒的人说的最多的一句话是什么？</p><p>是不是：「我没醉，我还能喝」？</p><p>那又有哪个傻子觉得自己傻子呢？傻子只会觉得别人是傻子而已……</p><p>比特币红利你没赶上，区块链技术似懂非懂，股票市场玩的一塌糊涂。</p><p>又是谁给你的勇气，让你觉得你可以把「元宇宙」玩得风生水起呢？梁静茹吗？</p><h3 id="都是利益"><a href="#都是利益" class="headerlink" title="都是利益"></a>都是利益</h3><p>说到底，无论是「教主」、「骗子」还是「傻子」，其背后的根本诉求都是殊途同归的：钱！</p><p>真的，就是这么朴实无华的诉求，无它，为了追求「钞」能力而已。</p><p>只不过，教主们是真的有「钞」能力，只要忽悠到位，那他们的公司就是印钞机。</p><p>骗子们虽然达不到印钞机的级别，但是割韭菜还是妥妥的。炒股的有几个觉得自己赚钱的？卖炒股软件的有哪个不赚钱的？</p><p>最惨的还是傻子们，由于自身的认知和判断力不够，最终的结果还是会沦为韭菜。归根结底，还是因为傻子们难以抵挡自己内心的贪婪。其实只要不贪，又怎么会成为傻子呢？</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p><img src="/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/matrix.jpg"></p><p>为了继承本人文章的一贯传统，最后还是要来个不是总结的「总结」。</p><p>第一、对于 Facebook 改名 Meta 这事儿，大家看看就行了，扎克老师就是来赚钱的。一个是为了巩固自己在社交领域的统治地位，另外为了自家 VR 产品打开销路，大家真的无需过度解读。扎克老师真的不是一个什么胸怀大志的伟人，一个纯纯粹粹的商人罢了。</p><p>第二、少看些没有用的大 V 博客、视频什么的，因为往往乱带节奏的就是这些人。有这个时间还不如看几本科幻小说，看看正儿八经的技术文章，关心一下前沿科技领域。</p><p>第三、别老想着赚快钱，你只看到别人赚快钱，没看到别人后面积累了多少年。所以，想要赚钱还是要在自己擅长的领域持续投入。当然，不断的跨领域学习，也许某天就可以跨行业投资了，参考「奇点」概念，但那也是需要厚积薄发，量变到质变的。</p><p>最后，谈谈个人的一些看法。</p><p>「元宇宙」是好事还是坏事？我不知道。</p><p>就好像世间所有的事情一样，也许它不是好事，也不是坏事，就只是一个事而已。</p><p>一个完全不一样的事……</p><p>我个人是很反对这个所谓「元宇宙」的东西的。</p><p>生活这么美好，值得我们每个人好好珍惜，用心体会。</p><p>I just wanna live alive, but not just live.</p><p>当然，不管我如何不喜欢，甚至抗拒「元宇宙」的到来，但冥冥之中我总觉得那一天终究会到来。</p><p>未来也许除了「吃喝拉撒」，我们都能在「元宇宙」中完成了，谁又知道呢？</p><p>蜜汁微笑……😊</p>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Metaverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学日语的意义……</title>
      <link href="/2021/10/25/why-japanese/"/>
      <url>/2021/10/25/why-japanese/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/10/25/why-japanese/stones.jpg" alt="Stones"></p><blockquote><p>免责声明：此为杂文，本人定义为杂七杂八、无逻辑、无条理的感悟（吐槽）文，不喜勿喷。</p></blockquote><p>最近，因为生活无聊（其实也并不无聊），莫名其妙地脑抽，又双叒叕想学日语了。</p><p>有不少朋友知道后，都表示「资瓷」。</p><p>虽然我也不知道为什么他们支持，但鼓励的言语还是很受用的。😏</p><p>当然也有为数不少看热闹的吃瓜群众，嘴上不说，心里却是笃定我学不会的。</p><p>再有，就是那种觉得我学日语，完全就是浪费时间没有意义的同学。</p><p>但不管是支持的，吃瓜的，还是觉得没意义的，大家都不约而同的问了我同一个问题。</p><p>那就是：「<strong>你学日语来干嘛？</strong>」</p><span id="more"></span><p>不得不说，这个问题虽然算不上灵魂拷问，却也成功地引起了我的思考。</p><p>因担心那灵光一现的想法转瞬即逝，是以为记。</p><hr><p>人到中年，感觉各种问题层出不穷，仿佛每个人都有挥之不尽的问题与困扰。</p><p>「从前<strong>车马</strong>很<strong>慢</strong>，<strong>书信</strong>很<strong>远</strong>，一生只够爱一个人」。</p><p>而现在呢？</p><p>千里姻缘一线牵，只需一部小小的手机，人们就可以轻松地触达到世界的每一个角落。</p><p>但是我们却失去了「<strong>慢</strong>」所赋予的生命的意义，迷失在信息的汪洋之中。</p><p>什么都是立刻、现在、马上，now or never……</p><p>游戏也是，生活也是，感情也是，一切的一切都变成了快消品。</p><p>各种制造焦虑的媒体，各种贩卖焦虑的公号，各种通过焦虑敛财的大 V。</p><p>在这个信息爆炸的时代，我们扪心自问，自己是不是活得过于功利了？</p><p>曾几何时，那个简简单单的自己，朴素地想要做什么东西的自己，是不是已经消失不见了？</p><hr><p>小的时候，我们可能因为感兴趣，而爱上阅读。</p><p>小的时候，我们可能因为热爱，而爱上运动。</p><p>小的时候，我们可能不需要做任何事，原地发呆也能沉浸在天马行空的想象中。</p><p>现在呢？</p><p>考研为了找更好的工作，而不是学习自己感兴趣的内容。</p><p>学礼仪为了在大场合能更好的装一下，而不是真的修心养性。</p><p>甚至连玩游戏，都必须要带上社交属性。</p><p>毕竟，没有社交属性的游戏，玩了别人也不知道啊。</p><p>好像不能 PK，不能一较高下，不跟大家一起玩，就没有了圈子，没有了谈资。</p><p>看看地铁上行色匆匆的人们，只有中小学生在看书。</p><p>而其他人一个个都如同被「手机」控制了的鞠瘘蚂蚁……</p><hr><p>反观现在的成年人，不管做什么事情都<strong>只</strong>用利益来衡量。</p><p>所有的事情都被量化，所有的投入和产出也被反复计算。</p><p>无论是否金融管理专业，似乎大家都能非常精通 ROI（投入产出比）的理念。</p><p>婚姻计算、亲情计算、友谊计算、商业计算、学习计算，还有什么我们不计算的吗？</p><p>我们真的已经沦落到，什么事情都要计算清楚利益得失，才去做吗？</p><p>当人类无限内卷下去，收益为负的时候，我们是不是就可以无所事事，坐吃等死了？</p><p>你也许会说，那是不可能的。</p><p>但当 AI 极度发达的时候，人类已经不需要劳作，便可以衣食无忧的时候。</p><p>我们还有什么优势，还有什么投入产出比呢？机器永远完胜。</p><hr><p>回归日语学习这件事，正经的朋友会跟我分析学习日语的利弊，以及工作中可能用到的场景。</p><p>而大多数朋友则认为学日语的主要目的，是为了将来能看日漫，看日剧，刷生肉。</p><p>「不靠谱」的损友们，则认为最大的收益是能听懂动作片的台词，或者找个日本女朋友。</p><p>这里我吐槽下「损友」们，谁看动作片关心台词啊？你是一句一句暂停复读，还是用心了解语法结构、时态以及遣词造句啊？！</p><p>再说了，现实点，学日语找日本女友？找个日本女友学日语不香吗？我差的是日语吗？我差的是女友啊！有女朋友哪还有时间学日语？</p><hr><p>吐槽完毕，公布答案：我就是纯粹地想学日语了，哪怕以后永远也用不上。</p><p>当然想学的原因，也是多方面的：</p><ol><li>上中学的时候就想学，但半途而废了（想要圆梦）</li><li>去日本滑雪的时候，跟日本人英文沟通困难</li><li>想要通过语言学习与交流，去结识更多有趣的灵魂</li></ol><p>一直以来我都希望自己可以立长志，而不是常立志。</p><p>但我却总是在「想要努力」、「自我放纵」，和「无限懊悔」中周而复始。</p><p>那些说我面子大的童鞋，我那都是自己长年累月「啪啪啪」打脸的结果啊。😮‍💨</p><hr><p>在经历过许许多多波折，和人生的跌宕起伏以后。</p><p>我只想简简单单地学点什么，做点什么，并没有什么明确的目的性。</p><p>也许我最后依旧是学无所成，亦或者是半途而废。</p><p>但至少在这让人窒息到无法呼吸的钢筋混凝土囚笼中，我曾尝试过去追随自己的内心。</p><p>不为什么利益与结果，只为一个过程，不需要什么理由。</p><p>愿你出走半生，归来仍是少年……</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Japanese </tag>
            
            <tag> Language </tag>
            
            <tag> Misc </tag>
            
            <tag> Thought </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用 Nebula 创建私人局域网</title>
      <link href="/2021/09/12/build-your-own-sd-lan-by-nebula/"/>
      <url>/2021/09/12/build-your-own-sd-lan-by-nebula/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/09/12/build-your-own-sd-lan-by-nebula/nebula.jpg"></p><h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>作为一个 IT 苦力的我，由于常年受<del>白嫖怪</del>朋友们的厚(qi)爱(fu)，时常需要帮友人重装系统，配置网络，设置路由器，组装 NAS 什么的。毕竟学通信工程的人，不就是修电脑、修手机和修网络的吗？😂</p><p>理论上来讲，很多东西装好，配置好，应该就不会有任何问题了。一开始，我也是这样以为的，然而很多时候往往事与愿违。今天不是张三的电脑出问题了，就是明天李四的 <a href="https://en.wikipedia.org/wiki/Network-attached_storage">NAS</a> 挂了。</p><p>作为一个懒人，现场支持什么的，那是肯定不可能的，毕竟咱这工时费也不低不是（可惜从来没收过）。再者说来，朋友们碰到的大多数问题其实都不大需要现场支持这么严重，除非是系统级别的灾难。</p><span id="more"></span><p>然而，我又一次天真了。同一个问题，我自己可能几分钟就解决了，而跟好友打电话、视频、语音等各种沟通，可能要花上数小时。别问我为什么不用<a href="https://en.wikipedia.org/wiki/Remote_Desktop_Protocol">远程桌面（RDP）</a>、<a href="https://www.teamviewer.cn/">TeamViewer</a>、QQ 远程协助类的工具。绝大多数人的网络都在 <a href="https://en.wikipedia.org/wiki/Network_address_translation">NAT</a> 后面，很多还是好几级的 NAT，根本就连不上。在 macOS 系统下，是无法使用 QQ 远程协助的，因为根本没有这个功能。TeamViewer 要付费，这个也就没什么好聊的啦，参考第一段第一句话。🤦‍♂️</p><p>比较稳定能用的网络连接工具也就是 ZeroTier 了，但是要跟对方讲怎么安装，怎么加入网络也是个吃力不讨好的事儿。而且可能就一个小问题，还要安装一个额外的软件，也是得不偿失。再者，ZeroTier 中继的速度非常慢，而且就算连上了，还是得用屏幕共享的方式解决问题，也并不怎么优雅。更不要说像 NAS 这类的 Linux 系统了，我该如何跟小白解释 SSH，证书还有 Terminal 了 。</p><p>如果在路由器级别就能实现互联互通，解决掉<a href="https://en.wikipedia.org/wiki/Dynamic_DNS">动态域名</a>和 <a href="https://en.wikipedia.org/wiki/NAT_traversal">NAT 打洞</a>的问题，那么就可以把远程协助的工作变成一个局域网内的远程管理，这样就非常美好了。起码不用让对方去查看自己的公网 IP，不用做 <a href="https://en.wikipedia.org/wiki/Universal_Plug_and_Play">UPnP 映射</a>，下载工具什么的。其实这种方式也非常适合有多个办公地点的小伙伴，或者是那种多 sites 办公的群体。还有一个应用场景，就是有自己 NAS 的小伙伴，可以在外面安全地访问家里存放的私人数据。</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>在思考过可能的使用场景后，整理需求如下：</p><ol><li>能实现多个地点的局域网化（<a href="https://en.wikipedia.org/wiki/Software-defined_networking">SD-LAN</a>），比如北京、上海、广州和深圳办公室的互联</li><li>在外可以实现远程访问公司或者家里 NAS 上存储的数据</li><li>客户端支持主流操作系统 macOS、Windows、Linux 以及手机 iOS、Android 应用</li><li>实现端对端加密，且支持现代加密技术，以保证数据传输的安全性</li><li>可以运行在路由器上，实现不同路由器下子网间的互联互通</li><li>新加入网络的设备不改变现有网络拓扑结构，无需修改现有配置</li></ol><p>可选需求：</p><ol><li>配置简单、方便，有图形化界面，或者类似工具</li><li>去中心节点化，尽可能多的容灾方案</li><li>最好是开源代码，而非商业代码，以便于代码审查</li></ol><h2 id="工具对比"><a href="#工具对比" class="headerlink" title="工具对比"></a>工具对比</h2><p>在做了一大轮的功课以后，我分别尝试了以下这些工具：</p><ul><li><a href="https://www.cisco.com/c/en/us/support/security/anyconnect-secure-mobility-client-v4-x/model.html">Cisco AnyConnect</a></li><li><a href="https://www.defined.net/">Nebula</a></li><li><a href="https://www.wireguard.com/">WireGuard</a></li><li><a href="https://www.zerotier.com/">ZeroTier</a></li><li><a href="https://github.com/fatedier/frp">frp</a></li><li><a href="https://github.com/ntop/n2n">n2n</a></li><li><a href="https://ngrok.com/">ngrok</a></li></ul><p>总体来讲，ZeroTier 的体验是最好的，虽然中继服务器经常连不上，或者很慢，但是可以通过自建 <a href="https://docs.zerotier.com/zerotier/manual/">moon</a> 的方式进行中转。基本上所有类型的 NAT 都可以打通，对于不能打通的可以使用中继服务器进行中转。但使用中继的时候，带宽受限于中转服务器的带宽。相对来说，新手上手难度比较低，但是商业公司，中心服务器，数据安全可能是个问题。</p><p>WireGuard 是一个已经加入到 <a href="https://www.kernel.org/">Linux 内核</a>里面的协议，配置也不复杂，实测传输速度也很不错。默认不支持在 NAT 网络下打洞，不过网上已经有人通过 <a href="https://coredns.io/">CoreDNS</a> 的 Plugin <a href="https://www.jordanwhited.com/posts/wireguard-endpoint-discovery-nat-traversal/">实现了 WireGuard 的打洞</a>，但还要编译代码什么的比较啰嗦。同时，配置起来也比较麻烦，每个节点（Node）需要单独配置公私钥，多个节点之间必须每两两进行配置。也就是说如果 2 个服务器就要配置 2 个节点信息，3 个需要配置 6 个，如果站点多的话，自己算吧……</p><p>Cisco AnyConnect 属于商用软件，Server &#x2F; Client 模式，同时还需要占用 443&#x2F;TCP 端口，属于比较传统的产品。虽然有 <a href="https://ocserv.gitlab.io/www/">ocserv</a>，但是配置也很麻烦，客户端强依赖于 Cisco，并不适用于现有需求，直接劝退吧。</p><p>frp，也需要服务器中转，受限于服务器带宽。有朋友说现在有 <code>xtcp</code> 模式可以支持直连打洞，但本人并没有试验过。n2n，ngrok 什么的在 Linux 服务器上配置过，对于终端用户来说，还是不那么理想。</p><p>而 Nebula，从 2020 年开始关注以来，一直没有真正部署过。主要是文档太少，官方开发速度缓慢，一些该有的核心功能还不完善。比如刚开始的时候，他们没有 iOS 和 Android 的客户端。再有就是必须要自己有一个公网 IP 的服务器做 Lighthouse，同时还不支持数据中转。一些复杂的 NAT 网络无法穿透，不支持 IPv6 等等。</p><p>但是他们最近发布了 1.4.0 的版本，突然之间就变得真香了。对于我来说，最重要的一点，就是支持 IPv6 了。也就是说，在有 IPv6 支持的情况下，完全不需要关心 NAT 类型了，可以直接建立连接。再有就是手机客户端官方也开源了，同时 iOS 上也可以正常使用了。这就意味着只用一个软件，我就可以把已知的网络通过路由器全部连通的同时，还可以用手机直接访问内网 NAS 上的数据。</p><h2 id="Nebula"><a href="#Nebula" class="headerlink" title="Nebula"></a>Nebula</h2><p>首先说说，什么是 Nebula？其官方介绍如下：</p><blockquote><p>Nebula is a scalable overlay networking tool with a focus on performance, simplicity and security. It lets you seamlessly connect computers anywhere in the world. Nebula is portable, and runs on Linux, OSX, Windows, iOS, and Android. It can be used to connect a small number of computers, but is also able to connect tens of thousands of computers.</p></blockquote><p>简单来说，<a href="https://github.com/slackhq/nebula/">Nebula</a> 是由 <a href="https://slack.com/">slack</a> 开源的一款专注于性能、易用性和安全性的 P2P 网络通信工具。可以运行在 Linux、macOS、Windows、iOS 和 Android 等设备上，使得用户可以无缝连接任何一台网络设备。</p><p>Nebula 的底层使用了 <a href="https://noiseprotocol.org/">Noise Protocol Framework</a> 协议以实现<a href="https://en.wikipedia.org/wiki/Software-defined_networking">SDN（Software Defined Network）</a> 双向认证的 P2P 网络。可以使用 AES 或者 CHACHAPOLY 加密算法，以保证数据传输的安全性。</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>首先去 Nebula 的 GitHub Release 页面下载最新的 Nebula：</p><p><a href="https://github.com/slackhq/nebula/releases">https://github.com/slackhq/nebula/releases</a></p><p>当前最新的版本为 Nebula 1.4.0，已经支持 IPv6 了，针不戳。</p><p>下载自己对应平台的版本就可以了，因为我要跑在 MTK 的路由器上（红米 AC2100，Newifi-D2 等），官方没有 mipsle-softfloat 的架构，所以就自己编译了一个版本，可以在下面的地址下载：</p><p><a href="https://github.com/TommyLau/nebula/releases">https://github.com/TommyLau/nebula/releases</a></p><p>同时，因为朋友需要在 Windows 32 位系统下面使用，所以顺便也编译了一个 x86 的版本。有需要的小伙伴，同样可以在上面的链接里面找到对应的下载。</p><p>下面是 iOS 和 Android 的版本：</p><p><a href="https://apps.apple.com/us/app/mobile-nebula/id1509587936">https://apps.apple.com/us/app/mobile-nebula/id1509587936</a><br><a href="https://play.google.com/store/apps/details?id=net.defined.mobile_nebula">https://play.google.com/store/apps/details?id=net.defined.mobile_nebula</a></p><p>需要注意的是，iOS 版本在中国区是没有上架的，Android 版本好像也只有 Google Play 上才有，这个大家自己想办法解决吧。</p><p>解包 Nebula 以后主要有 2 个文件，<code>nebula</code> 和 <code>nebula-cert</code>。</p><h2 id="创建-CA-证书"><a href="#创建-CA-证书" class="headerlink" title="创建 CA 证书"></a>创建 CA 证书</h2><p>创建证书，好比使用其他工具一样，一如既往的简单。只需要输入如下的内容便可以生成我们需要的 CA 证书了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nebula-cert ca -name &quot;Myorganization, Inc&quot;</span><br></pre></td></tr></table></figure><p>其中 <code>&quot;Myorganization, Inc&quot;</code> 为这个 Nebula 网络的证书名，可以改成任意方便记忆的名字。</p><p>程序执行完毕后，会在当前目录下生成 <code>ca.key</code>（私钥）和 <code>ca.crt</code>（证书）两个文件。</p><blockquote><p> <code>ca.key</code> 用于签名所有的 Nebula 节点，因此格外重要，请务必妥善保管。又因为其重要性，建议仅在签名时使用，并作单独存放，不要放到 Lighthouse 或者任何一个 Nebula 节点上。</p></blockquote><h2 id="创建密钥与证书"><a href="#创建密钥与证书" class="headerlink" title="创建密钥与证书"></a>创建密钥与证书</h2><p>假设我们现在要配置 3 个主机，分别是 <code>lighthouse</code>、<code>router</code> 和 <code>laptop</code>。我们可以直接使用刚才说的 3 个名字，也可以用域名的方式来命名，都是可以的。</p><p>同时我们需要提前规划好网络定义，比如：<code>192.168.100.0/24</code>。这个网络要跟我们现在已有的网络地址区分开，比如 <code>192.168.1.0/24</code> 等。因为 Nebula 是 Overlay Network，它必须基于现有网络的基础之上，如果 IP 地址冲突的话，就无法正常工作了。</p><p>我们可以通过下面的命令，来生成不同的证书：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./nebula-cert sign -name &quot;lighthouse&quot; -ip &quot;192.168.100.1/24&quot;</span><br><span class="line">./nebula-cert sign -name &quot;router&quot; -ip &quot;192.168.100.11/24&quot; -subnets &quot;172.16.1.0/24&quot; -groups &quot;router,servers&quot;</span><br><span class="line">./nebula-cert sign -name &quot;laptop&quot; -ip &quot;192.168.100.100/24&quot; -groups &quot;laptop,ssh&quot;</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>-name，就是这个节点的名字，可以任意填写，也可以用域名的方式填写</li><li>-ip，指定 Nebula 分配给该节点的 IP 地址，需要手动指定，且不能与已分配的 IP 地址冲突</li><li>-subnets，指定当前节点的非 Nebula 路由，以便其它节点能访问当前节点的子网  </li><li>-group，指定该节点所在的组，方便 Nebula 进行防火墙规则配置</li></ul><p>在上面的例子中，我们创建了 3 个不同的节点。<code>lighthouse</code> 需要部署在有公网 IP 的服务器上，用于连通各个不同的节点。<code>router</code> 部署在家里的路由器上，以方便访问 NAS 或者智能家居等设备。<code>laptop</code> 相当于一个笔记本，用于在任何地方接入这个私有网络。类似的，我们也可以增加 <code>phone</code>、<code>pad</code> 等设备，其它证书的生成方式与 <code>laptop</code> 类似，使用不同的名称就可以了。</p><h2 id="配置-Nebula"><a href="#配置-Nebula" class="headerlink" title="配置 Nebula"></a>配置 Nebula</h2><p>对于 Nebula 来说，每一个节点都需要一个单独的配置文件。我们可以下载官方的配置文件作为参考模板：</p><p><a href="https://github.com/slackhq/nebula/blob/master/examples/config.yml">https://github.com/slackhq/nebula/blob/master/examples/config.yml</a></p><p>我们把这个文件复制成两份，分别是 <code>config-lh.yaml</code> 和 <code>config.yaml</code>，分别对应 <code>lighthouse</code> 和其它主机。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp config.yml config-lh.yaml</span><br><span class="line">cp config.yml config.yaml</span><br></pre></td></tr></table></figure><h3 id="配置-Lighthouse"><a href="#配置-Lighthouse" class="headerlink" title="配置 Lighthouse"></a>配置 Lighthouse</h3><p>在 Lighthouse 节点上，最重要的是要确认 <code>am_lighthouse: true</code> 为开启状态。</p><p>一般来说，Lighthouse 节点不需要指定静态路由 <code>static_host_map</code>，因为所有的节点都会跟 Lighthouse 进行通信。就算我个人使用了多 Lighthouse 的配置，其实也不需要设置静态路由，除非是需要在 Lighthouse 之间进行通信。</p><p>另外，为了更好的组网，IPv6 当然是必不可少的啦！在官方的配置文件中，默认使用 IPv4 方式：<code>host: 0.0.0.0</code>，这里我们需要手动修改为：<code>host: &quot;[::]&quot;</code> 来同时监听 IPv4 和 IPv6 的数据。</p><p>修改过的参数配置如下：</p><figure class="highlight yaml"><figcaption><span>config-lh.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">static_host_map:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">lighthouse:</span></span><br><span class="line">  <span class="attr">am_lighthouse:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">listen:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;[::]&quot;</span></span><br></pre></td></tr></table></figure><p>除此之外，配置文件里面还有子网相关的配置，因为我使用了与官方参考配置相同的子网： <code>192.168.100.0/24</code>，所以不需要做额外地修改。如果你配置了不同的子网和 IP 的话，请相应地做出调整。</p><h3 id="配置节点"><a href="#配置节点" class="headerlink" title="配置节点"></a>配置节点</h3><p>配置节点与配置 Lighthouse 类似，唯一不同的是，需要在 <code>static_host_map</code> 中指定 Lighthouse 的公网 IP 和端口。这里使用 IP 或者域名的方式都可以，个人建议使用域名，这样可以减少更换 Lighthouse 服务器以后，需要逐个节点修改配置的麻烦。</p><p><code>static_host_map</code> 前面的部分是 Lighthouse 在 Nebula 网络中的 IP 地址（参考本文证书部分），后面是公网服务器的域名或者 IP，以及其对应的端口。</p><p> <code>am_lighthouse</code> 必须要设置为 <code>false</code>，同时 <code>hosts</code>  里面必须要指定 Lighthouse 的 Nebula IP。</p><p> 同样的，为了打开 IPv6，host -&gt; listen 还是要调整下。同时这里有个坑，就是在 NAT 后面的网络，一定要把 <code>port</code> 设置为 0，以使用动态端口，不然各种连不上。其实我觉得除了 Lighthouse 以外，其它的节点都应该将端口设置为 0，以减少不必要的麻烦。</p><figure class="highlight yaml"><figcaption><span>config.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">static_host_map:</span></span><br><span class="line">  <span class="attr">&quot;192.168.100.1&quot;:</span> [<span class="string">&quot;your.domain.tld:4242&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">lighthouse:</span></span><br><span class="line">  <span class="attr">am_lighthouse:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">60</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;192.168.100.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">listen:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;[::]&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>配置到这里，基本上就算是完成了。但是我们之前有一个 <code>router</code> 节点，为的就是能远程访问局域网的内容，所以这个时候我们还需要多配置一个 <code>unsafe_routes</code>。需要注意的是，如果要访问 <code>router</code> 节点背后的网络，我们需要在每个需要访问该网络的节点上，增加如下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tun:</span></span><br><span class="line">  <span class="attr">unsafe_routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">route:</span> <span class="number">172.16</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24</span></span><br><span class="line">      <span class="attr">via:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.11</span></span><br></pre></td></tr></table></figure><p>这里的 <code>172.16.1.0/24</code> 就是路由器对应的局域网（LAN）的网段，而 <code>192.168.100.11</code> 就是我们之前配置的 <code>router</code> 节点所对应的 Nebula 网络中的 IP。我们只需要把这个配置文件复制到 <code>laptop</code> 节点中，并配合相应的证书，就可以实现远程访问家庭网络的目的。</p><blockquote><p>需要注意的是，对于 <code>router</code> 节点本身，不能添加这条路由规则，否额会导致路由冲突而组网失败。</p></blockquote><h3 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h3><p>官方默认的防火墙配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">firewall:</span></span><br><span class="line">  <span class="attr">outbound:</span></span><br><span class="line">    <span class="comment"># Allow all outbound traffic from this node</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">inbound:</span></span><br><span class="line">    <span class="comment"># Allow icmp between any nebula hosts</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">icmp</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Allow tcp/443 from any host with BOTH laptop and home group</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">tcp</span></span><br><span class="line">      <span class="attr">groups:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">laptop</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">home</span></span><br></pre></td></tr></table></figure><p>大概就是，使用这个配置的节点，对外访问 Nebula 网络无任何限制。Nebula 网络中的其它节点，只能通过 ICMP 协议 PING 当前节点。属于 <code>laptop</code> 和 <code>home</code> 组的其它节点，可以访问当前节点的 443&#x2F;TCP 端口。</p><p>大家刚开始配置的时候，我个人建议先不要设置防火墙规则，先让服务跑起来然后再说。毕竟绝大多数情况下，大家一开始的时候，网络都是各种不通，别说防火墙了。所以我们可以修改成如下的样子：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">firewall:</span></span><br><span class="line">  <span class="attr">outbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">inbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br></pre></td></tr></table></figure><p>允许各个节点之间自由通信。</p><h3 id="其它配置"><a href="#其它配置" class="headerlink" title="其它配置"></a>其它配置</h3><p>因为要在路由器上使用，且对于安全没有过度的痴迷，这里我将加密算法指定为 <code>chachapoly</code>。毕竟 <code>aes</code> 算法虽好，但是如果没有硬件指令集支持的话，还是很难过的。尤其是路由器这种嵌入式处理器，老旧一点的大多没有 AES 指令集，实测很多连带宽都无法跑满。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cipher:</span> <span class="string">chachapoly</span></span><br></pre></td></tr></table></figure><blockquote><p>需要注意的是，各个节点之间必须使用相同的加密方式，也就是说要么全部用 <code>aes</code>，要么全部用 <code>chachapoly</code>，并不能混合使用。</p></blockquote><h2 id="运行-Nebula"><a href="#运行-Nebula" class="headerlink" title="运行 Nebula"></a>运行 Nebula</h2><h3 id="运行-Lighthouse"><a href="#运行-Lighthouse" class="headerlink" title="运行 Lighthouse"></a>运行 Lighthouse</h3><p>下载服务器对应的 Nebula 二进制可执行文件，然后把 <code>ca.crt</code>、<code>lighthouse.key</code>、<code>lighthouse.crt</code> 还有 <code>config-lh.yaml</code> 上传到服务器。</p><p>创建 <code>/etc/nebula</code> 目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/nebula</span><br></pre></td></tr></table></figure><p>将配置文件移动到指定目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mv config-lh.yaml /etc/nebula/config.yaml</span><br><span class="line">mv ca.crt /etc/nebula/ca.crt</span><br><span class="line">mv lighthouse.crt /etc/nebula/host.crt</span><br><span class="line">mv lighthouse.key /etc/nebula/host.key</span><br></pre></td></tr></table></figure><p>运行 Nebula</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nebula -config /etc/nebula/config.yaml</span><br></pre></td></tr></table></figure><h3 id="运行节点"><a href="#运行节点" class="headerlink" title="运行节点"></a>运行节点</h3><p>类似 Lighthouse，同样的把相关的文件复制到需要运行的主机上，主要是 <code>ca.crt</code>、<code>config.yaml</code> 和对应节点的两个证书文件，比如：<code>router.key</code>、<code>router.crt</code>。</p><p>同样的，创建 <code>/etc/nebula</code> 目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/nebula</span><br></pre></td></tr></table></figure><p>将配置文件移动到指定目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mv config.yaml /etc/nebula/config.yaml</span><br><span class="line">mv ca.crt /etc/nebula/ca.crt</span><br><span class="line">mv router.crt /etc/nebula/host.crt</span><br><span class="line">mv router.key /etc/nebula/host.key</span><br></pre></td></tr></table></figure><p>运行 Nebula</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nebula -config /etc/nebula/config.yaml</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>在任何一个非 Lighthouse 的节点上，应该可以 ping 通 Lighthouse：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 192.168.100.1</span><br></pre></td></tr></table></figure><p>如果能 ping 通则表示 Nebula 网络建立成功。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>不同于其它的组网程序，Nebula 的 Lighthouse 是不负责数据的中转的，也就是说所有的数据都是 P2P 的，如果能连上就能连上，连不上就……连不上。😅</p><p>所以如果大家能 ping 通 Lighthouse，但是两个节点之间无法互通的话，大概率就是 NAT 穿透的问题。</p><p>这也是为什么我觉得 IPv6 很重要的原因，因为只要双方有 IPv6，除非防火墙配置有问题，否则就不可能出现连不上的情况。哪怕是在手机热点的辣鸡 Symmetric NAT 下，也能有效连通。</p><p>用 Nebula 的好处就是，只要网络规划合理，添加新的节点非常容易。只需要用 CA 签名一个新的证书就可以了，现存的节点都不需要修改。而且节点跟节点之间都是直连，如果 CPU 够用的话，基本上都可以在任意两个节点之间跑满带宽。</p><p>除了「真香」，我还能说什么呢？😊</p><h2 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h2><p>最后，提供 <code>lighthouse</code> 和 <code>laptop</code> 的完整配置文件，供大家参考。</p><h3 id="config-lh-yaml"><a href="#config-lh-yaml" class="headerlink" title="config-lh.yaml"></a>config-lh.yaml</h3><figure class="highlight yaml"><figcaption><span>config-lh.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pki:</span></span><br><span class="line">  <span class="attr">ca:</span> <span class="string">/etc/nebula/ca.crt</span></span><br><span class="line">  <span class="attr">cert:</span> <span class="string">/etc/nebula/host.crt</span></span><br><span class="line">  <span class="attr">key:</span> <span class="string">/etc/nebula/host.key</span></span><br><span class="line"></span><br><span class="line"><span class="attr">static_host_map:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">lighthouse:</span></span><br><span class="line">  <span class="attr">am_lighthouse:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">60</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;192.168.100.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">listen:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;[::]&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">4242</span></span><br><span class="line"></span><br><span class="line"><span class="attr">punchy:</span></span><br><span class="line">  <span class="attr">punch:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cipher:</span> <span class="string">chachapoly</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tun:</span></span><br><span class="line">  <span class="attr">disabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">dev:</span> <span class="string">nebula1</span></span><br><span class="line">  <span class="attr">drop_local_broadcast:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">drop_multicast:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tx_queue:</span> <span class="number">500</span></span><br><span class="line">  <span class="attr">mtu:</span> <span class="number">1300</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span> <span class="string">info</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">text</span></span><br><span class="line"></span><br><span class="line"><span class="attr">firewall:</span></span><br><span class="line">  <span class="attr">conntrack:</span></span><br><span class="line">    <span class="attr">tcp_timeout:</span> <span class="string">12m</span></span><br><span class="line">    <span class="attr">udp_timeout:</span> <span class="string">3m</span></span><br><span class="line">    <span class="attr">default_timeout:</span> <span class="string">10m</span></span><br><span class="line">    <span class="attr">max_connections:</span> <span class="number">100000</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">outbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">inbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br></pre></td></tr></table></figure><h3 id="config-yaml"><a href="#config-yaml" class="headerlink" title="config.yaml"></a>config.yaml</h3><figure class="highlight yaml"><figcaption><span>config.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pki:</span></span><br><span class="line">  <span class="attr">ca:</span> <span class="string">/etc/nebula/ca.crt</span></span><br><span class="line">  <span class="attr">cert:</span> <span class="string">/etc/nebula/host.crt</span></span><br><span class="line">  <span class="attr">key:</span> <span class="string">/etc/nebula/host.key</span></span><br><span class="line"></span><br><span class="line"><span class="attr">static_host_map:</span></span><br><span class="line">  <span class="attr">&quot;192.168.100.1&quot;:</span> [<span class="string">&quot;your.domain.tld:4242&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">lighthouse:</span></span><br><span class="line">  <span class="attr">am_lighthouse:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">60</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;192.168.100.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">listen:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;[::]&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">punchy:</span></span><br><span class="line">  <span class="attr">punch:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cipher:</span> <span class="string">chachapoly</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tun:</span></span><br><span class="line">  <span class="attr">disabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">dev:</span> <span class="string">nebula1</span></span><br><span class="line">  <span class="attr">drop_local_broadcast:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">drop_multicast:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tx_queue:</span> <span class="number">500</span></span><br><span class="line">  <span class="attr">mtu:</span> <span class="number">1300</span></span><br><span class="line">  <span class="attr">unsafe_routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">route:</span> <span class="number">172.16</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24</span></span><br><span class="line">      <span class="attr">via:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.11</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span> <span class="string">info</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">text</span></span><br><span class="line"></span><br><span class="line"><span class="attr">firewall:</span></span><br><span class="line">  <span class="attr">conntrack:</span></span><br><span class="line">    <span class="attr">tcp_timeout:</span> <span class="string">12m</span></span><br><span class="line">    <span class="attr">udp_timeout:</span> <span class="string">3m</span></span><br><span class="line">    <span class="attr">default_timeout:</span> <span class="string">10m</span></span><br><span class="line">    <span class="attr">max_connections:</span> <span class="number">100000</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">outbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">inbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Network </tag>
            
            <tag> VPN </tag>
            
            <tag> NAS </tag>
            
            <tag> Router </tag>
            
            <tag> IP </tag>
            
            <tag> IPv4 </tag>
            
            <tag> IPv6 </tag>
            
            <tag> LAN </tag>
            
            <tag> Mesh </tag>
            
            <tag> NAT </tag>
            
            <tag> Nebula </tag>
            
            <tag> SD-LAN </tag>
            
            <tag> SDN </tag>
            
            <tag> UDP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>断舍离</title>
      <link href="/2021/05/15/danshari/"/>
      <url>/2021/05/15/danshari/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/05/15/danshari/danshari.png" alt="Dan Sha Ri"></p><p>最早接触到《断舍离》这本书是在 2017 年左右，但真正入手这本书已经是 2018 年 8 月了。</p><p>当时看到「断舍离」这几个字，就被深深地吸引了。</p><p>无它，只因自己当时事业与爱情双双滑铁卢，急着要跟过去的自己 say goodbye。</p><p>而从断舍离物品开始，慢慢地整理思绪，着实是一个不错的选择。</p><p>恰逢最近「沉迷」于读书无法自拔（实际上是在疯狂地买书，😓），发现了据说是整合了之前 3 本书、集大成之作的 <a href="https://u.jd.com/qzfqZqo">2019 新版《断舍离》</a>。</p><p>凑巧最近又刚好在搬家，家里乱到一塌糊涂。</p><p>遂想着重新拜读一下，来治疗一下自己的「懒癌」。</p><p>以便好好整理一下自己的「杂物」，「净化」一下自己的心灵……</p><span id="more"></span><h2 id="断舍离"><a href="#断舍离" class="headerlink" title="断舍离"></a>断舍离</h2><p><img src="/2021/05/15/danshari/book.jpg" alt="断舍离"></p><p>对于《断舍离》这本书，我个人认为它其实是一本关于生活态度的哲学书，而不是一本关于居家整理的工具书。</p><p>大多数人选择「断舍离」的初衷，应该跟我的情况相类似。</p><p>就是觉得家里的杂物太多了，但是又不知道该如何整理（清理），因此想要学习如何「断舍离」。</p><p>但我想说的是，居家整理只是手段，而不是目的，最终的根本还是要通过「断舍离」找到自己内心的平静与平和。</p><p>这一点与欧美所提倡的「Minimalism（极简主义）」非常相像，但二者之间还是有些不同。</p><p>「极简主义」有点追求极端的「简」，对于现阶段的我来说有点难。而相比之下的「断舍离」，则更加适合我。</p><p>说了这么久，到底什么是「断舍离」？书中的解释为：</p><ul><li>斩**「断」**物欲</li><li>**「舍」**弃废物</li><li>脱**「离」**执念</li></ul><p>私以为，「断舍离」，要断的从来不是物品，而是自己的执念。</p><p>全书中最喜欢的一段话：</p><blockquote><p><strong>「每个人都会在某一天失去自己最宝贵的东西。几乎没有人能在最关键的时刻做到释怀。只有在日常生活中不断地练习如何放手， 才能坦然地接受烦恼，甚至衰老、病患和死亡。」</strong></p></blockquote><h2 id="认清现状"><a href="#认清现状" class="headerlink" title="认清现状"></a>认清现状</h2><p>为什么我们家里的杂物越来越多？为什么我们无法过简单快乐的生活？</p><p>其实，还是因为我们没有认清现状，没有做出想要改变的决心。</p><p>当然，想要「断舍离」便是一个不错的开始。</p><p>但开始之前，我们还是要先问一下自己，为何我们无法做到「断舍离」？</p><h3 id="逃避现实型"><a href="#逃避现实型" class="headerlink" title="逃避现实型"></a>逃避现实型</h3><p>这类人，往往因为工作繁忙的原因，极少有时间待在家里。就算在家，也不愿意做家务，只想埋头工作。</p><p>比如我，就是经常这样给自己找借口的：工作忙啊，毕竟一年 365 天有 280 多天都在加班，哪有时间搞卫生啊？</p><p>但是，恰恰是因为不愿意搞卫生，家里才会乱七八糟，进而导致心情不好。</p><p>而心情不好，人就更不想待在家里，由此陷入了一个永无休止的恶性循环。</p><p>比如我最近就经常出门在外做氛围组，在咖啡厅等地方看书、写文章。</p><p>不过这类人一旦开始收拾，倒是可以收拾得干净利落，一点也不拖沓，对很多物品也没有太多的执念。</p><p>也就是说问题不是收拾本身，而是不愿意开始收拾。</p><p><img src="/2021/05/15/danshari/1.jpg" alt="逃避现实型"></p><h3 id="执着过往型"><a href="#执着过往型" class="headerlink" title="执着过往型"></a>执着过往型</h3><p>执着过往的人，往往会保留和珍藏很多现在用不着的旧物。</p><p>比如以前的相册、奖杯、奖状。以前和亲人、朋友、情人的信件、礼物等。</p><p>他们往往喜欢回忆过去，想当年如何如何，而不愿意面对现在。</p><p>用现在的说法就是没有「活在当下」，这种类型的人跟<strong>逃避现实型</strong>也有着一定的关系。</p><p>在某种程度上，我也算得上半个执着过往的人。</p><p>倒不是整天忆当年如何那种，而是以前的很多东西都留着，舍不得扔。</p><p>比如马拉松的纪念奖牌，各种荣誉证书，乱七八糟的信件和礼物等。</p><p><img src="/2021/05/15/danshari/2.jpg" alt="执着过往型"></p><h3 id="忧虑未来型"><a href="#忧虑未来型" class="headerlink" title="忧虑未来型"></a>忧虑未来型</h3><p>忧虑未来的人，说好听点是未雨绸缪，说难听点是杞人忧天。</p><p>我觉得国人多多少少会有点这方面的强迫症，毕竟我们从小到大受到的教育，都是要「考虑未来」，要「深谋远虑」。</p><p>因此，大多数人往往会囤积很多没有用的东西，比如卷纸，沐浴露，洗发水等。</p><p>甚至看到商场、超市有打折产品出售的时候，就会莫名其妙地入了一大堆眼前并不需要的东西。</p><p>理由就是，将来说不定哪一天就用上了。</p><p>然而讽刺的是，往往囤货还没用完，自己已经开始了下一轮囤货……</p><p>比较幸运的是，经过了好几年的「进化」，我现在对于不可预知的未来，并没有那么焦虑了。</p><p><img src="/2021/05/15/danshari/3.jpg" alt="忧虑未来型"></p><h3 id="物品现状"><a href="#物品现状" class="headerlink" title="物品现状"></a>物品现状</h3><p>除了从思想上认知自己的「现状」外，我们同样需要确认物品的现状。</p><p>要清楚地了解自己的物品，到底是处于「凌乱」、「过剩」还是「堆积」的状态。</p><p>**「凌乱」**指的是东西用过后，随手散落在各处，但是只要简单整理一下，就能快速恢复干净整洁的状态。</p><p>**「过剩」**则属于东西使用过后，想要整理放入收纳箱，却因物品数量过多，而发生无法收纳的情况。</p><p>**「堆积」**就已经是很严重的状况了，这是长期物品「过剩」状态的延续。东西往往是一层上面又一层，只有最上层的物品被使用，底层的物品则长期处于吃灰的状态。</p><p>对于我个人而言，现在应该是处于「凌乱」和「过剩」中间的状态，应该还有得救……😅</p><p>但很多常年不用的物品，却已经处于「堆积」状态了，这个有必要赶紧清理下。</p><p>如果同样已经是「堆积」状态的小伙伴，那就赶紧行动起来吧！</p><h2 id="选择取舍"><a href="#选择取舍" class="headerlink" title="选择取舍"></a>选择取舍</h2><p><strong>第一步，就是扔掉怎么看都是垃圾、废品的东西。</strong></p><p>这个很好理解，过期的食物，破烂的衣服，不能使用的工具等等。</p><p>只要你认为是垃圾或者是废品的，直接处理掉就是了，不要犹豫！</p><hr><p><strong>第二步，从「自我轴」和「时间轴」两个纬度来取舍</strong></p><p>这部分实际上是「断舍离」最核心的思想。</p><p>看起来好像非常的高大上，晦涩难懂，但解释起来其实非常的直白。</p><p>所谓**「自我轴」**，就是以自己的喜好作为唯一的判断标准。</p><p>在进行物品的取舍时，只需要考虑「这个东西我想不想用」，只要是不想用的，就果断处理掉。</p><p>而**「时间轴」**就是指「活在当下」，如果现在用不到的，就处理掉。</p><p>不要管以前这个东西如何如何，也不需要考虑以后用不用得到。</p><p><img src="/2021/05/15/danshari/4.jpg"></p><hr><p><strong>第三步，从自己觉得「必要」、「合适」、「愉快」的角度来审视物品</strong></p><p>在处理完前两步的物品后，我们还可以从下面三个角度，进一步处理家中的物品：</p><p><strong>不需要的东西</strong>：东西可以正常使用，很便利也没有损坏，但是丢了也不发愁，可有可无的东西。</p><p><strong>不合适的东西</strong>：以前对自己很重要，但是现在不合适的东西。</p><p><strong>不愉快的东西</strong>：东西本身没有任何问题，但是用起来就是不开心、不喜欢的东西。</p><p><img src="/2021/05/15/danshari/5.jpg"></p><h2 id="收纳整理"><a href="#收纳整理" class="headerlink" title="收纳整理"></a>收纳整理</h2><p>原书中列出了 5 种收纳指南，结合自己的情况，我觉得下面两个最重要。</p><p>一个是**「7·5·1 法」<strong>，一个是</strong>「1 out 1 in 法」**。</p><h3 id="7·5·1-法"><a href="#7·5·1-法" class="headerlink" title="7·5·1 法"></a>7·5·1 法</h3><p>所谓 7·5·1 法，就是「看不见的收纳空间」占 7 成，「看得见的收纳空间」占 5 成，「展示性的收纳空间」占 1 成。</p><p>这里所说的占多少成，指的是整理后的物品占所储藏空间的比例。</p><p>像衣柜、壁橱、抽屉等关上门就「看不见的收纳空间」，所放物品的比例，应保持在整体空间的 7 成左右。如果放置得太满，则又会变成永远都不愿意再整理的垃圾堆。</p><p>而像带玻璃门的冰箱、橱柜、洗碗机等关上门后，依然能「看得见的收纳空间」，所放物品的比例，应该保持在整体空间的 5 成。这样显得既整齐，又不会太拥挤。</p><p>最后，像玄关、餐边柜、书桌等「展示性的收纳空间」，则不应放置太多东西，占整体空间的 1 成就好。这些地方更适合摆放一些装饰性的东西，比如插花，艺术品什么的。</p><h3 id="1-out-1-in-法"><a href="#1-out-1-in-法" class="headerlink" title="1 out 1 in 法"></a>1 out 1 in 法</h3><p>懂英文的小伙伴，非常容易理解**「1 out 1 in」**这个概念，就是：<strong>先出后进，不出不进！</strong></p><p>以往我们买东西，总是喜欢<strong>先进后出</strong>，而不是<strong>先出后进</strong>。</p><p>理由大多是新的还没买，旧的就出了，不就没得用了吗？</p><p>这其实都是掩耳盗铃、自欺欺人，真实的情况往往是新的买了，旧的也没有出。</p><p>这个时候，我们更需要有意识地坚持**「先出后进」**的原则，逼着自己置死地而后生。</p><p>而且这样做还有一种好处，我们出的肯定是我们不喜欢的东西。</p><p>而我们进的，肯定是我们喜欢，或者功能性更好的东西。</p><p>长此以往，我们东西的数量并没有增加，但是东西的品质却在不断上升。</p><p>不知不觉中，我们生活的品味和品质都得到了极大的提升，听起来是不是很赞？😊</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>看《断舍离》使我明白，精神和肉体与居住的空间其实是紧密相连的。</p><p>如果长时间生活在一个杂乱无章的空间内，烦恼也一定会与日俱增。</p><p>我们所拥有的东西，是物质和精神的集合体，往往带有与我们自身相关的「故事」。</p><p>而这些东西，也是我们本身「具象化形态」和「抽象化情感」的一种体现。</p><p>清理居住空间，断舍离不需要的各种物品。从表面上看，是清理杂物。</p><p>其深层次的内涵，实际上是清理我们内心看不见的「多余的执念」。</p><p>舍得，舍得，有舍才有得，不舍哪来得？</p><p>也许「断舍离」便是获得「快乐」的一种方法，谁又能说不是呢？</p><p>毕竟搞完卫生的我，总是觉得说不出来的舒爽……😂</p><blockquote><p>「人类最大的罪是不快活。」<br>—— 德国诗人、哲学家：歌德</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Book </tag>
            
            <tag> Reading </tag>
            
            <tag> Sentiment </tag>
            
            <tag> Clean </tag>
            
            <tag> Danshari </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习费曼学习法</title>
      <link href="/2021/05/11/learning-from-the-feynman-technique/"/>
      <url>/2021/05/11/learning-from-the-feynman-technique/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/05/11/learning-from-the-feynman-technique/feynman_technique.png" alt="Feynman Technique"></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近看了一本亚马逊排名很火的工具书：<a href="https://u.jd.com/qTn0CQS">《费曼学习法》</a>。</p><p>个人认为这是一个很不错的学习方法，非常值得推荐。</p><p>然而让人非常不爽的是，明明两三千字就能说明白的东西，为什么硬生生地被水成了一本书？！</p><p>全书的精髓就是第二章**「何为费曼学习法」<strong>中的</strong>「费曼学习五部曲」**，其余部分基本上都是在重复和举例而已。</p><p>本着现学现卖的精神，今天就尝试一下用费曼学习法来学习费曼学习法吧！（好像很拗口的样子）</p><span id="more"></span><h2 id="费曼学习法"><a href="#费曼学习法" class="headerlink" title="费曼学习法"></a>费曼学习法</h2><p>书中介绍的费曼学习五部曲之我的理解：</p><ol><li><strong>目标</strong>：这个很简单，顾名思义，就是选择要学习的对象。</li><li><strong>理解</strong>：这个步骤就是学习我们想要学习的知识。</li><li><strong>输出</strong>：尽可能用小孩都能听得懂的语言，去把我们学到的知识传授给他人。</li><li><strong>回顾</strong>：深入学习和了解「传授」过程中遇到的问题，比如不懂的或者不清晰的。</li><li><strong>简化</strong>：在完成以上步骤的基础上，看看能不能继续简化，使知识变得更简单理解。</li></ol><p>原书中关于这块的介绍，其实并没有做到「简化」，而是这样的：</p><ul><li>第一步：目标 -&gt; 确立学习对象 -&gt; 产生专注力</li><li>第二步：理解 -&gt; 理解要学习的知识 -&gt; 系统化地存优去劣</li><li>第三步：输出 -&gt; 向别人输出学到的知识 -&gt; 以教代学</li><li>第四步：回顾 -&gt; 回顾和反思学到的知识 -&gt; 深度分析</li><li>第五步：简化 -&gt; 通过简化吸收形成自己的知识体系 -&gt; 内化知识</li></ul><p>什么叫「产生专注力」？理解知识，还要系统化，新的知识怎么可能一开始就有系统？什么叫深度分析，直接说理解不懂和不清楚的知识点不就完了？而且我看了英文的，人家也只是说尽可能的简化，也没说什么知识体系和内化啊？</p><p>虽然书中后面的部分有分别解释我上面提出的这些疑问，但是简简单单不好吗？非要搞这么多多余的东西，又是专注，又是深度，又是内化的，说好的让不懂的人也能快速理解呢？</p><p>反正，个人感觉就是简单问题复杂化，明明是一个简单高效学习的方法，愣是给说得高大上无比，晦涩难懂，本末倒置！</p><h2 id="Feynman-Technique"><a href="#Feynman-Technique" class="headerlink" title="Feynman Technique"></a>Feynman Technique</h2><p>为什么这个小节我用了英文标题？因为，这部分跟我看的书无关，而是自己另外找的资料学习的内容。</p><p>还记得我们文章开始的题图吗？</p><p>其实真正的「费曼学习法」，只要 4 个步骤就好了：</p><ol><li><strong>Choose a concept to learn</strong>，选择一个想要学习的内容，<strong>重点是要自己感兴趣的</strong>，这样才有可能学好。不要贪多嚼不烂，要跟现有的知识体系有关联，或者工作中用得上，不然学了也是白学。当然工具类的知识除外，比如高等数学，计算机编程知识等。这部分相当于原书中的**「理解」**。</li><li><strong>Teach it to yourself or someone else</strong>，尝试自己给自己上课，或者「传授」给别人。在教的过程中尽可能做到简单明了，最好是能让非专业的人士也能快速地理解相关的概念。这部分相当于原书中的**「输出」**。</li><li><strong>Return to the source material if you get stuck</strong>，如果传授的过程中卡壳了，比如说忘记了，没弄懂，或者似懂非懂，这个时候我们就需要重新学习和补充相关的知识了。这里知识的来源可以是教科书，笔记，甚至是网上找到的各种资料，关键是要让我们把知识缺失的部分补齐。这部分相当于原书中的**「回顾」**。</li><li><strong>Simplify your explanations and create analogies</strong>，这个过程实际上是让自己的解释更加的简单流畅，对于阐述的主题能让别人快速地理解。同时，还要让自己学会举一反三的能力，以便能解决类似的问题，而不是只能解决单一问题。这也就是原书中说的内化知识，「简化」的部分。</li></ol><p>回过头来看，原书中的「目标」，存在的意义到底是什么呢？是作者想要「有所建树」吗？还是想形成自己的理论体系？不得而知，无法理解……</p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>所谓尽信书不如无书，看书还是得带着脑子看，不然很容易人云亦云。</p><p>书所介绍的内容的好坏，与书本身没有必然的联系。</p><p>比如**「费曼学习法」<strong>是个好东西，但</strong>《费曼学习法》**未必是本好书。</p><p>回过头来看，介绍这个学习法可能大几百字就够用了。</p><p>结果我也跟原书作者一样，水了一篇文章。</p><p>不不不，人家可是水了一本书呢，水平还是远在我们之上的！</p><p>看了下，好像 1500 来字，连 2000 字都不到的样子，那是不是说这篇文章也不算太水？</p><p>偷笑😏</p>]]></content>
      
      
      <categories>
          
          <category> Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Book </tag>
            
            <tag> Reading </tag>
            
            <tag> Feynman </tag>
            
            <tag> Richard </tag>
            
            <tag> Technique </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中年大叔的感悟</title>
      <link href="/2021/04/30/middle-age-sentiments/"/>
      <url>/2021/04/30/middle-age-sentiments/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/04/30/middle-age-sentiments/lake.jpg" alt="Lake"></p><p>人到中年，什么最重要？是房子、车子、票子、还是马子？</p><p>不好意思，俗气了。再来一次：是物业、事业、家庭还是爱情？</p><p>我觉得都不是，中年人最重要的能力应该是情绪稳定，临危不惧，能从容地面对一切问题，且内心平静。</p><span id="more"></span><h2 id="离群者"><a href="#离群者" class="headerlink" title="离群者"></a>离群者</h2><p><img src="/2021/04/30/middle-age-sentiments/wolf.jpg" alt="Wolf"></p><p>我认为自己从小就是一个离群者，也就是大众口中那种不合群的小朋友。从小到大，基本上都是自己一个人在玩，这也是为什么后来很喜欢计算机，因为不需要跟人打交道。</p><p>虽然之前做了很长一段时间商务的工作，做的也算尚可，我始终认为自己是一个<a href="https://zh.wikipedia.org/zh-cn/%E7%A4%BE%E4%BA%A4%E6%81%90%E6%87%BC%E7%97%87">社恐（社交恐惧）</a>的人。</p><p>虽然我现在玩<strong>赛车</strong>、<strong>滑雪</strong>、<strong>潜水</strong>什么的，但是一个圈子都混不进去，或者说哪个圈子也融不进去。包括所谓的留学生交流圈活动，我也一次没有参加过。惭愧的说，MBA 毕业快 10 年了，春茗活动也从来没参加过。前几天传闻说以后岭南的 MBA 要取消了，看来以后想参加都没机会了。</p><p>不夸张的说，我觉得自己没多少朋友，真正的好友用手指都能数得过来。不像很多人朋友满天下，开口闭口都是我这个朋友那个朋友，这个高官，那个高管，还有哪个大富大贵商业巨头之类的。毕竟在我心中，朋友的级别还是很高的，不是随便认识一个人，吃顿饭就是朋友了。</p><p>然而大家却总误以为我朋友很多，妹纸也很多，我也不知道是怎么给大家造成这种错觉的。而且很多不熟的人，还会觉得我特别的拽，假扮清高。其实是因为我社恐的属性，实在不知道该如何破冰。当然，我也学会了跟自己妥协，不再为他人而活。随着年龄的增长，现在已经到了中年油腻大叔的年纪，交起友来就更是挑剔谨慎，各种怕麻烦，也难怪遭人嫌弃。</p><h2 id="不堪回首"><a href="#不堪回首" class="headerlink" title="不堪回首"></a>不堪回首</h2><p><img src="/2021/04/30/middle-age-sentiments/road.jpg" alt="Road"></p><p>年轻的时候总觉得人生的路还很漫长，怎么会想到未来的人生会如此跌宕起伏：每天早上 7 点出门上班，11 点多回到家，找车位有的时候还要 1 个小时！3～4 个小时在路上通勤，回到家还要做作业到凌晨 2～3 点。在美国出差的时候，永远是昼夜颠倒，每天工作 16 个小时，没有周末，没有节假日。各种被家人催婚、催生、催买房的无奈。创业的失败，前半生积蓄的化为乌有，众叛亲离到妻离子散，家破人亡。人到中年，才开始面对仿佛永远看不到尽头的失业……</p><p>我这起起落落落落落落落的前半生，真的可以拍一部狗血连续剧了。当你经历过以上的这一切，回归平静，重新审视自己的人生，也许只有认认真真地为自己活一次，才是对自己最负责任的做法了。我不奢求别人的施舍，也不想给别人添乱。当然你也不要对我的人生指指点点，毕竟你对我一无所知。试问我都已经经历过那么多，还有什么好害怕的呢？</p><p>最近很多小伙伴关心我，觉得我活得很洒脱，不少人甚至还以为我财务自由了。天真了，肤浅了是不是？熟悉我的朋友都知道，财富自由从来不是我所追求的，时间自由才是。而，这二者我都尚未拥有。我还在努力寻找内心平静的路上，那种既不是功成名就后的返璞归真，也不是一事无成的百般辩解，而是发自内心地接受并享受现在自己所拥有的一切。</p><p>人到中年，早已明白这世界上的热闹大多与我无关，大可不必太把自己当回事儿。从我最近搬家的事情来看，我更加确信，在绝大多数人的世界里我都是无足轻重的，甚至是朋友的眼中。但这不重要，因为我并没有什么怨恨的感觉。搬家也只不过是人生中，另外普普通通的几天而已。别人帮你是情分，不帮你也是正常，谁也没有对谁负责的义务。</p><p>Inner Peace，说起来容易，做起来难。人到中年，最大的收获是波澜不惊，从容面对，无论任何事情。</p><h2 id="人生"><a href="#人生" class="headerlink" title="人生"></a>人生</h2><p><img src="/2021/04/30/middle-age-sentiments/success.jpg" alt="Success"></p><ol><li>持续做个好人，而不是持续讨好别人。</li><li>身体健康不能偷懒，运动、健身不能停，就算偷工减料的做了，也比不做要好得多。</li><li>不要被各种 App 占据了自己宝贵的碎片时间。</li><li>不要放弃学习和进步。</li><li>不要盲目从众，要有自己的节奏，否则很容易迷失自我。</li><li>不要跟别人比，只需要跟自己比就行了。</li><li>不必勉强自己做不喜欢的事情，人生苦短，做自己喜欢的事情不好吗？</li><li>不知道自己想要什么，起码要知道自己不想要什么。</li><li>作为一个社恐分子，没必要浪费时间和精力去做无效的社交。</li><li>学会拒绝，没有必要人云亦云，那是别人的生活不是你的。</li><li>学会做更多延迟满足的事情，而不是做一个<a href="https://zh.wikipedia.org/zh/%E5%A5%B6%E5%A4%B4%E4%B9%90">奶头乐（Tittytainment）</a>，什么都要马上 high 的人。</li><li>学会对抗懒惰，从立 flag 开始，不然也不会有这篇文章了。</li><li>学会与孤独相处，是一个成年人最基本的必修课。</li><li>美貌是容易获得的，而良好的教养是难觅的，所以要不断提高自身修养。</li><li>生活的品质不是你身上的奢饰品，而是你内心的富足程度。</li><li>人赚钱是为了更好的活着，而活着不只是为了赚钱！</li><li>学会花钱跟学会赚钱一样重要，需要的东西一定要买，不需要的坚决不买。</li><li>人到中年还不知道自己的兴趣爱好，是一种莫大的悲哀。</li><li>做任何事情都要心存敬畏，但同时要敢于尝试。</li><li>一个人的生活可以懒散，但是不能放纵。用学习新的东西来代替自怨自哀，是一种更好的休闲放松。</li><li>人生得意须尽欢，没落之时勿沉沦。</li><li>在自己力所能及的范围内，用适合自己最好的产品，不要花钱买垃圾，时间成本消耗不起，还会把好心情搭进去，多少钱都换不回来。</li></ol><h2 id="朋友"><a href="#朋友" class="headerlink" title="朋友"></a>朋友</h2><p><img src="/2021/04/30/middle-age-sentiments/friends.jpg" alt="Friends"></p><ol start="23"><li>圈子这个东西，没有必要混。自己能力到了，你就是圈子的核心。</li><li>你认识什么人不重要，什么人认识你才比较重要。</li><li>内心强大，活的通透，就不会装逼。</li><li>不要把自己当回事儿，但是不能没有傲骨！</li><li>不要轻易相信别人说的，但是要观察他们所做的，毕竟身体很诚实。</li><li>不要为别人的过错来惩罚自己，你的情绪是你的事情，请不要说我冷漠。</li><li>要听别人的意见，但是要自己做决定。自己做错了，失败了，不要埋怨别人，没有人逼着你做决定。成年人了，自己要对自己负责，别人叫你吃屎你怎么不去呢？</li><li>不要把「朋友」的门槛设置的太低，友情需要对等的兴趣和见识。当所有人都是「朋友」的时候，其实你没有朋友。</li><li>有些事情不需要解释太多，懂的都懂，不懂的说了也无法理解。</li></ol><h2 id="事业"><a href="#事业" class="headerlink" title="事业"></a>事业</h2><p><img src="/2021/04/30/middle-age-sentiments/career.jpg" alt="Career"></p><ol start="32"><li>拿人钱财替人消灾，工作必须要做到出色，不为别人也为自己。</li><li>不要纠结公司内的抬头和收入，想知道自己几斤几两去用工市场走一圈就清楚了。</li><li>越是没本事越是觉得自己无所不能，越是有料越是觉得自己无法胜任。</li><li>别人的成功是别人的，跟自己没什么关系，大可不必标榜自己认识某某名人，有这时间还不如努力让自己成功。</li><li>办公室政治要懂，不是为了坑害别人，而是为了把工作更优质高效地做好。</li><li>不要等老板来催，把工作提前做好。</li><li>老板永远是对的，因为做决策的是他，背锅的也是他。如果你觉得老板傻逼，请不要吐槽，自己用脚投票就好了。</li><li>绝大多数人的收入和付出是成比例的，<strong>除了创业的人</strong>。所以挣钱多的别喊累，上班摸鱼的别哭穷。</li><li>职场上，但凡不随波逐流，稍微努力一点，你就已经秒杀了 80% 的职场人了。</li><li>美貌只能让你破冰，但并不能真正给你带来能力上的提升和资源上的增加，硬实力永远是你职业发展的核心。</li><li>岁月静好是留给有能力的人的，没有能力的人只有「静」和消失不见的「岁月」，没有「好」。</li><li>很多人工作了 10 年，只是把第 1 年学到的东西重复了 9 年而已，那就不要抱怨别人晋升比你快了。</li><li>能清楚的知道自己的优势和劣势，知道自己能做什么，不能做什么。不狂妄自大，也不妄自菲薄。</li><li>他人怎么评价自己，根本无需关心，很多时候别人看你不爽就是不爽，不需要任何理由。</li><li>不要揣测别人的想法，能沟通就沟通，不能沟通就算。你再怎么揣测也只是猜测，而猜测大概率是错的。</li></ol><h2 id="爱情"><a href="#爱情" class="headerlink" title="爱情"></a>爱情</h2><p><img src="/2021/04/30/middle-age-sentiments/love.jpg" alt="Love"></p><ol start="47"><li>你的气质中藏着你走过的路，看过的书，交往过的人，这些是装不出来的。</li><li>如果被人伤害了，转身离场，避免二次伤害。</li><li>情侣需要的是 Soul Mate，而不是舔狗，男女都适用。</li><li>秀恩爱死的早，这不是诅咒，而是事实，因为真正的恩爱不需要「演」给别人看。</li><li>年纪大了还能撩骚，那是实力的体现！没颜值、没身材、没脑子、没财富、没体力、没精力，你骚一个给我看看？</li><li>要想爱别人，先要学会爱自己。</li><li>情侣还是要从朋友做起，不要急功近利，来的容易去得快。除非，你们是纯约的，当我没说。当然，约也请好好约，好聚好散，不要给对方造成不必要的麻烦和负担。</li><li>前任们都活得比你好，不用你瞎操心，有这个时间还不如关心下现任和下一位。</li><li>男女交往请从平等出发，没有谁是你爹妈，有天生宠溺你的义务。</li><li>不要死缠烂打做舔狗，真正的爱情来到的时候，不需要死缠烂打。</li><li>两个人的游戏，一个人离场后，连 NPC 都没了，你还在这里干嘛呢？</li><li>精力有限，说话不要拐弯抹角，有话直说，但要注意态度，现实又不是琼瑶剧。</li><li>难得糊涂，有些事不用打破沙锅问到底，自己知道就行了，留一步他日好相见。</li><li>不要怕受伤而不开始一段感情，也不要怕受伤而不结束一段感情。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Career </tag>
            
            <tag> Friend </tag>
            
            <tag> Love </tag>
            
            <tag> Midlife </tag>
            
            <tag> Sentiment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>找工作就像谈恋爱</title>
      <link href="/2021/04/29/looking-for-a-new-job/"/>
      <url>/2021/04/29/looking-for-a-new-job/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/04/29/looking-for-a-new-job/job_opportunity.jpg" alt="Job Opportunity"></p><p>找工作就像谈恋爱，找个你爱的，还是找个爱你的？</p><p>这个问题，真的是太难回答了。</p><p>对于现在的我来说，可能还是想找一个自己爱的吧。</p><p>不过也同样跟恋爱一样，我爱的人不爱我，爱我的人我不爱，无解。</p><p>因为最近在看工作机会，所以有点感触……</p><span id="more"></span><h2 id="只勾搭"><a href="#只勾搭" class="headerlink" title="只勾搭"></a>只勾搭</h2><p>最近找工作过程中，遇到最多的情况，是只勾搭不落地。</p><p>当然这中间也包括我自己觉得无法胜任，而没有继续沟通的。</p><p>很多时候，感觉大家并不是真的求贤若渴，而是为了「勾搭」而「勾搭」。</p><p>如果这样的话，何必要浪费大家的时间和青春去做无谓的社交呢？</p><p>而且我觉得买卖不成仁义在，做人何必要这么功利？</p><p>勾搭之前，各种积极热情，勾搭之后，连个回复也没有，更不要说下文了。</p><p>出于礼貌，给个回复也不算过分的要求吧？毕竟恋人分手还有 Goodbye Kiss 呢。</p><p>这种情况像极了各大相亲网站的男男女女，大家都只顾自说自话。</p><p>永远都是我要什么什么样的，根本不关心对方在说什么。</p><p>这个什么都讲求「速度」的年代，工作也变成了「速食面」的样子。</p><h2 id="猎头无用论"><a href="#猎头无用论" class="headerlink" title="猎头无用论"></a>猎头无用论</h2><p>说实在的，我工作 10 多年，就没有被猎头成功推荐过。</p><p>心里着实「羡慕」那些被「猎头」的人，毕竟人家那才是高级人才。</p><p>我们这种屌丝只有仰望的份儿……（酸）</p><p>但是经过这段时间，我愈发地觉得猎头的不靠谱。</p><p>基本上的套路就是上来要简历，然后就没有然后了……</p><p>要么就是推荐一大堆完全专业不对口的工作，浪费三方的时间。</p><p>再者就是语焉不详，有个什么多牛多牛的公司，但什么公司我不告诉你。</p><p>公司不知道就算了，有的甚至连岗位描述都没有，这又是什么鬼？</p><p>感觉到了我这把大叔的年纪，朋友和同事的推荐比猎头靠谱多了。</p><p>本应该是专业提供服务的猎头，却如此的不专业。</p><p>是我命不好呢，能力不行呢，还是现在猎头水平就这样了呢？</p><p>我不清楚……🤷‍♂️</p><h2 id="超人拧螺丝"><a href="#超人拧螺丝" class="headerlink" title="超人拧螺丝"></a>超人拧螺丝</h2><p>看看各个公司招聘的职位描述，我真的觉得自己是井底之蛙。</p><p>随随便便都是各种大神一样的要求，吓得我连简历都不敢投。</p><p>咱都不敢说妄自菲薄，只敢说相形见拙了。</p><p>但是通过各种渠道了解到，在公司里面工作的，其实都是在拧螺丝而已。</p><p>再有就是，很多用工单位只看背景，学历和经历，不看能力。</p><p>我觉得这个无可厚非，毕竟你的学历和经验是你以前努力的结果，但是一定代表未来吗？</p><p>在大厂呆过的我，看过了太多坐吃等死，浑水摸鱼，但办公室政治玩的风生水起的人。</p><p>与其苦苦寻觅所谓的「超人」，何不踏踏实实按需招聘？</p><p>有自知之明的人，看到这样的 JD（Job Description）直接劝退，但是并不会劝退学历造假和吹牛拍马的人。</p><h2 id="没人用-vs-不用人"><a href="#没人用-vs-不用人" class="headerlink" title="没人用 vs 不用人"></a>没人用 vs 不用人</h2><p>找工作的同时，也跟不少朋友聊过天，公司的负责人，1，2 号位的永远觉得招不到人。</p><p>而求职者又永远觉得找不到工作，这就很有趣了。</p><p>最后我才发现，招聘的时候，招聘方都想要找复合型人才。</p><p>而其实，只是自己在骗自己，真正有这样的人才的时候，他们又会觉得想法多，不好管理，成本高。</p><p>乔布斯早就说过了，优秀的人不是靠管理的，而是被赋予使命感，一起奋斗事业的。</p><p>还有一个方面就是高端人才并不少，而是你钱没给到位。</p><p>我不是说一定要花天价请「大神」，而是结合公司的实际业务，在合理的范围内，想清楚自己愿意为高端人才付出多少的成本。</p><p>同样也要确认，是不是能把大牛的能力都用上，不然人走楼空也是迟早的事儿。</p><p>不要说别人贪财，只认钱。如果别人的市场价值 200 万，为什么要 20 万跟你干？</p><p>招聘者也同样问问自己的核心价值在哪里？</p><p>不要老想着员工能为你做什么，想想将来你能为员工带来什么？</p><p>你跟我讲感情，我跟你讲感情。你只跟我讲钱，却反过来让我跟你谈感情？</p><h2 id="用工歧视"><a href="#用工歧视" class="headerlink" title="用工歧视"></a>用工歧视</h2><p>以前，少不经事，对于用工歧视没什么感觉。现在倒是有点体会了……</p><p>随便打开个什么招聘软件，随便看看岗位描述。</p><p>到处可见 35 岁以下，33 岁以下，30 岁以下。</p><p>我见过最有趣的是要求 35 岁以下，硕士以上学历，大型公司工作 10 年以上。</p><p>我掐指一算，正常人 23 岁本科毕业，3 年研究生，26 岁毕业。</p><p>工作 10 年，36 岁，呵呵……妙啊……</p><p>这里我们就更不要说大公司出来的人，自带的那种大公司病了。</p><p>我就好奇，就算他们找到了这样的「天之骄子」，假如一年后贵司的 CTO 年满 36 岁了，是不是就无法胜任 CTO 这一职位了呢？</p><p>而且工作能力跟年龄有什么关系？</p><p>我们反过来看，30 岁可以做 CTO，40 岁也可以做 CTO。</p><p>我只能说能写出这样 JD 的公司，根本不需要考虑，直接拉黑。</p><p>就算你真的要歧视，你大可不必写出来啊。</p><p>自己知道，默默地找个其他不合适的理由拒绝掉就好了啊。</p><p>这种行为真的是太傻了……</p><p>可见公司的领导层或者人力资源的水平和格局也就那样了。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>还是自己好好做好自己的本职工作，不断地给自己充电才是王道。</p><p>这里要感谢很多的好友和同事，一直都很关心我工作的问题。</p><p>要特别感谢 <strong>Connor</strong>、<strong>Hebe</strong>、<strong>Ivory</strong>、<strong>局长</strong>、<strong>Kelly</strong>、<strong>叁国</strong>等同学（排名不分先后）。</p><p>谢谢你们的理解和信任，以及对我能力的肯定和认可，铭记于心。</p><p>对于事业，有的时候你需要的只是一个机会，和一点点运气。</p><p>毕竟公司的成功，跟个人没有必然的联系。</p><p>很多人的成功，只是刚好赶上了公司的成功，其实换了是谁都一样。</p><p>当然，我也一直告诫自己不用酸，因为运气也是成功的必备能力之一。</p><p>自己继续修炼内功就好了……</p><p>结论就是，工作易找，事业难觅，随缘……</p>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Career </tag>
            
            <tag> Job </tag>
            
            <tag> Opportunity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个不正经的车评</title>
      <link href="/2021/03/30/a-not-serious-car-review/"/>
      <url>/2021/03/30/a-not-serious-car-review/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/03/30/a-not-serious-car-review/toyota_86.jpg" alt="Toyota 86"></p><p>最近好朋友想要换车，于是乎花了不少时间，陪朋友看了不少车，是以为记。</p><p>首先我先列一下朋友买车的要求，因为是日常买菜车，所以要求也不多：</p><ul><li>有品牌</li><li>颜值高</li><li>动力好</li><li>操控好</li><li>双门轿跑</li><li>价格便宜（注意是便宜，不是性价比高！）</li></ul><p>看了以上的要求，是不是发现毫无难度？</p><p>我们先说结论，朋友最后买了 <code>丰田86</code>。</p><p>好了，故事讲完了，八卦的小伙伴们可以退下了……</p><span id="more"></span><h2 id="选车"><a href="#选车" class="headerlink" title="选车"></a>选车</h2><p>因为没有固定的品牌和车型，所以我们把中国市场上可能有的双门轿跑都过了一遍。</p><p>最后筛选剩下了以下几个车型：</p><ul><li>BMW 4 Series</li><li>Ford Mustang</li><li>Audi A5 Coupe</li><li>Subaru BRZ &#x2F; Toyota 86</li><li>Mazda MX-5</li><li>BMW 2 Series Convertible</li><li>BMW 3 Series Coupe</li><li>Porsche 718</li></ul><p>马自达 MX-5 因为离谱的高价，外加停售，可谓一车难求。</p><p>明明是北美市场便宜的买菜小车，硬是卖出了豪华品牌的价格，直接 PASS。</p><p>宝马 2 系敞篷，我觉得是性价比不错，且好玩的一款车，但是车主觉得样子太傻（平庸），被 PASS 掉了。</p><p>宝马 3 系，我觉得操控，整体舒适性，各方面都很均衡的一辆车，同样是被车主嫌弃长得大众脸，也被 PASS 掉了。</p><p>保时捷 718 是我推荐的，我说很适合车主的气质。车主本人表示，对不起，我不配。只因二手车的售价都已经去到了 60 万+，看看就好了。</p><p>所以，最后就只剩下了 4 款车型：4 系，野马，A5，BRZ&#x2F;86。</p><p>下面就说说我试驾的体验。</p><h2 id="BMW-新-4-系"><a href="#BMW-新-4-系" class="headerlink" title="BMW 新 4 系"></a>BMW 新 4 系</h2><p><img src="/2021/03/30/a-not-serious-car-review/bmw_4.jpg" alt="BMW 4"></p><p>宝马 4 系 Coupe 是在 4S 店试驾的，只有一台 425i 的高配车型供试驾。</p><p>对于宝马新 4 系的外观来说，我只能说尚可，毕竟这东西见仁见智，青菜萝卜各有所爱。</p><p>车主本人却表示，非常喜欢这个竖着的大鼻孔（猪鼻子？），本人表示无法理解。</p><p>虽然是高配的 425i，但是在 2.0T 引擎的加持下，输出马力却只有 180 匹！</p><p>有没有搞错？这是什么概念？自然吸气的飞度 1.5 的动力输出是 131 匹，自然吸气的 BRZ 2.0 是 200 匹。</p><p>你这带涡轮的高功率版才 180 匹？你是跟我搞笑呢吗？！</p><p>让我深深地怀疑，这是一辆主打老年代步车的产品，而不是主打运动的。</p><p>正式上车试驾，嗯，好吧，果然期望越大失望越大……</p><p>操控没有想象中好，甚至感觉还不如国产的 3 系，整体就是一种开船的感觉。</p><p>侧向支撑就更没什么好说的了，各种 hold 不住的感觉，对不起宝马操控这一卖点。</p><p>然后变速箱的逻辑也是非常的愚笨，油门响应延时惊为天人，在 Sport 模式下有所改善，但依旧表现平平。</p><p>试驾后的体验就是，毫无运动性可言，舒适型甚至不及日系 B 级轿车。</p><p>再一问价格，非常的不美丽不单止，还要加价 5 万。</p><p>价格贵，加价也就算了，问什么时候可以提车，答复说预定已经到了今年年底和明年年中！</p><p>我只想说：中国，果然是一个人傻钱多，只认面子不认车的美好国度。只买贵的，不买对的！</p><h2 id="福特野马"><a href="#福特野马" class="headerlink" title="福特野马"></a>福特野马</h2><p><img src="/2021/03/30/a-not-serious-car-review/ford_mustang.jpg" alt="Ford Mustang"></p><p>福特野马这车呢，说好也一般，说不好，这价位也还行。</p><p>这款车主要都在看二手车，因为感觉也不是很保值，没必要买新车。</p><p>又不是不能开，何必要买新车，对不对？！</p><p>然而，前前后后看了 3-4 辆野马，基本上都是改到乱七八糟，发廊范那种。</p><p>贴膜改色就不说了，非要改个扰民的排气，然后贴上假的仿碳纤维纸。</p><p>把车里面的座椅弄的红不拉几的，毫无审美可言。</p><p>看车的时候还刚好碰到隔壁改装店老板，不懂装懂，说什么这车买回来都这么改云云……</p><p>行，恶心就算了，试试车吧……</p><h3 id="新款-10-AT"><a href="#新款-10-AT" class="headerlink" title="新款 10 AT"></a>新款 10 AT</h3><p>看了下车，有新款和老款两种，主要的区别是变速箱不一样。</p><p>新款据说使用了自己家研发的 10AT 变速箱，老款是 6AT。</p><p>按照一般的认知，大家都会觉得 10AT 肯定更加平顺，然后更加省油，对吧？</p><p>不好意思，天真了啊～～～</p><p>这变速箱顿挫的啊！我都怀疑人生了……</p><p>有种农田地里开拖拉机的感觉！！！</p><p>涡轮没有介入之前，感觉肉的要死，涡轮一介入，稀里哗啦地往前蹿。</p><p>低速行驶的时候那叫一个难受。</p><p>不过底盘调教倒是比我想象中好，当然也不可能比 4 系更垃圾了。</p><h3 id="老款-6-AT"><a href="#老款-6-AT" class="headerlink" title="老款 6 AT"></a>老款 6 AT</h3><p>试了新款不行，就试试老款呗。</p><p>嘿！这 6AT 怎么感觉开起来比 10AT 顺畅这么多？！</p><p>一问，说是 6AT 用的是 ZF 的变速箱，10AT 是福特自己弄的不知道啥玩意。</p><p>然后为了改款而改款，没有东西改了，就动了变速箱。</p><p>呵呵……你这做法跟大众上 DSG（大傻瓜）有异曲同工之妙啊！</p><p>虽然 6AT 的整体顿挫感比 10AT 好了很多，但是油门的响应依然延迟很大。</p><p>变速箱逻辑也并不很聪明，反正总体体验也不是特别好。</p><p>外加看的每一台野马，都不同程度地改的各种发廊范，实在无力吐槽。</p><h2 id="奥迪-A5"><a href="#奥迪-A5" class="headerlink" title="奥迪 A5"></a>奥迪 A5</h2><p><img src="/2021/03/30/a-not-serious-car-review/audi_a5_coupe.jpg" alt="Audi A5 Coupe"></p><p>A5 我个人觉得颜值也就中规中矩吧，但是车主觉得 OK。</p><p>主要是我觉得这个车，4 门跟 2 门根本看不出来区别。</p><p>而且大家都知道的，奥迪（大众）不烧机油，那是不可能的。</p><p>有人说谁谁谁不烧机油，你确定你有人家那么好彩？</p><p>除非你有每 1000km 加 1L 机油的觉悟，否则我是不建议买奥迪的。</p><p>除了 EA888 和 EA211 烧机油的问题，还有 DSG 变速箱故障的问题，感兴趣的小伙伴自己搜一下吧。</p><h3 id="四驱版"><a href="#四驱版" class="headerlink" title="四驱版"></a>四驱版</h3><p>A5 主要试驾了 2 个版本，这第一个版本是 4S 店提供的四驱顶配版。</p><p>试驾完了以后的感觉就一个字：爽！</p><p>试驾之前我是毫无期待的，但是结果让人振奋。</p><p>首先感觉动力充足，想要就有，而且油门出奇的线性，就算在 Comfort 模式下，几乎也感觉不到涡轮介入带来的顿挫感。</p><p>换做 Sport 模式，引擎保持在高转速，响应非常的迅速。</p><p>在高速过弯的时候，侧向支撑非常的好，但又没有丢失太多的舒适性。</p><p>路感反馈很清晰，但又不是赛车那种硬邦邦的感觉。</p><p>感觉各方面都恰到好处，不多不少，动力、变速箱、底盘、配置、运动、舒适找到了一个很好的平衡。</p><p>感觉就是每一项都优秀，又没有哪一项特别突出。</p><p>除了价格之外，是我认为非常值得推荐的一款车。</p><h3 id="前驱版"><a href="#前驱版" class="headerlink" title="前驱版"></a>前驱版</h3><p>本来以为 A5 就不错了，考虑价格问题，车主又去看了低配的前驱版本。</p><p>呵呵，问题出现了……车主觉得动力很好，但是我觉得动力不足。</p><p>第一个感觉就是加速变肉了，起步费劲。</p><p>再者就是感觉变速箱的响应没有那么灵敏了，也可能是因为动力不足，所以得深踩油门。</p><p>后面一查资料，果不其然，两者差了 50 匹马力。</p><p>果断劝退，毕竟奥迪引以为傲的 Quattro 还是爽的，前驱版本确实没啥灵魂。</p><p>无论动力还是操控，都不能跟四驱版本的 A5 比。</p><p>这也告诉我们一分钱一分货，去 4S 试驾，最好试驾自己想买的车型。</p><p>否则很容易追悔莫及……</p><h2 id="BRZ-86"><a href="#BRZ-86" class="headerlink" title="BRZ &#x2F; 86"></a>BRZ &#x2F; 86</h2><p>看车的过程中，BRZ &#x2F; 86 也一直在看，前前后后看了应该能有 5 - 6 台，试驾的也有 3 台了。</p><p>我只能说，这车因为国 6 限制，真成了理财产品了，但凡品质好一点的车，价格合理的，都是秒没！</p><p>2017 款 BRZ，官方指导价 27.38 万，二手卖 29 万，还没来得及看车，就被秒了……</p><p>看的车都是改过的，一辆素车都没有！没有看真车那些，有的改得更恶心，直接都不想看。</p><p>说实在的，全都是瞎改，原厂的各种平衡全都给打乱了。</p><p>更搞笑的是什么，看车商发出来的信息，全都是美女一手车主。</p><p>Excuse me？！我问了一圈身边的各种开 BRZ &#x2F; 86 的朋友，地球人表示就没有见过一个活的开这车的女车主……</p><p>后来我朋友说，二手车市场美女一手车就跟拼多多不卖假货一样，是个梗。</p><p>最后说说试驾的 3 台车吧：</p><ul><li>2014 款 86，低配，保养差，里程数多，开价 24 万，呵呵……</li><li>2015 款 BRZ，过度改装，上山寨 18 寸轮毂，改避震，改倾角，改了三表，内饰乱贴红色和假碳纤维贴纸，杂牌刹车喷成红色，无语……</li><li>2019 款 86，改了个带阀门的排气，除了嗓门大外，一无是处还影响低扭。弄了个恶心吧啦的鸭嘴尾翼，原厂好好的金属标，换成了黑色淘宝山寨 20 块的垃圾货，唉……</li></ul><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>最后，选了 2019 款的丰田 86，也只能矮子里面拔大个了……实在没有太多选择……</p><p>随着电车时代的到来，好玩的车是越来越少了，真的是买一台少一台。</p><p>所谓千金难买心头好，该出手时就出手！</p><p>早买早享受，后买也不一定能享折扣……</p><p>在看车的这段时间，走哪儿都有人问我，卖不卖车？</p><p>你猜我的答案是什么？😊</p>]]></content>
      
      
      <categories>
          
          <category> Car </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Car </tag>
            
            <tag> BRZ </tag>
            
            <tag> Subaru </tag>
            
            <tag> 86 </tag>
            
            <tag> GT86 </tag>
            
            <tag> Toyota </tag>
            
            <tag> A5 </tag>
            
            <tag> Audi </tag>
            
            <tag> BMW </tag>
            
            <tag> BMW 4 </tag>
            
            <tag> Ford </tag>
            
            <tag> Mustang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调整后的囚徒健身</title>
      <link href="/2021/03/13/modified-convict-conditioning/"/>
      <url>/2021/03/13/modified-convict-conditioning/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/03/13/modified-convict-conditioning/convict_conditioning_routine.jpg" alt="Convict Conditioning"></p><p>俗话说的好啊，七年之痒……</p><p>7 年前，写了篇关于<a href="../../../../2014/09/04/convict-conditioning-exercises/">《囚徒健身》的博客</a>，想着自己能好好健身，然后一转眼，7 年就过去了。</p><p>今年又双叒叕把健身这个事情给提到议程上了，于是做了些功课，准备再次上路……</p><span id="more"></span><h2 id="为什么要调整？"><a href="#为什么要调整？" class="headerlink" title="为什么要调整？"></a>为什么要调整？</h2><p><a href="https://u.jd.com/usk1Acr">囚徒健身（特指系列中的第一本）</a>原有的动作中，有的难度比较大，有的又比较低。</p><p>其中部分动作几乎是不可能完成的任务，甚至还会造成一定程度的运动损伤。</p><p>在参考了 B 站<a href="https://space.bilibili.com/69002004"><code>本X</code></a>关于囚徒健身的<a href="https://www.bilibili.com/video/BV1z541157M2?t=559">视频</a>后，自己做了一些简单地梳理。</p><h2 id="怎么调整？"><a href="#怎么调整？" class="headerlink" title="怎么调整？"></a>怎么调整？</h2><h3 id="俯卧撑"><a href="#俯卧撑" class="headerlink" title="俯卧撑"></a>俯卧撑</h3><p>囚徒中的俯卧撑第一式，是撑墙俯卧撑。对于正常人来说，这个难度太低了，可以直接去掉。但是对于伤后恢复中的人来说，也是一个不错的恢复性动作。</p><p>第二个，就是去掉跪姿（膝盖）俯卧撑。因为在做这个动作的时候，改变了整个身体的姿态。身体并不是从头到脚，而是变成了从头到腰，这样破坏了整个系列健身的连续性。我是通过不断调整高度来增加难度，并取消了跪姿俯卧撑。</p><p>单臂俯卧撑，看了很多视频感觉很多做的都不标准，我觉得这个可以慢慢练。同时可能还得参考一些其它的健身书籍，绝对不能死撑。</p><p>除此以外的其它动作，照着书本练习就好了。</p><h3 id="深蹲"><a href="#深蹲" class="headerlink" title="深蹲"></a>深蹲</h3><p>深蹲中的第一式 Shoulder Stand Squat 其实是瑜伽中的中高阶动作，做的不好很容易扭伤脖子，是非常不建议的。对于中国人来说，完全可以直接去掉，从第二式开始练就好了。</p><p>当年自己傻傻地跟着练过，感觉非常难，还好没有受伤。不过做好了，脖颈儿倒是很舒服，😂</p><p>当能做到标准深蹲之后，适当的在健身房增加杠铃练习配合，效果会更好。</p><blockquote><p>PS: 不要盲目迷信，不用器械也能练成施瓦辛格那样。健身是为了强身健体，书中的一些器械无用论看看就好。</p></blockquote><h3 id="引体向上"><a href="#引体向上" class="headerlink" title="引体向上"></a>引体向上</h3><p>这个没什么问题，照着练就行了。</p><p>后期快进阶到单臂引体向上的时候，需要多找些其它的书籍和资料配合，才能有效地提高训练效果。</p><h3 id="举腿"><a href="#举腿" class="headerlink" title="举腿"></a>举腿</h3><p>这个完全没问题，照着书本练就行了。</p><p>而且腹肌这东西很神奇，可以天天练……</p><p>最后一式有个说法，如果身体完全悬空的话，后背没有了支撑力，动作可能会走样，进而使得健身效果大打折扣。</p><p>所以练最后一式的时候，背后靠墙，效果可能会更好。</p><h3 id="桥（下腰）"><a href="#桥（下腰）" class="headerlink" title="桥（下腰）"></a>桥（下腰）</h3><p>这个的话，在健身界有一些不同意见。有的人认为很好，可以锻炼柔韧性。但也有人觉得这违反了人类正常的生物属性，因为人的脊椎本身就应该是微微前曲的。</p><p>这里我不是很确定，所以就多练短桥、直桥缓解肌肉压力，并把这个作为其它训练的补充。</p><p>另外如果真的要练腰的话，可能得去健身房找专业人士再请教请教。</p><h3 id="倒立撑"><a href="#倒立撑" class="headerlink" title="倒立撑"></a>倒立撑</h3><p>书里面的单臂倒立撑，好像已经是一个神技了，感觉没有人做到过？</p><p>就算是书本里面的照片，据说也是摆拍。</p><p>所以，我这里给自己定的目标是能做到自由倒立撑就差不多了。</p><p>完全没必要纠结单臂倒立撑。</p><h2 id="如何晋级"><a href="#如何晋级" class="headerlink" title="如何晋级"></a>如何晋级</h2><p>囚徒健身中，一直强调的是 6 艺 10 式，每一式里面又分 3 个小级。</p><p>比如说某个动作的晋级分别是：1 x 10, 2 x 25, 3 x 50</p><p>也就是做 1 组，每组 10 个；做 2 组，每组 25 个；做 3 组，每组 50 个。</p><p>怎么做呢？举个例子：</p><p>首先，先努力完成入门难度，也就是 1 组 10 个。</p><p>然后，努力做到 1 组 25 个，也就是中级要求的数量 25。</p><p>在上面的基础上，增加 1 组 10 个（初级难度的数量），也就是 1 x 25 + 1 x 10</p><p>然后慢慢做到 2 x 25，也就是 2 组 25 个。</p><p>接着再增加一组 10 个（初级难度的数量），也就是 2 x 25 + 1 x 10</p><p>最后慢慢做到 3 x 50，进入下一式。</p><p>这个过程中很难一下就达标，反正我是做到力竭为止，反正慢慢坚持，最后总能升级的。</p><h2 id="如何做热身"><a href="#如何做热身" class="headerlink" title="如何做热身"></a>如何做热身</h2><p>比如说我刚开始囚徒健身，还在第一式，那么我会做 2 组第一式初级的要求作为热身，比如 1 x 10，做 2 次，然后再开始正式的练习。</p><p>如果已经进阶到第二式，那么还是第一式的初级要求做 2 次作为热身，然后开始训练。</p><p>当进入到第三式的时候，做第一式的初级 1 组，第二式的初级 1 组作为热身，然后开始训练。</p><p>更高级别的时候，用前两式的初级各做一组，作为热身。比如第五式的时候，做 1 组第三式的初级，做 1 组第四式的初级，依此类推。</p><h2 id="时间间隔"><a href="#时间间隔" class="headerlink" title="时间间隔"></a>时间间隔</h2><p>训练时间我现在计划的是一周 3 次，但是经常可以一周 6 次。</p><p>因为每天最多也就 30～45 分钟，并不会占用太多时间，关键还是练。</p><p>我每次练习 2 个动作，这样没锻炼的部位可以休息一天。</p><p>不同动作之间的休息间隔是 3 分钟，而同一动作每组之间的休息间隔是 1 分钟。</p><p>当然，动作之间的间隔也可以 4～5 分钟，每组也可以 1～2 分钟，但是不建议间隔太久。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>以上，就是我最近锻炼时的一些思考。</p><p>相当于自己现阶段健身的一个小笔记吧，不一定正确，但暂时有效。</p><p>也许某天会有新的感悟，到时候再做一些调整也有可能。</p>]]></content>
      
      
      <categories>
          
          <category> Fitness </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fitness </tag>
            
            <tag> Convict_Conditioning </tag>
            
            <tag> Gym </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021 打脸大计</title>
      <link href="/2021/02/05/2021-annual-plan/"/>
      <url>/2021/02/05/2021-annual-plan/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/02/05/2021-annual-plan/2021.jpg" alt="2021"></p><p>时光荏苒，岁月如梭……</p><p>又到了一年一度花样立 flag，做年度打脸大计的时候了。</p><p>还是原来的包装，还是原来的味道，新瓶盛老酒，换汤不换药！</p><p>因为各种<code>不可抗拒力</code>因素，2020 年浑浑噩噩就度过了。</p><p>从哪儿丢失的，就从哪儿找回来。所以，2021 年的计划必须走起！</p> <span id="more"></span><p> 按照以往的「套路」，仍然是分类别来做计划。</p><h2 id="健康"><a href="#健康" class="headerlink" title="健康"></a>健康</h2><p>排在第一位的还是「健康」，然而这个 flag 立了应该有 3、4 年之久了。</p><p>除了跑步做到了以外，早睡早起就从来没有做到过！所以今年心不死，继续挑战早睡早起！</p><p>再者就是年纪大了，容易油腻。光跑步是不行的，还得配合适当的无氧运动。</p><p>考虑现在越来越消费不起的健身房，和各种各样奇怪的健身方法，最终还是决定坚持<a href="https://baike.baidu.com/item/%E5%9B%9A%E5%BE%92%E5%81%A5%E8%BA%AB">「囚徒健身」</a>。</p><p>最后总结出以下 3 点：</p><ol><li>一年之中做到 180 天凌晨 12 点前睡觉</li><li>保持每周最少 3 次囚徒健身</li><li>每个月 50km 跑量，有可能的话，年内参加一次半程马拉松</li></ol><h2 id="兴趣"><a href="#兴趣" class="headerlink" title="兴趣"></a>兴趣</h2><h3 id="滑雪"><a href="#滑雪" class="headerlink" title="滑雪"></a>滑雪</h3><p>去年考了 <a href="https://casi-acms.com/">CASI</a> (Canadian Association of Snowboard Instructors) 的 Level 1 滑雪教练，然后就荒废至今，所以滑雪今年得安排上！</p><p>为了督促自己滑雪，毅然而然地败家了融创雪世界的全年通滑票（内心在滴血），结果现在都已经 2 月份了，还一次都没去过……😅</p><p>因为疫情和场地的原因，今年滑雪主要的目标是入门<code>平花</code>。</p><p>主要参考油管上<a href="https://www.youtube.com/watch?v=ehTYoW4iFWg&list=PL9DFWhvwJBoS0pLGQY8LqbWTtHT2Bduj2"><code>グラトリ 初心者向け</code></a>的视频，计划学会以下动作：</p><ol><li>Ollie</li><li>Nollie</li><li>Ollie Front 180</li><li>Ollie Front 360</li><li>Nollie Front 180</li><li>Nollie Front 360</li><li>Back Compass 360</li></ol><p>然而我想说，这真的是<code>初心者</code>（新手）入门水平吗？怎么感觉这么难？！😭</p><h3 id="漂移"><a href="#漂移" class="headerlink" title="漂移"></a>漂移</h3><p>另外一个今年想要达成的目标就是学会漂移。</p><p>这个想了好久了，从 2000 年左右就梦想着有一天能学会，然而那个时候连车都买不起。</p><p>2017 年考了赛车执照以后，就更想学了，但是同样没有车。</p><p>2019 年终于有车了，可是又没有时间学……</p><p>今年不想再找理由和借口了，只有一个想法：学会漂移！</p><p>引用《头文字D》里面的台词，解释一下为啥一定要学会漂移：</p><blockquote><p>好簡單嘅啫，即漂移咁，點漂啊？一入彎，拉拉手製，架車飆一飆咁。<br>咁又點啊？<br>型咯……</p></blockquote><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h3 id="日语"><a href="#日语" class="headerlink" title="日语"></a>日语</h3><p>日语这个就很有趣了，从小（初中）就想学日语，为了看<a href="https://baike.baidu.com/item/%E7%94%9F%E8%82%89/13388633">生肉</a>动漫。</p><p>然而到了如今，连看动漫的时间都少了。</p><p>就算是看动漫，都要写到 TODO List 上面，然后「逼」自己看，不然是铁定不会看的。</p><p>虽然感觉平常也没什么机会用到日语，但就是心心念念地想要学会它。</p><p>既然如此，那就尝试下吧，说不定过了 10 几 20 年以后，就<del>学会</del>学废了呢？</p><p>目标是年内自学完成<a href="https://www.jlpt.jp/">日本语能力测试（JLPT）</a>，并取得 <code>N4</code> 证书！</p><h3 id="Python-教程"><a href="#Python-教程" class="headerlink" title="Python 教程"></a>Python 教程</h3><p>关于教朋友学 Python 这个事情，也说了好几年了。</p><p>在 B 站上注册了个账号，并且也更新了 1、2 章的视频，但离完成还有点遥远。</p><p>主要是写大纲，想代码，录视频，后期，再加上配字幕什么的，实在非常耗时。</p><p>但不管如何，希望今年能克服重重困难，完成<a href="https://www.bilibili.com/video/BV11V41167VH">《Python 入门教程》</a>。</p><h3 id="理财"><a href="#理财" class="headerlink" title="理财"></a>理财</h3><p>说实在的，对于这个，还是不大提得起兴趣，不知为何。</p><p>虽然读 MBA 的时候，Financial Accounting 和 Corporate Finance 啥的考得都很高分，但对于金融和理财相关的东西，就是提不起兴趣。</p><p>仔细想想，应该还是自己智力水平不够，搞不明白，所以玩不转。</p><p>毕竟那些玩金融衍生品的人的脑子都很好使，总能想到一些奇离古怪的赚钱方法。</p><p>也许这就是我这种 IQ 不足的韭菜，迟迟不敢涉足这项高智商活动的原因吧。</p><p>可是转念一想，吃不到猪肉，也得见过猪跑吧？不然就更显的愚笨了。</p><p>所以，佛系地了解和学习一下理财的相关知识，至于如何开始，怎么开始，暂时还没想法，走步看步。</p><p>感觉这个 flag 大概率要悲剧，毕竟没有明确的产出，那就把这项列为<code>可选</code>吧！</p><h2 id="阅读和写作"><a href="#阅读和写作" class="headerlink" title="阅读和写作"></a>阅读和写作</h2><p>最近这段时间，思考很多，产出很少，其中一个原因是觉得总写技术类的文章，没什么意思。</p><p>之前曾说过尽量少写技术类的文章，多写一些人文思考类的。2019 年还提出了尝试写英文 Blog 的想法。</p><p>但是到了今天，想法又有些不一样了。对于写文章而言，不一定要限定写什么内容和范围，只要能写就很好了。</p><p>就算想写的全部都是技术类文章也没有问题，因为总有想要发表感慨的时候。随着时间的推移，慢慢地就会发现自己特别擅长的领域。</p><p>另外一个写得少的原因，是各种各样奇怪的瓜层出不穷，没有任何想吃的欲望。</p><p>对于热点，我觉得可以关注，但是没必要为了吃瓜而吃瓜。</p><p>而且热点这东西，来得快去得快，大家都是本着<code>娱乐至死</code>的精神在消费他人，大可不必浪费过多精力。</p><p>最后，本着「人丑就要多读书」的精神，今年的目标就这样定吧：</p><ol><li>年内完成 50 本书（类别不限）的阅读</li><li>博客今年的目标是<code>半月更</code>，每个月最少更新 2 次</li><li>练字，每天 30 分钟，每周 5 次</li></ol><p>毕竟，人丑，字也丑，只能多读书，勤练字，修心养性了……</p><p>PS：说实在的，50 本书，我不是很有信心，毕竟看书看得慢，一直没学会所谓的「快速阅读」。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>最近在尝试早上 5 点起床跑步，那酸爽……不知道能否坚持下来……</p><p>此外，开始尝试 <a href="https://zettelkasten.de/">Zettelkasten</a> 笔记方法，并使用了 <a href="https://obsidian.md/">Obsidian</a> 来做网状知识管理，看看一年后效果如何。</p><p>最后列一下开了还没有填的坑：</p><ol><li>吉他</li><li>钢琴</li><li>尤克里里</li><li>赛车模拟器</li><li>尾波冲浪</li><li>摩托车</li></ol><p>还有那不知何时才能实现的 <code>Sky Dive（高空跳伞）</code>以及<code>考游艇执照</code>。</p><p>2021，应该是触底反弹的一年了吧？</p><p>希望未来能像 Beyond 的《海阔天空》里面的歌词一样：</p><blockquote><p>仍然自由自我<br>永遠高唱我歌<br>走遍千里<br>原諒我這一生不羈放縱愛自由……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Annual </tag>
            
            <tag> Plan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改安卓上的 Kindle 字体</title>
      <link href="/2021/02/04/change-kindle-fonts-on-android/"/>
      <url>/2021/02/04/change-kindle-fonts-on-android/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/02/04/change-kindle-fonts-on-android/kindle_app.png" alt="Kindle"></p><p>之前为了读书（其实就是想买电子产品），买了一台<a href="https://u.jd.com/ILQ6q2w">海信 A5 Pro</a>电子墨水屏手机。</p><p>对于原机自带的刷卡双待，拍照什么的，对于我来说都没有什么意义，最主要的还是奔着墨水屏去的。</p><p>买过 Kindle 的小伙伴应该都知道，只要是购买的正版书籍，都可以使用自定义字体进行阅读。</p><p>而 Android 版本的 Kindle 却只能使用系统和内置的字体（而且还需要单独下载），没有办法任意选择自己喜欢的字体。</p><span id="more"></span><p>这个时候，我们就需要自己手动，丰衣足食，来进行字体的替换了。</p><p>首先我们通过各大应用市场，下载最新版本的 Kindle 应用。</p><p>接着随便下载并打开一本书，打开上方 A 形的字体设置菜单，下载额外的字体。</p><p>当所有字体下载完成以后，我们可以在手机的 <code>/sdcard/Android/data/com.amazon.kindlefc/files/appexpan</code> 目录下，看到类似如下的目录：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">17</span>:<span class="number">39</span> STHeitiSC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">21</span>:<span class="number">09</span> STHeitiTC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">17</span>:<span class="number">39</span> STKaitiSC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">21</span>:<span class="number">09</span> STKaitiTC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">17</span>:<span class="number">38</span> STSongSC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">21</span>:<span class="number">09</span> STSongTC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">17</span>:<span class="number">40</span> STYuanSC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">21</span>:<span class="number">09</span> STYuanTC</span><br></pre></td></tr></table></figure><p>以上目录分别对应为：</p><ul><li>黑体简体（STHeitiSC）</li><li>黑体繁体（STHeitiTC）</li><li>楷体简体（STKaitiSC）</li><li>楷体繁体（STKaitiTC）</li><li>宋体简体（STSongSC）</li><li>宋体繁体（STSongTC）</li><li>圆体简体（STYuanSC）</li><li>圆体繁体（STYuanTC）</li></ul><p>其实也很简单，中间的拼音就是字体的名称，而 <code>SC</code> 表示 <code>Simplified Chinese</code> 也就是简体，<code>TC</code> 表示 <code>Traditional Chinese</code> 也就是繁体。</p><p>因为<strong>楷体</strong>和<strong>黑体</strong>等字体也经常会被使用，所以这里我决定替换<strong>圆体</strong>，也就是 <code>/sdcard/Android/data/com.amazon.kindlefc/files/appexpan/STYuanSC/1/STZhongyuan.ttf</code> 文件。</p><p>这里我使用的是<a href="https://www.foundertype.com/index.php/FontInfo/index/id/198.html">方正宋刻本秀楷</a>的繁体版本。</p><p>不得不说，用繁体字来看金庸的武侠小说，实在是种惬意。</p><p>一不小心又暴露了自己不学无术，沉迷武侠小说的罪行。</p><blockquote><p>注意：对于默认是简体字的书籍，如果想要用繁体字来看的话，必须要替换 SC 结尾的字体，替换 TC 的字体没有效果（主要是在字体菜单中无法选择）。</p></blockquote><p>下面是更换字体前的效果：</p><p><img src="/2021/02/04/change-kindle-fonts-on-android/font1.jpg"><br><img src="/2021/02/04/change-kindle-fonts-on-android/font2.jpg"></p><p>下面是更换字体后的效果：</p><p><img src="/2021/02/04/change-kindle-fonts-on-android/font3.jpg"><br><img src="/2021/02/04/change-kindle-fonts-on-android/font4.jpg"></p><p>可以看到，虽然设置里面显示的字体是<code>圆体</code>，但实际显示的效果已经是楷体繁体了。</p><p>这样就可以在手机和 Kindle 之间无缝阅读，并保持体验的一致性了。😄</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Font </tag>
            
            <tag> Mobile </tag>
            
            <tag> Reading </tag>
            
            <tag> Kindle </tag>
            
            <tag> Android </tag>
            
            <tag> App </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>升级 2020 款斯巴鲁 BRZ 中控</title>
      <link href="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/"/>
      <url>/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/</url>
      
        <content type="html"><![CDATA[<img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/brz.jpg" class=""><p>因为用惯了 CarPlay，外加 BRZ 原厂的中控，真的是……太……销魂了。</p><p>你要知道一个整车红色系灯光的车子，竟然配置了一个丰田绿色的中控，那真的是惨不忍睹啊！</p><p>心心念念了很久，终于还是出手，把车子的中控给换了。</p><p>本篇文章主要以图片为主，简单记录了一下更换过程，多图预警……</p><span id="more"></span><p>首先看看原厂的中控，是长这样的，只有一个简单的 CD，晚上就会亮起幽幽的绿光…… 囧rz</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/01.jpg" class=""><p>二话不说，开始拆，网上找不到 2020 款的拆解教程，自己摸索……</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/02.jpg" class=""><p>从图上面这个位置下手，只要一用力，就能把前面板弄开了。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/03.jpg" class=""><p>看着像皮质的材料，实际上就是塑料而已……算了，买这车，谁在乎内饰做工啊？！对不对？</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/04.jpg" class=""><p>上下左右，总共有 4 颗螺丝。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/05.jpg" class=""><p>这里要一个 10 号的套筒扳手来拆螺丝，我用的是套筒加棘轮扳手的组合（如上图所示）。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/06.jpg" class=""><p>毫无技术含量的拆拆拆……</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/07.jpg" class=""><p>拆完螺丝以后，慢慢地拿出中控，因为后面还有很多连接线。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/08.jpg" class=""><p>原厂后面连接的线。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/09.jpg" class=""><p>大家操作的时候，最好垫一个这样的毛巾，以免中控金属部分把原车的中控面板给刮花了。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/10.jpg" class=""><p>拿出新买的中控，拍个照，感觉灰很大的样子……</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/11.jpg" class=""><p>屁股也来一张，跟原厂的比，还是很小巧的。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/12.jpg" class=""><p>这个中控本身是个 Android 的系统，支持 4G 和倒车影像，因为我主要用 CarPlay，所以就不安装 GPS 天线了。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/13.jpg" class=""><p>为了使用原厂的 USB 口，还专门找老板要了不同的 USB 转接线，因为原厂的 USB 不是标准接口的，也不确定用的是丰田（Toyota）标准还是斯巴鲁（Subaru）标准，最后拿了 3 条 USB 转接线。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/14.jpg" class=""><p>接好原车中控面板 USB 的转接线。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/15.jpg" class=""><p>把装 SIM 卡的盒子，穿过车架，放到副驾驶的手套箱里。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/16.jpg" class=""><p>新的中控配了无损转接线，可以不用自己做 Wiring 了，很好。都是带防呆设计的，一一对应插好就行了。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/17.jpg" class=""><p>把主机端的线也接好之后的样子。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/18.jpg" class=""><p>试着开机，确认线路连接没有问题。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/19.jpg" class=""><p>这个车机，不是硬件 CarPlay，而是用一个叫「ZLINK」的软件实现的 CarPlay。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/20.jpg" class=""><p>确认原厂 USB 位可以使用，之前看很多国外的改装视频，都是因为没有 USB 转接线而单独拉了一条 USB 线。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/21.jpg" class=""><p>安装新车机的固定支架，需要复用原厂的支架和螺丝，简单拆装一下就好。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/22.jpg" class=""><p>本以为马上就可以开始愉快地使用了，结果没想到孔位不契合，差了半个螺丝位！</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/23.jpg" class=""><p>又找了个钻机，把螺丝孔位拓宽了半个螺丝位。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/24.jpg" class=""><p>盖上盖板，最终效果，红色的灯光跟整车的氛围更搭调，比原厂的视觉效果好多了。</p><p>打完收工，谢谢各位老板的观赏。</p>]]></content>
      
      
      <categories>
          
          <category> Car </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Car </tag>
            
            <tag> Tune </tag>
            
            <tag> BRZ </tag>
            
            <tag> Subaru </tag>
            
            <tag> 86 </tag>
            
            <tag> FT86 </tag>
            
            <tag> GT86 </tag>
            
            <tag> Head Unit </tag>
            
            <tag> Subaru BRZ </tag>
            
            <tag> Toyota </tag>
            
            <tag> Toyota 86 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解包和打包中兴光猫配置文件</title>
      <link href="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/"/>
      <url>/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/</url>
      
        <content type="html"><![CDATA[<img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/f663n.jpg" class=""><p>自从中国移动推出了高端套餐送宽带这项活动以来，我身边的朋友基本上都从<code>中国信不过</code>叛逃到了<code>中国移不动</code>。</p><p>这本无可厚非，毕竟市场竞争，最终还是价格决定一切吗。</p><p>但是在日常使用过程中，却由于由于光猫的各种问题，导致上网体验非常不好。</p><p>为了改善这种情况，就必须得修改光猫的配置，而我用的 <code>F663N</code> 的配置文件又不是明文的。</p><p>于是在研究的过程中，就顺手写了个小工具，今天就花点时间跟大家黄婆卖瓜自卖自夸一下……</p><span id="more"></span><h2 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h2><p>正式开始之前，先来个吐槽大会，数数运营商光猫的几宗罪。</p><p>现在移动配备的都是各个厂家出品的光猫、路由、Wi-Fi 一体机，其性能可想而知。</p><p>在 100M 带宽的情况下，用支持 802.11ac 的手机测带宽，就从来没有达到过 100M 的时候。</p><p>为什么呢？因为人家只有 2.4GHz 的无线网络，而且也只能支持到 802.11n。</p><p>也就是说就算你是 200M，300M，甚至是 1000M 的带宽都好，理论上也只能用到 50M 左右的带宽。</p><p>我就问你坑爹不坑爹？所以小伙伴们，我再说一次，好的路由器很重要，好的无线 AP 也很重要！</p><p>还有就是，这个光猫只有一个口是千兆口，其余的都是百兆口，如果你没有接 LAN1 的话，就算你是 200M 以上的宽带，理论上也最多只能当 100M 宽带用。</p><p>同时也意味着我的 NAS 在局域网内也只能以 100M 的带宽传输文件，也就是大概每秒 10MB 的样子。囧rz</p><p>如果是 NAS 跟手机之间传输，也就是每秒 5M 的样子，真的是好开心呢，9102 年都过去了，网速咋还这么慢呢？</p><p>如果是千兆交换机的话，局域网内轻轻松松跑个 130MB+ 每秒，一点问题都没有，节约 10 几倍的时间啊！</p><p>更开心的是，只要连接终端数超过 4 个，很多设备就上不了网了。</p><p>那我们把光猫一体机就只做光猫，然后用自己的路由器吧。嗯，少年，想法很好，但是……</p><p>人家运营商是强制光猫路由模式的，也就是说不给你上网的账号和密码，想改？没门儿。</p><p>为了能好好上网学习，只好自己研究下如何修改光猫配置了……</p><h2 id="获得配置文件"><a href="#获得配置文件" class="headerlink" title="获得配置文件"></a>获得配置文件</h2><p>首先访问光猫的管理界面，一般都是：<a href="http://192.168.1.1/">http://192.168.1.1/</a></p><p>输入从网上找到的登录用户名：<code>CMCCAdmin</code>，和密码：<code>aDm8H%MdA</code>。</p><p>找一个 FAT32 分区的 U 盘插到光猫背面的 USB 接口上。</p><p>然后在管理界面选择「<strong>管理</strong>」-&gt;「<strong>设备管理</strong>」-&gt;「<strong>USB备份配置</strong>」，应该会看到类似下面的界面，点击「<strong>开始备份</strong>」</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/backup.png" class=""><p>备份好了以后，拔下 U 盘放到电脑上，会看到一个名为 <code>e8_Config_Backup</code> 的目录，里面有一个叫 <code>ctce8_F663N.cfg</code> 的配置文件。</p><p>这个就是我们要处理的文件了。</p><h2 id="解包"><a href="#解包" class="headerlink" title="解包"></a>解包</h2><p>经过几个昼夜地研究与分析，终于搞明白了这个 cfg 文件的结构。</p><p>这里省略一万字，感兴趣的可以直接<a href="https://github.com/TommyLau/ztecfg">去 GitHub 看源代码</a>，不感兴趣的直接看怎么操作就行了。</p><p>首先去下载最新的可执行版本：<a href="https://github.com/TommyLau/ztecfg/releases">https://github.com/TommyLau/ztecfg/releases</a></p><p>写这篇文章的时候只有 <code>v0.1.0</code> 版本，选择对应平台的可执行文件就行了。</p><p>如果你的电脑有装 Python 3 的话，直接下载 <code>ztecfg.py</code> 这个文件就可以了。</p><p>把刚才得到的配置文件复制到 ztecfg 所在的目录，打开终端或命令行，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ ./ztecfg -u ctce8_F663N.cfg</span><br><span class="line"></span><br><span class="line">Device name: F663N</span><br><span class="line"></span><br><span class="line">Block 1: size=65536, compressed=5724, offset=5796</span><br><span class="line">Block 2: size=65536, compressed=7018, offset=12826</span><br><span class="line">Block 3: size=65536, compressed=1828, offset=14666</span><br><span class="line">Block 4: size=65536, compressed=2551, offset=17229</span><br><span class="line">Block 5: size=65536, compressed=7136, offset=24377</span><br><span class="line">Block 6: size=65536, compressed=5343, offset=29732</span><br><span class="line">Block 7: size=12717, compressed=1305, offset=0</span><br><span class="line"></span><br><span class="line">Write XML output to file <span class="string">&quot;ctce8_F663N.xml&quot;</span></span><br></pre></td></tr></table></figure><p>于是乎我们就得到了一个名为 <code>ctce8_F663N.xml</code> 的文件，就是解包出来的配置文件。</p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>既然你都找到这里，说明你知道自己要修改什么了。</p><p>如果不清楚的话，可以参考一下<a href="https://www.codenong.com/js0919042f29ed/">《上海电信光猫F460开启telnet》</a>这篇文章。</p><p>简单说，你可以修改用户权限，获得 root 密码，打开 telnet、ftp 等功能。</p><p>我这里主要是将<code>路由模式</code>修改成了<code>桥接模式</code>，顺便查了一下我的上网账号和密码。😊</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/pppoe.png" class=""><p>终于知道了为什么超过 4 个设备就会断网，原来人家设置了最多 4 个用户啊！</p><p>再比如说，打开 FTP &#x2F; TELNET 之类的服务。</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/service.png" class=""><p>还可以查看和修改账号权限：</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/auth.png" class=""><p>比如上面可以看到超级密码，也可以把普通用户的 <code>level</code> 修改为 <code>1</code>，这样普通用户也变成了管理员用户。</p><p>就算是将来超级管理员的密码被修改了，也可以用普通账户登录进行管理。</p><p>反正根据你自己的需求，调整和修改 XML 内对应的字段就好了。</p><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><p>修改完 XML 文件以后，运行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ ./ztecfg.py -p ctce8_F663N.cfg ctce8_F663N.xml</span><br><span class="line"></span><br><span class="line">Device name: F663N</span><br><span class="line"></span><br><span class="line">Block 1: size=65536, compressed=5724, offset=5796</span><br><span class="line">Block 2: size=65536, compressed=7018, offset=12826</span><br><span class="line">Block 3: size=65536, compressed=1828, offset=14666</span><br><span class="line">Block 4: size=65536, compressed=2551, offset=17229</span><br><span class="line">Block 5: size=65536, compressed=7136, offset=24377</span><br><span class="line">Block 6: size=65536, compressed=5343, offset=29732</span><br><span class="line">Block 7: size=12717, compressed=1305, offset=0</span><br><span class="line"></span><br><span class="line">Write CFG output to file <span class="string">&quot;ctce8_F663N.xml.cfg&quot;</span></span><br></pre></td></tr></table></figure><p>程序执行后会生成一个名为 <code>ctce8_F663N.xml.cfg</code> 的文件，把它复制到 U 盘的<code>e8_Config_Backup</code> 的目录里，删除旧文件，并重命名为 <code>ctce8_F663N.cfg</code>。</p><h2 id="写入新配置"><a href="#写入新配置" class="headerlink" title="写入新配置"></a>写入新配置</h2><p>把保存了新配置的 U 盘插到中兴的光猫上，然后打开光猫的管理界面。</p><p>选择「<strong>管理</strong>」-&gt;「<strong>设备管理</strong>」-&gt;「<strong>USB恢复配置</strong>」，勾选「<strong>启用</strong>」，然后点击「<strong>确定</strong>」。</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/restore.png" class=""><p>然后再选择左侧的「<strong>设备重启</strong>」，重新启动光猫后，配置就生效了。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>改成了桥接，换成了自己的路由器，刷了 OpenWrt，同时上了 802.11ac 的 Wi-Fi AP。</p><p>结果就是有图有真相，终于跑满了 100Mbps 的带宽！</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/speed.png" class=""><p>左侧为使用移动光猫时的测速，右侧为使用自己路由器和 AP 时的测速。</p><p>测速时间前后差距 1-2 分钟，测试服务器都为 China Mobile Shenzhen。</p><p>除此之外，所有内网的设备都拿到了 IPv6 的地址，相当于有了公网 IP，可以直连家里的 NAS 了。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>工具使用过程中有什么问题和建议，可以访问项目主页提 issue：</p><p><a href="https://github.com/TommyLau/ztecfg">https://github.com/TommyLau/ztecfg</a></p>]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Network </tag>
            
            <tag> Internet </tag>
            
            <tag> China Mobile </tag>
            
            <tag> CMCC </tag>
            
            <tag> F663N </tag>
            
            <tag> Modem </tag>
            
            <tag> Optical </tag>
            
            <tag> Router </tag>
            
            <tag> ZTE </tag>
            
            <tag> ZXHN </tag>
            
            <tag> ztecfg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将 Hexo 升级到 v5.0.0</title>
      <link href="/2020/08/08/upgrade-hexo-to-v5-0-0/"/>
      <url>/2020/08/08/upgrade-hexo-to-v5-0-0/</url>
      
        <content type="html"><![CDATA[<img src="/2020/08/08/upgrade-hexo-to-v5-0-0/hexo-5.png" class="" title="Hexo 5.0.0"><p>感觉刚刚才<a href="../../../../2020/07/07/upgrade-hexo-to-v4-2-1/">升级到 Hexo 4.2.1 没多久</a>，结果 Hexo 又双叒叕更新了……</p><p>而且这次升级还是大版本号升级，说不定有惊喜？ 本着好奇害死猫的精神，果断升级之！</p><span id="more"></span><p>之前升级的时候，<a href="https://zhuanlan.zhihu.com/p/157511323">写了篇文章同步在「知乎」</a>，然后有小伙伴留言说可以用 <code>ncu -u</code> 一把梭。</p><p>有这种好事岂能错过？简单搜索了一下，就领悟到了要点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ npm install npm-check-updates -g</span><br><span class="line">$ ncu</span><br><span class="line">Checking /Users/tommy/blog/package.json</span><br><span class="line">[====================] 16/16 100%</span><br><span class="line"></span><br><span class="line"> hexo                    ^4.2.0  →  ^5.0.0</span><br><span class="line"> hexo-generator-sitemap  ^2.0.0  →  ^2.1.0</span><br><span class="line"></span><br><span class="line">Run ncu -u to upgrade package.json</span><br><span class="line">$ ncu -u</span><br><span class="line">Upgrading /Users/tommy/blog/package.json</span><br><span class="line">[====================] 16/16 100%</span><br><span class="line"></span><br><span class="line"> hexo                    ^4.2.0  →  ^5.0.0</span><br><span class="line"> hexo-generator-sitemap  ^2.0.0  →  ^2.1.0</span><br><span class="line"></span><br><span class="line">Run npm install to install new versions.</span><br></pre></td></tr></table></figure><p>简单如此，就把 <code>package.json</code> 文件给更新了，果然是一把梭啊，爽～～～</p><p>对于强迫症的我，习惯性删除重来是必须的！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">rm</span> -fr node_modules/</span><br><span class="line">$ npm install --save</span><br></pre></td></tr></table></figure><p>顺手升级一下 CLI：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">/usr/local/bin/hexo -&gt; /usr/local/lib/node_modules/hexo-cli/bin/hexo</span><br><span class="line">+ hexo-cli@4.1.0</span><br><span class="line">added 1 package from 1 contributor, removed 21 packages and updated 13 packages <span class="keyword">in</span> 4.121s</span><br></pre></td></tr></table></figure><p>搞掂，检查一下版本信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br><span class="line">INFO  Validating config</span><br><span class="line">hexo: 5.0.0</span><br><span class="line">hexo-cli: 4.1.0</span><br><span class="line">os: Darwin 19.6.0 darwin x64</span><br><span class="line">node: 12.18.3</span><br><span class="line">v8: 7.8.279.23-node.39</span><br><span class="line">uv: 1.38.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.16.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.41.0</span><br><span class="line">napi: 6</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">http_parser: 2.9.3</span><br><span class="line">openssl: 1.1.1g</span><br><span class="line">cldr: 37.0</span><br><span class="line">icu: 67.1</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 13.0</span><br></pre></td></tr></table></figure><p>既然是大版本升级，绝对不可能这么简简单单一升级就 OK 的。</p><p>以我多年来瞎折腾的经验看，肯定还有坑。</p><p>运行 <code>hexo server</code> 验证一下我的想法，果不其然：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">WARN  Deprecated config detected: <span class="string">&quot;external_link&quot;</span> with a Boolean value is deprecated. See https://hexo.io/docs/configuration <span class="keyword">for</span> more details.</span><br></pre></td></tr></table></figure><p>嗯……「deprecated」啊……查一下<a href="https://hexo.io/news/2020/07/29/hexo-5-released/">官方的 Release Note</a>。</p><p>果然有个叫「Breaking change」的东东，里面就有说到配置文件的变化。</p><figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deprecated</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span><span class="string">|false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># New option</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span><span class="string">|false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deprecated</span></span><br><span class="line"><span class="attr">use_date_for_updated:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># New option</span></span><br><span class="line"><span class="comment"># https://hexo.io/docs/configuration#Date-Time-format</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">date</span></span><br></pre></td></tr></table></figure><p>对比以后，发现主要有如下变化，大家根据自己的需要调整修改就好了：</p><figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br><span class="line"></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">&#x27;mtime&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the &#x27;source/&#x27; folder</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br></pre></td></tr></table></figure><p>简单调整后，Hexo 已经可以正常使用了。</p><p>暂时还没有体会到 Hexo 5.0.0 有什么特别不同的地方，再慢慢体会一下吧。</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用 GitHub Actions 来自动部署 Hexo</title>
      <link href="/2020/08/06/deploy-hexo-with-github-actions/"/>
      <url>/2020/08/06/deploy-hexo-with-github-actions/</url>
      
        <content type="html"><![CDATA[<img src="/2020/08/06/deploy-hexo-with-github-actions/actions.png" class="" title="GitHub Actions"><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近发现了一个好东西：<a href="https://github.com/features/actions">GitHub Actions</a>，GitHub 提供的自动集成（<a href="https://en.wikipedia.org/wiki/Continuous_integration">Continuous Integration</a>）工具，从此以后可以跟 <a href="https://travis-ci.org/">Travis CI</a> 说拜拜了。</p><p>为什么会发现 GitHub Actions 这个东西呢，主要是我的路由器装了 <a href="https://openwrt.org/">OpenWrt</a>，有几个想用的插件没有 MIPS 架构的包，只能自己编译。</p><p>而我电脑的性能几乎（其实是根本 ）无法编译 OpenWrt 这么庞大的代码，本来想说买个云服务器编译一下，结果就发现了 GitHub Actions 这么个好东西。</p><p>当然今天主要不是介绍如何使用 GitHub Actions 来编译 OpenWrt，而是介绍下如何用它来自动部署基于 Hexo 的 Blog。</p><span id="more"></span><p>建议大家先看一下 <a href="https://github.com/features/actions">GitHub Actions</a> 官方的介绍，不然对于下面的内容可能没有办法很好的理解。</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>首先我们先要在本地确保 Hexo 是可以正确运行的，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>至于如何设置和使用 Hexo，请参考 <a href="https://hexo.io/">https://hexo.io/</a></p><p>此外我的 Hexo 同时部署在 GitHub Pages 和自己的服务器上，考虑大家的使用场景，我这里只介绍 GitHub Pages 相关的设置。</p><p>至于如何使用 GitHub Pages 部署自己的网站，请参考：<a href="https://pages.github.com/">https://pages.github.com/</a></p><p>确认 <code>_config.yml</code> 文件中有类似如下的 <code>GitHub Pages</code> 配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:TommyLau/Demo.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：请将 <code>repository</code> 修改为你自己的仓库地址。</p></blockquote><h2 id="生成秘钥"><a href="#生成秘钥" class="headerlink" title="生成秘钥"></a>生成秘钥</h2><p>如果你的 Hexo 可以正常地部署到 GitHub，那么实际上你原来的秘钥是可以正常使用的。</p><p>但是我的私钥还用于不同的服务器的 SSH 访问和其他身份验证，因此，我们生成一个新的秘钥对来专门部署 Hexo。</p><p>以下为 macOS 下的操作，Linux 下操作方法相同，Windows 10 用户可以在市场中安装 Ubuntu 以后执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;Hexo Deploy Key&quot;</span> -f github-deploy-key -N <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>这会在当前目录生成两个文件：</p><ul><li>github-deploy-key —— 私钥</li><li>github-deploy-key.pub —— 公钥</li></ul><h2 id="GitHub-配置秘钥"><a href="#GitHub-配置秘钥" class="headerlink" title="GitHub 配置秘钥"></a>GitHub 配置秘钥</h2><p>我们把<code>私钥</code>放到我们存放 Hexo 原始文件的代码仓库里面，用于触发 Actions 时使用。</p><p>把<code>公钥</code>放到 GitHub Pages 对应的代码仓库里面，用于 Hexo 部署时的写入工作。</p><h3 id="配置私钥"><a href="#配置私钥" class="headerlink" title="配置私钥"></a>配置私钥</h3><p>首先在 GitHub 上打开保存 Hexo 的仓库，访问 <code>Settings -&gt; Secrets</code>，画面如下：</p><img src="/2020/08/06/deploy-hexo-with-github-actions/secret_1.png" class=""><p>然后选择 <code>New secret</code></p><img src="/2020/08/06/deploy-hexo-with-github-actions/secret_2.png" class=""><p>名字部分填写：<code>HEXO_DEPLOY_KEY</code>，注意大小写，这个后面的 GitHub Actions Workflow 要用到，一定不能写错。</p><p>在 <code>Value</code> 的部分填入 <code>github-deploy-key</code> 中的内容：</p><img src="/2020/08/06/deploy-hexo-with-github-actions/secret_3.png" class=""><p>添加了私钥以后的界面显示如下：</p><img src="/2020/08/06/deploy-hexo-with-github-actions/secret_4.png" class=""><h3 id="添加公钥"><a href="#添加公钥" class="headerlink" title="添加公钥"></a>添加公钥</h3><p>接下来我们需要访问存放网页的仓库，也就是 Hexo 部署以后的仓库，比如：<code>yourname.github.io</code> 这种，访问 <code>Settings -&gt; Deploy keys</code>：</p><img src="/2020/08/06/deploy-hexo-with-github-actions/deploy_1.png" class=""><p>按 <code>Add deploy key</code> 来添加一个新的公钥：</p><img src="/2020/08/06/deploy-hexo-with-github-actions/deploy_2.png" class=""><p>在 <code>Title</code> 中输入：<code>HEXO_DEPLOY_PUB</code> 字样，当然也可以填写其它自定义的名字。</p><p>在 <code>Key</code> 中粘贴 <code>github-deploy-key.pub</code> 文件的内容。</p><blockquote><p>注意：一定要勾选 <code>Allow write access</code> 来打开写权限，否则无法写入会导致部署失败。</p></blockquote><img src="/2020/08/06/deploy-hexo-with-github-actions/deploy_3.png" class=""><p>最后添加好了公钥的界面如下：</p><img src="/2020/08/06/deploy-hexo-with-github-actions/deploy_4.png" class=""><h2 id="创建-Workflow"><a href="#创建-Workflow" class="headerlink" title="创建 Workflow"></a>创建 Workflow</h2><p>首先在 Hexo 的仓库中创建一个新文件：<code>.github/workflows/deploy.yml</code>，文件名可以自己取，但是一定要放在 <code>.github/workflows</code> 目录中，文件的内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-18.04</span></span><br><span class="line">    <span class="attr">if:</span> <span class="string">github.event.repository.owner.id</span> <span class="string">==</span> <span class="string">github.event.sender.id</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">source</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">ref:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;12&#x27;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Hexo</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">ACTION_DEPLOY_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          mkdir -p ~/.ssh/</span></span><br><span class="line"><span class="string">          echo &quot;$ACTION_DEPLOY_KEY&quot; &gt; ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          chmod 700 ~/.ssh</span></span><br><span class="line"><span class="string">          chmod 600 ~/.ssh/id_rsa</span></span><br><span class="line"><span class="string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">          git config --global user.email &quot;john@doe.com&quot;</span></span><br><span class="line"><span class="string">          git config --global user.name &quot;John Doe&quot;</span></span><br><span class="line"><span class="string">          npm install hexo-cli -g</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          hexo clean</span></span><br><span class="line"><span class="string">          hexo deploy</span></span><br></pre></td></tr></table></figure><p>简单解释一下，当我们推送内容到远程 <code>master</code> 分支的时候，就会触发这个 Workflow。</p><p>使用 <code>Ubuntu 18.04</code> 作为 <code>hexo deploy</code> 的系统。</p><p>首先 checkout 源代码，然后设置使用最新的 Node.js v12 LTS 作为 node 解释器。</p><p>接下来就是创建 SSH 相关的配置文件，注意 <code>secrets.HEXO_DEPLOY_KEY</code> 就是对应我们之前设置的私钥，所以名字一定不要搞错。</p><p><code>git config</code> 相关的名字和邮件地址替换成大家自己使用的就好了。</p><p>最后就是安装 Hexo CLI，各个依赖模块和部署了。</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>下面就是 GitHub Actions 页面显示的运行结果：</p><img src="/2020/08/06/deploy-hexo-with-github-actions/action.png" class=""><p>前面有绿色钩钩的，就表示部署成功，红色叉叉的表示失败。如果部署失败，还会收到 GitHub 的邮件提醒。</p><p>好了，以上就是利用 GitHub Actions 自动部署 Hexo 到 GitHub Pages 的方法，谢谢观赏。😁</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Node.js </tag>
            
            <tag> GitHub </tag>
            
            <tag> CI </tag>
            
            <tag> Continuous Integration </tag>
            
            <tag> Actions </tag>
            
            <tag> Deploy </tag>
            
            <tag> GitHub Actions </tag>
            
            <tag> GitHub Pages </tag>
            
            <tag> Node </tag>
            
            <tag> Pages </tag>
            
            <tag> YAML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02.03 - Python 解剖</title>
      <link href="/2020/07/20/02-03-python-anatomy/"/>
      <url>/2020/07/20/02-03-python-anatomy/</url>
      
        <content type="html"><![CDATA[<h2 id="国内用户"><a href="#国内用户" class="headerlink" title="国内用户"></a>国内用户</h2><div class="bilibili" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=711403876&bvid=BV1uD4y1D72D&cid=214717690&page=1&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><h2 id="海外用户"><a href="#海外用户" class="headerlink" title="海外用户"></a>海外用户</h2><div class="youtube" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe width="100%" height="100%" src="https://www.youtube.com/embed/_LRNK5QfNh4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>]]></content>
      
      
      <categories>
          
          <category> E-Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Programming </tag>
            
            <tag> Training </tag>
            
            <tag> Language </tag>
            
            <tag> E-Learning </tag>
            
            <tag> JetBrains </tag>
            
            <tag> Programmer </tag>
            
            <tag> PyCharm </tag>
            
            <tag> Python 3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02.02 - 你好，世界！</title>
      <link href="/2020/07/20/02-02-hello-world/"/>
      <url>/2020/07/20/02-02-hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="国内用户"><a href="#国内用户" class="headerlink" title="国内用户"></a>国内用户</h2><div class="bilibili" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=456495249&bvid=BV1J5411a7vQ&cid=214664977&page=1&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><h2 id="海外用户"><a href="#海外用户" class="headerlink" title="海外用户"></a>海外用户</h2><div class="youtube" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe width="100%" height="100%" src="https://www.youtube.com/embed/uIqJBgxF-vA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>]]></content>
      
      
      <categories>
          
          <category> E-Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Programming </tag>
            
            <tag> Training </tag>
            
            <tag> Language </tag>
            
            <tag> E-Learning </tag>
            
            <tag> JetBrains </tag>
            
            <tag> Programmer </tag>
            
            <tag> PyCharm </tag>
            
            <tag> Python 3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>00.02 - 练习文件</title>
      <link href="/2020/07/20/00-02-exercise-files/"/>
      <url>/2020/07/20/00-02-exercise-files/</url>
      
        <content type="html"><![CDATA[<h2 id="国内用户"><a href="#国内用户" class="headerlink" title="国内用户"></a>国内用户</h2><div class="bilibili" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=328925250&bvid=BV1EA411v7bf&cid=214636748&page=1&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><h2 id="海外用户"><a href="#海外用户" class="headerlink" title="海外用户"></a>海外用户</h2><div class="youtube" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe width="100%" height="100%" src="https://www.youtube.com/embed/_445m9wkzYA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>]]></content>
      
      
      <categories>
          
          <category> E-Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Programming </tag>
            
            <tag> Training </tag>
            
            <tag> Language </tag>
            
            <tag> E-Learning </tag>
            
            <tag> JetBrains </tag>
            
            <tag> Programmer </tag>
            
            <tag> PyCharm </tag>
            
            <tag> Python 3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02.01 - 概览介绍</title>
      <link href="/2020/07/19/02-01-about-the-overview/"/>
      <url>/2020/07/19/02-01-about-the-overview/</url>
      
        <content type="html"><![CDATA[<h2 id="国内用户"><a href="#国内用户" class="headerlink" title="国内用户"></a>国内用户</h2><div class="bilibili" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=711406696&bvid=BV13D4y1D7V8&cid=214112981&page=1&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><h2 id="海外用户"><a href="#海外用户" class="headerlink" title="海外用户"></a>海外用户</h2><div class="youtube" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe width="100%" height="100%" src="https://www.youtube.com/embed/pKeEvzuIeI8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>]]></content>
      
      
      <categories>
          
          <category> E-Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Programming </tag>
            
            <tag> Training </tag>
            
            <tag> Language </tag>
            
            <tag> E-Learning </tag>
            
            <tag> JetBrains </tag>
            
            <tag> Programmer </tag>
            
            <tag> PyCharm </tag>
            
            <tag> Python 3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01.02 - 在 Windows 上安装 Python 和 PyCharm</title>
      <link href="/2020/07/18/01-02-installing-python-and-pycharm-on-windows/"/>
      <url>/2020/07/18/01-02-installing-python-and-pycharm-on-windows/</url>
      
        <content type="html"><![CDATA[<h2 id="国内用户"><a href="#国内用户" class="headerlink" title="国内用户"></a>国内用户</h2><div class="bilibili" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=796435102&bvid=BV1xC4y1b7KN&cid=213692656&page=1&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><h2 id="海外用户"><a href="#海外用户" class="headerlink" title="海外用户"></a>海外用户</h2><div class="youtube" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe width="100%" height="100%" src="https://www.youtube.com/embed/DTdlTT7EaxY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>]]></content>
      
      
      <categories>
          
          <category> E-Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Windows </tag>
            
            <tag> Programming </tag>
            
            <tag> Windows 10 </tag>
            
            <tag> Training </tag>
            
            <tag> Language </tag>
            
            <tag> E-Learning </tag>
            
            <tag> JetBrains </tag>
            
            <tag> Programmer </tag>
            
            <tag> PyCharm </tag>
            
            <tag> Python 3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01.01 - 在 Mac 上安装 Python 和 PyCharm</title>
      <link href="/2020/07/14/01-01-installing-python-and-pycharm-on-a-mac/"/>
      <url>/2020/07/14/01-01-installing-python-and-pycharm-on-a-mac/</url>
      
        <content type="html"><![CDATA[<h2 id="国内用户"><a href="#国内用户" class="headerlink" title="国内用户"></a>国内用户</h2><div class="bilibili" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=413796548&bvid=BV11V41167VH&cid=212345900&page=1&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></div><h2 id="海外用户"><a href="#海外用户" class="headerlink" title="海外用户"></a>海外用户</h2><div class="youtube" style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe width="100%" height="100%" src="https://www.youtube.com/embed/CGpMjTJvdfI" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></div>]]></content>
      
      
      <categories>
          
          <category> E-Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Mac </tag>
            
            <tag> Programming </tag>
            
            <tag> macOS </tag>
            
            <tag> Training </tag>
            
            <tag> Language </tag>
            
            <tag> E-Learning </tag>
            
            <tag> JetBrains </tag>
            
            <tag> Programmer </tag>
            
            <tag> PyCharm </tag>
            
            <tag> Python 3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>升级 Kindle Oasis 到 5.13.1 版本</title>
      <link href="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/"/>
      <url>/2020/07/10/upgrade-kindle-oasis-to-5-13-1/</url>
      
        <content type="html"><![CDATA[<img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindle.jpg" class="" title="Kindle"><p>最近几天上网找书的过程中，无意中发现 <a href="https://www.amazon.com/gp/help/customer/display.html?nodeId=GKMQC26VQQMM8XSW">Kindle 有了新的固件 (5.13.1)</a>，但是我却一直没有收到推送。</p><p><a href="https://bookfere.com/post/841.html">据说</a>全部新 Kindle 设备上将会出现一项新功能：能够通过蓝牙朗读亚马逊上购买的中文电子书。只需要打开一本电子书，然后点击「阅读导航」工具栏中的耳机图标就可以体验了。</p><p>好奇害死猫啊，既然失传了已久的 Text-to-Speech 又回来了，那是一定要体验下的。自从 Kindle Touch 以后好像就再也没有体验过书籍朗读的功能了，无论是中文还是英文。</p><span id="more"></span><p>先<a href="https://www.amazon.com/gp/help/customer/display.html?nodeId=GKMQC26VQQMM8XSW">从官网下载固件</a>，准备升级。</p><p>升级前看看现在的 Kindle 版本信息，版本号为 <code>5.12.5</code>：</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindle1.png" class=""><p>下载好的固件文件：</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/bin1.png" class="" title="Update Binary"><p>连上 USB，将升级文件直接复制到 Kindle U 盘的根目录，等到完全复制完毕后，弹出 USB 设备。</p><p>然后，意外就发生了……哈哈……</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindle2.png" class=""><p>为什么不能升级呢？！因为我下错了版本，我是 Kindle Oasis 2，也就是第九代产品，我下载了 Kindle Oasis 的固件。好吧，换个姿势再来一次！</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/bin2.png" class="" title="Update Binary"><p>这次应该错不了了，导入 Kindle，断开 USB 连接。Nice，见到 Update Your Kindle 已经可以选择了，升级之～～～</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindle3.png" class=""><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindle4.png" class=""><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindle5.png" class=""><p>升级了，好久没升级了，紧脏……</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindle6.png" class=""><p>一起顺利，没有发生任何意外，很好。看看更新说明：</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindle7.png" class=""><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindle8.png" class=""><p>没啥惊喜啊，也可能是因为我用的英文版的，跟中文版的 Release Notes 不一样？</p><p>一不做二不休，换成中文看看……</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindle9.png" class=""><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindlea.png" class=""><p>好像也没有说可以支持语音阅读书籍的功能啊？</p><p>不死心，继续翻，翻了好久找到了 VoiceView 功能，毫不犹豫的打开！</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindleb.png" class=""><p>等一下，你这搞笑呢，还是逗我玩呢？什么叫请将语言设置为英文？！唉……</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindlec.png" class=""><p>好的，又重启了，小伙伴们，我又回来了，是时候见证奇迹啦！</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindled.png" class=""><p>What the f**k?! 我真的是……我忍……</p><p>按照提示，访问 <a href="http://www.amazon.com/help/kindlevoicefiles">http://www.amazon.com/help/kindlevoicefiles</a> 下载语音升级文件：</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/bin3.png" class="" title="Update Binary"><p>重复跟之前一样的升级动作，又会重启，重启后没有什么特别的，反正没失败就算成功了。</p><p>来，又到了见证奇迹的时候啦！</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindlee.png" class=""><p>真心不容易啊…… 😭 再来配对一下蓝牙设备：</p><img src="/2020/07/10/upgrade-kindle-oasis-to-5-13-1/kindlef.png" class=""><p>然后，好像就没有然后了。只能读取屏幕上操作相关的内容，而没有办法读书。</p><p>看了下网友们的评论，很多也是说无法打开这个功能（好像还没有人成功？）。</p><p>算了，不折腾了，好好看书完了，瞎折腾什么听书啊，滚去学习了……</p>]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kindle </tag>
            
            <tag> Amazon </tag>
            
            <tag> Firmware </tag>
            
            <tag> Kindle Oasis </tag>
            
            <tag> Oasis </tag>
            
            <tag> TTS </tag>
            
            <tag> Upgrade </tag>
            
            <tag> VoiceView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何进行日文输入</title>
      <link href="/2020/07/09/how-to-type-japanese/"/>
      <url>/2020/07/09/how-to-type-japanese/</url>
      
        <content type="html"><![CDATA[<img src="/2020/07/09/how-to-type-japanese/keyboard.png" class="" title="Japanese Keyboard Layout"><p>最近又开始<strong>重新</strong>学习日语了，嗯，是的，重新了好几次了，希望这次可以成功吧。</p><p>在学习清音五十音图（五十音図）的时候，终于搞清楚了各种发音的情况，但是在电脑上却无法有效地进行输入。</p><p>比如说<code>「拗音」</code>、<code>「促音」</code>以及<code>「外来词专有音节」</code>的输入就成了一个问题。</p><p>考虑到不少在学习日语的小伙伴都可能会碰到这样的问题，于是写篇文章总结下日语输入法的使用。</p><span id="more"></span><h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><p>我们学习日语一般接触到的都是用「罗马字」来表达发音的方法，比如我们最熟悉的「あいうえお」，读作「a i u e o」。</p><p>无论是纸质教材还是网络课程，这种用英文罗马字表示日语发音的方式无处不在，在日语中称之为<code>「ローマ字（Rōmaji）」</code>。</p><p>然而大家所不知道的是，这种罗马字表音的方式并不是唯一的，而是有三种，分别是：</p><ul><li><a href="https://en.wikipedia.org/wiki/Hepburn_romanization">ヘボン式（Hebon-shiki） - Hepburn</a></li><li><a href="https://en.wikipedia.org/wiki/Nihon-shiki_romanization">日本式（Nihon-shiki）</a></li><li><a href="https://en.wikipedia.org/wiki/Kunrei-shiki_romanization">訓令式（Kunrei-shiki）</a></li></ul><p>我们现在所接触到的日文罗马字，绝大多数都是以<code>「ヘボン（Hepburn）式」</code>为准的。这种表示方式最早由美国传教士 James Curtis Hepburn 于 1886 年提出。</p><p>而<code>「日本式」</code>则是由物理学家 Aikitsu Tanakadate (田中館 愛橘) 于 1885 年所发明，用于替代被广泛使用的 Hepburn 式罗马字表示法。</p><blockquote><p>这里需要说明一下，以上关于 2 种拼写方式产生的时间，我查找了很多的资料。确认 Hepburn 于 1886 年发表了（原文中为 <code>published</code>）「ヘボン式」，而愛橘的替代方案于 1885 年提提出，反而比 Hepburn 还早了一年？</p><p>我也想不明白为什么，不要问我，参考资料上就是这样说的，我什么都不知道……（无责任飘过）一个可能的解释就是在 1885 年之前<code>「ヘボン式」</code>就已经被广泛使用了，但是还没有确立标准，然后<code>「日本式」</code>就在 1885 年发布了。</p><p>以上仅为个人推断，如果有哪位知道具体的历史情况，欢迎给我留言更新此文，谢谢。</p></blockquote><p>简单说，在二战以前，歪果仁比较认同<code>ヘボン式</code>，而日本本国人则更认同<code>日本式</code>，认为其表现方式更符合日本人的发音，因此一段时间内<code>日本式</code>曾占据了主导地位。</p><p>然而，二战结束以后，米国强力介入日本国，要求日本政府在各地都要使用<code>ヘボン式</code>来标注街道等的名称，以方便不会日语的米国人更好的沟通。简单理解就像现在中国的路牌上都有拼音标注一样，只不过不给日本人用自己喜欢的拼音标注方式，而被强制使用了米国人喜欢的标注方式而已。</p><p>在这之后，日本政府曾多次想要扭转这一局面，然而回天乏力，最后在妥协之下，产生了<code>「訓令式」</code>这一产物。这是日本政府在 1937 年以内阁训令第 3 号公布的，在 1954 年修订后，又以内阁训令第 1 号重新公布。它是在<code>日本式</code>基础上结合（妥协）了<code>ヘボン式</code>而产生的，虽然使用频率很低，但它却是实打实的日文罗马字标准，因为有个叫 ISO 的组织说它符合 ISO 3602 规范，你懂的。</p><p>你可能会说，说了这么多废话，跟我用电脑输入日文有半毛钱关系吗？有！</p><p>比如说，「じ」和「ぢ」用<code>ヘボン式</code>表示，发音都是 <code>ji</code>，而「ず」和「づ」都是 <code>zu</code>，那么请问你要怎么输入？答案晚点揭晓，我们先看一下三者表音的区别。</p><style type="text/css">.tg  {border-collapse:collapse;border-spacing:0;}.tg td{border-color:black;border-style:solid;border-width:1px;overflow:hidden;padding:10px 5px;word-break:normal;}.tg th{border-color:black;border-style:solid;border-width:1px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}.tg .tg-normal{text-align:center;vertical-align:top}.tg .tg-bold{font-weight:abcd;text-align:center;vertical-align:top}@media screen and (max-width: 767px) {.tg {width: auto !important;}.tg col {width: auto !important;}.tg-wrap {overflow-x: auto;-webkit-overflow-scrolling: touch;margin: auto 0px;}}</style><div class="tg-wrap"><table class="tg"><thead>  <tr>    <th class="tg-normal"></th>    <th class="tg-bold">ヘボン式</th>    <th class="tg-bold">日本式</th>    <th class="tg-bold">訓令式</th>  </tr></thead><tbody>  <tr>    <td class="tg-bold">し</td>    <td class="tg-normal">shi</td>    <td class="tg-normal" colspan="2">si</td>  </tr>  <tr>    <td class="tg-bold">しゃ</td>    <td class="tg-normal">sha</td>    <td class="tg-normal" colspan="2">sya</td>  </tr>  <tr>    <td class="tg-bold">ち</td>    <td class="tg-normal">chi</td>    <td class="tg-normal" colspan="2">ti</td>  </tr>  <tr>    <td class="tg-bold">つ</td>    <td class="tg-normal">tsu</td>    <td class="tg-normal" colspan="2">tu</td>  </tr>  <tr>    <td class="tg-bold">ちゃ</td>    <td class="tg-normal">cha</td>    <td class="tg-normal" colspan="2">tya</td>  </tr>  <tr>    <td class="tg-bold">ふ</td>    <td class="tg-normal">fu</td>    <td class="tg-normal" colspan="2">hu</td>  </tr>  <tr>    <td class="tg-bold">じ</td>    <td class="tg-normal">ji</td>    <td class="tg-normal" colspan="2">zi</td>  </tr>  <tr>    <td class="tg-bold">じゃ</td>    <td class="tg-normal">ja</td>    <td class="tg-normal" colspan="2">zya</td>  </tr>  <tr>    <td class="tg-bold">ぢ</td>    <td class="tg-normal">ji</td>    <td class="tg-normal">di</td>    <td class="tg-normal">zi</td>  </tr>  <tr>    <td class="tg-bold">づ</td>    <td class="tg-normal">zu</td>    <td class="tg-normal">du</td>    <td class="tg-normal">zu</td>  </tr>  <tr>    <td class="tg-bold">ぢゃ</td>    <td class="tg-normal">ja</td>    <td class="tg-normal">dya</td>    <td class="tg-normal">zya</td>  </tr></tbody></table></div><p>上面列出了三种罗马字表音的主要区别，对于大部分日语输入法来说，我们使用<code>ヘボン式</code>就好了，因为几乎没有日语输入法不支持。</p><p>唯一值得注意的是，<code>ぢ（di）</code>、<code>づ（du）</code>、<code>ぢゃ（dya）</code>这类日语的输入，必须要使用 <code>d</code>，否则很多时候会没有办法输入想要输入的字，当然读音还是按照原来的读音来读，只是输入的时候打的英文字母不同而已。</p><p>本着练习的精神，我就用电脑把把五十音图都打了一遍，着实费了不少功夫。主要是制作表格，中日英三语切换实在有点痛苦。</p><p>每个假名的输入，在表格中我都给出了对应的英文罗马字供参考。</p><h2 id="五十音图"><a href="#五十音图" class="headerlink" title="五十音图"></a>五十音图</h2><h3 id="清音"><a href="#清音" class="headerlink" title="清音"></a>清音</h3><div class="tg-wrap"><table class="tg"><thead>  <tr>    <th class="tg-normal"></th>    <th class="tg-bold">あ段</th>    <th class="tg-bold">い段</th>    <th class="tg-bold">う段</th>    <th class="tg-bold">え段</th>    <th class="tg-bold">お段</th>  </tr></thead><tbody>  <tr>    <td class="tg-bold">あ行<br>a</td>    <td class="tg-normal">あ　ア<br>a</td>    <td class="tg-normal">い　イ<br>i</td>    <td class="tg-normal">う　ウ<br>u</td>    <td class="tg-normal">え　エ<br>e</td>    <td class="tg-normal">お　オ<br>o</td>  </tr>  <tr>    <td class="tg-bold">か行<br>k</td>    <td class="tg-normal">か　カ<br>ka</td>    <td class="tg-normal">き　キ<br>ki</td>    <td class="tg-normal">く　ク<br>ku</td>    <td class="tg-normal">け　ケ<br>ke</td>    <td class="tg-normal">こ　コ<br>ko</td>  </tr>  <tr>    <td class="tg-bold">さ行<br>s</td>    <td class="tg-normal">さ　サ<br>sa</td>    <td class="tg-normal">し　シ<br>shi</td>    <td class="tg-normal">す　ス<br>su</td>    <td class="tg-normal">せ　セ<br>se</td>    <td class="tg-normal">そ　ソ<br>so</td>  </tr>  <tr>    <td class="tg-bold">た行<br>t</td>    <td class="tg-normal">た　タ<br>ta</td>    <td class="tg-normal">ち　チ<br>chi</td>    <td class="tg-normal">つ　ツ<br>tsu</td>    <td class="tg-normal">て　テ<br>te</td>    <td class="tg-normal">と　ト<br>to</td>  </tr>  <tr>    <td class="tg-bold">な行<br>n</td>    <td class="tg-normal">な　ナ<br>na</td>    <td class="tg-normal">に　ニ<br>ni</td>    <td class="tg-normal">ぬ　ヌ<br>nu</td>    <td class="tg-normal">ね　ネ<br>ne</td>    <td class="tg-normal">の　ノ<br>no</td>  </tr>  <tr>    <td class="tg-bold">は行<br>h</td>    <td class="tg-normal">は　ハ<br>ha</td>    <td class="tg-normal">ひ　ヒ<br>hi</td>    <td class="tg-normal">ふ　フ<br>fu</td>    <td class="tg-normal">へ　ヘ<br>he</td>    <td class="tg-normal">ほ　ホ<br>ho</td>  </tr>  <tr>    <td class="tg-bold">ま行<br>m</td>    <td class="tg-normal">ま　マ<br>ma</td>    <td class="tg-normal">み　ミ<br>mi</td>    <td class="tg-normal">む　ム<br>mu</td>    <td class="tg-normal">め　メ<br>me</td>    <td class="tg-normal">も　モ<br>mo</td>  </tr>  <tr>    <td class="tg-bold">や行<br>y</td>    <td class="tg-normal">や　ヤ<br>ya</td>    <td class="tg-normal"></td>    <td class="tg-normal">ゆ　ユ<br>yu</td>    <td class="tg-normal"></td>    <td class="tg-normal">よ　ヨ<br>yo</td>  </tr>  <tr>    <td class="tg-bold">ら行<br>r</td>    <td class="tg-normal">ら　ラ<br>ra</td>    <td class="tg-normal">り　リ<br>ri</td>    <td class="tg-normal">る　ル<br>ru</td>    <td class="tg-normal">れ　レ<br>re</td>    <td class="tg-normal">ろ　ロ<br>ro</td>  </tr>  <tr>    <td class="tg-bold">わ行<br>w</td>    <td class="tg-normal">わ　ワ<br>wa</td>    <td class="tg-normal"></td>    <td class="tg-normal"></td>    <td class="tg-normal"></td>    <td class="tg-normal">を　ヲ<br>wo (o)</td>  </tr>  <tr>    <td class="tg-normal"></td>    <td class="tg-normal">ん　ン<br>nn (n)</td>    <td class="tg-normal"></td>    <td class="tg-normal"></td>    <td class="tg-normal"></td>    <td class="tg-normal"></td>  </tr></tbody></table></div><blockquote><p>注：上表中的英文字母为输入该日文字所按的按键，不一定代表其读音。如果有括号的，则括号内为其真正读音。<br>注2：本文统一使用<code>ヘボン式</code>来表示发音。</p></blockquote><h3 id="浊音"><a href="#浊音" class="headerlink" title="浊音"></a>浊音</h3><div class="tg-wrap"><table class="tg"><thead>  <tr>    <th class="tg-normal"></th>    <th class="tg-bold">あ段</th>    <th class="tg-bold">い段</th>    <th class="tg-bold">う段</th>    <th class="tg-bold">え段</th>    <th class="tg-bold">お段</th>  </tr></thead><tbody>  <tr>    <td class="tg-bold">が行<br>g</td>    <td class="tg-normal">が　ガ<br>ga</td>    <td class="tg-normal">ぎ　ギ<br>gi</td>    <td class="tg-normal">ぐ　グ<br>gu</td>    <td class="tg-normal">げ　ゲ<br>ge</td>    <td class="tg-normal">ご　ゴ<br>go</td>  </tr>  <tr>    <td class="tg-bold">ざ行<br>z</td>    <td class="tg-normal">ざ　ザ<br>za</td>    <td class="tg-normal">じ　ジ<br>ji</td>    <td class="tg-normal">ず　ズ<br>zu</td>    <td class="tg-normal">ぜ　ゼ<br>ze</td>    <td class="tg-normal">ぞ　ゾ<br>zo</td>  </tr>  <tr>    <td class="tg-bold">だ行<br>d</td>    <td class="tg-normal">だ　ダ<br>da</td>    <td class="tg-normal">ぢ　ヂ<br>di (ji)</td>    <td class="tg-normal">づ　ヅ<br>du (zu)</td>    <td class="tg-normal">で　デ<br>de</td>    <td class="tg-normal">ど　ド<br>do</td>  </tr>  <tr>    <td class="tg-bold">ば行<br>b</td>    <td class="tg-normal">ば　バ<br>ba</td>    <td class="tg-normal">び　ビ<br>bi</td>    <td class="tg-normal">ぶ　ブ<br>bu</td>    <td class="tg-normal">べ　ベ<br>be</td>    <td class="tg-normal">ぼ　ボ<br>bo</td>  </tr>  <tr>    <td class="tg-bold">ぱ行<br>p</td>    <td class="tg-normal">ぱ　パ<br>pa</td>    <td class="tg-normal">ぴ　ピ<br>pi</td>    <td class="tg-normal">ぷ　プ<br>pu</td>    <td class="tg-normal">ぺ　ペ<br>pe</td>    <td class="tg-normal">ぽ　ポ<br>po</td>  </tr></tbody></table></div><h3 id="拗音"><a href="#拗音" class="headerlink" title="拗音"></a>拗音</h3><div class="tg-wrap"><table class="tg"><thead>  <tr>    <th class="tg-normal"></th>    <th class="tg-bold">あ段</th>    <th class="tg-bold">う段</th>    <th class="tg-bold">お段</th>  </tr></thead><tbody>  <tr>    <td class="tg-bold">きゃ行<br>ky</td>    <td class="tg-normal">きゃ　キャ<br>kya</td>    <td class="tg-normal">きゅ　キュ<br>kyu</td>    <td class="tg-normal">きょ　キョ<br>kyo</td>  </tr>  <tr>    <td class="tg-bold">しゃ行<br>sh</td>    <td class="tg-normal">しゃ　シャ<br>sha</td>    <td class="tg-normal">しゅ　シュ<br>shu</td>    <td class="tg-normal">しょ　ショ<br>sho</td>  </tr>  <tr>    <td class="tg-bold">ちゃ行<br>ch</td>    <td class="tg-normal">ちゃ　チャ<br>cha</td>    <td class="tg-normal">ちゅ　チュ<br>chu</td>    <td class="tg-normal">ちょ　チョ<br>cho</td>  </tr>  <tr>    <td class="tg-bold">にゃ行<br>ny</td>    <td class="tg-normal">にゃ　ニャ<br>nya</td>    <td class="tg-normal">にゅ　ニュ<br>nyu</td>    <td class="tg-normal">にょ　ニョ<br>nyo</td>  </tr>  <tr>    <td class="tg-bold">ひゃ行<br>hy</td>    <td class="tg-normal">ひゃ　ヒャ<br>hya</td>    <td class="tg-normal">ひゅ　ヒュ<br>hyu</td>    <td class="tg-normal">ひょ　ヒョ<br>hyo</td>  </tr>  <tr>    <td class="tg-bold">みゃ行<br>my</td>    <td class="tg-normal">みゃ　ミャ<br>mya</td>    <td class="tg-normal">みゅ　ミュ<br>myu</td>    <td class="tg-normal">みょ　ミョ<br>myo</td>  </tr>  <tr>    <td class="tg-bold">りゃ行<br>ry</td>    <td class="tg-normal">りゃ　リャ<br>rya</td>    <td class="tg-normal">りゅ　リュ<br>ryu</td>    <td class="tg-normal">りょ　リョ<br>ryo</td>  </tr>  <tr>    <td class="tg-bold">ぎゃ行<br>gy</td>    <td class="tg-normal">ぎゃ　ギャ<br>gya</td>    <td class="tg-normal">ぎゅ　ギュ<br>gyu</td>    <td class="tg-normal">ぎょ　ギョ<br>gyo</td>  </tr>  <tr>    <td class="tg-bold">じゃ行<br>j</td>    <td class="tg-normal">じゃ　ジャ<br>ja</td>    <td class="tg-normal">じゅ　ジュ<br>ju</td>    <td class="tg-normal">じょ　ジョ<br>jo</td>  </tr>  <tr>    <td class="tg-bold">びゃ行<br>by</td>    <td class="tg-normal">びゃ　ビャ<br>bya</td>    <td class="tg-normal">びゅ　ビュ<br>byu</td>    <td class="tg-normal">びょ　ビョ<br>byo</td>  </tr>  <tr>    <td class="tg-bold">ぴゃ行<br>py</td>    <td class="tg-normal">ぴゃ　ピャ<br>pya</td>    <td class="tg-normal">ぴゅ　ピュ<br>pyu</td>    <td class="tg-normal">ぴょ　ピョ<br>pyo</td>  </tr></tbody></table></div><h3 id="外来词专用音节"><a href="#外来词专用音节" class="headerlink" title="外来词专用音节"></a>外来词专用音节</h3><p>相信上面这些大家看起来都很简单，没有什么难度。另外一个有点特殊的是外来词。</p><p>在日语中有非常多的外来词，而片假名就是为表示外来词而专门存在的，因此有以下一些上述表格中没有的外来词专用音节。</p><div class="tg-wrap"><table class="tg"><tbody>  <tr>    <th class="tg-normal">ツァ<br>tsa</th>    <th class="tg-normal">ファ<br>fa</th>    <th class="tg-normal"></th>    <th class="tg-normal"></th>    <th class="tg-normal"></th>    <th class="tg-normal"></th>  </tr>  <tr>    <td class="tg-normal">ウィ<br>wi</td>    <td class="tg-normal">ティ<br>thi (ti)</td>    <td class="tg-normal">フィ<br>fi</td>    <td class="tg-normal">ディ<br>dhi (di)</td>    <td class="tg-normal"></td>    <td class="tg-normal"></td>  <tr>    <td class="tg-normal">トゥ<br>twu (tu)</td>    <td class="tg-normal">ドゥ<br>dwu (du)</td>    <td class="tg-normal">デュ<br>dhu (dyu)</td>    <td class="tg-normal"></td>    <td class="tg-normal"></td>    <td class="tg-normal"></td>  <tr>    <td class="tg-normal">ウェ<br>we</td>    <td class="tg-normal">シェ<br>she</td>    <td class="tg-normal">チェ<br>che</td>    <td class="tg-normal">ツェ<br>tse</td>    <td class="tg-normal">フェ<br>fe</td>    <td class="tg-normal">ジェ<br>je</td>  <tr>    <td class="tg-normal">ウォ<br>who (wo)</td>    <td class="tg-normal">ツォ<br>tso</td>    <td class="tg-normal">フォ<br>fo</td>    <td class="tg-normal"></td>    <td class="tg-normal"></td>    <td class="tg-normal"></td>  </tr></tbody></table></div><blockquote><p>注：上表中的英文字母为输入该日文字所按的按键，不一定代表其读音。如果有括号的，则括号内为其真正读音。<br>注2：本文统一使用<code>ヘボン式</code>来表示发音。</p></blockquote><p>这里细心的朋友会发现，输入的文字里面有个 <code>x</code>，为什么直接输入不了呢？</p><p>参考上面我们对比的三种罗马字表示方式，其中 <code>du</code>、<code>tu</code>、<code>wo</code> 等都已经被占用了，没有办法唯一表示相关的发音，所以就多了一个 <code>x</code> 出来。</p><p>具体的输入方法和原理，请参考本文中<code>「电脑输入」</code>章节的<a href="#%E5%B0%8F%E5%86%99%E5%81%87%E5%90%8D"><code>「小写假名」</code></a>部分。</p><h2 id="电脑输入"><a href="#电脑输入" class="headerlink" title="电脑输入"></a>电脑输入</h2><p>学习日语的时候，用纸笔手写是很简单的。像上面介绍的假名输入也比较简单，但除了上面提到的，我们还需要了解一些特殊的输入。</p><h3 id="拨音"><a href="#拨音" class="headerlink" title="拨音"></a>拨音</h3><p>拨音<code>ん</code>直接按两个 <code>n</code> 就可以了，非常简单。</p><p>很多输入法现在都很智能了，在连续输入句子的时候，我们可以偷懒，只打一个 <code>n</code> 也是可以被正常识别的。</p><h3 id="促音"><a href="#促音" class="headerlink" title="促音"></a>促音</h3><p>日语中的促音，也就是小<code>っ</code>，有两种输入方式。</p><p>第一种，是在出现促音的地方后面，重复紧跟着的第一个辅音，比如：</p><ul><li>おっと（夫） - otto</li><li>さっか（作家）- sakka</li><li>くっし（屈指）- kusshi</li></ul><p>另外一种就是输入的时候，使用 <code>x</code> 和 <code>l</code> 进行小写假名的输入，比如：</p><ul><li>おっと（夫） - oxtsuto</li><li>さっか（作家）- saxtuka</li><li>くっし（屈指）- kultushi</li></ul><p>记得我们最开始在<a href="#%E5%8E%86%E5%8F%B2"><code>历史介绍</code></a>部分做的对比图吗？不记得的话，就返回前面看看。</p><p>现在想起来了<code>つ</code>的几种拼法了吧？因此我们输入小<code>っ</code>的时候可以用 <code>xtsu</code>、<code>xtu</code>、<code>ltsu</code>、<code>ltu</code> 都是可以的，看自己的使用习惯就好了。</p><h3 id="长音"><a href="#长音" class="headerlink" title="长音"></a>长音</h3><p>长音的输入分为平假名和片假名，平假名的输入很简单，根据规则多打一个元音就可以了。比如：<code>おかあさん</code>、<code>せんせい</code>、<code>おとうさん</code>。</p><p>片假名就更简单了，直接都不用大脑的，直接按键盘 <code>0</code> 后面的减号 <code>-</code> 一下就解决问题了！比如：<code>サッカー</code>。</p><h3 id="小写假名"><a href="#小写假名" class="headerlink" title="小写假名"></a>小写假名</h3><p>对于有小写假名的字来说，我们都可以用 <code>x</code> 或者 <code>l</code> 再加上对应假名的罗马字得到小写的假名。</p><p>就好像我们上面在介绍<a href="#%E4%BF%83%E9%9F%B3"><code>促音</code></a>输入时候介绍的第二种方法，对于<code>ぁ</code>、<code>ぃ</code>、<code>ぅ</code>、<code>ぇ</code>、<code>ぉ</code>等统统适用。</p><p>比如<code>ぁ</code>的输入可以是 <code>xa</code>，也可以是 <code>la</code>，其它的小写假名以此类推，这里就不再赘述了。</p><h3 id="ぢ、づ、は和を"><a href="#ぢ、づ、は和を" class="headerlink" title="ぢ、づ、は和を"></a><code>ぢ</code>、<code>づ</code>、<code>は</code>和<code>を</code></h3><p>在清音图表中，我已经标明了<code>ぢ</code>的读音为 <code>ji</code>，但是输入的时候应该输入 <code>di</code>。同样<code>づ</code>的读音为 <code>zu</code>，但是输入的时候为 <code>du</code>。</p><p>日语中<code>は</code>在作助词使用时其读音为 <code>wa</code>，但作为键盘输入时，仍然使用 <code>ha</code>。</p><p>同样还有最后一行的<code>を</code>，其读音为 <code>o</code>，但输入时为 <code>wo</code>，用以区分<code>お</code>。</p><h3 id="ゐ和ゑ"><a href="#ゐ和ゑ" class="headerlink" title="ゐ和ゑ"></a><code>ゐ</code>和<code>ゑ</code></h3><p><code>ゐ</code>和<code>ゑ</code>属于古语假名，现在已经不使用了（或者使用的比较少？很多地方教学都不教了）。</p><p><code>ゐ</code>用 <code>wi</code> 输入，<code>ゑ</code>用 <code>we</code> 输入，然后不停地按空格键寻找就可以了。😁</p><h3 id="汉字"><a href="#汉字" class="headerlink" title="汉字"></a>汉字</h3><p>将输入法切换到<code>平仮名（Hiragana）</code>状态，按照发音输入对应的假名，输入完成后按空格键，这个时候会弹出候选字清单。</p><p>可以不断的按空格键选择下一个字或者词组，也可以通过上下键来选择。当找到想输入的汉字时再按回车键，即可完成相应汉字地输入。</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>如何安装输入法？这个参考对应系统的资料就好了，现在主流的系统基本都自带了，不用另外再安装了。</p><p>Windows 10 用户，请参考<a href="https://support.microsoft.com/zh-cn/help/4496404#input_language">《管理 Windows 10 中的输入语言设置和显示语言设置》</a>。</p><p>macOS Catalina 10.15 用户，请参考<a href="https://support.apple.com/zh-cn/guide/mac-help/mchlp1406/mac">《在 Mac 上用输入法以另一种语言键入》</a>。</p><p>Linux 用户，请自行 Google，你都用 Linux 了，不要懒！这点小问题还解决不了，你还用什么 Linux，也太小瞧我的智商了吧？！</p><p>另外，日语除了使用罗马字输入外，还可以用日语键盘的方式输入，大家可以理解为日本人用的<code>五笔输入法</code>或<code>双拼输入法</code>。本文题图所展示的就是一个标准的日语键盘，每个按键上都有对应的假名。不过对于中国人来说，能用罗马字方式来输入日语就已经足够了，因此本文不涉及该输入方式的介绍，如有需要请自行查找相关资料。</p><p>最后，祝大家学有所成，早日实现日语无障碍交流！😊</p><h2 id="更新说明"><a href="#更新说明" class="headerlink" title="更新说明"></a>更新说明</h2><blockquote><p>更新时间：2020.08.08</p></blockquote><p>之前文章<a href="https://zhuanlan.zhihu.com/p/158389216">同步在「知乎」以后</a>，有网友留言，说是<code>「デュ」</code>用<code>「dhu」</code>就可以输入了。</p><p>于是乎又做了一下功课，更新了一下内容，其中主要的变化如下：</p><div class="tg-wrap"><table class="tg"><thead>  <tr>    <th class="tg-bold">片假名</th>    <th class="tg-bold">发音</th>    <th class="tg-bold">输入方式</th>    <th class="tg-bold">其它方式</th>  </tr></thead><tbody>  <tr>    <th class="tg-normal">ティ</th>    <th class="tg-normal">ti</th>    <th class="tg-normal">thi</th>    <th class="tg-normal">texi / teli</th>  </tr>  <tr>    <td class="tg-normal">ディ</td>    <td class="tg-normal">di</td>    <td class="tg-normal">dhi</td>    <td class="tg-normal">dexi / deli</td>  <tr>    <td class="tg-normal">トゥ</td>    <td class="tg-normal">tu</td>    <td class="tg-normal">twu</td>    <td class="tg-normal">toxu / tolu</td>  <tr>    <td class="tg-normal">ドゥ</td>    <td class="tg-normal">du</td>    <td class="tg-normal">dwu</td>    <td class="tg-normal">doxu / dolu</td>  <tr>    <td class="tg-normal">デュ</td>    <td class="tg-normal">dyu</td>    <td class="tg-normal">dhu</td>    <td class="tg-normal">dexyu / delyu</td>  </tr>  <tr>    <td class="tg-normal">ウォ</td>    <td class="tg-normal">wo</td>    <td class="tg-normal">who</td>    <td class="tg-normal">uxo / ulo</td>  </tr></tbody></table></div><p>参考网站：</p><ul><li><a href="https://otaguma.com/dhu_roma/">あれ…「デュ」ってローマ字入力の仕方どうしてたっけ！？今更ながら確認したのでメモ。</a></li><li><a href="https://oshiete.goo.ne.jp/qa/2102298.html">「ウォ」って変換する方法</a></li><li><a href="https://enjoy.sso.biglobe.ne.jp/archives/post/">「ツァ」や「トゥ」をキーボードで打つ方法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Study </tag>
            
            <tag> Hiragana </tag>
            
            <tag> IME </tag>
            
            <tag> Input </tag>
            
            <tag> Japanese </tag>
            
            <tag> Katakana </tag>
            
            <tag> Language </tag>
            
            <tag> Romaji </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换 FreeNAS 中损坏的硬盘</title>
      <link href="/2020/07/08/replace-failing-disks-in-freenas/"/>
      <url>/2020/07/08/replace-failing-disks-in-freenas/</url>
      
        <content type="html"><![CDATA[<img src="/2020/07/08/replace-failing-disks-in-freenas/freenas.png" class="" title="FreeNAS"><p>在 2015 年的时候，使用 <a href="https://www.freenas.org/">FreeNAS</a> 配置了一台 <a href="https://en.wikipedia.org/wiki/Network-attached_storage">NAS</a> 服务器，用于家庭网络内储存数据方便共享。</p><p>因为贫穷，所以选择了蓝盘作为数据存储盘，没办法，就是这么屌丝。</p><p>那个时候的蓝盘其实就是早期的绿盘，理论上是不适用于 NAS 这种网络存储的，因为它磁头归位时间为 8 秒，长期开机使用很快就会坏掉。</p><p>但是伟大的网友们发现了 <a href="https://support.wdc.com/downloads.aspx?p=113">WDIDLE3</a> 这个工具，可以把<a href="https://www.ixsystems.com/community/threads/hacking-wd-greens-and-reds-with-wdidle3-exe.18171/">磁头归位时间</a>调整为 300 秒（也就是 5 分钟），于是乎就有了下面的故事。</p><span id="more"></span><h2 id="排查问题"><a href="#排查问题" class="headerlink" title="排查问题"></a>排查问题</h2><p>某年某月的某一天，NAS 开机用了十几分钟还不能正常提供服务，开关机速度都很慢。</p><p>于是乎登录终端，检查一下 FreeNAS 的状态，发现其中一块硬盘挂了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$ zpool status</span><br><span class="line">  pool: freenas-boot</span><br><span class="line"> state: ONLINE</span><br><span class="line">  scan: scrub repaired 0 <span class="keyword">in</span> 0h9m with 0 errors on Wed Mar 22 03:54:02 2017</span><br><span class="line">config:</span><br><span class="line"></span><br><span class="line">NAME                                          STATE     READ WRITE CKSUM</span><br><span class="line">freenas-boot                                  ONLINE       0     0     0</span><br><span class="line">  gptid/003f3068-e99c-11e4-9c07-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line"></span><br><span class="line">errors: No known data errors</span><br><span class="line"></span><br><span class="line">  pool: nas</span><br><span class="line"> state: DEGRADED</span><br><span class="line">status: One or more devices could not be opened.  Sufficient replicas exist <span class="keyword">for</span></span><br><span class="line">the pool to <span class="built_in">continue</span> functioning <span class="keyword">in</span> a degraded state.</span><br><span class="line">action: Attach the missing device and online it using <span class="string">&#x27;zpool online&#x27;</span>.</span><br><span class="line">   see: http://illumos.org/msg/ZFS-8000-2Q</span><br><span class="line">  scan: resilvered 1.55M <span class="keyword">in</span> 0h16m with 0 errors on Fri Jul  3 16:47:13 2020</span><br><span class="line">config:</span><br><span class="line"></span><br><span class="line">NAME                                            STATE     READ WRITE CKSUM</span><br><span class="line">nas                                             DEGRADED     0     0     0</span><br><span class="line">  raidz2-0                                      DEGRADED     0     0     0</span><br><span class="line">    gptid/8bc84eb2-a099-11e5-8fd4-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    gptid/4f6e78a5-a166-11e5-bb78-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    gptid/4c4a9c43-a00e-11e5-bf62-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    gptid/103acf85-a043-11e5-b6db-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    209564843571883103                          UNAVAIL      0     0     0  was /dev/gptid/391e53c2-a06f-11e5-8ff9-0cc47a0742be</span><br><span class="line">    gptid/18324016-a19e-11e5-82be-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line"></span><br><span class="line">errors: No known data errors</span><br></pre></td></tr></table></figure><p>按状态说明来看是设备无法打开，但好在冗余备份的磁盘数量足够，所以阵列正运行在**「降级」**状态。</p><p>接下来我们看一下**已失效（UNAVAIL）**的硬盘对应的是哪一个设备符号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ glabel status</span><br><span class="line">                                      Name  Status  Components</span><br><span class="line">gptid/4c33da40-a00e-11e5-bf62-0cc47a0742be     N/A  ada0p1</span><br><span class="line">gptid/4c4a9c43-a00e-11e5-bf62-0cc47a0742be     N/A  ada0p2</span><br><span class="line">gptid/102588a3-a043-11e5-b6db-0cc47a0742be     N/A  ada1p1</span><br><span class="line">gptid/103acf85-a043-11e5-b6db-0cc47a0742be     N/A  ada1p2</span><br><span class="line">gptid/390a21f0-a099-11e5-8fd4-0cc47a0742be     N/A  ada2p1</span><br><span class="line">gptid/391e53c2-a099-11e5-8fd4-0cc47a0742be     N/A  ada2p2</span><br><span class="line">gptid/4f56fc6c-a166-11e5-bb78-0cc47a0742be     N/A  ada3p1</span><br><span class="line">gptid/4f6e78a5-a166-11e5-bb78-0cc47a0742be     N/A  ada3p2</span><br><span class="line">gptid/181aee26-a19e-11e5-82be-0cc47a0742be     N/A  ada4p1</span><br><span class="line">gptid/18324016-a19e-11e5-82be-0cc47a0742be     N/A  ada4p2</span><br><span class="line">gptid/00370b53-e99c-11e4-9c07-0cc47a0742be     N/A  da0p1</span><br><span class="line">gptid/003f3068-e99c-11e4-9c07-0cc47a0742be     N/A  da0p2</span><br></pre></td></tr></table></figure><p>可以看到对应的磁盘分区为 <code>ada2p2</code> 也就是磁盘 <code>ada2</code>，我们可以查看一下 S.M.A.R.T. 信息，看看有没有什么有价值的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo smartctl -a /dev/ada2</span><br></pre></td></tr></table></figure><p>通过检查发现该磁盘的 <code>Seek_Error_Rate</code> 异常的高，而其它磁盘都是 0 错误，基本上可以判定是硬件损坏，软件修复是不可能了。</p><p>本想着随便检查检查磁盘就修复了，没想到……</p><p>不说了，心疼钱包一秒钟，买硬盘去了…… (╥╯^╰╥)</p><h2 id="更换故障硬盘"><a href="#更换故障硬盘" class="headerlink" title="更换故障硬盘"></a>更换故障硬盘</h2><img src="/2020/07/08/replace-failing-disks-in-freenas/new.jpg" class="" title="New HDD"><p>新硬盘到货，更换之前先确认是哪一块硬盘有问题，通过下面的命令获得硬盘序列号，以方便后续更换：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo smartctl -a /dev/ada2 | grep Serial</span><br><span class="line">Serial Number:    WD-WCC4E6CV0445</span><br></pre></td></tr></table></figure><h3 id="阵列磁盘离线"><a href="#阵列磁盘离线" class="headerlink" title="阵列磁盘离线"></a>阵列磁盘离线</h3><p>在换硬盘之前还有一个动作要做，就是把有问题的硬盘做离线（OFFLINE）操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ sudo zpool offline nas /dev/gptid/391e53c2-a06f-11e5-8ff9-0cc47a0742be</span><br><span class="line">$ zpool status</span><br><span class="line">  pool: freenas-boot</span><br><span class="line"> state: ONLINE</span><br><span class="line">  scan: scrub repaired 0 <span class="keyword">in</span> 0h9m with 0 errors on Wed Mar 22 03:54:02 2017</span><br><span class="line">config:</span><br><span class="line"></span><br><span class="line">NAME                                          STATE     READ WRITE CKSUM</span><br><span class="line">freenas-boot                                  ONLINE       0     0     0</span><br><span class="line">  gptid/003f3068-e99c-11e4-9c07-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line"></span><br><span class="line">errors: No known data errors</span><br><span class="line"></span><br><span class="line">  pool: nas</span><br><span class="line"> state: DEGRADED</span><br><span class="line">status: One or more devices has been taken offline by the administrator.</span><br><span class="line">Sufficient replicas exist <span class="keyword">for</span> the pool to <span class="built_in">continue</span> functioning <span class="keyword">in</span> a</span><br><span class="line">degraded state.</span><br><span class="line">action: Online the device using <span class="string">&#x27;zpool online&#x27;</span> or replace the device with</span><br><span class="line"><span class="string">&#x27;zpool replace&#x27;</span>.</span><br><span class="line">  scan: resilvered 1.55M <span class="keyword">in</span> 0h16m with 0 errors on Fri Jul  3 16:47:13 2020</span><br><span class="line">config:</span><br><span class="line"></span><br><span class="line">NAME                                            STATE     READ WRITE CKSUM</span><br><span class="line">nas                                             DEGRADED     0     0     0</span><br><span class="line">  raidz2-0                                      DEGRADED     0     0     0</span><br><span class="line">    gptid/8bc84eb2-a099-11e5-8fd4-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    gptid/4f6e78a5-a166-11e5-bb78-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    gptid/4c4a9c43-a00e-11e5-bf62-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    gptid/103acf85-a043-11e5-b6db-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    209564843571883103                          OFFLINE      0     0     0  was /dev/gptid/391e53c2-a06f-11e5-8ff9-0cc47a0742be</span><br><span class="line">    gptid/18324016-a19e-11e5-82be-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line"></span><br><span class="line">errors: No known data errors</span><br></pre></td></tr></table></figure><h3 id="更换硬盘"><a href="#更换硬盘" class="headerlink" title="更换硬盘"></a>更换硬盘</h3><p>就是这个倒霉货！</p><img src="/2020/07/08/replace-failing-disks-in-freenas/old.jpg" class="" title="Failed HDD"><p>不过想想质保只有 2 年的硬盘，使用了 4 年半快 5 年，也算是可以了，毕竟不是服务器硬盘不是。</p><p>剩下的工作就跟平常组装电脑一样，拆开机箱，找到坏了的旧硬盘，卸下来，装上新硬盘，接好各种电源线、数据线，完工。</p><p>唯一有点烦的就是，线太多，硬盘太多，要拆一个硬盘出来，得拆好几个硬盘。</p><img src="/2020/07/08/replace-failing-disks-in-freenas/hdd.jpg" class="" title="HDD Cage"><p>这个经验教训教育我们，如果可以买快拆，免工具，推拉盒式的硬盘架，还是买吧，不要省钱。</p><p>毕竟花钱买个开心，图个方便和省心，相信我……不要跟自己过不去，能花钱解决的问题都不是问题！</p><p>问题是：没钱…… 😭</p><h3 id="重建磁盘阵列"><a href="#重建磁盘阵列" class="headerlink" title="重建磁盘阵列"></a>重建磁盘阵列</h3><p>因为我用的是 <a href="https://www.ixsystems.com/community/threads/important-announcement-regarding-freenas-corral.53502/">FreeNAS 10 Corral</a> 这个倒霉的，官方已经完全不支持的，充话费送的货。</p><p>所以网上找到的所有基于 Web UI 界面操作的方式都不可用，只能自己摸索，最后发现要在 FreeNAS 的 Console（控制台）中操作，进行替换。</p><p>虽然网上也有说通过 Shell 登录来替换磁盘的，但是替换了以后的磁盘并没有使用 GPTID 的方式标识，这样将来硬盘换位置什么的，很容易导致阵列的失效或者数据丢失。</p><p>而在 Console 中操作则没有这种问题，最终也是用 GPTID 方式来标识阵列中的磁盘的。</p><p>首先看看磁盘情况（以下操作在 FreeNAS 终端下操作完成）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volume nas show_disks</span><br></pre></td></tr></table></figure><p>确认我们新的硬盘已经就位，被系统正确识别，且设备号为 <code>ada2</code>，开始重建阵列：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">volume nas replace gptid/391e53c2-a06f-11e5-8ff9-0cc47a0742be ada2</span><br></pre></td></tr></table></figure><p>重新回到 FreeNAS 的命令行 Shell，查看阵列状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$ zpool status</span><br><span class="line">  pool: freenas-boot</span><br><span class="line"> state: ONLINE</span><br><span class="line">  scan: scrub repaired 0 <span class="keyword">in</span> 0h9m with 0 errors on Wed Mar 22 03:54:02 2017</span><br><span class="line">config:</span><br><span class="line"></span><br><span class="line">NAME                                          STATE     READ WRITE CKSUM</span><br><span class="line">freenas-boot                                  ONLINE       0     0     0</span><br><span class="line">  gptid/003f3068-e99c-11e4-9c07-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line"></span><br><span class="line">errors: No known data errors</span><br><span class="line"></span><br><span class="line">  pool: nas</span><br><span class="line"> state: DEGRADED</span><br><span class="line">status: One or more devices is currently being resilvered.  The pool will</span><br><span class="line"><span class="built_in">continue</span> to <span class="keyword">function</span>, possibly <span class="keyword">in</span> a degraded state.</span><br><span class="line">action: Wait <span class="keyword">for</span> the resilver to complete.</span><br><span class="line">  scan: resilver <span class="keyword">in</span> progress since Sat Jul  4 15:50:05 2020</span><br><span class="line">        245M scanned out of 12.7T at 5.21M/s, 708h49m to go</span><br><span class="line">        37.8M resilvered, 0.00% <span class="keyword">done</span></span><br><span class="line">config:</span><br><span class="line"></span><br><span class="line">NAME                                              STATE     READ WRITE CKSUM</span><br><span class="line">nas                                               DEGRADED     0     0     0</span><br><span class="line">  raidz2-0                                        DEGRADED     0     0     0</span><br><span class="line">    gptid/8bc84eb2-a099-11e5-8fd4-0cc47a0742be    ONLINE       0     0     9  (resilvering)</span><br><span class="line">    gptid/4f6e78a5-a166-11e5-bb78-0cc47a0742be    ONLINE       0     0     0</span><br><span class="line">    gptid/4c4a9c43-a00e-11e5-bf62-0cc47a0742be    ONLINE       0     0     0</span><br><span class="line">    gptid/103acf85-a043-11e5-b6db-0cc47a0742be    ONLINE       0     0     0</span><br><span class="line">    replacing-4                                   OFFLINE      0     0     0</span><br><span class="line">      209564843571883103                          OFFLINE      0     0     0  was /dev/gptid/391e53c2-a06f-11e5-8ff9-0cc47a0742be</span><br><span class="line">      gptid/f83914be-bdca-11ea-9f22-0cc47a0742be  ONLINE       0     0     0  (resilvering)</span><br><span class="line">    gptid/18324016-a19e-11e5-82be-0cc47a0742be    ONLINE       0     0     0</span><br><span class="line"></span><br><span class="line">errors: No known data errors</span><br></pre></td></tr></table></figure><p>可以看见阵列已经在重建了，耐心等待吧，要 10 几个小时呢，我们直接快进到完成。</p><h3 id="祸不单行"><a href="#祸不单行" class="headerlink" title="祸不单行"></a>祸不单行</h3><p>经过漫长的等待之后，终于迎来了激动人心的时刻，磁盘阵列重建好啦！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ zpool status -v</span><br><span class="line">  pool: freenas-boot</span><br><span class="line"> state: ONLINE</span><br><span class="line">  scan: scrub repaired 0 <span class="keyword">in</span> 0h9m with 0 errors on Wed Mar 22 03:54:02 2017</span><br><span class="line">config:</span><br><span class="line"></span><br><span class="line">        NAME                                          STATE     READ WRITE CKSUM</span><br><span class="line">        freenas-boot                                  ONLINE       0     0     0</span><br><span class="line">          gptid/003f3068-e99c-11e4-9c07-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line"></span><br><span class="line">errors: No known data errors</span><br><span class="line"></span><br><span class="line">  pool: nas</span><br><span class="line"> state: ONLINE</span><br><span class="line">status: One or more devices has experienced an unrecoverable error.  An</span><br><span class="line">        attempt was made to correct the error.  Applications are unaffected.</span><br><span class="line">action: Determine <span class="keyword">if</span> the device needs to be replaced, and clear the errors</span><br><span class="line">        using <span class="string">&#x27;zpool clear&#x27;</span> or replace the device with <span class="string">&#x27;zpool replace&#x27;</span>.</span><br><span class="line">   see: http://illumos.org/msg/ZFS-8000-9P</span><br><span class="line">  scan: resilvered 2.11T <span class="keyword">in</span> 15h24m with 0 errors on Sun Jul  5 07:14:22 2020</span><br><span class="line">config:</span><br><span class="line"></span><br><span class="line">        NAME                                            STATE     READ WRITE CKSUM</span><br><span class="line">        nas                                             ONLINE       0     0     0</span><br><span class="line">          raidz2-0                                      ONLINE       0     0     0</span><br><span class="line">            gptid/8bc84eb2-a099-11e5-8fd4-0cc47a0742be  ONLINE       0     0 1.04K</span><br><span class="line">            gptid/4f6e78a5-a166-11e5-bb78-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">            gptid/4c4a9c43-a00e-11e5-bf62-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">            gptid/103acf85-a043-11e5-b6db-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">            gptid/f83914be-bdca-11ea-9f22-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">            gptid/18324016-a19e-11e5-82be-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line"></span><br><span class="line">errors: No known data errors</span><br><span class="line">tommy@nas:~ %</span><br></pre></td></tr></table></figure><p>可以看见阵列的状态已经变成了<strong>在线（ONLINE）</strong>，表示阵列已经可以正常使用了。</p><p>但是，等一下，设备发生了无法恢复的错误是什么鬼？！</p><p>其中一块老硬盘后面的 <strong>CKSUM</strong> 不为 0，又是什么情况？！</p><p>查阅资料后发现，<a href="https://docs.oracle.com/cd/E19253-01/819-5461/gbcve/index.html">CKSUM</a> 表示读取设备的过程中出现了数据的损坏。</p><p>很好，福无双至祸不单行，屋漏又逢连夜雨，这是不是说，我又双叒叕要买硬盘了呢？！</p><p>欲哭无泪……</p><h3 id="再来一次"><a href="#再来一次" class="headerlink" title="再来一次"></a>再来一次</h3><p>反正就是，上网下单买硬盘，等快递，重复以上所有步骤，再来一次。</p><p>最后的结果如下，总算是修好了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">$ zpool status -v</span><br><span class="line">  pool: freenas-boot</span><br><span class="line"> state: ONLINE</span><br><span class="line">  scan: scrub repaired 0 <span class="keyword">in</span> 0h24m with 0 errors on Sun Jul  5 08:34:22 2020</span><br><span class="line">config:</span><br><span class="line"></span><br><span class="line">NAME                                          STATE     READ WRITE CKSUM</span><br><span class="line">freenas-boot                                  ONLINE       0     0     0</span><br><span class="line">  gptid/003f3068-e99c-11e4-9c07-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line"></span><br><span class="line">errors: No known data errors</span><br><span class="line"></span><br><span class="line">  pool: nas</span><br><span class="line"> state: ONLINE</span><br><span class="line">  scan: resilvered 2.14T <span class="keyword">in</span> 15h14m with 0 errors on Mon Jul  6 11:46:18 2020</span><br><span class="line">config:</span><br><span class="line"></span><br><span class="line">NAME                                            STATE     READ WRITE CKSUM</span><br><span class="line">nas                                             ONLINE       0     0     0</span><br><span class="line">  raidz2-0                                      ONLINE       0     0     0</span><br><span class="line">    gptid/7ae1958f-bebb-11ea-9789-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    gptid/4f6e78a5-a166-11e5-bb78-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    gptid/4c4a9c43-a00e-11e5-bf62-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    gptid/103acf85-a043-11e5-b6db-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    gptid/f83914be-bdca-11ea-9f22-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line">    gptid/18324016-a19e-11e5-82be-0cc47a0742be  ONLINE       0     0     0</span><br><span class="line"></span><br><span class="line">errors: No known data errors</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果大家要做磁盘阵列的话，请务必用 2 块或以上的校验盘，<a href="https://zh.wikipedia.org/wiki/RAID#RAID_5">RAID 5</a> 已死！</p><p>虽然从概率的角度来看，同时坏 2 块硬盘的可能性极小，但是在实际使用过程中，意外就是这么发生的。</p><p>想想也是，硬盘都是一起买的，生产批次一般也都一样，坏的时间可能也差不多。</p><p>所以不要心存侥幸，一定要使用 2 块以上的校验盘，珍惜生命远离 RAID5，更不要说 <a href="https://zh.wikipedia.org/wiki/RAID#RAID_0">RAID 0</a> 了。</p><p>我使用的是 <a href="https://en.wikipedia.org/wiki/Non-standard_RAID_levels#RAID-Z">RAID-Z2</a> 类似于 <a href="https://zh.wikipedia.org/wiki/RAID#RAID_6">RAID 6</a>，总共 6 个盘，4 个做数据存储，2 个做奇偶校验，最多可以坏 2 块硬盘而不会丢失数据。</p><p>假如不是 RAID-Z2 的话，很有可能我现在的所有数据都丢失了。</p><p>硬盘有价，数据无价！还是那句话能花钱解决的问题都不是问题，数据没了花钱都解决不了。</p>]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDD </tag>
            
            <tag> Corral </tag>
            
            <tag> Disk </tag>
            
            <tag> FreeBSD </tag>
            
            <tag> FreeNAS </tag>
            
            <tag> FreeNAS 10 </tag>
            
            <tag> FreeNAS Corral </tag>
            
            <tag> GPT </tag>
            
            <tag> NAS </tag>
            
            <tag> Oracle </tag>
            
            <tag> RAID </tag>
            
            <tag> RAID-Z2 </tag>
            
            <tag> SMART </tag>
            
            <tag> ZFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将 Hexo 升级到 v4.2.1</title>
      <link href="/2020/07/07/upgrade-hexo-to-v4-2-1/"/>
      <url>/2020/07/07/upgrade-hexo-to-v4-2-1/</url>
      
        <content type="html"><![CDATA[<img src="/2020/07/07/upgrade-hexo-to-v4-2-1/hexo.png" class="" title="Hexo"><p>当您见到这篇文章的时候，就表示我又有很久没有写过文章，所以需要更新系统了。</p><p>不得不说，Node.js 的更新速度实在是太快了，我连 LTS 的脚步都跟不上啊。每次都是升级 LTS 版本，可是隔三差五就还得升级。</p><p>Hexo 有段时间升级不怎么积极，这次一看，嘿，厉害了，大版本号都升级了！于是乎从上到下都升级了一遍。</p><span id="more"></span><h2 id="升级-Node-js"><a href="#升级-Node-js" class="headerlink" title="升级 Node.js"></a>升级 Node.js</h2><p>最新的 Node.js 稳定版本已经更新到了 <a href="https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V12.md#12.18.2">v12.18.2</a> 。</p><p>升级前的版本是 Node.js v10.16.3，也算是长期稳定版本了。但是本着有新不用旧的暴发户心态，果断升级之。😅</p><p>用 <a href="https://github.com/tj/n">n</a> 来检查并升级到最新版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ n lts</span><br><span class="line"></span><br><span class="line">  installing : node-v12.18.2</span><br><span class="line">       <span class="built_in">mkdir</span> : /usr/local/n/versions/node/12.18.2</span><br><span class="line">       fetch : https://nodejs.org/dist/v12.18.2/node-v12.18.2-darwin-x64.tar.xz</span><br><span class="line">   installed : v12.18.2 (with npm 6.14.5)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>就这么简单就安装完了，毫无惊喜，毫无悬念：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ n <span class="built_in">ls</span></span><br><span class="line">node/10.16.3</span><br><span class="line">node/12.18.2</span><br></pre></td></tr></table></figure><h2 id="升级-Hexo"><a href="#升级-Hexo" class="headerlink" title="升级 Hexo"></a>升级 Hexo</h2><p>进入 Hexo 的目录，检查一下有哪些 Package 已经过期了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ npm outdated</span><br><span class="line">Package                  Current  Wanted  Latest  Location</span><br><span class="line">eslint                     6.1.0   6.8.0   7.4.0  hexo-site</span><br><span class="line">hexo                       3.9.0   3.9.0   4.2.1  hexo-site</span><br><span class="line">hexo-deployer-git          1.0.0   1.0.0   2.1.0  hexo-site</span><br><span class="line">hexo-deployer-rsync        0.1.3   0.1.3   1.0.0  hexo-site</span><br><span class="line">hexo-generator-archive     0.1.5   0.1.5   1.0.0  hexo-site</span><br><span class="line">hexo-generator-category    0.1.3   0.1.3   1.0.0  hexo-site</span><br><span class="line">hexo-generator-feed        1.2.2   1.2.2   2.2.0  hexo-site</span><br><span class="line">hexo-generator-index       0.2.1   0.2.1   1.0.0  hexo-site</span><br><span class="line">hexo-generator-sitemap     1.2.0   1.2.0   2.0.0  hexo-site</span><br><span class="line">hexo-generator-tag         0.2.0   0.2.0   1.0.0  hexo-site</span><br><span class="line">hexo-renderer-ejs          0.3.1   0.3.1   1.0.0  hexo-site</span><br><span class="line">hexo-renderer-marked       1.0.1   1.0.1   3.0.0  hexo-site</span><br><span class="line">hexo-renderer-stylus       0.3.3   0.3.3   1.1.0  hexo-site</span><br><span class="line">hexo-server                0.3.3   0.3.3   1.0.0  hexo-site</span><br><span class="line">hexo-symbols-count-time    0.6.0   0.6.3   0.7.1  hexo-site</span><br></pre></td></tr></table></figure><p>根据上面的信息修改一下 <code>package.json</code> 文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo-site&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;4.2.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-deployer-git&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-deployer-rsync&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-archive&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-feed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-search&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.4.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-seo-friendly-sitemap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.25&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-sitemap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-symbols-count-time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.7.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>反正就是根据 npm 反馈的版本号对应修改一下就好了。全部改好了以后，就 npm 更新一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save</span><br></pre></td></tr></table></figure><p>为了减少不必要的垃圾和冲突，我在执行上述命令之前删除了 <code>node_modules</code> 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">rm</span> -fr node_modules</span><br></pre></td></tr></table></figure><p>搞掂，检查一下版本信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br><span class="line">hexo: 4.2.1</span><br><span class="line">hexo-cli: 2.0.0</span><br><span class="line">os: Darwin 19.5.0 darwin x64</span><br><span class="line">node: 12.18.2</span><br><span class="line">v8: 7.8.279.23-node.39</span><br><span class="line">uv: 1.38.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.16.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.41.0</span><br><span class="line">napi: 6</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">http_parser: 2.9.3</span><br><span class="line">openssl: 1.1.1g</span><br><span class="line">cldr: 37.0</span><br><span class="line">icu: 67.1</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 13.0</span><br></pre></td></tr></table></figure><h2 id="更新-Hexo-CLI"><a href="#更新-Hexo-CLI" class="headerlink" title="更新 Hexo CLI"></a>更新 Hexo CLI</h2><p>接着运行，发现 Hexo 命令行显示乱码（换行不正确），检查一下有无新版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm outdated -g</span><br><span class="line">Package   Current  Wanted  Latest  Location</span><br><span class="line">hexo-cli    2.0.0   2.0.0   3.1.0  global</span><br></pre></td></tr></table></figure><p>嗯，果然是有新版本的，升级之：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">npm WARN deprecated hexo-bunyan@2.0.0: Please see https://github.com/hexojs/hexo-bunyan/issues/17</span><br><span class="line">/usr/local/bin/hexo -&gt; /usr/local/lib/node_modules/hexo-cli/bin/hexo</span><br><span class="line">+ hexo-cli@3.1.0</span><br><span class="line">added 23 packages from 10 contributors, removed 196 packages and updated 32 packages <span class="keyword">in</span> 9.859s</span><br></pre></td></tr></table></figure><p>重新运行 Hexo 命令，一切正常。</p><h2 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h2><p>盐鹅，我还是太天真了，生成页面一看，hmm…. 页面各种显示不正常，看来主题也得更新。</p><p>最新的 <a href="https://github.com/theme-next/hexo-theme-next">NexT</a> 主题已经更新到了 <a href="https://github.com/theme-next/hexo-theme-next/releases/tag/v7.8.0">v7.8.0</a>，当前正在使用的版本是 v7.2.0。</p><p>因为增加删除了不少的东西，所以配置起来比较麻烦。主要是配置文件 <code>_config.yml</code> 变化太大啦，最后只能用 Beyond Compare 一点点比较，一点点调整了。</p><p>更新完主题以后，一切正常，你现在看到的这篇文章就是全部调整以后的结果了。</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>北京谷歌的乐高二维码</title>
      <link href="/2019/09/10/a-lego-qr-code-at-google-beijing/"/>
      <url>/2019/09/10/a-lego-qr-code-at-google-beijing/</url>
      
        <content type="html"><![CDATA[<img src="/2019/09/10/a-lego-qr-code-at-google-beijing/google.jpg" class=""><p>周六的时候应 Google 邀请参加了 <strong>2019 Northeast Asia GDG Summit</strong> 的活动。</p><p>Tea break 的时候，发现很多人在会议室外面的乐高墙前面自拍留影。</p><p>忽然脑袋一热，突发奇想：这么多人拍照，为什么不做一个宣传 GDG Guangzhou 的二维码呢？</p><p>二话不说，说干就干，走你～～～ </p><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先，找到 GDG Guangzhou 的公众号二维码如下（这真不是广告！）：</p><img src="/2019/09/10/a-lego-qr-code-at-google-beijing/gdggz.jpg" class=""><p>用肉眼数了一下 37 x 37，也就是说 1,369 块！</p><p>Hmm… 感觉有点多啊，而且中间的图片似乎对于我们来说用处也不大啊！</p><p>作为一个白金认证级别的懒人，我决定重构二维码，简化之！</p><p>通过工具，得到二维码的原始数据为（再次声明，不是广告）：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>weixin.qq.com<span class="regexp">/r/i</span>Uzbw7PEfO4Drfeg9xmb</span><br></pre></td></tr></table></figure><p>用任意二维码生成工具，基于这个地址可以生成一个 29 x 29 没有图片的二维码。</p><p>这样看来，我们只需要 841 块就可以完成二维码了，相比原来可谓是大大地降低了拼乐高的工作量啊！</p><p>但是同行的小伙伴觉得，直接对着二维码来拼乐高还是太痛苦了，问能不能用 Photoshop 标注一下刻度。</p><p>开什么国际玩笑，像我这种懒人怎么可能一条条地划线？再说了，我又没有鼠标，用 Macbook 自带的 Trackpad 也很痛苦啊。</p><p>况且，对于一个「程序员」来说，有什么是用一个程序不能解决的？如果不行，那就两个程序！</p><h2 id="Excel-二维码"><a href="#Excel-二维码" class="headerlink" title="Excel 二维码"></a>Excel 二维码</h2><p>想了下，用 Excel 的话，天然就是表格，自带行列标记，拿来做标识不是完美吗？</p><p>胡乱 Google 了一下，并没有直接生成 Excel QR Code 这种鬼东西，有的也是用 Addin 生成的 QR Code 图片，跟我的要求不相符。</p><p>我想要的是，每个单元表格内，用颜色来标注，而不是生成一张图片。既然没有现成的解决方案，那就自己来吧。</p><p>本着拿来主义的精神，不要自己造轮子，又是一轮胡乱搜索之后，我发现了 <a href="https://pypi.org/project/segno/">Segno</a>，玩起！</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">$ python cli<span class="selector-class">.py</span> <span class="attr">--output</span>=gdggz<span class="selector-class">.txt</span> <span class="string">&quot;http://weixin.qq.com/r/iUzbw7PEfO4Drfeg9xmb&quot;</span></span><br><span class="line">$ cat gdggz<span class="selector-class">.txt</span></span><br><span class="line"><span class="number">0000000000000000000000000000000000000</span></span><br><span class="line"><span class="number">0000000000000000000000000000000000000</span></span><br><span class="line"><span class="number">0000000000000000000000000000000000000</span></span><br><span class="line"><span class="number">0000000000000000000000000000000000000</span></span><br><span class="line"><span class="number">0000111111101001111000101011111110000</span></span><br><span class="line"><span class="number">0000100000101110111001100010000010000</span></span><br><span class="line"><span class="number">0000101110100011111011001010111010000</span></span><br><span class="line"><span class="number">0000101110100010011011101010111010000</span></span><br><span class="line"><span class="number">0000101110101111011000100010111010000</span></span><br><span class="line"><span class="number">0000100000101001001000001010000010000</span></span><br><span class="line"><span class="number">0000111111101010101010101011111110000</span></span><br><span class="line"><span class="number">0000000000001011101010111000000000000</span></span><br><span class="line"><span class="number">0000111001101110000111001111100110000</span></span><br><span class="line"><span class="number">0000000110000110000010110011000110000</span></span><br><span class="line"><span class="number">0000001100111001000111010000111010000</span></span><br><span class="line"><span class="number">0000110001001100001010101010100000000</span></span><br><span class="line"><span class="number">0000011111101101101100001111000010000</span></span><br><span class="line"><span class="number">0000111110010000111101111011001110000</span></span><br><span class="line"><span class="number">0000110011101000111100110001110010000</span></span><br><span class="line"><span class="number">0000000010001001101110011010100000000</span></span><br><span class="line"><span class="number">0000001100110010000010001010010010000</span></span><br><span class="line"><span class="number">0000001001010110011010011111011110000</span></span><br><span class="line"><span class="number">0000110101111001011110110110100010000</span></span><br><span class="line"><span class="number">0000001100001000000110010100100000000</span></span><br><span class="line"><span class="number">0000110111111101100110011111110100000</span></span><br><span class="line"><span class="number">0000000000001010110110101000111010000</span></span><br><span class="line"><span class="number">0000111111100000110100001010100010000</span></span><br><span class="line"><span class="number">0000100000101001101010111000110110000</span></span><br><span class="line"><span class="number">0000101110100100100110111111100100000</span></span><br><span class="line"><span class="number">0000101110100010000010101100110010000</span></span><br><span class="line"><span class="number">0000101110101011101110000000100110000</span></span><br><span class="line"><span class="number">0000100000101010000000101001010000000</span></span><br><span class="line"><span class="number">0000111111101011111101011010110010000</span></span><br><span class="line"><span class="number">0000000000000000000000000000000000000</span></span><br><span class="line"><span class="number">0000000000000000000000000000000000000</span></span><br><span class="line"><span class="number">0000000000000000000000000000000000000</span></span><br><span class="line"><span class="number">0000000000000000000000000000000000000</span></span><br></pre></td></tr></table></figure><p>就这样我得到了一个由 0 和 1 组成的二维码数组，接下来我打开了 <a href="https://en.wikipedia.org/wiki/Vim_(text_editor)">Vim</a>，用 Record 功能把上面的二维码变成了一种叫做 <a href="https://en.wikipedia.org/wiki/Comma-separated_values">CSV</a> 的东东。</p><p>接着在 Excel 中打开，就会看到类似下面这样的表格（是的，没错，0 都已经被我干掉了）：</p><img src="/2019/09/10/a-lego-qr-code-at-google-beijing/excel_1.png" class=""><p>接下来用 Conditional Formatting 把有 1 的表格都填上颜色吧！</p><img src="/2019/09/10/a-lego-qr-code-at-google-beijing/excel_2.png" class=""><img src="/2019/09/10/a-lego-qr-code-at-google-beijing/excel_3.png" class=""><p>我把背景色和前景色都设置成了黑色，这样就算表格里面有 1 也看不出来了。</p><p>为了更好的「施工」，我又简单地划分了一下区域，这样拼乐高的时候可以分区域进行，检查错误的时候效率也会高点。</p><p>最终完成的 Excel 版 QR Code 效果如下（有呼应 Google 的四个颜色哟）：</p><img src="/2019/09/10/a-lego-qr-code-at-google-beijing/excel_4.png" class=""><h2 id="二维码施工队"><a href="#二维码施工队" class="headerlink" title="二维码施工队"></a>二维码施工队</h2><p>没啥好说的，剩下的都是体力活儿了。</p><p>为了不被别人「破坏」我们的二维码，我们决定要把二维码弄高一点。</p><p>道理是没有错，但是太高了也有一个问题，就是拼的时候那是异常的痛苦啊！</p><img src="/2019/09/10/a-lego-qr-code-at-google-beijing/implement.jpg" class=""><p>经过我们地不懈努力，终于完工啦！</p><p>大家的内心充满了喜悦与激动，纷纷拿出手机，忍不住扫了起来……</p><img src="/2019/09/10/a-lego-qr-code-at-google-beijing/lego_1.jpg" class=""><p>然而……</p><p>没有一个人能扫码成功……</p><p>😭</p><h2 id="后期制作"><a href="#后期制作" class="headerlink" title="后期制作"></a>后期制作</h2><p>我们反复检查了二维码，没有问题啊，为什么就是不行呢？我想一个人静静……</p><p>经过一秒钟的思考，我（柯南附体）认为真相只有一个：「凶手」就是灯光和阴影！</p><p>本来空白的地方，因为蓝色和灰色背景对比度的不足，使得空白处的阴影被系统误识别为填充物。</p><p>这样的话，唯一的解决方案就是继续施工了，必须把所有的空白处都填满！</p><p>唉，出来混迟早要还的。本还以为可以早早就收工了呢，看来还是不能懒啊。</p><p>又是一段漫长地施工，全因白色乐高实在是太匮乏了，感觉都被 Google 那几个字给用完了。</p><p>于是乎我们拆东墙补西墙，把我们能找到的白色全都用上了，结果还是不够。</p><p>没办法，死马当成活马医，硬着头皮用浅色的乐高代替吧。</p><p>说实在的，在我们拼完最后几个点之前，这个二维码还是处于完全无法识别的状态。</p><p>连我们自己也不确定，最后到底能不能成功。但是……</p><img src="/2019/09/10/a-lego-qr-code-at-google-beijing/lego_2.jpg" class=""><p>功夫不负有心人，可怜天下乐高人，我们终于成功啦！</p><p>不知道这个孤单的二维码能存活到什么时候呢？😁</p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>排名不分先后：</p><p><strong>Google</strong> 提供场地和乐高<br><strong>Yui</strong> 帮忙贴二维码<br><strong>Hebe</strong> 帮忙寻找需要的乐高<br><strong>Fung</strong> 带我们重返会议室完成了这一历史壮举</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Google </tag>
            
            <tag> Beijing </tag>
            
            <tag> Excel </tag>
            
            <tag> GDG </tag>
            
            <tag> QR Code </tag>
            
            <tag> Segno </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「坚持」对我意味着什么？</title>
      <link href="/2019/09/09/what-perseverance-means-to-me/"/>
      <url>/2019/09/09/what-perseverance-means-to-me/</url>
      
        <content type="html"><![CDATA[<img src="/2019/09/09/what-perseverance-means-to-me/perseverance.jpg" class=""><h2 id="为什么聊「坚持」？"><a href="#为什么聊「坚持」？" class="headerlink" title="为什么聊「坚持」？"></a>为什么聊「坚持」？</h2><p>这是一个很有趣的话题，一说到「坚持」大家第一个联想到的应该就是鸡汤了。诚然这是一个最需要鸡汤，也最不需要鸡汤的年代。</p><p>从小到大，我们都被教育，或者说被灌输「持之以恒」方能成功的「真理」。这里的引号并不是表达否认，而是表达强调。</p><p>持之以恒不一定能成功，但是成功肯定需要持之以恒地努力和付出，因此说其为真理也并不为过。</p><p>我们知道「坚持」的重要性，却忽略了为什么要坚持，又要坚持些什么。</p><span id="more"></span><p>为什么想写这个？缘由是最近写了篇<a href="../../../../../2019/09/03/half-marathon-training-schedule-2019/">跑马的训练计划</a>，有朋友留言「盛赞」我多么有毅力，多么的持之以恒。</p><p>我笑了，跟朋友说我是一个不折不扣的懒人，一个三分钟热度的人，外加一个没有什么毅力的人。</p><p>然后朋友反驳道，那你为什么能坚持去滑雪，一个人也去，还坚持其他的东西，然后立 flag，又一个一个地完成呢？</p><p>Hmm…（陷入沉思中……）</p><p>我思考了一下这个问题，好像没有什么结果。</p><p>从朋友们的角度看来，我似乎是挺能坚持的（差点自己都相信了）。</p><p>但转念一想：不不不，这种想法太危险了！</p><p>不管朋友怎么说，我还是坚信自己是一个彻头彻尾普通兼慵懒的人。</p><p>为了理解大家看法的不同，于是乎就有了这篇文章，看看「坚持」对于我意味着什么。</p><h2 id="什么是「坚持」？"><a href="#什么是「坚持」？" class="headerlink" title="什么是「坚持」？"></a>什么是「坚持」？</h2><p>根据「韦氏英语词典(Merriam-Webster)」的解释，<a href="https://www.merriam-webster.com/dictionary/perseverance">坚持(Perseverance)</a>的意思是：</p><blockquote><p>continued effort to do or achieve something despite difficulties, failure, or opposition</p></blockquote><p>「不管遭遇何种困难、挫折与反对，仍然持续不懈地努力以达成某一目标。」<strong>（注：作者译）</strong></p><p>之所以查英文词典，是因为中文词典给出的解释都过于简单。比如「坚持」的解释是：坚决保持住或进行下去，「坚持不懈」的解释是：坚持到底，一点不松懈。</p><p>看中文解释感觉跟没有解释一样，还是英文的解释相对更清晰一些。</p><p>但是无论从中文解释还是英文解释来看，「坚持」都不带有任何痛苦或者煎熬的意味，那为何我们又会觉得坚持这么难，这么痛苦呢？</p><h2 id="延迟满足"><a href="#延迟满足" class="headerlink" title="延迟满足"></a>延迟满足</h2><p>为了回答这个问题，我重新审视了一下自己所「坚持」的事，我发现我朋友和我其实都是对的。</p><p>那是什么让别人和我对自己有不同的认知呢？</p><p>在外人看来，我可能表现得更能坚持、更有毅力一些，主要是因为我现在越来越享受「延迟满足」所带来的成就感和幸福感。</p><p>由于生活节奏越来越快，干扰越来越多，人们越来越难以静下心来去做好一件事。</p><p>大家往往羡慕和赞美那些有「工匠精神」的人，可到了自己身上却又变得急功近利了起来。</p><p>什么都想要速成，想要一天学好外语，一天成为大师，也难怪各式各样贩卖焦虑的课程可以如此的火爆。</p><p>还有各种 21 天从入门到精通的系列丛书，更不要说那些烂大街贩卖成功学的垃圾书籍了。</p><p>既然学东西坚持那么困难，那就买个包包，买个奢侈品，买最潮的服饰和电子产品吧，满满的幸福感有没有？</p><p>没错，是很 happy，但是这种幸福和快乐实在来得太容易了。所谓来得快去得也快，通过买买买所带来的幸福感转瞬即逝。</p><p>相比之下，运动、健身，学一种新的技能，从入门到精通往往需要数月甚至数年的时间。</p><p>看似遥不可及，难以坚持，但这种成功所带来的幸福感，却可以持续很久，甚至可能获益终身。</p><p>如前面所说，我现在越来越看重人生经历，越来越喜欢尝试掌握不同的技能，进而也愿意花时间静下心来去反复思考与实践。</p><p>因此在旁人看来，我仿佛具备了「坚持」的特质。所以大家说的都对，我是一个充满了好奇心和三分钟热度，但是会「坚持」的人。</p><p>而「坚持」对于我来说，只不过是简单地把一件事做好，做到真正入门而已。</p><p>那些通过持之以恒不断坚持而成为某个领域大师级人物的人，才是真的让人心生敬佩。</p><h2 id="怎么「坚持」？"><a href="#怎么「坚持」？" class="headerlink" title="怎么「坚持」？"></a>怎么「坚持」？</h2><p>如果说坚持做一件事情让你感到痛苦，那么肯定有什么东西出错了。</p><p>就我个人而言，大多数情况下我并不觉得自己是在痛苦地坚持，只是觉得开了头就要收个尾，不能让自己后悔而已。</p><p>我们从小到大看过了太多的励志故事了，相信很多人也是在「别人家孩子」的阴影下长大的。</p><p>这常常引起我的思考，我们到底为了什么而坚持？我们又在坚持什么？我们是不是搞错了「坚持」的意义和本质？</p><p>回顾过往，我们为自己喜欢的事情坚持过吗？我们坚持的事情真的是自己喜欢的吗？我们是为了自己坚持还是为了别人在坚持？</p><p>有一个很可怕的念头出现在我脑海中：我们为什么失败，为什么坚持不下去？是不是一直以来我们都在为别人坚持，同时在坚持成为别人的样子？</p><p>别人的兴趣不是我们的，别人的成功也不是我们的，脱离了自我去谈坚持，是否本末倒置？</p><p>归根结底，「兴趣」才是「坚持」的原动力，脱离了自我与兴趣谈坚持，无异于耍流氓。</p><p>跟着兴趣走，你也许会惊奇地发现坚持并没有想象中那么困难。</p><p>而所谓的成功，在我看来也就是把兴趣坚持下去这么简单而已。</p><p>与其痛苦地坚持，不如为自己喜欢的事情而坚持，而不是坚持成为别人的样子。</p><p>趁着年轻，赶紧多培养些获益终身的兴趣吧！老了还可以跟朋友们吹吹自己的兴趣爱好，真好。</p><blockquote><p>Perseverance is not a long race; it is many short races one after the other.<br>—— Walter Elliot</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Opinion </tag>
            
            <tag> Hobby </tag>
            
            <tag> Interest </tag>
            
            <tag> Perseverance </tag>
            
            <tag> Success </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019 半马训练计划</title>
      <link href="/2019/09/03/half-marathon-training-schedule-2019/"/>
      <url>/2019/09/03/half-marathon-training-schedule-2019/</url>
      
        <content type="html"><![CDATA[<img src="/2019/09/03/half-marathon-training-schedule-2019/marathon_tommy.jpg" class=""><p><a href="../../../../../2019/02/15/2019-annual-plan/">年初做计划</a>的时候，其中有一项是：「有可能的话，年内参加一个半程马拉松」。</p><p>然后，莫名其妙的就中签了！也不知道是运气好，还是运气好。</p><p>我只是说可能而已啊，没有说一定要啊！</p><span id="more"></span><img src="/2019/09/03/half-marathon-training-schedule-2019/bingo.jpg" class=""><p>看着「幸运中签」的通知，我一脸懵逼：这就中签了吗？就这样？！ 我能怎么办啊？我也很绝望啊～～～</p><p>要是不中签，我还可以做一个开心快乐的死肥宅！</p><p>老天爷真是待我不薄，知道我人老机器坏，需要勤加运动，😭</p><p>既然命里有时终须有，那就动起来吧，出差回来一看，离开跑只有 12 个星期了，突然慌起来了……</p><p>临时抱佛脚吧，今年都没怎么运动，赶紧复习一下。</p><p>专家说，要想跑好半马，必须要能连续跑 10km 以上，而且还要保证连续每个星期有 25km 到 30km 的跑量。</p><p>这个时候我不要「砖家」觉得，我要我觉得！最重要的是要听从自己的内心，也就是「从心」——怂。🤣</p><blockquote><p>如果有想跑马的小伙伴，尤其是第一次跑马的小伙伴，还是建议「遵医嘱」啊。合理运动，避免损伤啊！我这是赶鸭子上架子，没办法了。</p></blockquote><p>既然已经决定了死活都要上，那就硬着头皮来个训练计划，督促一下自己吧。所谓临阵磨枪不快也光，看着也能唬唬人。</p><table><thead><tr><th align="center"><strong>Week</strong></th><th align="center"><strong>Mon</strong></th><th align="center"><strong>Tue</strong></th><th align="center"><strong>Wed</strong></th><th align="center"><strong>Thu</strong></th><th align="center"><strong>Fri</strong></th><th align="center"><strong>Sat</strong></th><th align="center"><strong>Sun</strong></th><th align="center"><strong>Total</strong></th></tr></thead><tbody><tr><td align="center">1</td><td align="center">CT</td><td align="center">3km</td><td align="center">CT</td><td align="center">5km</td><td align="center">Rest</td><td align="center">CT</td><td align="center">6km LSD</td><td align="center">14km</td></tr><tr><td align="center">2</td><td align="center">CT</td><td align="center">3km</td><td align="center">CT</td><td align="center">5km</td><td align="center">Rest</td><td align="center">CT</td><td align="center">8km LSD</td><td align="center">16km</td></tr><tr><td align="center">3</td><td align="center">CT</td><td align="center">3km</td><td align="center">CT</td><td align="center">6km</td><td align="center">Rest</td><td align="center">CT</td><td align="center">8km LSD</td><td align="center">17km</td></tr><tr><td align="center">4</td><td align="center">CT</td><td align="center">3km</td><td align="center">CT</td><td align="center">8km</td><td align="center">Rest</td><td align="center">CT</td><td align="center">10km LSD</td><td align="center">21km</td></tr><tr><td align="center">5</td><td align="center">CT</td><td align="center">5km</td><td align="center">CT</td><td align="center">10km hills</td><td align="center">Rest</td><td align="center">CT</td><td align="center">12km LSD</td><td align="center">27km</td></tr><tr><td align="center">6</td><td align="center">CT</td><td align="center">3km</td><td align="center">CT</td><td align="center">10km with 6km @ RP</td><td align="center">Rest</td><td align="center">CT</td><td align="center">10km LSD</td><td align="center">23km</td></tr><tr><td align="center">7</td><td align="center">CT</td><td align="center">6km</td><td align="center">CT</td><td align="center">10km hills</td><td align="center">Rest</td><td align="center">CT</td><td align="center">10km LSD</td><td align="center">26km</td></tr><tr><td align="center">8</td><td align="center">CT</td><td align="center">3km</td><td align="center">CT</td><td align="center">12km with 6km @ RP</td><td align="center">Rest</td><td align="center">CT</td><td align="center">12km LSD</td><td align="center">27km</td></tr><tr><td align="center">9</td><td align="center">CT</td><td align="center">3km</td><td align="center">CT</td><td align="center">12km hills</td><td align="center">3km</td><td align="center">CT</td><td align="center">16km LSD</td><td align="center">34km</td></tr><tr><td align="center">10</td><td align="center">CT</td><td align="center">5km</td><td align="center">CT</td><td align="center">12km with 8km @ RP</td><td align="center">3km</td><td align="center">CT</td><td align="center">16km LSD</td><td align="center">36km</td></tr><tr><td align="center">11</td><td align="center">CT</td><td align="center">3km</td><td align="center">CT</td><td align="center">12km with 6km @ RP</td><td align="center">3km</td><td align="center">CT</td><td align="center">15km LSD</td><td align="center">33km</td></tr><tr><td align="center">12</td><td align="center">CT</td><td align="center">3km</td><td align="center">CT</td><td align="center">8km with 5km @ RP</td><td align="center">Rest</td><td align="center">CT</td><td align="center">Race Day</td><td align="center">32.1km</td></tr></tbody></table><p>虽然都是英文，但是很好理解，就是「周」，然后是周一到周日，以及最后的总计。</p><p>解释下几个缩写吧：</p><p><code>Rest</code>，你懂的，就是休息，怎么葛优躺怎么来。只要不做剧烈运动，想怎么哈皮怎么来。看了下，是不是 Rest 太少了啊？</p><p><code>CT</code>，这个不是 CT 扫描检查！这个是 <code>Cross-Training</code>，我也不知道中文应该怎么翻译（交叉训练？），可以做一些相对温和的运动，比如瑜伽啊，游泳啊，自行车什么的。我是考虑反正运动量也不大，拿来做无器械的无氧运动应该也还不错，毕竟跑步还是很消耗肌肉的（现实情况是只有脂肪，没有肌肉）。</p><p><code>RP</code>，同样这个也不是大家熟知的「人品」，不是叫大家攒 RP ！而是 <code>Race Pace</code>，个人理解为真正跑马时候的配速。我现在也不知道自己能跑多少，过几天看看感觉再说吧。 &gt;_&lt;;</p><p><code>LSD</code>，我也不知道为啥所有的缩写都有歧义，这个不是乔帮主的致幻剂啊！是 <code>Long Slow Distance</code> 的缩写，主要用来练耐力的。只要达到计划的里程数就好了，就算跑不动走也没有关系，自己舒服就好。</p><p><code>Hills</code>，跟飙车一样的「跑山」，主要是为了训练上下坡的时候可以保持配速不变。感觉跑街的时候，经常也有上下坡，也没啥非得跑山的必要。</p><p><code>Race Day</code>，就是跑马的日子啦，因为 2019 年 12 月 8 日是周日，所以就按照周日做的计划，倒推了 12 个星期。</p><p>本着世上无难事，只要肯放弃的精神，鄙人本次跑马的主要宗旨是：<strong>不受伤，舒服第一，完赛第二。</strong></p><p>因此所有计划的跑步都以身体力所能及的舒适为第一考量，新手可以参考一下，高手可以嗤之以鼻忽略之。</p><p>欢迎广大小伙伴监督，😊</p>]]></content>
      
      
      <categories>
          
          <category> Fitness </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Plan </tag>
            
            <tag> Half-Marathon </tag>
            
            <tag> Marathon </tag>
            
            <tag> Running </tag>
            
            <tag> Schedule </tag>
            
            <tag> Sport </tag>
            
            <tag> Training </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何选择滑雪板</title>
      <link href="/2019/08/11/how-to-choose-a-snowboard/"/>
      <url>/2019/08/11/how-to-choose-a-snowboard/</url>
      
        <content type="html"><![CDATA[<img src="/2019/08/11/how-to-choose-a-snowboard/snowboard.jpg" class=""><p>不知不觉入坑滑雪也已经快一年半了，随着时间的推移，我也「怂恿」了不少朋友入坑。</p><p>众所周知国内滑雪场的装备情况，可以用惨不忍睹来形容。要想愉快地滑雪，一块属于自己的滑雪板可谓必不可少。</p><p>有鉴于此，今天我们就来聊一聊如何选择一块适合自己的滑雪板。</p><blockquote><p>由于本文主要面向初学者，所以并不会面面俱到，只会介绍一些最基本概念。</p></blockquote><span id="more"></span><h2 id="尺寸"><a href="#尺寸" class="headerlink" title="尺寸"></a>尺寸</h2><p>选板子第一件事儿，就是确定适合自己的板长，说白了就是找到适合自己身高的板子。</p><p>首先，我们找一块平地站好，然后量一下从脚底到胸口的距离，再量一下从脚底到鼻子的距离。</p><p>通常来说，介乎于这两个长度中间的任意长度，都可以认为是适合我们身高的板长（如下图）。</p><p>就我个人而言，我更倾向于从脚底到下巴的长度作为板长。</p><p>也有不少人喜欢到胸口或者到鼻子的，这完全属于个人喜好，并没有标准或对错一说。</p><p>唯一需要注意的是，长一点的板子稳定性会更好，但是不利于转向。而相对短一点的板子，稳定性会变差且不易控制，但却可以更加灵活地转向。</p><img src="/2019/08/11/how-to-choose-a-snowboard/length.jpg" class=""><p>除了长度，我们还需要确认板子的承重范围——雪板可以承受的最小和最大重量。一般来说，承重范围会以「公斤」或「磅」为单位来表示，比如：52 - 80kg。</p><p>如果滑雪者的重量超过了板子所能承受的极限，轻则造成板子损坏，重则造成人员受伤。幸运的话，这两种情况都没有发生，你也会发现板子过于「灵活」，难以驾驭。</p><p>反之重量低于板子承重的下限，你会发现板子移动困难，转弯时也容易频繁地摔倒。虽不至于损坏板子，但也毫无滑雪乐趣可言。</p><p>可以这么说，**合适的重量比合适的板长更重要！**强烈建议大家在选板子的时候，参考雪板官方网站和其背后的标签，选择适合自己体重和身高的板子。</p><p>长度、重量都 OK 后，我们还需要确认板子的 Stance Width 是否合适，这里有一个新的概念：Stance Width（站姿宽度），指的是我们滑雪时左右脚之间相隔的距离（如下图）。</p><img src="/2019/08/11/how-to-choose-a-snowboard/stance_width.jpg" class=""><p>通过测量膝盖到脚后跟的长度，可以大概确认我们的自然站姿宽度（Natural Stance Width），这个就是我们最舒服的两脚间距。同样是参考雪板官网或其背后的标签纸，确认我们的自然站姿宽度在该板子所允许的最小和最大宽度之间便可。</p><blockquote><p>雪鞋务必注意不要超出或不要超出雪板边缘太多，否则你会因为鞋头或鞋跟触碰雪面而频繁地摔倒。这种情况下，为了保命，还是选一个宽一点的板子吧。🤣</p></blockquote><h2 id="风格"><a href="#风格" class="headerlink" title="风格"></a>风格</h2><p>对于新手来说，选择一块适合自己的板子，可谓是极其困难的事情。</p><p>尤其是市面上各种各样不同板型的板子，更是让人眼花缭乱。</p><p>外加很多半斤八两朋友的「迷信」推荐，又或是「无良商家」的宣传，大家就更不知道该何去何从了。</p><p>板型的选择反映的其实是滑雪者的风格，大家可以先确定自己的风格，再根据下文的介绍选择适合自己的雪板。</p><h3 id="形状"><a href="#形状" class="headerlink" title="形状"></a>形状</h3><p>雪板的形状主要有「Twin（双向板）」和「Directional（单向板）」两种。</p><img src="/2019/08/11/how-to-choose-a-snowboard/shape_twin.png" class=""><p>如上图所示，双向板的板头和板尾是完全相同的。这样的好处是，无论我们是正脚还是反脚，都可以完美的适配，非常适合那些将来计划玩平花或者公园的小伙伴，同时对于无法确认自己是「Regular」还是「Goofy」的新手也比较友好。</p><p>这里大家可能好奇什么是「Regular」，什么又是「Goofy」？简单说，滑雪时习惯把左脚放在前方的滑雪者叫做「Regular」，反之右脚在前的为「Goofy」。如果还是觉得有点抽象，可以看一下下面这个图片：</p><img src="/2019/08/11/how-to-choose-a-snowboard/regular_goofy.jpg" class=""><blockquote><p>**板头（Nose）**在滑雪时指向山脚，**板尾（Tail）**在滑雪时指向山顶</p></blockquote><img src="/2019/08/11/how-to-choose-a-snowboard/shape_directional.png" class=""><p>通常情况下来说，单向板的板头要比板尾长一些，以便在雪比较深的情况下提供更好的「浮力」，其原理与冲浪类似。</p><p>另外一个好处是，在不平整的地形上单向板可以提供更好的稳定性，毕竟一路酷爽飞下山才是它的正确打开方式。</p><p>看到这里，想必不少小伙伴也大概猜到「单向板」与「双向板」最大的不同了，那就是我们不能调换它的板头和板尾。并不是说我们完全不能，你当然可以用单向板来「反脚」滑行，但是过长的「板尾」会让你的转向异常困难。经常玩反脚的话，还是老老实实地用双向板吧。</p><h3 id="拱形"><a href="#拱形" class="headerlink" title="拱形"></a>拱形</h3><p>在那让人怀念的旧时代，单板世界只有一种叫做「<strong>Camber</strong>」的拱形，属于神一般的存在，无人能及。</p><p>但人类永远不懂得知足，于是乎我们现在又有了：「<strong>Rocker</strong>」、「<strong>Flat</strong>」和「<strong>Hybrid</strong>」等拱形的板子。</p><img src="/2019/08/11/how-to-choose-a-snowboard/profile_camber.jpg" class=""><p>前面提到了，Camber 是最常见的拱形，放眼全球，目光所及之地必有其身影。因为其良好的弹跳性和稳定性，无论在有冰还是不平的雪道上，你都可以滑得游刃有余。</p><p>虽然说 Camber 各种好，盐鹅它对新手并不好。因为其拱形特点，你可能不得不经常的在雪道上「吃冰沙」。</p><img src="/2019/08/11/how-to-choose-a-snowboard/profile_rocker.jpg" class=""><p>Rocker 的板子对新手就比较友好了，转弯容易不卡刃，简直是新手福音有没有？</p><p>因为其拱形的特点，板子两边的接触点并不像 Camber 那样有较好的抓地力，因此在高速滑行时会有不稳定的感觉。</p><p>如果未来打算玩玩刻滑或者旋转跳跃啥的，那么这块板子就无法满足你的需求了。</p><img src="/2019/08/11/how-to-choose-a-snowboard/profile_flat.jpg" class=""><p>Flat 最适合在比较厚的雪上滑行，但糟糕的是，它既没有 Camber 稳定的特点，又没有 Rocker 不易卡刃的特性。</p><p>难怪有人批评说 Flat 板子总给人一种「死气沉沉」的感觉。</p><img src="/2019/08/11/how-to-choose-a-snowboard/profile_hybrid.jpg" class=""><p>Hybrid 是单板界的一个新趋势，可以说它完美地融合了 Camber 和 Rocker 这两个世界。</p><p>它有着 Rocker 不易卡刃和容易转向的特性，同时也有着 Camber 引以为傲的弹跳性和稳定性。</p><p>可以说一板在手，天下我有！但是但是但是，在高速滑行时其稳定性还是无法与 Camber 相提并论的。</p><p>也许这就是为什么大多顶级的单板都是 Camber 拱形，Hybrid 的主要是中端产品的原因吧。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>一句话：如果你是一个完全没有任何板类运动（冲浪、滑板等）经验的新手，选一块全地形 Rocker 拱形的双向板（All-Mountain Snowboard with True Twin and Rocker）。</p><p>友情提醒：千万不要买特别硬的板子，选一块软一点的板子，因为其容错度会更高（少摔跤）。</p><p>对于那些将来想要玩公园的，一个 Camber 或 Hybrid 的双向软板是一个不错的选择。</p><p>喜欢追求速度和刻滑的小伙伴，可以考虑硬一点的 Hybrid 或 Camber 的单向板。</p><h2 id="固定器"><a href="#固定器" class="headerlink" title="固定器"></a>固定器</h2><p>固定器有很多种，最为常见的是 <strong>4x4</strong> 和 <strong>2x4</strong>，就是板子上有两排小孔的那种。其他的还有如 <strong>Burton 3D</strong> 和 <strong>Channel</strong> 等的系统。</p><p>雪板和固定器必须匹配才能正常使用，不匹配便无法安装与固定。因此根据板子选个匹配的固定器就好了，没什么好说的。</p><p>匹配好固定器后，我们需要确定固定器的尺寸，不要过大也不要过小，以刚刚好能放进雪鞋为好。</p><p>此外，固定器不应该超出雪板侧边太多，否则需要重新选择宽一点的雪板。</p><img src="/2019/08/11/how-to-choose-a-snowboard/bindings.jpg" class=""><p>固定器除了规格、尺寸外还有一个参数：软硬度。</p><p>初学者建议选择软一点的固定器，这样穿着时可以更舒适，也更容易控制。</p><p>对于想要操作感更强，转弯更迅速的小伙伴，则建议选择稍硬一点的固定器。</p><p>再有就是绑带系统，说实在的我个人并不是很在意这个。</p><p>从传统的绑带，到快拆，到最新的 Step-On 固定器，其实对于滑雪来说完全没有影响（除了 Burton 的 Step-On 必须要使用配套的 Step-On 雪鞋外），选择你自己喜欢的就好了。</p><h2 id="雪鞋"><a href="#雪鞋" class="headerlink" title="雪鞋"></a>雪鞋</h2><p>终于到雪鞋了！每个人都跟你说要买一双穿着舒服的鞋，怎么说呢？我觉得……他们说的都是千真万确的！</p><p>港真，所有滑雪装备我们都可以无脑网购，唯独雪鞋不行！</p><p>哪怕铁了心要去马云家买，我也强烈建议你在购买之前找一个本地商家去试穿一下，实在不行就在不同的雪场租不同的雪鞋先体验下。</p><p>判断一双雪鞋的好坏，主要有 2 个标准：①原地站立时，脚趾有活动的空间且不挤脚；②走动的时候，后脚跟有被牢牢地固定在鞋子里的感觉。</p><p>如果感觉到有任何的摩擦或者疼痛，请不要犹豫，马上换一对。换鞋如果无果，那就换大一码，请不要迷信鞋子上的尺码标记！这也是为什么我再三强调，雪鞋一定要亲自试验过，因为不同牌子的鞋子尺码完全没有参考性，就算同一品牌不同区域的尺码也可能有所差别，比如欧洲款和亚洲款。</p><p>最后，为了更好地确认雪鞋的实际效果，试穿的时候请务必带上一对滑雪用的厚袜子。想象一下你满心欢喜地带着新雪鞋去滑雪，可到了山顶后才发现新鞋子挤脚挤到没朋友。眼看着朋友们一个二个下了山，你却只能独自一人在寒风中凌乱。到时候你就会有那种罗老师买星爸爸的冲动了，别说我没提醒你。</p><p>**结论：**新手选软一点的固定器和鞋子，中高级水平的选硬一点的，觉得自己特别牛的就买最硬的！</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>这篇文章写了好多天，最终总算完成了。还有很多关于滑雪的东西想要介绍，可受限于篇幅并未能尽数覆盖。比如文中提到的 All-Mountain，还有什么 Freeriding 啊，Powder 啊，也都没有介绍，以后有机会再说吧。</p><p>如果你有任何关于雪板选择的问题，欢迎留言，我会竭尽所能地回答。</p><p>这就是之前<a href="../../../../../2019/08/06/how-to-choose-a-snowboard/">英文版</a>里面提及的中文翻译<strong>加强</strong>版！😊</p><h2 id="中文版彩蛋"><a href="#中文版彩蛋" class="headerlink" title="中文版彩蛋"></a>中文版彩蛋</h2><p>其实你们看到的中文版已经是第二稿了，与第一稿相比，超过一半的内容都被修改了。</p><p>为什么呢？因为之前试读的几个朋友吐槽我写的太过「翻译腔」…… 😂</p><p>这个完全是晴天霹雳，始料不及啊，我接受唔到咯！</p><p>毕竟我也是在发烧感冒的情况下，用了 2 个小时来「翻译（不经大脑）」的呢，能不能给点 respect？</p><p>既然获得了一致「差评」，那咱就重写吧，于是就有了现在这篇文章。</p>]]></content>
      
      
      <categories>
          
          <category> Snowboard </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Binding </tag>
            
            <tag> Board </tag>
            
            <tag> Boot </tag>
            
            <tag> Camber </tag>
            
            <tag> Directional </tag>
            
            <tag> Flat </tag>
            
            <tag> Goofy </tag>
            
            <tag> Profile </tag>
            
            <tag> Regular </tag>
            
            <tag> Resort </tag>
            
            <tag> Shape </tag>
            
            <tag> Ski </tag>
            
            <tag> Snow </tag>
            
            <tag> Snowboard </tag>
            
            <tag> Stance </tag>
            
            <tag> Twin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How To Choose A Snowboard</title>
      <link href="/2019/08/06/how-to-choose-a-snowboard/"/>
      <url>/2019/08/06/how-to-choose-a-snowboard/</url>
      
        <content type="html"><![CDATA[<img src="/2019/08/06/how-to-choose-a-snowboard/snowboard.jpg" class=""><p>After snowboarding for almost one and a half year, more and more of my friends began to join the snowboard force.</p><p>Since most of the ski resorts in China have very bad conditions of equipments, so having a personal snowboard became absolutely necessary.</p><p>Today we are going to talk about how to choose your first snowboard. As it is mainly for beginners, not every details will be covered, only the essentials.</p><span id="more"></span><h2 id="Choose-The-Right-Size"><a href="#Choose-The-Right-Size" class="headerlink" title="Choose The Right Size"></a>Choose The Right Size</h2><p>The first thing you wanna make sure is whether the board size is right for you. We can stand on a flat ground by measuring the length from our feet to our chest and nose. Generally speaking, the right size to fit your height lies between that two lengths. Personally I prefer the length from feet to chin, but some might argue for the chest height, some are nose height. That is totally OK for all of them, there is no right or wrong. However, keep in mind that longer boards will be more stable but harder to turn. Vice versa, shorter boards will be more maneuverable but difficult to control as the board might be turning unintended.</p><img src="/2019/08/06/how-to-choose-a-snowboard/length.jpg" class=""><p>The second thing to make sure is whether the board suits for your weight. To be honest, in my opinion, weight is even important than height. If you are too heavy for the board, chances you might break it while hurting yourself. In contrast, too light you will have trouble in maneuvering. Check out websites and labels on the back of snowboards to see whether the weight classifications fits you.</p><p>The last but not the least, choose the right board width for your feet. Here we have a new term: Stance Width, the length between your two feet when you ride on a snowboard. You can use the length from your knee cap to your heel as a reference to indicate your natural stance width, then we have to make sure the board we chose can setup the stance width without problems. </p><img src="/2019/08/06/how-to-choose-a-snowboard/stance_width.jpg" class=""><blockquote><p>Your snowboarding boots should never hang over edges of the board too much when you stand on it, or else you may find yourself fall on the ground often because of the boots’ heel or toe touched the ground, therefore makes the board lose its grip in snow. Under such circumstances, a wider board should be considered to save your life. 🤣</p></blockquote><h2 id="Choose-The-Right-Style"><a href="#Choose-The-Right-Style" class="headerlink" title="Choose The Right Style"></a>Choose The Right Style</h2><p>Well, choose the right style board for a beginner could be tough, cause there are so many snowboards with different shapes and profiles. We will discuss a little bit to help you have a basic concept.</p><h3 id="Shape"><a href="#Shape" class="headerlink" title="Shape"></a>Shape</h3><p>Most snowboards available now is either “twin” board or “directional” board.</p><img src="/2019/08/06/how-to-choose-a-snowboard/shape_twin.png" class=""><p>As shown above, twin board has identical nose and tail, which is good for playing tricks at terrain park. In addition, it is friendly for the first time snowboarders, who has not yet truly figured out whether they are “Regular” or “Goofy”. Some might ask what the heck is “Regular” or “Goofy”? That depends on which leg you put weights on to keep balance. We call people who use left leg as the front foot “Regular”, “Goofy” for whose right foot in the front.</p><img src="/2019/08/06/how-to-choose-a-snowboard/regular_goofy.jpg" class=""><blockquote><p><strong>Nose</strong> is the tip of the board heading down hill while you ride, and <strong>Tail</strong> is the end of the board heading up hill</p></blockquote><img src="/2019/08/06/how-to-choose-a-snowboard/shape_directional.png" class=""><p>Let’s get back to our shape introduction, directional boards are built mainly for down hills, speed and stability is the thing for it. Not like twin board, you cannot use the tail as nose, as directional board usually has longer nose and shorter tail to have more floating in the snow while riding on powder or uneven terrain. Though you can do “switch” on a directional board, twin board can definitely do better the job.</p><h3 id="Profile"><a href="#Profile" class="headerlink" title="Profile"></a>Profile</h3><p>In the old good times, there was only one snowboard profile called: <strong>Camber</strong>. But people never get satisfied, hence we have more profiles now: <strong>Rocker</strong>, <strong>Flat</strong> and <strong>Hybrid</strong>.</p><img src="/2019/08/06/how-to-choose-a-snowboard/profile_camber.jpg" class=""><p>Camber is the most common board you can see anywhere all around the world, it is famous because of its pop for jumps. Also it can give you enough support while having fun on icy trial, however it is not friendly for novices, because it is harder to turn and easy to catch edge.</p><img src="/2019/08/06/how-to-choose-a-snowboard/profile_rocker.jpg" class=""><p>As the opposite of camber, rocker board is easy to turn and less catchy. You can hardly do carving nor popping for its reduced performances. And it is less stable, as the contact points cannot grip into the snow like camber do.</p><img src="/2019/08/06/how-to-choose-a-snowboard/profile_flat.jpg" class=""><p>One of the boards that is easy to turn and float on fresh powder snow. Unlike rocker, flat boards are vulnerable to catch edges if most of your time are spent on the groomed trails. By having a flat board, you are missing out the advantages of the other profiles, such as camber’s popping and rocker’s catch-free, no wonder why some riders criticized flat board got a ‘damp’ feeling.</p><img src="/2019/08/06/how-to-choose-a-snowboard/profile_hybrid.jpg" class=""><p>Hybrid is a new trend in the snowboarding world, it combines the best of both worlds. It is easy turning for beginners, while providing better edge hold and pop than rocker board. The only thing as a con is hybrid boards are not as stable as camber boards at speeds, and you might feel unstable on rails.</p><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>Get yourself a true twin all mountain board if you are really new to snowboarding and have no experiences in other board-based games like surfing nor skateboarding. With a rocker snowboard, you will be more confidence making turns without catching edge a lot, and keep you from falling and getting up frequently. Plus, DO NOT buy a stiff board, try to get a flex one, which would has a higher tolerance when you do things wrong.</p><p>For those who wants to have fun in the park, a flex twin board with camber or hybrid profile is a good start. Speed tracers and carving lovers should consider a directional board with hybrid or camber profile.</p><h2 id="Choose-Binding-And-Boots"><a href="#Choose-Binding-And-Boots" class="headerlink" title="Choose Binding And Boots"></a>Choose Binding And Boots</h2><p>There are several types of binding mounts, most common available are 4x4 and 2x4, which are simply two rows of spaced holes for mounting bindings. Other systems like <strong>Burton 3D</strong> and <strong>Channel</strong> can also be found easily nowadays. Make sure to have the correct bindings for your snowboard. Also, you have to make sure your bindings are big enough to put your boots in, if not, change for a larger size binding. The bindings should not be wider so much than the snowboard itself, or else, go back to find a wider board. </p><img src="/2019/08/06/how-to-choose-a-snowboard/bindings.jpg" class=""><p>After having the right binding size, we have to decide the binding stiffness. Ordinarily, beginners should look for a short and soft binding with flexible high back. Which would be easier for you to be in control and feel comfortable. However, you get this advantages by losing the performance. The high and stiff bindings are for those who are seriously about precise maneuvers and turning at high speeds.</p><p>Furthermore, the binding system, which I do not care at all. From straps to cranks, from speed-entry to step-on bindings, none of them affects the riding so much, so just choose the system you like, period. Except that Burton’s Step-On binding system MUST be used with a Step-On boots.</p><p>Finally, the snow boots! Everyone tells you to choose the boots that make you feel comfortable, you know what? They are absolutely right! For all the gears, we can simply get them online, but never the boots! I highly recommend you to find a local store to fit on before you pay. The rule of thumb, while you move around, your heel shall stay firmly in the boots, and there is space to wiggle your toes while you stand still. Once you feel painful or rubbed, get yourself a new pair or a larger one. For the best fitting, never forget to wear your snowboard thick socks along, cause it will make a huge difference. You would not be happy when your feet being squeezed on a cold winter day on top of a mountain, and with no other snow boots to change.</p><p><strong>Conclusion</strong>: Soft bindings and boots for beginners, stiff bindings and boots for intermediated - advanced riders.</p><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>After days writing, this article had been finished eventually. A lot of the things are still not covered, like riding style, what is All-Mountain, Freeriding, Powder and etc. If you have any questions on choosing the snowboard, leave a comment below, I will try my best to answer them.</p><p>Probably a <a href="../../../../../2019/08/11/how-to-choose-a-snowboard/">Chinese translated version</a> might be available later when I got some time. 😊</p>]]></content>
      
      
      <categories>
          
          <category> Snowboard </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Binding </tag>
            
            <tag> Board </tag>
            
            <tag> Boot </tag>
            
            <tag> Camber </tag>
            
            <tag> Directional </tag>
            
            <tag> Flat </tag>
            
            <tag> Goofy </tag>
            
            <tag> Profile </tag>
            
            <tag> Regular </tag>
            
            <tag> Resort </tag>
            
            <tag> Shape </tag>
            
            <tag> Ski </tag>
            
            <tag> Snow </tag>
            
            <tag> Snowboard </tag>
            
            <tag> Stance </tag>
            
            <tag> Twin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赛道日的反思</title>
      <link href="/2019/07/31/reflection-on-track-racing/"/>
      <url>/2019/07/31/reflection-on-track-racing/</url>
      
        <content type="html"><![CDATA[<img src="/2019/07/31/reflection-on-track-racing/win_or_die.jpg" class=""><p>上上个周末的时候，又去海泉湾刷了一波赛道，离<a href="../../../../2019/02/15/2019-annual-plan/">年初立下的 flag</a> 又进了一步。</p><p>不得不承认，玩赛车真的是件很烧钱的事儿。虽说钱不是万能的，但是没有钱真的是万万不能的。还没有玩车的小伙伴，回头是岸，及时醒悟啊……</p><p>就我的观察来看，我应该是玩赛车里面最穷的，没有之一，不接受反驳。</p><p>但身为屌丝梦想也是要有的，不然跟咸鱼有什么区别呢？实在不行咱就睡觉，毕竟梦里啥都有（大雾）。</p><span id="more"></span><h2 id="序章"><a href="#序章" class="headerlink" title="序章"></a>序章</h2><blockquote><p>作者注：此部分为小学生游记</p></blockquote><p>7 月 21 号，星期日，天气晴。</p><p>今天是个阳光明媚的日子，万里无云。我怀着激动无比的心情，开着自己的小白去珠海海泉湾参加俱乐部的统规赛。</p><p>早上 6 点我就爬了起来，向海泉湾出发。8 点多的时候就已经到了海泉湾，同行的 Tony 大佬却迟迟没有出现，理由竟是昨晚睡太晚……</p><p>9 点多开始抽签，进行练习赛。由于上次飞出了赛道，所以这次练习赛也比较小心翼翼，但是结果还不错，因为抽到了一辆不错的车。</p><p>一节练习赛下来超 4 辆车不费劲，那个信心满满，信心爆棚啊……</p><p>俗话说的好，快乐的日子总是过得很快，一眨眼早上的练习赛就结束了。</p><p>信心满满的我，感觉这次终于可以出人头地，弄个奖杯啥的了。</p><img src="/2019/07/31/reflection-on-track-racing/car1.jpg" class=""><h2 id="自嗨"><a href="#自嗨" class="headerlink" title="自嗨"></a>自嗨</h2><p>课间休息的时候，可以街车下赛道玩耍，我就不要脸地开着小飞度上了赛道。</p><p>嗯……同场竞技的也没什么了不起的，也就是宝马 M 啊，奥迪 A7 啊，Mini 啊什么的大马力的豪车而已。</p><p>然后就是大直线的时候各种被秒杀而已，没办法，心态就是这么好，开飞度就是这么自信。🤣</p><p>开了一节下来以后，最大的感触就是：<strong>飞度不改，不如推落海……</strong></p><p>第一个感觉就是<strong>刹车没信心</strong>，一节下来，刹车一股焦糊味。虽然原厂的刹车在街道上开还是很不错的，但是下赛道，感觉还是得优化一下。刹车的前段感觉还是很不错的，但是中后段也不敢狠踩，主要是因为有刹车助力，不知道什么时候会抱死。相比之下没有助力的赛车，虽然开起来很累，不过还是会让人更有信心。</p><p>第二个感觉是<strong>换挡装置可以优化</strong>，换挡的行程很长，同样在街道使用的情况下非常舒适，但是在赛道情况下，还是有优化的空间。</p><p>第三个就是<strong>座椅包裹性</strong>了，虽然车身本身的侧倾因为更换避震已经有了比较好的改善，但是侧向的 G 值还是有的。原厂的座椅毫无包裹性可言，外加三点式安全带，转弯的时候感觉整个人都快飞出去了，非常没有信心，只能很怂很怂地减速，慢慢悠悠地过弯。</p><p>第四个觉得要吐槽的应该是<strong>方向盘</strong>了，原厂那硕大的方向盘，不单止毫无手感可言，还让转弯的动作做得很大。如果不考虑安全性的话，方向盘还是应该要换的，不过换了以后就没有气囊了，这个还得斟酌一下。</p><p>这么说吧，没有对比就没有伤害，尤其是对比了俱乐部的车、BRZ 和飞度以后，才更加知道了什么是飞度买菜车。</p><p>那是不是就一无是处了？当然不是，还是有一些让人很欣慰的。</p><p>比如说买引擎送车的飞度，这台引擎就不错，原厂情况下 7200 转才断油，开得甚是愉悦。</p><p>还有就是换了避震、轮毂和轮胎以后，轮胎的极限高了很多。比起俱乐部的车，开着开着就开始响胎的情况，AD08R 的胎简直不要太好。</p><p>当然，也可能是我比较怂，或者技术比较渣，开得比较慢，所以达不到轮胎的极限？</p><p>还有一个意想不到的惊喜，我原本以为飞度原厂的橡胶皮刹车和油门很难做「跟趾」动作，但实际在赛道上很容易就达成了。</p><p>换而言之，更换如 Razo 之类的跟趾踏板，似乎意义不大？而且在激烈驾驶过程中，出现了 Razo 踏板固定装置松脱的情况。</p><p>也许确实如<strong>光头佬</strong>所说，不打孔不上螺丝，还不如不改？</p><img src="/2019/07/31/reflection-on-track-racing/razo.jpg" class=""><h2 id="计时赛"><a href="#计时赛" class="headerlink" title="计时赛"></a>计时赛</h2><p>下午开始就是计时赛了，继续抽签。抽中了一台动力性能一般的车吧，没有了早上的激情澎湃，主要是车「澎湃」不起来。</p><p>计时赛分为 A、B 组，作为万年 B 组的我，毫无悬念继续是 B 组成员。</p><p>看着 A 组小伙伴各种 high 的跑赛道，我们就在场外各种围观。</p><p>准备到我们的时候，下起了瓢泼大雨……</p><p>对于没有空调，没有除霜、除雾的我们，只好默默打开窗户，任凭雨点无情地打在身上。</p><p>下赛道可以全身湿透，连鞋子都能湿透，这个真是始料不及的事情。</p><p>跑计时赛的时候，基本上很难看清道路，外加赛道上积水严重，第一圈都是各种小心翼翼。</p><p>不得不说，在湿滑的赛道上，轮胎的极限早早的就来到了。就算在直线上刹车，如果方向盘稍有偏差，就会明显得感到车辆要失控。</p><p>还有弯心的地方，有大量的积水，如果按照以前的路线来开，分分钟飞出赛道。</p><p>虽然倾盆大雨，但「在雨中漫步」也是不错的经历，将来在路面上开车也会更有安全意识。</p><p>相安无事地跑完计时赛，B 组相对于 A 组，整体慢 6 秒！🤦‍♂️</p><p>如果按照这种成绩来看，整个 B 组都可以被淘汰了……</p><h2 id="正赛"><a href="#正赛" class="headerlink" title="正赛"></a>正赛</h2><p>出于人道角度的考虑，最终 A &#x2F; B 组分开进行正赛，感谢大佬们的体谅。</p><p>最后我的排名是小组第二，我心想：「哎哟，不错哟！」也许今天真的能拿个名次什么的呢？</p><p>不断跟自己说：冷静，平常心，做好自己，过好每一个弯就好，自己跟自己比。</p><p>比赛开始了，做了一个不错的起步，在 1 号弯前，超越了头车，领跑了。</p><p>心里想：嗯，这次应该稳了……</p><p>盐鹅，是我太天真了，是我太幼稚了……</p><p>出了 3 号弯以后的大直路，我的车转速到了 5000 多 6000 转就上不去了，上不去了，不去了……😭</p><p>之前练习赛的时候，能跑到 140 的时速，这台车竟然连 120 都去不到！！！</p><p>当我将油门踩到底，听着引擎歇斯底里地咆哮，憧憬着名次的时候。我看到旁边的车悠然自得的从我身边飘过。</p><p>内心好像打翻了五味瓶，可谓百感交集……上次第三发车的我，飞出了赛道，难道这次也要与奖杯错失交臂？</p><p>不，不，不，这种想法很可怕，专心赛事，不要想有的没的。</p><p>但事实再一次打脸，无论你的走线比别人好，还是控制的比别人好，就是追不上！</p><p>到了第三圈的时候，又是大直线，又被别人悠然自得地赶超了。每次在转弯的地方找回一点优势，一到直线就被甩出几条街。</p><p>最后的最后，不想说了：排名第四！</p><p>心态崩了，命，这都是命！<strong>命里有时终须有，命里无时莫强求！</strong></p><p>回想起赛前大家说，11 号车啊？祝你好运了，这车车胎抓地力不行，动力也跟不上。</p><p>我当时还不以为然，毕竟计时赛的时候开 11 号车的小哥哥可是排名倒数第一的呢！</p><p>谁知道是不是他水平不行，还是真的车不行？！毕竟埋怨车不行，比承认自己不行要容易得多。</p><p>可事实胜于雄辩，在残酷的现实面前，除了抱怨命运不公，似乎也没有什么其他可以做的了……</p><p>小组第一的最快圈速是 1 分 32 秒多，而我上次计时赛的成绩在 1 分 29 秒，而这次是 1 分 36 秒多。</p><p>同样的赛道和动作，差别不可能这么大，只可能是车的问题，悻悻。</p><img src="/2019/07/31/reflection-on-track-racing/car11.jpg" class=""><h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><p>虽然心有不甘，但冷静思考一下，自己还是有很多可以改进的空间。</p><h3 id="技术得提升"><a href="#技术得提升" class="headerlink" title="技术得提升"></a>技术得提升</h3><p>首先，拿不到名次，说白了还是技术水平差。就是因为大家都是半斤八两，所以你只比别人略好一点，拿不到名次是很正常的。</p><p>比如说，一模一样的车，也许我能开的比别人快一秒半秒的。这种差距并不是秒杀和吊打级别的，在这种情况下，车的性能就很凸显了，也是这次主要失利的一个客观因素。</p><p>但是如果你的技术水平真的很高，那么完全可以用技术来弥补车辆性能不足的问题，甚至还可以利用雨天的优势来获得更好的成绩。</p><p>结论就是：少年，继续好好修炼吧……</p><h3 id="心态不能崩"><a href="#心态不能崩" class="headerlink" title="心态不能崩"></a>心态不能崩</h3><p>虽然自嘲说心态崩了，其实也并没有真的崩。</p><p>毕竟其中一个超了我车的小伙伴，在赛道上 180° 大掉头，失控了。</p><p>比起疯狂地追求名次，安全完赛和理性地思考也是必不可少的，毕竟空有一腔热血是无法更进一步的。</p><p>心态可以更好一点，把雨战和车辆性能不好作为赛车道路上的一个磨练，又怎么能说不是幸事呢？</p><p>毕竟我也愉快地在赛场上玩了一天，总比宅在家里喝可乐、吃汉堡、做死肥宅要快活吧？😁</p><h3 id="运气必须有"><a href="#运气必须有" class="headerlink" title="运气必须有"></a>运气必须有</h3><p>这个没啥好解释的啦，以我这半吊子的水平，给我一台性能好的车，我会输？偷笑……</p><p>想起了《头文字D》里面的梗：老窦，我要买 GTR！</p><p>也许赛车正是因为有各种各样的意外和不可抗拒力因素，才会让人更着迷吧。</p><p>回看各种赛车比赛，有多少种子选手因为车辆事故、机械故障等等遗憾退赛。</p><p>常在河边站哪能不湿鞋？平时多积攒人品吧，赛车的时候用得着。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><img src="/2019/07/31/reflection-on-track-racing/me.jpg" class=""><p>引用《飞驰人生》里面的台词，来结束这篇文章吧：</p><blockquote><p>绝招只有两个字：「奉献」，就是把你的全部奉献给你所热爱的一切。你并不是征服了这片土地，你只是战胜了你的对手。</p></blockquote><p>咱们赛场上见……</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Car </tag>
            
            <tag> Fit </tag>
            
            <tag> Honda </tag>
            
            <tag> AD08R </tag>
            
            <tag> BRZ </tag>
            
            <tag> Racing </tag>
            
            <tag> Razo </tag>
            
            <tag> Subaru </tag>
            
            <tag> Yokohama </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更换机油和滤清器</title>
      <link href="/2019/06/25/changing-the-engine-oil-and-oil-filter/"/>
      <url>/2019/06/25/changing-the-engine-oil-and-oil-filter/</url>
      
        <content type="html"><![CDATA[<img src="/2019/06/25/changing-the-engine-oil-and-oil-filter/engine_oil.jpg" class=""><p>有句话是这么说的：Boys never actually grow up. Their toys just get bigger and more expensive.</p><p>翻译成中文就是：「男人从未真正长大，只是玩具变得越来越大，越来越贵。 」</p><span id="more"></span><img src="/2019/06/25/changing-the-engine-oil-and-oil-filter/toys.jpg" class=""><p>细细品读，似乎并无道理。而「车」，必然是大玩具中不可或缺的一个。</p><p>开车想必每个车主都会，养车则未必人人都会。甚至在中国，可能开了一辈子车都不会自己保养。</p><p>既然是玩具，那么就自己动手来保养好了，倒不是为了省几十块工时费，更多的是享受「玩」的过程。</p><p>今天我们就以代号为 GK5 的第三代本田飞度（Honda Fit）为例，讲讲如何自己更换机油做保养。</p><h2 id="暖机"><a href="#暖机" class="headerlink" title="暖机"></a>暖机</h2><p>经常在论坛看到各路大神纠结飞度到底应该加多少机油，有的说 3L 有的说 3.3L，有的说 3.5L，其实都对也都不对。</p><p>之所以会有各种机油加注量的不同，主要是因为在更换机油前没有进行暖机的步骤，或者是油没有放干净。</p><p>正常的暖机步骤，按照官方维修手册的要求，需要起动发动机。</p><p>在无负载（M&#x2F;T 位于空档或 CVT 位于 P 或 N 位置）时，将发动机转速保持在 3,000 rpm，直至散热器风扇运转，然后使其怠速。</p><h2 id="打开机油盖"><a href="#打开机油盖" class="headerlink" title="打开机油盖"></a>打开机油盖</h2><p>待引擎温度正常后，关闭发动机。如下图所示，打开引擎盖。</p><img src="/2019/06/25/changing-the-engine-oil-and-oil-filter/01.png" class=""><p>然后打开机油盖，方便空气流动，以便更好地排放废旧机油。</p><h2 id="拆卸发动机底盖"><a href="#拆卸发动机底盖" class="headerlink" title="拆卸发动机底盖"></a>拆卸发动机底盖</h2><p>按照图示，移除发动机底盖上的螺丝和卡扣，并拆卸发动机底盖。</p><img src="/2019/06/25/changing-the-engine-oil-and-oil-filter/02.png" class=""><h2 id="放油"><a href="#放油" class="headerlink" title="放油"></a>放油</h2><p>拆下放油螺栓 (A) 并排空发动机机油，因为机油会污染环境，务必用合适的容器将废旧机油收集好。</p><img src="/2019/06/25/changing-the-engine-oil-and-oil-filter/03.png" class=""><p>接下来用机油滤清器扳手，拆下机油滤清器，将剩余的机油排放干净。</p><img src="/2019/06/25/changing-the-engine-oil-and-oil-filter/04.png" class=""><p>注意检查滤清器以确保橡胶密封件没有粘到发动机的机油滤清器座表面，如果有请手动移除。​</p><h2 id="更换"><a href="#更换" class="headerlink" title="更换"></a>更换</h2><p>检查新滤清器上的螺纹 (A) 和橡胶密封件 (B)。</p><img src="/2019/06/25/changing-the-engine-oil-and-oil-filter/05.png" class=""><p>清理机油滤清器座上的密封件，尤其是接口附近的尘土、油泥等。</p><p>在滤清器橡胶密封件上涂抹一层薄薄的新的发动机机油，以免安装时损坏密封圈，导致漏油。​</p><img src="/2019/06/25/changing-the-engine-oil-and-oil-filter/03.png" class=""><p>用一个新的垫圈 (B) 重新安装放油螺栓，并拧至规定扭矩（40 N·m）。</p><h2 id="加注机油"><a href="#加注机油" class="headerlink" title="加注机油"></a>加注机油</h2><p>官方的建议是 API 品质等级为 SM 或以上的 0W-20 机油。</p><img src="/2019/06/25/changing-the-engine-oil-and-oil-filter/06.png" class=""><p>根据情况不同，需要加注的机油量也有所不同：</p><ul><li>仅更换机油：3.1 L (3.3 US qt)</li><li>更换机油和滤清器：3.3 L (3.5 US qt)</li><li>发动机大修后：4.0 L (4.2 US qt)</li></ul><h2 id="检查渗漏"><a href="#检查渗漏" class="headerlink" title="检查渗漏"></a>检查渗漏</h2><p>重新安装好机油盖，并启动引擎。</p><p>让引擎运转几分钟，然后检查机油滤清器和放油螺栓是否有漏油现象。</p><p>如果一起正常，将车辆停在水平地面上，并熄灭引擎，以便接下来检查油量。</p><h2 id="检查油量"><a href="#检查油量" class="headerlink" title="检查油量"></a>检查油量</h2><ol><li>关闭发动机后需等待 3 分钟以上。</li><li>拆下并擦净油尺，然后重新安装油尺。​</li><li>拆下油尺。​</li><li>检查发动机机油油位。油位应该在上标记 (A) 和下标记 (B) 之间。</li><li>如果发动机机油油位接近或低于下标记，添加发动机机油使油位达到上标记。​</li></ol><img src="/2019/06/25/changing-the-engine-oil-and-oil-filter/07.png" class=""><h2 id="收工"><a href="#收工" class="headerlink" title="收工"></a>收工</h2><p>如果一切顺利，换机油就算完成了。</p><p>最后把发动机底盖装好，盖上引擎盖，收拾好各种工具就算完工了。</p><p>是不是很简单？</p>]]></content>
      
      
      <categories>
          
          <category> Car </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Car </tag>
            
            <tag> Vehicle </tag>
            
            <tag> Engine Oil </tag>
            
            <tag> Fit </tag>
            
            <tag> GK5 </tag>
            
            <tag> Honda </tag>
            
            <tag> Oil </tag>
            
            <tag> Oil Filter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>说说汽车的轮子</title>
      <link href="/2019/06/15/all-about-the-wheels/"/>
      <url>/2019/06/15/all-about-the-wheels/</url>
      
        <content type="html"><![CDATA[<img src="/2019/06/15/all-about-the-wheels/wheels.jpg" class=""> <p>年初<a href="../../../../2019/02/15/2019-annual-plan/">立了个 flag</a>，今年一定要给车车换个鞋子，不然就把它推下海。于是乎，开始了关于汽车轮胎的功课。</p><p>实际上这个功课从 2006 年就开始了，到真正开始改，已然 10 几年过去了…… 囧rz</p><p>言归正传，关于轮胎，大部分人都希望换更大的，更好看的。然而换轮胎还是有很多数据要关心和了解的，不然要么不适用，要么不能用。</p><p>而这篇文章就是一篇简易科普文，给想要改装轮毂或者感兴趣的小伙伴，介绍一下轮胎和轮毂的相关知识。</p><span id="more"></span><h2 id="轮毂"><a href="#轮毂" class="headerlink" title="轮毂"></a>轮毂</h2><p>说到轮毂，我们就必须要了解关于轮毂的几个基本概念：</p><ul><li>Diameter（直径）</li><li>Width（宽度）</li><li>Offset（偏距）</li><li>Bolt Circle Diameter (BCD) or Pitch Circle Diameter (PCD)</li><li>Center Bore（中心孔）</li></ul><p>直径很简单，就是我们说的 15 寸轮毂，16 寸轮毂的概念，这里用来表示直径的单位是英寸（inches）。一般我们说的改装大尺寸轮毂，指的就是这个。</p><img src="/2019/06/15/all-about-the-wheels/diameter.jpg" class="" title="Diameter（直径）"><p>跟直径相匹配的是宽度，俗称「<strong>J 值</strong>」，通常用 7J、8J 这种方法来表示轮毂的宽度，其单位也是英寸（inches）。</p><img src="/2019/06/15/all-about-the-wheels/width.jpg" class="" title="Width（宽度）"><p>偏距，也俗称「<strong>ET 值</strong>」，简单说就是轮毂中间螺丝固定座与整个轮圈中心点的差值，再通俗点就是轮毂改装之后是向内凹还是向外凸。</p><p>一般轿车而言，其 ET 值大多为正的。比如原厂的 ET 值为 45，我们改成同尺寸 ET 值为 40 的轮毂，轮胎就会向外突出。反之换成 ET 值为 50 的，轮胎就会向（翼子板）内缩进。</p><p>ET 值不仅会影响视觉效果，还会影响车辆的转向性能，甚至会导致轮胎和轴承的磨损等。对于部分改装用户，选择不当可能还会造成无法避开刹车卡钳的情况，导致轮毂无法正常安装。</p><img src="/2019/06/15/all-about-the-wheels/offset.jpg" class="" title="Offset（偏距）"><p>BCD 或者 PCD 表示的是一个以轮毂中心为圆心而假想出来的圆形的直径，在这个假想的圆形上均匀的分布着各个孔位，比如常见的 4 孔和 5 孔轮毂。</p><p>比如说 Subaru BRZ 的 BCD 为 5 x 100，表示这个轮毂有 5 个孔位，其 Bolt Circle 的直径为 100mm。再比如 Honda Fit 的 BCD 为 4 x 100，就是 4 个孔位，100mm 直径的意思。</p><p>常用的 BCD 数值有 <strong>100mm</strong>、<strong>112mm</strong> 和 <strong>114.3mm</strong> 三种，基本上市面上能看到的车型都使用了类似的参数。</p><img src="/2019/06/15/all-about-the-wheels/bcd.jpg" class="" title="BCD (PCD)"><p>中心孔就是轮毂中间镂空的圆孔，用来与车辆连接固定的部分。大部分原厂的轮毂中心孔尺寸与轮轴直径（Hub Diameter）完全匹配，以减少行驶过程中的震动。虽然有类似变径圈的东西存在，但是更换轮毂，最好还是选择中心孔匹配的为好。</p><img src="/2019/06/15/all-about-the-wheels/center_bore.jpg" class="" title="Center Bore（中心孔）"><p>最后我们来举个例子，用 Honda Fit 的轮毂来说一下： <code>185/60R15 6Jx15 ET50 4x100 56.1</code></p><p>这是一个直径为 15 英寸，宽度为 6 英寸，偏距为 50mm，4 孔位 BCD 为 100mm，中心孔为 56.1mm 的轮毂。</p><p>至于 <code>185/60R15</code> 所表达的意思，我们会在后续轮胎的部分继续介绍。</p><h2 id="轮胎"><a href="#轮胎" class="headerlink" title="轮胎"></a>轮胎</h2><p>轮胎根据用途有很多不同的分类，比如<strong>夏季胎</strong>、<strong>雪季胎</strong>、<strong>全季胎</strong>，当然还有<strong>热熔胎</strong>、<strong>半热熔胎</strong>等竞技型轮胎。</p><p>这里只简单介绍跟尺寸相关的参数，比如上文提到的 <code>185/60R15</code> </p><p>关于轮胎的基本信息，我们可以归纳总结为以下这些参数：</p><ul><li>Tire Width（轮胎宽度）</li><li>Aspect Ratio（扁平比）</li><li>Construction Type（结构类型）</li><li>Wheel Diameter（轮毂直径）</li><li>Load Index（载重指数）</li><li>Speed Rating（速度系数）</li></ul><p>其中，轮胎宽度用毫米（mm）作为单位表示，比如 185 就是 185mm。</p><p>扁平比指的是侧面的轮胎与轮胎宽度（Tire Width）的比例，60 表示的是 60%，因此得出轮胎的侧面长度为 185 x 60% &#x3D; 111mm。</p><p>结构类型根据车辆用途的不同会有不同，一般小轿车常见的为子午线（Radial）结构，用英文字母 R 表示。也有部分高性能轮胎使用 ZR 来表示轮胎速度可以超过 240 km&#x2F;h，比如 225&#x2F;40ZR18。</p><p>轮毂直径这个很好理解，跟我们上面说的轮毂部分的直径是相匹配的。也就是说，你要换 15 寸的轮毂，必须配合 15 寸的轮胎，这个很好理解吧。</p><p>载重指数，指的是每条轮胎可以承受的最大重量，其单位为公斤（kg），我们可以参考下面的表格：</p><table><thead><tr><th align="center"><strong>载重指数</strong></th><th align="center"><strong>每条轮胎载重（kg）</strong></th><th align="center"><strong>载重指数</strong></th><th align="center"><strong>每条轮胎载重（kg）</strong></th><th align="center"><strong>载重指数</strong></th><th align="center"><strong>每条轮胎载重（kg）</strong></th></tr></thead><tbody><tr><td align="center">75</td><td align="center">387</td><td align="center">84</td><td align="center">500</td><td align="center">93</td><td align="center">650</td></tr><tr><td align="center">76</td><td align="center">400</td><td align="center">85</td><td align="center">515</td><td align="center">94</td><td align="center">670</td></tr><tr><td align="center">77</td><td align="center">412</td><td align="center">86</td><td align="center">530</td><td align="center">95</td><td align="center">690</td></tr><tr><td align="center">78</td><td align="center">425</td><td align="center">87</td><td align="center">545</td><td align="center">96</td><td align="center">710</td></tr><tr><td align="center">79</td><td align="center">437</td><td align="center">88</td><td align="center">560</td><td align="center">97</td><td align="center">730</td></tr><tr><td align="center">80</td><td align="center">450</td><td align="center">89</td><td align="center">580</td><td align="center">98</td><td align="center">750</td></tr><tr><td align="center">81</td><td align="center">462</td><td align="center">90</td><td align="center">600</td><td align="center">99</td><td align="center">775</td></tr><tr><td align="center">82</td><td align="center">475</td><td align="center">91</td><td align="center">615</td><td align="center">100</td><td align="center">800</td></tr><tr><td align="center">83</td><td align="center">487</td><td align="center">92</td><td align="center">630</td><td align="center">101</td><td align="center">825</td></tr></tbody></table><p>可以看出，Honda Fit 原厂轮胎，每条最大载重为 500kg，也就是说整车最大载重量为 2,000kg。</p><p>与最大速度相关的「速度系数」可以参考下表：</p><table><thead><tr><th align="center"><strong>速度系数</strong></th><th align="center"><strong>最大时速</strong></th><th align="center"><strong>速度系数</strong></th><th align="center"><strong>最大时速</strong></th><th align="center"><strong>速度系数</strong></th><th align="center"><strong>最大时速</strong></th></tr></thead><tbody><tr><td align="center">B</td><td align="center">50 km&#x2F;h</td><td align="center">N</td><td align="center">140 km&#x2F;h</td><td align="center">U</td><td align="center">200 km&#x2F;h</td></tr><tr><td align="center">C</td><td align="center">60 km&#x2F;h</td><td align="center">P</td><td align="center">150 km&#x2F;h</td><td align="center">H</td><td align="center">210 km&#x2F;h</td></tr><tr><td align="center">J</td><td align="center">100 km&#x2F;h</td><td align="center">Q</td><td align="center">160 km&#x2F;h</td><td align="center">V</td><td align="center">240 km&#x2F;h</td></tr><tr><td align="center">K</td><td align="center">110 km&#x2F;h</td><td align="center">R</td><td align="center">170 km&#x2F;h</td><td align="center">Z</td><td align="center">240+ km&#x2F;h</td></tr><tr><td align="center">L</td><td align="center">120 km&#x2F;h</td><td align="center">S</td><td align="center">180 km&#x2F;h</td><td align="center">W</td><td align="center">270 km&#x2F;h</td></tr><tr><td align="center">M</td><td align="center">130 km&#x2F;h</td><td align="center">T</td><td align="center">190 km&#x2F;h</td><td align="center">Y</td><td align="center">300 km&#x2F;h</td></tr></tbody></table><p>最后我们再根据原厂轮胎的数据：185&#x2F;60R15 84H 得知这是一个子午线结构的 15 寸轮胎，其胎宽为 185mm，扁平比为 60，单轮胎最大载重 500kg，最大时速 210 km&#x2F;h。</p><p>整个轮胎加上轮毂的直径为：</p><p>15 x 25.4mm + 185mm x 60% x 2 &#x3D; 603mm</p><p>我们如果要更换轮毂和轮胎的话，就要保证更换后的直径要在正负 3% 以内的误差。</p><img src="/2019/06/15/all-about-the-wheels/tire.jpg" class="" title="Tire"><p>最后我们来做个练习题，上图为一个轮胎侧面的标记。假设该车为普通四轮轿车，请说出该轮胎允许的最大时速、该车的最大载重，以及单个轮子的总直径（轮毂 + 轮胎）。</p><h2 id="换鞋子"><a href="#换鞋子" class="headerlink" title="换鞋子"></a>换鞋子</h2><p>我喜欢把改轮毂和轮胎叫做「换鞋子」，毕竟 4 个轮子就像是车子的四个脚丫子。</p><p>这次我们用 Subaru BRZ 来举例，原厂的轮毂为：<code>205/55R16 6.5Jx16 ET48 5x100 56.1</code></p><p>很明显，这是一个 16 寸的轮毂，如果我们想要升级到 18 寸，该如何操作呢？</p><p>记得我们上面说的计算方法吗？经过计算，原厂的轮毂和轮胎的总直径为 632mm，简单算了一下 215&#x2F;40R18 是一个不错的选择。</p><p>接下来，我们还要看一下 J 值和 ET 值，J 值大的话，可以显得有战斗范，轮胎没有那么外凸，视觉效果比较好。ET 值配合，可以使得轮胎靠近车身外沿，显得更加饱满，当然也可以腾出更多的位置给刹车卡钳。</p><img src="/2019/06/15/all-about-the-wheels/wheel_tune.png" class=""><p>看一下上面的图例，215&#x2F;40R18 7.5Jx18 ET38 是一个不错的选择。但是可以看到轮胎侧边还是会有一些突出，如果想更扁平一点的话，可以考虑上 8J 或者 8.5J 的轮毂，视觉效果会更好。</p><p>同时我们也可以看到，轮毂部分也留出了更多的位置给刹车卡钳，方便后续大家改装。</p><blockquote><p>**注意：**新的轮毂和轮胎总直径相对于原厂直径，少了 0.4%，时速表的速度会比实际略快（因为一圈比原来短了）。反之如果改后直径比原厂的长，则时速表显示的速度会比实际速度要慢。还有就是随着胎宽的增加，抓地力、制动性能会得到提升，但是油耗也会随之增加，如果原车动力不足还可能出现加速无力的感觉。</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>换鞋子并不是简简单单的找一个好看的样式就 OK 的，而是一个需要综合考量的过程。</p><p>如果 ET 太大，后续改装卡钳可能就会塞不进去。如果 ET 太小有可能导致轮胎碰到翼子板（改了避震的情况下），造成胎面的磨损。</p><p>又或者是 BCD 尺寸不对导致无法安装，中心孔距不对导致的轮胎抖动，甚至有可能跟悬架臂产生干涉而影响正常行驶。</p><p>最后如果你真的改了轮毂，那么恭喜你，很有可能在不久的将来你就想改悬挂和动力了。为什么？等你改了轮毂，你就知道了（蜜汁微笑）。</p><p>希望通过本文，能让大家对轮毂改装有一个基本的概念，最后祝大家 Happy Tuning ～～～</p>]]></content>
      
      
      <categories>
          
          <category> Car </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Car </tag>
            
            <tag> Rim </tag>
            
            <tag> Tire </tag>
            
            <tag> Tune </tag>
            
            <tag> Vehicle </tag>
            
            <tag> Wheel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019 干什么？</title>
      <link href="/2019/02/15/2019-annual-plan/"/>
      <url>/2019/02/15/2019-annual-plan/</url>
      
        <content type="html"><![CDATA[<img src="/2019/02/15/2019-annual-plan/2019.jpg" class="" title="Aloha, 2019 ~"><p>时光飞逝如流水，转眼之间，这<a href="../../../../../2019/01/24/2018-annual-review/">打完脸</a>都一个月了。</p><p>各位看热闹不怕事儿大的小伙伴一直迫不及待地催我交 2019 年的功课，好看我 2019 年如何花式打脸。</p><p>回顾一下去年的年度计划，发现前年要做没有做，准备去年继续，结果也是呵呵了的，有如下内容：</p><ol><li>学钢琴</li><li>练习吉他</li><li>练习尤克里里</li></ol><span id="more"></span><p>反思了一下，坚持不下来，有几个原因：</p><ol><li>真的没有时间和精力</li><li>其实不够爱</li><li>不够自律</li></ol><p>然后我感觉我就是属于，自律性不够，没时间又不是真爱的那种。。。感叹。。。</p><p>今年参考去年的几个大方向，最后调整为：<strong>健康</strong>、<strong>兴趣</strong>、<strong>学习</strong>、<strong>阅读和写作</strong>、<strong>愿望</strong></p><h2 id="健康"><a href="#健康" class="headerlink" title="健康"></a>健康</h2><p>去年一年让我最焦虑的就是每个月 50KM 的跑量，因为出差实在是太多，很多时候真的是不具备跑步的条件。</p><p>导致到经常一个星期跑一次 10KM，或者有的时候一次 20KM，15KM 这样，太不健康了。</p><p>还不如觉得状态好的时候去跑个 5KM 这样反而更好，所以今年取消了每个月 50KM 的运动计划。</p><p>一直跑步现在是瘦了很多，可是肌肉也都没有了，所以今年改为无氧运动看看。</p><p>同时，对身体影响最重要的，现在感觉还是早睡早起，所以去年没有做到的 12 点前睡觉，今年又再次被提上议事日程！</p><p>跑马现在感觉热情不是很大，列为待定的选项吧。</p><p>最后将健康相关的内容精简到 3 项：</p><ol><li>一年之中做到 180 天凌晨 12 点前睡觉（全部12点前睡觉完全做不到，争取能做到一半吧）</li><li>保持每周最少 3 次的体能训练</li><li>有可能的话，年内参加一个半程马拉松</li></ol><h2 id="兴趣"><a href="#兴趣" class="headerlink" title="兴趣"></a>兴趣</h2><p>感觉兴趣爱好太多了，所以今年要精简一下，重点关注放在：<strong>滑雪</strong>、<strong>赛车</strong>和<strong>潜水</strong></p><p>滑雪的主要目标是刻滑可以基本入门，到不是为了刻滑耍帅，主要还是为了更好的掌握和控制板子。</p><p>赛车这件事真的得好好地检讨一下了，今年还是跟去年一样的 flag，争取能下赛道练习吧。</p><p>车辆改装也说了好久了，要求不高，改个轮毂和轮胎就好了，希望今年能实现。</p><p>潜水现在确实感觉兴趣不大，不过为了刷刷存在感，争取今年解决 EFR 认证。</p><p>冲浪的话，有时间可以去玩一下。Penny Board 的话就日常代步，就不单独列出来了。</p><p>总结如下：</p><ol><li>争取滑雪可以做到年内刻滑入门</li><li>年内最少下赛道练习 3 次，争取每个季度 1 次，改装轮毂和轮胎</li><li>考取 PADI 的 EFR 证书，瓶子刷到 20 瓶</li><li>（待定）冲浪</li></ol><p>PS: 补充说明一下，Charles 博士说我滑雪姿势不够优雅，所以立了个 flag，两个雪季超过他！</p><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><p>今年没打算安排什么学习任务，感觉没有精力去学新的东西，大块的时间真的很难找，算是自暴自弃了。</p><p>可能的话，研究一下视频剪辑吧，看看能不能把出去活动的视频，编辑成还勉强可以一看的视频。</p><ol><li>（待定）学习视频剪辑</li></ol><h2 id="阅读和写作"><a href="#阅读和写作" class="headerlink" title="阅读和写作"></a>阅读和写作</h2><p>没想到去年定的 6 本书的阅读目标，很容易就完成了，今年提高一点点，增加到 12 本。</p><p>去年的博客更新了半年，然后因为一直在出差就断更了，今年不管出差与否，都要坚持更新。</p><p>今年还是尝试一下用英文写作吧，不管什么内容，先写了再说。</p><ol><li>年内完成 12 本书（类别不限）的阅读</li><li>博客今年的目标还是月更，每个月最少更新一次</li><li>尝试用英文写博客，内容不限</li></ol><h2 id="愿望"><a href="#愿望" class="headerlink" title="愿望"></a>愿望</h2><p>对于一个准社交恐惧症的人来说，今年决定放飞自我，不再要求参加社交类活动，留多点时间给自己。</p><p>还是要努力一个人去旅游，去年立了 flag 最后也没有做到，一是没时间，二是不知道去哪儿。</p><p>今年还是要找时间，逼自己一个人出去走走，去哪儿不重要，重要的是要能先走出去……</p><ol><li>利用周末时间，去体验一个人的旅行，最少一次，两次合格，三次更好</li><li>（待定）高空跳伞，这个也想了有段时间了，看看今年有没有机会实现</li></ol><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>相比较于 2018 年的计划，今年的规划差不多是去年的一半。</p><p>我很好奇，到了 2020 年做年终总结的时候，完成度能有多少，是不是可以 100% 完成。</p><p>如果完成度还是跟 2018 类似的话，那是不是我明年还是要把目标设置多一点？</p><p>这样虽然完成度不高，但是实际完成的东西还是多的。</p><p>2019，依旧迷茫的一年，但是目标总是要定的，不然不单只是迷茫的一年，还会是浑浑噩噩的一年。</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Annual </tag>
            
            <tag> Plan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 年终总结</title>
      <link href="/2019/01/24/2018-annual-review/"/>
      <url>/2019/01/24/2018-annual-review/</url>
      
        <content type="html"><![CDATA[<img src="/2019/01/24/2018-annual-review/annual_review.jpg" class="" title="Annual Review"><p>又到了大家喜闻乐见的，立 flag 打脸环节了。辞旧岁迎新春，让我们一起来 review 那些年前立了，年后被狗吃了的 flag 吧！🤣</p><p>温故而知新，打脸之前，先让我们回顾一下 2018 年，我作死的<a href="../../../../../2018/03/09/2018-late-year-plan">立了哪些 flag</a>。</p><span id="more"></span><p>我们就按照老顺序，一个一个数数去年的五宗罪吧</p><h2 id="健康"><a href="#健康" class="headerlink" title="健康"></a>健康</h2><p>不得不说，很神奇的是，每个月 50KM 的跑步，竟～然～坚～持～下～来～啦～！必须要给自己加个鸡腿啊！</p><img src="/2019/01/24/2018-annual-review/nrc.jpg" class="" title="Nike Run Club"><p>但是，相比之下每周三次的体能训练就……完全被狗吃了，毕竟是狗年不是。仔细审视了一下，应该是坚持了 2 个月左右吧，然后就彻底荒废了。</p><p>早睡这个就更惨不忍睹了，不要说做到一年一半时间早睡，全年的平均入睡时间，基本上都在凌晨 2 点到 3 点，这个非常值得反省。</p><img src="/2019/01/24/2018-annual-review/marathon.jpg" class="" title="Guangzhou 2018 Half Marathon"><p>最后一个待定的半程马拉松，竟然达成了，感动中国啊……</p><h2 id="兴趣"><a href="#兴趣" class="headerlink" title="兴趣"></a>兴趣</h2><p>冲浪？学了！</p><p>Star Wars Run？跑了！</p><p>Advanced Open Water？考了！</p><img src="/2019/01/24/2018-annual-review/padi.jpg" class="" title="PADI Certificate"><p>滑雪入门？哦了！</p><p>下赛道练习？这个……那个……我是谁，我在哪儿？「喂。。。喂。。。我这里信号不是很好。。。」</p><p>幽怨地贴一下可怜的执照们：</p><img src="/2019/01/24/2018-annual-review/licence.jpg" class="" title="Competition Licence"><p>怎么说呢，这个是真的没有时间，好几次 Track Day 我都在出差，要么就是排到周六在上班。</p><p>已经被各种小伙伴约了 N 次了，感觉下赛道这个事情，都快没朋友了，求各位「赛友」不要抛弃我。</p><p>另外关于车辆改装，感觉大部分时间我都在开<a href="https://www.xiaopeng.com/">「小鹏汽车」</a>，没有时间改装啊。</p><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><p>只能说，我今年真的没有好好学习，定的目标一个都木有实现，我们就直接翻篇了吧……</p><h2 id="阅读和写作"><a href="#阅读和写作" class="headerlink" title="阅读和写作"></a>阅读和写作</h2><p>《Steve Jobs》看完了，除此之外还看了 13 本书，现在还有 3 本书在读。这样看的话，每年 6 本的量还是比较低的，新的一年可以考虑适当增加一下读书量了。</p><p>至于博客的月更，因为下半年频繁的出差，就断更了。整个下半年就没有更新过，天……反思，反思，反思啊……</p><p>确实减少了技术文章的数量，但是因为总数量也少了，所以也没啥感觉，就更不用说英文文章了。</p><h2 id="社交活动"><a href="#社交活动" class="headerlink" title="社交活动"></a>社交活动</h2><p>Google Developer Group Guangzhou 的活动，基本没有参加，感觉要被除名了…… &gt;_&lt;;</p><p>每个月见见不同的朋友，还是做到了，没有想象中那么难。</p><p>周末去一个人去旅游，并未能成行。应该还是修行不够，没有时间或许只是一个借口。</p><p>最神奇的是，竟然又参加了公司年会的节目，又客串了小年会的主持，这是为什么？！🤦‍♂️</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>来一张图，胜过千言万语</p><img src="/2019/01/24/2018-annual-review/goal.png" class="" title="My 2018 Goal"><p>总体完成度，大概在 70% 左右吧，感觉跟预期中差不多。</p><p>虽然感觉还是很多东西没有完成，但总体尚算满意，可以给自己打个合格了。</p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p>最后的最后，来个感谢环节，感觉今年要感谢的人很多呀，必须说明，排名不分先后。</p><ul><li>感谢 Yumi 和 Sascha 邀请去新加坡 Star Wars Run</li><li>感谢 Nison 小哥哥，不辞辛苦，千里迢迢帮我带各种玩具，辛苦了</li><li>感谢 Hebe 和 Emily 帮助我达成了年会节目的愿望</li><li>感谢 Yuna 的不嫌弃，让我客串主持，硬是帮我完成了一个 flag</li><li>感谢 Yoyo 带我入了滑雪的坑</li><li>感谢 Jane 同学，帮我实现了人生第一次跑马</li><li>感谢去年还不认识，今年莫名其妙成为好基友的 Yang 哥，陪我各种滑雪浪</li></ul>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Annual </tag>
            
            <tag> Review </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将 Hexo 升级到 v3.8.0</title>
      <link href="/2019/01/22/upgrade-hexo-to-v3-8-0/"/>
      <url>/2019/01/22/upgrade-hexo-to-v3-8-0/</url>
      
        <content type="html"><![CDATA[<img src="/2019/01/22/upgrade-hexo-to-v3-8-0/hexo.png" class="" title="Hexo"><p>最后一篇文章写于 6 月份，然后就在疯狂的出差，9 月份的时候尝试想要写一篇关于拖延症的，结果拖延症了。你懂的……</p><p>到了年底，终于把好多的事情忙完了，整理一下，才发现 Node.js 已经不是我认识的 Node.js 了，Hexo 也升级了。</p><span id="more"></span><p>去年是从 LTS v6 升级到了 v8，现在又升级到了 v10.15.0 了，版本号果然增长的快。</p><p>不幸中的万幸是，各个功能一切正常，没有出现什么不能兼容的问题。</p><p>更加难能可贵的是，Hexo 竟然官方发布了升级到 <a href="https://hexo.io/news/2018/10/19/hexo-3-8-released/">Hexo v3.8.0</a> 的新闻！终于不是万年不变的 v3.2.0 了。</p><p>更新了什么：</p><ol><li>Node.js: v8.11.3 -&gt; v10.15.0</li><li>Hexo: v3.7.1 -&gt; v3.8.0</li><li>NexT Theme: v6.2.0 -&gt; v6.7.0</li></ol><p>其实升级 Hexo 不是最痛苦的，升级 NexT 才是，配置文件改了很多……</p><p>另外听说 GitHub 可以免费私仓了，要不要把代码从 Bitbucket 迁移到 GitHub 呢？</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高考。高考？高考！</title>
      <link href="/2018/06/30/national-higher-education-entrance-examination/"/>
      <url>/2018/06/30/national-higher-education-entrance-examination/</url>
      
        <content type="html"><![CDATA[<img src="/2018/06/30/national-higher-education-entrance-examination/gaokao.jpg" class=""><h2 id="高考奇葩说"><a href="#高考奇葩说" class="headerlink" title="高考奇葩说"></a>高考奇葩说</h2><p>我相信，但凡在中国长大的人，没有一个没有听说过高考的，因为高考俨然已经成为了中国一年一度的「奇葩」盛典。</p><p>请原谅我这么说，所谓的奇葩并不是吐槽各位努力备考的莘莘学子，而是每年高考，总会有一些奇葩的事情发生而已。</p><p>在快高考前，各大媒体就开始了各种各样的报道，大街小巷学校里也拉起了各种横幅。</p><p>还有很多「不要脸」的 80 后，90 后叔叔阿姨们非要恬不知耻地说：「哎呀，好紧脏，过几天就要高考了呢，偶还素个孩子呀～～～」。</p><span id="more"></span><p>更不要说高考当天了，什么高考迟到了警察叔叔警车开路了，压力太大了晕厥了，什么地铁公交学校门口派水，派文具了。这么多矫情的考生，你们这么「傲娇」，你们父母造吗？</p><p>嗯，我相信他们一定「造」的。因为有家长组织起来，不让车辆正常通行的，说是影响孩子高考的，还有甚者为了听高考志愿填报讲座而大打出手的。</p><p>我心里面默默地觉得，你们都好厉害，你们这么厉害咋不上天呢？</p><p>事实上，家长们和考生们，就是希望自己能上天，成为人中龙凤。</p><h2 id="高考为什么这么火？"><a href="#高考为什么这么火？" class="headerlink" title="高考为什么这么火？"></a>高考为什么这么火？</h2><p>不过吐槽了一轮，回头想想，中国每年这么多考试，为何唯独「高考」如此受关注？</p><p>想想可能有以下几个原因：</p><p>一、考生数量庞大。我不大确定高考是不是全国最多人参加的考试，但是据<a href="http://www.sohu.com/a/234251810_115479">搜狐新闻的报道</a>：2018 年高考，报名人数 975 万，属 8 年来最高纪录。这样看的话，将近 1000 万人在同一个时间参加全国统考，恐怕也没有其他什么考试可以匹敌了吧？</p><p>二、总感觉在高考这个事情上，我们完美地继承了中华民族的优良传统，发扬光大了「进京赶考」的科举考试制度。初中毕业成了「秀才」，高中毕业成了「举人」，终于有资格考取「进士」了。其实我们只不过是把名字变了变，「进士」变成了「学士」，其内容本质上还是一样的。考上大学不就是古时候的「金榜题名」吗？不然我们为什么现在还在叫「高考状元」？每年还大肆宣扬（炫耀）？这样的氛围影响下，家里面的长者们自然会觉得只有考上了大学，才是通往成功的唯一途径。</p><p>三、媒体们的推波助澜，也极大地增加了高考的曝光度。其实本来很正常的一个考试，为了「吸睛」，媒体们也是使出浑身解数，不遗余力地大肆宣传。这种消费「高考」的情况，只会愈演愈烈而并没有任何的好转。相比之下看看同样是高等教育入学考试的 GRE 和 GMAT，我只能说美国的考试弱爆了，都没有什么媒体报道，更不要说铺天盖地地宣传了。还是我们国家好，对于教育多么地重视，全国上下同心同力力保高考，资本主义国家是真不能比啊。</p><p>四、看热闹不怕事大的人。很多大学毕业生，多少会有一种「报复」社会的快意心理：当年我就是这么辛苦被折磨过来的，现在也终于轮到你们了，哈哈哈哈！其实这里面多少也有一些对于高考制度的无奈和妥协，但更多的还是一种看热闹的心态。这其中还有一些工作生活不如意的人，借着高考来炫耀当年的自己多么所向披靡，更有借此炫耀高考成绩和大学的，以便作为一些茶余饭后的谈资。</p><p>五、莫名其妙随大流的。我相信更多的是这部分人，毕竟每个人都有每个人的生活，对于每天疲于加班的各种加班狗来说，他们是真的没有时间和心情关心你高考不高考的。只不过生活有的时候就是这么无奈，谁让人是群居的社交动物呢？为了跟旁边的人可以愉快地「尬聊」，大家也都很努力地去了解各种热点新闻，不然哪有共同话题啊，是不是？这跟世界杯是一样一样的，赛事期间莫名其妙的就多了 N 多为了讨好和迎合别人的伪球迷。同时为了掩盖自己超级伪球迷的事实，还要经常在各种群里面发出各种感慨和评价，比如说：果然是「德国垃圾堡」啊~~~</p><h2 id="高考与特权"><a href="#高考与特权" class="headerlink" title="高考与特权"></a>高考与特权</h2><p>当然，我相信还有其他更多的原因，但这都不重要，重要的是在全民力保高考的前提条件下，我们培养出来的到底是高级复合型人才，还是生活不能自理的庸才？</p><p>「忘带准考证，交警超速护送考生前往考场」、「交通道路管制只为保证高考」、「长辈病重，隐瞒病情只为孩子安心高考」、「道路拥堵，交警开路保证考生准时到达」，这些新闻标题大家是不是耳熟能详？到了高考这几天，只要是涉及到高考生，那么这就可以凌驾于一切。社会规则、政府管辖，在这几天，可以统统消失不见，有的只有各种对于高考生的特权。</p><p>新闻媒体力挺高考，够不够？当然不够，夜间施工项目必须不能够的，考点学校周边 100 米范围内各种噪声污染源必须得监督的，考场周围的一切机动车通行必须是要禁行或者限行的。甚至监考老师必须不能穿艳丽衣服、抹浓烈香水、穿高跟鞋，甚至咳嗽也得尽量避免的。还有各种市民，请自动自觉乘公交出行，为考生让路，谁家还没有个考生，想想你家孩子将来高考的时候。</p><p>一个一点「噪音」都无法接受的人，一个刚成年人生才起步的人，在第一次参加成人考试的时候就体会到了「特权」的重要性，试问将来他们能遵守社会伦理道德规范和法律底线吗？难道我们上面为了保证高考所做的这一切不违法吗？</p><p>我们剥夺了其他人正常的商业活动，不让正常的项目得以施工，让其他人正常的出行受到了阻碍，甚至还限制了监考老师的自由选择权，还道德绑架了广大的市民，这样做到底为了什么？</p><p>为了自己的「高考」不管不顾别人，甚至侵害他人的利益，这种损人利己的事情还被大肆宣扬。试想，一个连自己人生中最重要的考试都可以迟到，都可以忘记带准考证，都可以走错考场，对自己不负责任的人，我们能指望他对别人负责？</p><p>明明是自己的责任，还舔着脸让警察送，还有心情接受记者的采访，除了摄像还要拍照？！EXO ME?! 真的是不以为耻反以为荣啊？毕竟也是光宗耀祖，上了电视呢。拜托，读了这么多年书，是真的不知道「丑」字怎么写吗？</p><p>再有就是，这些享受了「特权」的孩子们，我就想知道他们考的成绩是不是因为享受了「特权」变得更好了？反正迄今为止，我是没有听说那个考试成绩优异的人「走错考场」、「出门塞车」、「忘带考证」亦或者是「身体虚脱」的。真正有能力和有本事的人不需要去靠「特权」来证明什么，他们自己就是最好的证明。</p><p>反倒是这些能力平平，却享受到了种种「特权」的考生，在未来的人生道路上是否能抵挡着住各种各样特权的诱惑？更不要说指望他们能遵规守矩，讲究人文道义和家国情怀了。怎么说也是由俭入奢易，由奢入俭难，就好像有些动物尝过腥就再也不吃素了。</p><p>媒体对于高考的过度炒作和群众对于高考形式主义地关注，使得高考有了莫名其妙的特权，让高考凌驾于社会之上，这值得我们每一个人反思……</p><h2 id="最后我想说"><a href="#最后我想说" class="headerlink" title="最后我想说"></a>最后我想说</h2><p>对于高考来说，正确答案确实只有一个，如果答对了就成功了，错了就失败了。这考验的是我们学习的能力，虽然很残酷但事实就是如此。</p><p>值得庆幸的是，人生考量的不仅仅是我们的学习能力。同样的人生本身也没有绝对的对错，人生所有的可能性都是正确答案。</p><p>努力学习参加高考，继续读自己喜欢的大学是正确答案。考不上，步入社会努力工作，亦或者是复习一年继续参加高考，也是正确答案。</p><p>喜欢运动、热爱音乐、乐忠于与朋友一起玩耍，这些统统都是正确答案。</p><p>所以不管如何，我们都不应该畏惧地活着，更不能否定自身的无限可能性。</p><p>不仅仅是高考，对于我们任何人都是一样，接受自我活出自己人生的精彩。</p><p>最后引用四句表达「文化」的话来作为这篇文章的结束，怎么说能参加高考的也都是「文化人」不是？😊</p><blockquote><p>植根于内心的修养；<br>无需提醒的自觉；<br>以约束为前提的自由；<br>为别人着想的善良。</p><p>——梁晓声</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Society </tag>
            
            <tag> Examination </tag>
            
            <tag> Privilege </tag>
            
            <tag> Regulation </tag>
            
            <tag> 高考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间自由之路（下）</title>
      <link href="/2018/05/24/time-freedom-2/"/>
      <url>/2018/05/24/time-freedom-2/</url>
      
        <content type="html"><![CDATA[<img src="/2018/05/24/time-freedom-2/financial_freedom.jpg" class=""><h2 id="前情回顾"><a href="#前情回顾" class="headerlink" title="前情回顾"></a>前情回顾</h2><p>追美剧，大家最熟悉的莫过于：「Previously on …」。相信在看这篇文章的你，应该已经看过<a href="../../../../../2018/04/25/time-freedom-1/">《时间自由之路（上）》</a>。虽然本篇文章的内容跟之前的没有太多交集，但本着温故而知新的原则，还是强烈建议先看完之前的文章再来阅读本篇文章。对于那些一个月之前读过《上》的小伙伴，我们也来温习下「个人成长」的内容：</p><ol><li>个人商业模式</li><li>思考方式</li><li>活在未来</li><li>人生加速器</li></ol><ul><li>安全感</li><li>多维度优势</li><li>学习学习再学习</li></ul><span id="more"></span><p>在进入正题之前，我真的很想说一句：果然还是 iPhone 用户给力（财大气粗）啊！为什么这么说呢？虽然说我写的文章又水又没内涵，但是怎么说字数也算是凑够了吧，但是每次都没有什么人打赏的说，这诚然跟 Apple 不允许微信使用「打赏」功能有关。</p><p>为了一探 iPhone 用户赞赏的意愿（骗点小钱买书看），围魏救赵使用了微信的「赞赏码」功能，那效果可谓是立竿见影啊！在文章出街的当天鄙人就收到了 <strong>￥17.66</strong> 的巨款啊！而且可以肯定的是，这些不明来历的巨款全部都是 iPhone 用户贡献的。所谓「不明来历」绝对不是为了戏剧效果，是名符其实的不明来历，因为微信赞赏码竟然不知道赞赏的人是谁？！Oh my god … 连谢谢别人的机会都不能给一个吗？难道是微信产品经理故意为之？</p><p>当然，真爱的人无论用 iPhone 还是 Android 都是那么的有爱，比如最大的一笔 ￥10 巨额打赏就是出自 GDG Guangzhou 唐总 Tony 哥之手，也是该文章唯一一个用 Android 打赏的用户了，比心~~~</p><p>最后感谢各位有爱的小伙伴们赞助我读书，亲爱的 iPhone 用户们，请你们下次打赏的时候务必留下你们的大名，以便他日飞黄腾达之时，可以滴水之恩涌泉相报。</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>在讨论「投资」这一概念之前，我们还需要了解一些基本的概念，比如说贯穿全书最重要的一个概念：<strong>「复利曲线」</strong>。说复利曲线最重要一点都不过分，因为按照原书的说法，复利曲线不但适用于成长、适用于金钱更适用于未来。</p><img src="/2018/05/24/time-freedom-2/compound_interest.jpg" class=""><p>在一开始的时候，复利曲线的效果可能并不是特别的明显，但随着时间的推移，无论是在个人能力还是财富的积累上，复利曲线都可能给我们带来指数级增长的可能性。注意，这里说的仅仅是可能，虽然我很认同原书作者的观点，但我始终不认为不断累积就一定会出现指数增长。要知道增长是一定存在的，但是指数增长？我始终觉得是属于少部分运气特别好的人的，毕竟那么多人努力了一辈子，到头来也还是一贫如洗。这里说的当然不是那种盲目地努力的人，而是那种看对了方向，也很努力，最后还是运气不好的那种。</p><p>我们再复习一下财富自由的定义：<code>被动收入 &gt; 生活支出</code>。也就是说要实现所谓的财富自由，并没有想象中的那么困难，无非就是开源节流。如果你对生活质量要求不高，且你的被动收入可以覆盖你日常生活所需，那么恭喜你，你已经财务自由了。很显然，只要狠狠地节流，实现财富自由不是梦。然而，现代人的欲望是永无止境的，那么想要实现财富自由的另外一个方法就是开源了。</p><p>此外书中还有另外一个比较基本的概念，叫做**「最少必要知识(MAKE)」** —— Minimal Actionable Knowledge and Experience。这个就不展开说了，简单概述之，就是你想要投资，或者想要深入了解某一个可以赚钱的行业，必须要具备能够理解该行业的最基本的必要的知识。比如说想要投资股票市场，你起码得知道如何开通股票账户，知道如何操作买卖和了解基本的术语吧？再比如你想要做人工智能相关的东西，你总得会点代数，会点计算机开发语言，了解下常见的 AI 引擎和平台吧？所谓 MAKE 就是需要大家利用快速学习的能力，在最短的时间内掌握必须的知识，然后用这些知识帮助自己作出最准确的判断。没有这些基础知识的支撑，所谓的投资不过是一场赌博而已，因为所有的决策都仅仅是感觉而已。</p><h2 id="资本"><a href="#资本" class="headerlink" title="资本"></a>资本</h2><p>每当提到<strong>资本</strong>这一词，大家的第一反应总是会说我没有钱、我没有资本。诚然资本离不开金钱，但「资本」绝对不仅仅是金钱而已，资本的构成包含了<strong>资金的金额</strong>、<strong>资金的使用时限</strong>以及<strong>资金背后的智慧</strong>。</p><p>一个残酷的现实是**「大多数人不配站在资本之后」<strong>，而好消息则是</strong>「站在资本背后的实力是可以习得的」<strong>，但这要求我们能从</strong>「金额」<strong>、</strong>「时限**」和**「智慧**」这三个维度进行突破。</p><p>首当其冲的「金额」很好理解，就是我们所拥有的资金量。比如说 1 万，10 万，100 万，1000 万都可以是我们的资金量，但这恰恰是让绝大多数人裹足不前的最大的陷阱！很多人误以为自己没有钱（不像我是真没有钱），就没有了投资的基础，笃定投资与自己无缘。包括我本人也一直深以为然，总觉得没有个几百万在手，谈什么投资？实则不然，这种想法只是一种自我暗示和欺骗的手段而已，因为<strong>投资的重点不在于盈亏绝对值，而在于盈亏比例</strong>。比如说你用 100 万创造了 10 万的收益，看起来很不错，差不多可以买小鹏 G3 电动车了（此处没有收广告费）。又或者说你用 100 块创造了 100 块的收益，相比之下大家往往会觉得前者比较厉害，然而前者的绝对值收益虽然是后者的 1000 倍，但是其 10% 的收益率远不及后者的 100%。后者才是真正更好的投资，在资金允许的情况下，后者可以带来更大的收益，前者只不过是因为资金量大相对风险较低而已。可惜的是超过 90% 的投资者都没有能明白这一点。对于我个人而言，也需要重新调整个人认知，哪怕是 1 分钱也是可以用来投资的。回顾自己之前种种所谓没有钱投资的理由和借口，其实不过是一种对于金钱不够敬畏的懒惰和愚昧罢了。</p><p>「时限」，另外一个重要的维度，其核心在于我们是否能心平气和地给我们的投资款判一个「无期徒刑」。所谓无期徒刑，就是这笔钱属于不影响我们日常生活的闲钱，扔在那里就扔在那里而不会让你心神不宁，焦虑不已。那些利用杠杆去炒股想要获得更高收益的人，显然无法做到心平气和。这么说感觉好像投资就是提前把钱拿去打水漂的感觉，但实际上如果我们无法做到心如止水的话，很容易被各种各样的信息所干扰，变得患得患失，甚至最终导致到投资的失败。也许一开始我们的判断是正确的，但因为无法给资金判个无期徒刑，当波动出现时我们就变得坐立不安了。看看玩比特币的人你就了解了，几次的大起大落，坚持到最后的都成了赢家，而其余的人都成了韭菜。所以无论多么艰难，我们也要搞清楚「很想要却不能够」与「可以却不一定要」之间的巨大区别，虽然二者的表现都是「这个事情我不想做」，可背后究竟是你真的不想做，还是你的资金和时限不允许你做？</p><p>最后是投资的「智慧」，很不幸的是这个智慧只能通过不断地学习、练习和犯错，才能在实践中习得，并没有任何捷径可以参考。但是有了资金和时限的保证，我们还是有机会能达到这一高度的，毕竟个人的进步总是在「知难行易」和「知易行难」中反复交替完成的。看完这本书，其实就已经进入了「知易行难」的阶段，而继续把这本书的内容深化成自己智慧的过程就是「知难行易」的阶段。一旦我们把投资相关的知识内化了，那么我们行动起来就会变得异常的容易了。</p><h2 id="机会"><a href="#机会" class="headerlink" title="机会"></a>机会</h2><p>中国有句古话（其实好像是外国来的，不过最早的翻译出处找不到）叫做：<strong>「机会总是留给有准备的人」</strong>，其实投资也是这样。结合之前我们所介绍的资本的三个要素来看，投资最重要的实际上并不是资金，而是智慧。对于一个合格的投资者来说：<strong>智慧 &gt; 时限 &gt; 金额</strong>。如果你智慧超群，也许有机会在更短的时间内获得比别人多得多的收益，那么有可能你无需为自己的资金判个死刑。但如果你跟我和大多数人一样智商已欠费，好在还有点时间和耐心，也许从时限上还能找回一些优势——就是给我们可灵活支配的资金判个死刑。大部分人的人生都是有限的，拥有投资的智慧可以极大地缩短你财富自由的时间，相对而言如果智慧不足，那么我们可能穷极一生都无法实现财务自由，更不要说时间自由了。</p><p>在我们身边每时每刻都有着各种各样不同的机会，但「看见了」不等于「抓住了」。看见机会和把握住机会是完全不同的两件事儿，我们每天都在「发现机会」和「错失机会」之间不断地恶性循环。有多少人错过了互联网的黄金时代，又有多少人错过了移动互联网的风口，还有多少人捶胸顿足为自己花了几百个比特币买了一个 Pizza 而悔恨终身？认为自己怀才不遇的人如漫天繁星，可谓俯拾皆是，你我又何尝不是那自以为「怀才不遇」的人呢？投资，同样适用，说白了，并不是我们真的有多厉害，多么未卜先知，亦或是多么的高瞻远瞩，实际上却是智慧不足，看不清未来的发展和趋势，所以才错过了一个又一个的投资热点。与其后悔以前没有抓住机会，倒不如好好提升自己，尽可能地把握住现在的机会，这样才不至于在将来后悔自己没能好好把握住现在的机会。</p><p>众多机会中，有些显而易见却始终被忽视的机会一直存在着，比如书中所介绍的：<strong>GAFATA</strong></p><ul><li>Google</li><li>Amazon</li><li>Facebook</li><li>Apple</li><li>Tencent</li><li>Alibaba</li></ul><p>从股票市场上来看，GAFATA 创造的价值远超很多天使投资的投资回报率。但还是有很多人前仆后继地做着天使轮、A 轮、B 轮投资，而不愿意做 GAFATA 的股票投资。这是一个很有趣的现象，GAFATA 就是非常好的持续盈利的机会，但是你不去投资它们，就等于跟自己半毛钱关系都没有。当然，这么说也有事后诸葛亮的嫌疑，毕竟股票市场上的股票多如牛毛，我们如何筛选出 GAFATA 则又是投资智慧的范畴了。</p><p>绝大多数人在做所谓投资的时候，其实都是在「赌博」，而不是在「投资」。大家对股票的选择往往也是一种感觉，或者是基于人云亦云（无非是别人说这个股票好，或者别人说这个产业好）的所谓信息。基于这种不确定的感觉所作出的所谓「决定」，其最终的投资结果也可想而知。放眼国内市场更是如此，大家关心的往往是各种所谓内幕的八卦信息，而不是如何认认真真地去研究某一个特定的领域或者行业。甚至很多人对于要投资的公司都是一知半解，更有甚者在完全不懂的情况下就赌上了全部身家。正是因此，为了做到真正的投资而不是赌博，我们有必要反复提醒自己：对于投资而言，<strong>所有的注意力都应该放在如何避险，而不是如何冒险上</strong>！</p><p>再者就是方法论，在我们看到任何机会的时候，首先需要判断这个机会的可行性。根据自己的实际情况，资金情况，时效性等做一个基本的分析。觉得基本可行的基础上，去模拟一下投资。比如说自己做一个虚拟的账本，假装自己投资了 GAFATA，用 1 块钱作为本金，每个月跟踪一次并更新报表，坚持几个月以后看看收益的比例。切记，我们关注的是投资的相对值而非绝对值。同时在模拟投资的过程中，不断关注相关企业的各方面的资讯，看看公司战略发展等变化对公司发展的影响，可能的话也看看公司往年的财报，更全面的了解公司的发展概况。最后，在做过足够多的功课以后，我们就可以开始真正的投资了。</p><p>虽然说起来很简单，但实际操作起来，还是需要很多很多的积累，必须从日常不断地培养自己逻辑推理和分析解决问题的能力。也许一开始总是会让人感觉到挫败感，但随着时间的推移，我们会自然而然地形成一套自己的思考系统。有了这样的系统的支撑，我们也会慢慢地抓住更多原本无法把握的机会，正如原书作者所说：「<strong>你的投资依据必须靠且仅靠自己的深入思考而得到</strong>」，别无他法。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>人生迄今为止没有做过什么正儿八经的投资，回首望去连创业这么多年本身也是一场赌博。很多事情并没有想清楚，前期也没有做好足够地调查工作，都是草草地一拍脑袋就开工了，因此对于书里面剩下的一些内容还处于「知易行难」的阶段，于是乎偷个懒把它们都整合到了一起。如果以后对这些内容有了更深入的理解，或者是有了新的心得，就再单独写文章吧。</p><h3 id="风险"><a href="#风险" class="headerlink" title="风险"></a>风险</h3><p>要知道，投资永远是伴随着风险的，这个世界上不存在没有风险的投资。尤其是投资的过程中，有很多的不确定性，而一旦有未知存在就有风险存在。而衡量风险大小的决定性因素是赌注的大小，也就是说你的资本量越大你抵抗风险的能力就越高，尤其是在面临同样概率的风险的时候。就好比赌博永远是庄家赢一样的道理，因为庄家的资本量要远远大于玩家。原书中另外一个观点是冒险没问题，但尽量不要被抽水。所谓抽水我们可以理解为手续费，比如买入、卖出都要收取一定的手续费、服务费等。为何不要被抽水？因为很多时候你赚的钱还不够被抽水的，反复多次的抽水以后不要说收益，可能连本金都不保了，除非你的收益真的非常的可观。</p><p>其实说这么多所谓的道理，无非就是告诫大家要在自己可承受的范围内去合理投资。不经过独立思考和不做功课的所谓「投资」，在我看来跟赌博没有区别。就算是赌博，大家也要牢记一点：<strong>永远不要押上全部！</strong></p><h3 id="预测"><a href="#预测" class="headerlink" title="预测"></a>预测</h3><p>如何预测股票或者其他投资的发展趋势？答案非常简单，就 3 句话：</p><ul><li>短期价格预测是不可能的</li><li>长期价格预测是很可能的</li><li>预测时间期限越长，预测难度越低</li></ul><p>因为短期价格总是会受各种各样信息的影响，比如最近中美贸易战显然会影响很大一部分跟美国有贸易往来的公司的股价。再比如之前反日情节高涨的时候，很多无脑愤青对于日货的抵制。再到近几年韩国萨德系统的部署，导致到的国民对于韩国产品的抵制。但凡购买了受这些事件影响的公司的股票，投资者短期内很有可能会亏损，但长期来看这些企业还是在持续的发展和升值中。毕竟市场需求在那里摆着，人们总是好了伤疤忘了疼，过一段时间还是该干嘛干嘛。因此从长远来看，这些公司的市值还是会持续走高，只不过在一个特定的时间内可能会被过度的低估。</p><p>同样的，视所有的短期投资为赌博都不为过，或者说得好听点叫投机。但毕竟只有少部分人才能有机会在这种短期的投机中盈利，显然大部分人在短期投机里面都是被割韭菜的那一批人。因此我们投资，更应该注重长线投资而非短期投机，一来可以降低自身的焦虑感，二来可以让我们用未来的方式来思考现在。这也就是为什么我们之前要强调资金必须要能够判个无期徒刑，只有这样我们才有可能真正地做到长线投资。</p><h3 id="周期"><a href="#周期" class="headerlink" title="周期"></a>周期</h3><p>还是拿股票来举例吧，现实经济中没有直线只有波动，有哪一个优质的股票不是反复震荡着上升的？这一过程其实就是明确的周期涨跌，唯一不确定的只是周期而已，毕竟有的周期可能比我们的生命本身还要漫长，也许一辈子我们都没有机会见到这个周期的始末。</p><p>然而以史为鉴是一个不错的选择，关注历史周期的变化，可以给我们对其未来的周期发展提供一个不错的参考。<strong>关注周期，以及多个周期背后显现出来的真正趋势，会给你一个全新且可靠的世界和视界。</strong></p><h3 id="选择最重要"><a href="#选择最重要" class="headerlink" title="选择最重要"></a>选择最重要</h3><p>当我们了解了诸多投资所需要的方法和工具以后，最后一关就是「选择」了。抛开「投资」不谈，其实人生所有的事情都是选择，人的一生就是在不断选择的过程而已。</p><p>关于选择，我们最喜欢说的一句话就是：「追随你自己的内心」。虽然这也是一种选择，但这仅仅是一种结果随机的听天由命，而不是权衡利弊以后得出的最佳选择。而要做出相对胜算更大的选择，我们必须要在选择的过程中添加必要条件，就是我们通过 MAKE 以及资本所作出的可能的最优判断。同时，我们应该只考虑且不遗漏那些最为必要的条件，而不要把一些无关紧要的条件统统加进来，否则的话我们会觉得自己根本没有了选择的可能性。</p><p>还是举例说明，比方说我去滑雪，去哪里滑雪好呢？我们肯定想要人少，交通便利，价格便宜，雪的质量好，教练专业，配套设施好的地方。按照这种标准来筛选的话，似乎列出 100 个雪场，都无法满足我们的条件。这明显就是添加了过多的非必要条件，那么问问我自己滑雪最重要的是什么？当然是安全第一的前提条件下，雪场好，教练专业就够了，这就是最必要的条件，其他的都不重要。毕竟滑雪最重要的是滑雪本身，其他的都是只是锦上添花而已。</p><p>最后来个老生常谈的话题：<strong>创业方向</strong>——在我创业的过程中被问的最多的问题。归纳总结以后，无外乎 3 个词：<strong>「高频」、「刚需」、「大市场」</strong>。还是那句话：道理大家都懂，但怎么找到市场大又是刚需，频次还高的投资场景，真的是见仁见智，八仙过海各显神通了，反正我现在的智力水平是抓不住这样的机会的。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这篇文章比预计完成的时间晚了很多（距离上一篇刚好一个月过去了），但最后也算是勉强完成了，顺便反思下：</p><ol><li>时间规划还是做得不好，没有预留足够的大块的时间用于思考</li><li>好逸恶劳拖延症爆发，天天刷美剧无心写作，别说写作了，连阅读都变少了</li><li>对于「投资」的理解，确实不如自己对于「持续学习」的理解</li><li>最近公司事务增加，且长期处于加班状态，身心疲惫</li></ol><p>今天偶尔看到一句话（其实见过好多次）：「Done Is Better Than Perfect」。不管这篇文章写得有多渣，起码也算是完成了，毕竟罗马也不是一天建成的。一步一个脚印慢慢来吧，也只能这么安慰（欺骗）自己了。</p><p>（蜜汁微笑）</p>]]></content>
      
      
      <categories>
          
          <category> Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Finance </tag>
            
            <tag> Investment </tag>
            
            <tag> Management </tag>
            
            <tag> Book </tag>
            
            <tag> Note </tag>
            
            <tag> Reading </tag>
            
            <tag> Personal </tag>
            
            <tag> 李笑来 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间自由之路（上）</title>
      <link href="/2018/04/25/time-freedom-1/"/>
      <url>/2018/04/25/time-freedom-1/</url>
      
        <content type="html"><![CDATA[<img src="/2018/04/25/time-freedom-1/financial_freedom.jpg" class=""><h2 id="什么是时间自由之路？"><a href="#什么是时间自由之路？" class="headerlink" title="什么是时间自由之路？"></a>什么是时间自由之路？</h2><p>这是一篇读书笔记，起源于最近（确切的说是半个月以前）拜读的李笑来老师的**《财富自由之路》**。这里我不得不吐槽一下这个烂俗的书名，真的是太俗气了呀，让人完全没有想阅读的冲动。如果光看书名的话，感觉就是那种满嘴跑火车，逻辑混乱的鸡汤文大合集。若不是因为 Yui 同学「墙裂」推荐，我是铁定不会看这本书的。</p><span id="more"></span><p>但是转念一想，也就是因为这么个「大烂俗」的名字，也许才把它推到了网红书的风口浪尖吧！这不也正是「李老师」所说的，人民「穷」众以为的「刚需」吗？人民「穷」众的刚需是啥？生有所养，老有所依啊。那人民「穷」众自以为的刚需呢？**财富自由啊！！！**想明白了这个道理，才发现还是李老师高，实在是高。</p><p>全书围绕着如何不断地自我提升和进步，以变成另外一个「物种」，最终实现财务自由来展开。而阅读完本书以后，我并没有满腔热血地觉得自己未来一定可以财务自由，反倒是清楚了<strong>自己想要的实际上是时间自由</strong>。而所谓的「财务自由」只是实现「时间自由」的一个工具和手段而已，而绝不应该把「财务自由」视为最终目标。</p><p>想要实现「时间自由」比起实现「财务自由」要更加困难，因为「财务自由」的定义是自己所需的开销小于自己的实际收入。或者换个角度来讲就是：<code>被动收入 &gt; 生活支出</code>。只要达到这个条件，那么理论上来讲，你就已经财务自由了，这也是为什么无欲无求的人活得总是比较快乐（傻人有傻福啊）。假设你一个月的开销是 1000 块，而收入有 2000 块，那么是不是也算财务自由了呢？如此看来「财务自由」对不同的人有截然不同的概念。另外一种「财务自由」的解释是，自己想干什么就干什么，想买什么就买什么。如果按照这个来讨论的话，那么我觉得超绝大部分人应该有生之年都无法实现财务自由了，因为这个基本上就属于做吃等死，不劳而获和躺着挣钱的美好幻想而已。</p><p>书中对于「财富自由」的解释跟我理解的「时间自由」更接近：<code>所谓「个人财富自由」，是指某人再也不用为了满足生活必须而出售自己的时间了</code>。相对于「财务自由」，「时间自由」更吸引我的是：不是你有钱你想干什么就能干什么，而是你有钱你可以选择理直气壮地不干什么。进而把节约出来的时间投入到自己真正感兴趣的事情上，这才是最重要的。在这一过程中，金钱只是一个工具，帮助我们获得更多的属于我们自己的时间而已。对于那些已然「财富自由」，但总觉得根本没有自己时间的人来说，也许一早他们就定错了目标。举个「栗子」大家就很清楚了，某位马姓同学曾说过：「我这辈子最后悔的事情，就是创建了阿里巴巴。」这件事被后人戏称为：悔创阿里杰克马。</p><h2 id="这本书说了些什么？"><a href="#这本书说了些什么？" class="headerlink" title="这本书说了些什么？"></a>这本书说了些什么？</h2><p>这本书说了很多东西，但是大体上可以分为四个部分：</p><ol><li>基本概念（财富自由定义、复利曲线等）</li><li>个人成长（变成另外一个物种）</li><li>投资理财（资本、机会、风险和预测等）</li><li>其他</li></ol><p>没看过书的同学，可以看一下下面的这个思维导图，应该会对本书有一个大概的认知：</p><img src="/2018/04/25/time-freedom-1/ff_mm.png" class=""><p>因为是个人读书笔记，不是书评，所以我只选择了我认为有收获和重要的事情，并不一定代表作者想要表达的全部观点。因此想要了解全貌的同学，还是老老实实去买本书回来看吧。</p><p>因为涉及的内容比较多，不可能一一覆盖，我们就重点谈谈「个人成长」和「投资理财」这两个内容。</p><h2 id="个人成长"><a href="#个人成长" class="headerlink" title="个人成长"></a>个人成长</h2><h3 id="个人商业模式"><a href="#个人商业模式" class="headerlink" title="个人商业模式"></a>个人商业模式</h3><p>说到个人成长，先介绍下书中所述的 3 种**「个人商业模式」**：</p><ul><li>一份时间出售 1 次</li><li>同一份时间出售很多次</li><li>购买他人的时间再卖出去</li></ul><p>很不幸的我们大多数人都属于第一种人，我们打着一份普普通通的工，一份时间出售一次。对于这种情况来说，我们有 2 种选择来改善现状：一是想办法提高单位时间售价，二是想办法提高时间销售数量。第一个很好理解，就是让自己的能力更强，获得更高薪酬的工作，进而实现提高单位时间售价的目的。相对而言，第二种会比较难，但我们可以把自己想象为老板，自己为自己打工，找到自己感兴趣的点不断提升自我。这样的话，我们最少可以把时间销售 2 次，一次是为公司创造了价值，一次是让自己得到了成长和提升。虽然这听起来像极了公司的洗脑文，但这个观点我对作者是深信不疑的，因为你每天额外多一点点的进步，在几年以后就会成为你明显超越同龄人的最好证明。</p><p>第二种，一份时间出售很多次，这个其实现在也比以前要容易了。就算不能获得短期金钱上的回报，但是通过自身的努力，还是有可能收获更多的关注度的。比如我现在在写的博客（公众号），就是这样一种体现。写文章，不单止要占用我大量的时间思考、写作，还要花费我不少的精力和金钱维护服务器，而换回来的却是寥寥无几的阅读量。但我仍旧认为这是一个值得去尝试和坚持的事情。只不过在这一过程中，我需要更多的去思考对于我的读者来说，什么样的文章才能满足他们的刚需？这也是一份时间出售多次需要思考的核心问题。</p><p>最后一种花钱买服务，避免成为时间出售 1 次的人，其实并不难理解，我们日常也在践行着这一理念。比如说出去吃饭，找代驾，找中介等等，都属于花钱购买别人的时间来解决自己的问题。唯一不同的是，我们没有把他人的时间再卖出去。也许创业有机会可以购买别人的时间，再把它卖出去，但是对于我们大多数人来说，并没有办法这样操作。但转念一想，就算我们无法贩卖他人的时间，我们节约出来的时间依然可以投资到自己的成长上，这样看来在一定程度上也算是享受到了购买他人的时间再卖出去了。因此，<strong>在经济能力许可的情况下，尽可能地购买别人的时间，把单一重复性的东西交给那些一份时间出售一次的人去完成，而把节约出来的时间义无反顾地投资到自身成长上</strong>，才是最明智的做法。</p><h3 id="思考方式"><a href="#思考方式" class="headerlink" title="思考方式"></a>思考方式</h3><p>之前我写过一篇文章<a href="../../../../../2018/04/17/brain-is-a-good-thing/">《脑子是个好东西》</a>，其实吐槽的就是思维能力的问题，要想实现「时间自由」同样需要有思考的能力。</p><p>比如我们问一个人「金钱」和「时间」哪个更重要？有人的回答是：「金钱比时间更重要」，有人的回答是：「时间比金钱更重要」。</p><p>作出这些回答背后的思考，其实就是我们每个人不同价值观的体现。我们的价值观决定了我们的选择，而我们的选择促成了我们的行动，最终我们的行动决定了我们自身的命运。这样说好像很邪乎，但是古语说的好：「性格决定命运」。以前我并不能很好的理解这句话，总觉得性格这种东西是天生的，就好像「生死有命富贵在天」一样，既然性格从出生之日起已然决定，那么命运似乎也就早已成定局了。然而随着年龄的增长，我愈发地觉得人的性格是可以改变的，虽说「江山易改本性难移」，但人的性格真的是可以改变的，只不过很难，非常难，极难而已。这是一个不断地自我否定，自我认知，自我认同，周而复始螺旋上升的过程。因为这一过程实在太痛苦，而且还要反复经历，大部分人在还没有达到「自我认同」之前，就已经放弃在「自我否定」和「自我认知」的环节了，表现出来就是退回到自己的舒适区，原来什么样现在还是什么样的状态。</p><p>价值观本身没有对错，但是想要实现自己的理想和目标（比如说「时间自由」），总是有一些朴素的真理可以追寻的，比如说：<strong>「做对的事情」远比「把事情做对」重要得多</strong>。</p><p>纵观我们自己的成长历程，不难发现我们把大部分的时间都花费在「把事情做对」和「好好浪费时间」上了。「浪费时间」很好理解，既没有好好的玩，也没有好好的学习，更没有好好的休息，在我看来就是一种最大的时间浪费。如果你特别喜欢玩，玩的过程中又特别的享受，还能变着花样玩，玩成高手，在我个人看来这并算不上一种浪费时间的表现。反倒是那种不知道自己要干嘛，一会儿看下手机，一会儿看下电脑，一会儿发发呆的那种才是真正的浪费时间。相对于「浪费时间」，「把事情做对」才是最大的隐形的坑。我们从小就被教育要好好听话，听从指挥，做对的事情，这本身并没有错，错的是我们只关注了过程正确，却忽视了方向正确——即「做对的事情」。</p><p>如果我们做的事情是对的，那么哪怕我们速度慢一点也没有关系，只不过是 1 年，还是 5 年，亦或是 10 年来完成而已。但是如果方向错误了，我们却努力地「把事情做对」，那么实际上我们不单止是在浪费时间，还是在错误的道路上大踏步快速前进。人总是懒惰的，也总是好逸恶劳的，没办法，谁让这就是我们的天性呢？关键的一点是，你想控制你的大脑还是被你的大脑所控制。就好比我们都知道锻炼身体的重要性，可是没有几个人能坚持下来，最终坚持下来的人都收获了健康。既然我们大家都认可锻炼身体是「对的事情」，那么我们就应该坚持做下去，哪怕每天只有 10 分钟，用书中所说的「复利曲线」来看，几年后我们也可能拥有不错的健康状况。而不是「把事情做对」：因为今天太晚了，我锻炼身体会进一步损害身体。没错，太晚不该运动，这确实是「把事情做对」，但为什么你要这么晚运动呢？是不是因为你在一开始就没有「做对的事情」呢？比如说玩游戏玩到废寝忘食，快乐不知时日过，而完美错过了锻炼的时间？</p><p>学会思考是件非常重要的事情，在清楚地知道自己想要什么以后，do the right things, and then do things right.</p><h3 id="活在未来"><a href="#活在未来" class="headerlink" title="活在未来"></a>活在未来</h3><p>原书中我非常喜欢的一个观点就是：<code>注意力 &gt; 时间 &gt; 金钱</code>。当然这又涉及到我们前面所说的价值观的问题，也许在有些人看来是刚好相反的：<code>金钱 &gt; 时间 &gt; 注意力</code>。不过这不是我们关心的重点，毕竟我们关注的是「时间自由」，那么显然还是前者更符合我们的目标。</p><p>虽然道理大家都明白，但我们还是无法避开书中所描述的<strong>人生三大坑</strong>：</p><ul><li>莫名其妙地凑热闹</li><li>火急火燎地随大流</li><li>为别人操碎了心</li></ul><p>不用解释，一看文字就已经清晰明了了，对于我个人来说，一和二已经不是坑了，现在唯一剩下的就是第三个坑了。其实仔细想想，自己的能力非常有限，认知也非常有局限性，大可不必为别人操碎了心，因为别人分分钟格局比你高得多。亦或是另外一种情况，别人完全无法理解你的思考方式，也不知道自己想要什么，因此不管你如何苦口婆心别人也完全无法理解，怎么操心其实也都是徒劳无功。所以我现在一直告诫自己不要「好为人师」，点到为止，每个人有每个人的人生，能管好自己就已经阿弥陀佛了，还瞎操什么心去为别人「指点迷津」呢？你怎么知道不是「毁」人不倦和误人子弟呢？</p><p>与活在未来相比，还有两种活法，一种是<strong>活在过去</strong>，一种是<strong>活在当下</strong>。活在过去很好理解，看看身边的老人家和上了年纪的人便可。他们经常感叹的就是现在这个不好、那个不好，以前多么多么的好，同时不愿意去学习和了解任何新鲜的事物。与之相比「活在当下」才是最大的陷阱，纵观各大媒体网站，大家的宣传无一例外的是做人要活在当下，好好享受等等。但细思极恐，如果我们只是活在当下的话，实际上我们就在慢慢地活在过去了。活在当下永远是被动地成长和进步，无论是工作也好，学习也罢，如果某一天我们不被需要了，那么「当下」便不复存在了，剩下的也只有缅怀过去了。</p><p>所谓<strong>活在未来</strong>，不是说我们只考虑将来，连基本的生活都放弃了，而是说身体要「活在当下」，思维则是「活在未来」。那些活在未来的人一定比活在当下的人拥有更多的财富，而所谓「投资」，也无非是用现在的资源去换取未来的资源而已。这个李老师解释的比我好，我摘录了要做到「活在未来」的几个点，想详细了解的同学，还是那句话，买书回去看吧。</p><ol><li>你对未来有个预测；</li><li>那个预测需要时间才能得到结果；</li><li>你笃信你的预测是正确的；</li><li>于是你提前按那个预测的结果行动、选择、思考；</li><li>你终将走到那个结果出现的时刻；</li><li>最终证明你的预测是正确的；</li><li>那么，由于你提前按未来正确的结果行动、选择、思考，于是，在相当长一段时间里，你的生活中的一部分，就是「活在未来」的。</li></ol><p>总结一下，就是避开「人生三大坑」，别想有的没的，不要没事儿多愁善感缅怀过去（这句其实是说给我自己听的），多想想未来的发展，做出自己的预测，然后<strong>思考、选择并行动！</strong></p><h3 id="人生加速器"><a href="#人生加速器" class="headerlink" title="人生加速器"></a>人生加速器</h3><p>本来想用「人生作弊器」这一词，但是想想自己努力成为更好的自己，着实算不上是<strong>作弊</strong>，只能说是加速成长了而已。如果说让人感觉像是作弊了，那也一定是因为大多数人太过于懒惰了，有这么好的工具和方法只是因为没有坚持，放弃了而已。</p><h4 id="安全感"><a href="#安全感" class="headerlink" title="安全感"></a>安全感</h4><p>讨论所谓「安全感」这个话题着实有点大，现今社会太多的问题都是因为缺乏安全感所导致的。比如男女朋友之间互相绞杀的虐恋，公司股东之间的互相猜忌，国与国之间的对峙。可以说小到鸡毛蒜皮，大到全球局势，都可以用安全感缺失来描述。</p><p>要想实现「时间自由」，我们就必须要放弃部分的安全感。追求 100% 的安全感，必定会把自己困在永恒的当下。道理很简单，不学新的东西，不去做任何尝试，只做自己熟悉的事情，当然很舒服，又很安全，可这不就是逆水行舟不进则退吗？好比我学滑雪的时候，各种摔跤，摔到自己都怀疑人生了，确实不安全，不单只是思想上觉得不安全（被别人嘲笑），生理上也不安全，毕竟摔得青一块紫一块的。但是当你开始可以掌控滑板，开始可以享受滑雪乐趣的时候，那种愉悦正是在一开始放弃了部分的「安全感」所换回来的。经常有朋友就说：「你就好了，去滑雪。」每当这时我就会邀请他们一起，而他们拒绝我的理由无非也就是：没时间、没钱、没精力和年纪大了。我相信部分是真的，但绝大部分应该都是给自己找一个令自己信服的理由和借口，以便继续停留在自己的舒适区吧。要知道，作为人类的我们必须要放弃一部分安全感，才能长期、深入地观察和思考，否则最好的情况就是困在永恒的当下。</p><p>除了自身的安全感，还有跟别人合作的安全感，毕竟人是群居的动物。而与人合作的本质是大家各自放弃一小部分安全感，并把它交由合作方来保障并予以对方足够的信任。所谓信任则是相信对方不会利用自己主动放弃的那一部分安全感。说人话就是真诚待人，相信自己的判断，<strong>「疑人不用，用人不疑」</strong>，不过说起来简单，做起来很难。相信我，这个我是绝对有发言权的。你可以做到信任别人的同时放弃部分的安全感，而跟你合作的人能否做到同样的事情呢？所以我们需要思考和判断，不要与缺乏安全感的人合作，因为在他们的世界里不可能有真正的合作关系。同时，不乏很多有能力（某一单一维度内，后面会讲到）的人很喜欢抱怨，但抱怨只是无能和无奈的表现，真爱生命，远离抱怨和抱怨之人。</p><h4 id="多维度优势"><a href="#多维度优势" class="headerlink" title="多维度优势"></a>多维度优势</h4><p>之前有段时间《三体》特别的火，大家特别喜欢开口闭口就是「降维打击」。毫不夸张地说，但凡是个创业的人，必说自己如何如何「降维打击」行业巨头。每当这个时候，我总是很好奇，这些人到底有没有看过《三体》，他们到底知不知道什么是「降维打击」？难道他们不知道从某种意义上来看，「降维打击」就是把一个高 IQ 的人拉到一群弱智里面，用弱智的理解能力跟他吵架吗？这到底是值得炫耀的事情，还是值得羞愧的事情啊？举个例子，大家一下就明白了，然而还是大把人不以为耻反以为荣地凡事必说「降维打击」。</p><p>但与之不同的是，我很认同李老师关于<strong>多维度优势</strong>的论点：</p><ul><li>在单个维度上，比的是长度</li><li>在两个维度上，比的是面积</li><li>在三个维度上，比的是体积</li></ul><p>之前跟朋友讨论的时候，时不时就会有人觉得自己的老板特别的傻，或者是觉得自己的老板能力不如自己。大多数情况下，我对于这种言论都是嗤之以鼻的。原因很简单，下属往往在单一维度上跟上司作比较，所以会觉得领导的专业技能不如自己。可这个时候，下属们往往忽略了领导的<strong>多维度优势</strong>，比如更好的沟通能力，更好的项目管理能力，更强的推进力，更多的资源等等。</p><p>不要迷信单一技能，我们喊了那么多年的「高层次复合人才」，你以为是开玩笑的吗？未来一定是属于复合型人才的。这不是叫大家争先恐后地去做「万金油」，而是说在有一技之长的前提条件下，全方位发展，不断地拓展自己的领域和技能，终究某一天我们会享受到<strong>多维度</strong>带给我们的好处。</p><h4 id="学习学习再学习"><a href="#学习学习再学习" class="headerlink" title="学习学习再学习"></a>学习学习再学习</h4><p>这里的「学习」不完全是动词，其意思是先学习（动词）学习（名词）这一能力，之后再利用这一能力去持续地学习（动词）自己需要的知识。说起来非常浅显，无非是道理我都懂，就是坚决不做而已。书中介绍了三种不同的学习能力，然而很多人连第一种都没能做好：</p><ul><li>能学会有人手把手教授的技能</li><li>这世界上有半数的人，即便有人手把手地教，也学不会，只因为他们不动脑子</li><li>能学会书本上所教授的技能</li><li>你有没有心思去寻找、阅读大量的相关书籍和教程</li><li>你有没有能力去甄别书籍和教程质量的好坏</li><li>你有没有能力在实践中运用书籍和教程所传授的知识</li><li>能学会没有人能教授的技能</li><li>你不仅能学会没人能手把手教你的东西</li><li>你甚至能学会连书本中都找不到的东西</li></ul><p>学习也好，进步也罢，从来都不是单独孤立的行为，而是「社交行为」。跟更多更优秀的人一起学习，绝对会让你突飞猛进，这也是俗语所说的：「近朱者赤近墨者黑」。多结交那些积极上进喜欢学习的小伙伴，会是你人生最重要的财富之一。</p><p>最后引用书中自己深以为然的一句话：<strong>「听大多数人的话，参考少数人的意见，最终自己做决定。」</strong></p><h2 id="待续"><a href="#待续" class="headerlink" title="待续"></a>待续</h2><p>本想着一口气把整个读书笔记写完的，结果发现自己还是太傻太天真了。要把这么多东西一次性说完，还真的是挺有难度的。看来自己归纳、概括和总结的能力还是需要持续加强的。当然，如果用一句话来说完整本书也是可以的：「好好学习，做更好的自己。」但这样好像跟什么都没说并没有太大区别，而且也不利于自己回顾和思考整本书的内容。</p><p>简单纠结了一下（其实是懒得一次写完，&gt;_&lt;;），决定这篇文章主要就介绍下「个人成长」的部分，「投资理财」的部分留到下一篇再写。至于下一篇文章什么时间，争取 5 月中能出炉吧。</p><p>To be continued . . .</p>]]></content>
      
      
      <categories>
          
          <category> Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Finance </tag>
            
            <tag> Investment </tag>
            
            <tag> Management </tag>
            
            <tag> Book </tag>
            
            <tag> Note </tag>
            
            <tag> Reading </tag>
            
            <tag> Personal </tag>
            
            <tag> 李笑来 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>脑子是个好东西</title>
      <link href="/2018/04/17/brain-is-a-good-thing/"/>
      <url>/2018/04/17/brain-is-a-good-thing/</url>
      
        <content type="html"><![CDATA[<img src="/2018/04/17/brain-is-a-good-thing/brain.jpg" class=""><h2 id="搭地铁的故事"><a href="#搭地铁的故事" class="headerlink" title="搭地铁的故事"></a>搭地铁的故事</h2><p>周末去参加 <a href="https://developers.google.com/programs/community/gdg/">GDG (Google Developer Group)</a> 的 <a href="https://www.womentechmakers.com/">WTM (Women Techmakers)</a> 活动，本着环保出行的理念，决定骑单车和使用公共交通前往（其实是贫穷，给不起停车费）。</p><p>这里交代下，我骑的车是 Dahon 的 BYA412，其折叠起来比 20 寸的登机箱还要小，而就是因为它才有了后面的事故（故事）。</p><span id="more"></span><p>当我早上 9 点钟到达某地铁站准备进站的时候，工作人员走过来幽幽地跟我说：你不能进站。</p><p>我说为什么啊？人家说，因为你的车太大了。我说我已经折叠起来了，这么小为什么也不行？</p><p>然后安检人员沉默了，接着说：「不行，因为现在是早～高～峰～！」</p><p>你们能想象当时我脸上疑惑的表情吗？「EXO ME？」，这么烂的借口你们是怎么想出来的？</p><p>「大哥，你不是跟我开玩笑呢吧？周日早上 9 点，除了我连个人都没有，你跟我说早高峰？」</p><p>「我们就是这么规定的，早上 9 点就是早高峰，不分节假日。早高峰你这个东西就不能带！！！」对方说得相当理直气壮。</p><p>然而，他们天真了，以我这么沉着冷静的人，怎么会用他们的智商跟他们吵架？</p><p>「好的，那不是高峰就可以进站了是吧？」</p><p>「是的。」对方回答道。</p><p>「没问题，几点早高峰结束？」我追问。</p><p>「9 点半。」安检人员回答道。</p><p>「那好，我在这等到 9 点半。」说完，我就拿出 Kindle 看书了。</p><p>安检人员们瞬间惊呆了……</p><p>时间的指针流淌到了 9:25，其中一个安检人员终于按耐不住了：「行了，你进去吧，也不差那几分钟。以后记住了 9:30 以前都是早高峰！」</p><p>「好的，谢谢。」我客气地回答道，内心的白眼不言而喻。</p><h2 id="都是借口"><a href="#都是借口" class="headerlink" title="都是借口"></a>都是借口</h2><p>回忆以前我们上学的时候，语文老师最喜欢问我们的问题是什么？</p><ul><li>「这篇文章的中心思想是什么？」</li><li>「这篇文章作者想要表达的观点是什么？」</li><li>「这篇文章反应了当时的哪些社会现状和问题？」</li><li>「这篇文章表达了作者对于社会的哪些深入洞察？」</li></ul><p>来来来，大家通过我讲的故事，总结出什么有趣的想法了吗？</p><p>不知道你们有没有，反正我没有那么高的领悟力能梳理出什么伟大的观点，但从逻辑上我们还是可以一起探讨下的。</p><h3 id="体积"><a href="#体积" class="headerlink" title="体积"></a>体积</h3><p>「占用空间」是很多朋友认为地铁安检人员不给我进站的根本原因，但我个人认为这个观点是站不住脚的。</p><p>前面已经说过了，我的车折叠起来比 20 寸的登机箱还要小，所以体积并不是一个问题。</p><p>此外，在地铁上我还看到了好几个拿着行李箱的人，推婴儿车的人，还有拖着买菜专用小车车的阿姨们。</p><p>无论行李箱，婴儿车还是买菜车都跟我车的体积差不多，大多数情况下甚至体积更大，为什么他们可以进入地铁站，不是「早高峰」吗？</p><p>还有另外一个思考，如果是行动不便的残疾人士呢，是不是也要剥夺他们「早高峰」出行的权利，因为你要用轮椅，而轮椅太占地方？</p><h3 id="规定"><a href="#规定" class="headerlink" title="规定"></a>规定</h3><p>另外有种说法是确实有这样的管理规定，早高峰期间不能带自行车。</p><p>好吧，我问了安检人员，还有不少留言的好友，没有一个人能具体说清楚这个规定是什么。</p><p>这个规定是如何规定和如何界定，以及如何操作的。</p><p>没～有～一～个～没有一个人能从头到尾说清楚的。</p><p>大家都是想当然，怎么定义「早高峰」，问 10 个人，10 个人的理解都不一样。</p><p>而之前我在其他地铁站同样的时间段（工作日），从来没有人提出过这个质疑，不禁让我怀疑这个规定的真实性。</p><h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><p>还有一种观点就是，处于安全性考虑，不应该携带自行车等物品进入地铁。</p><p>嗯，对，您说的都对。自行车可是一个非常具有杀伤力的武器，尤其是折叠自行车，那更是堪比核武器级别的大规模杀伤性武器！</p><p>折叠自行车可能造成不安全，那行李箱呢？婴儿车呢？轮椅呢？</p><p>这根本就是混淆概念，危险的从来不是物品本身，而是使用物品的人。</p><p>车祸那么多，车危险么？不，车不危险，危险的是开车的人，尤其是不遵守交通规则的人！</p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>也许大家会觉得小题大做，不就是折叠自行车不让带进地铁站吗，有什么好大惊小怪的？</p><p>确实，没什么好吐槽的，但是锻炼下脑子也是件不错的事情，毕竟不用会生锈。</p><p>那是什么原因导致到这次出行的困难呢？</p><p>我个人「猜测」（没错，就是猜测，不是判断，也不是推测），有以下两种可能：</p><ul><li>没有相应的管理规范和规定**（无法可依）**</li><li>完全看监管人的心情**（有法不依）**</li></ul><p>第一种情况，确实没有相关的规定，大家也不知道怎么办，这个时候就需要用脑子了，而用脑子太累了。不管行还是不行，符合不符合逻辑，一概不讲道理。就是一句话：不行！因为这样自己才不用担责任，不作为肯定不犯错啊，我干嘛要为了你的折叠自行车方便给自己找麻烦？</p><p>第二种情况，确实有相关的规定，但自己不熟悉或者错误解读。反正这个地方我最大我说了算，想怎么来怎么来。管你什么狗屁逻辑和道理，我说行就行，我说不行就不行。中国有句俗语叫做：「阎王好见，小鬼难缠。」无非讲的就是这个道理。</p><p>因为以上所有的思考都是基于主观猜测，所以我们不能认为一定是上述两种情况，但有一点值得我们反思的是：我们整个社会真的没有<strong>以人为本</strong>。</p><p>因为逻辑思维能力的极度缺失，<strong>大部分人已经完全丧失了独立思考的能力</strong>。</p><p>但凡稍微有点思考能力的人，都知道这种体积的折叠车在周末早上人这么少的情况下，其对他人出行不便造成的影响几乎可以忽略不计。</p><p>然而，如标题所说：<strong>「脑子是个好东西，但不是人人都有」</strong>。</p><p>不以人为本去考虑，只会自己想当然，没有逻辑思维能力，不讲道理，不就是现如今中国的普遍现象？</p><p>我就好奇地铁领导们带着折叠车会不会也不给进站？</p><p>当然了，这个在我有生之年估计是无法求证了，哪个地铁领导需要堕落到「环保低碳出行」呢？</p><p>如果真有的话，那 TA 一定是个「假领导」。</p><p>（蜜汁微笑）</p>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
            <tag> BYA412 </tag>
            
            <tag> Bicycle </tag>
            
            <tag> Bike </tag>
            
            <tag> Dahon </tag>
            
            <tag> Logic </tag>
            
            <tag> Metro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么大家喜欢实体书？</title>
      <link href="/2018/04/04/why-everybody-loves-real-books/"/>
      <url>/2018/04/04/why-everybody-loves-real-books/</url>
      
        <content type="html"><![CDATA[<img src="/2018/04/04/why-everybody-loves-real-books/books.jpg" class=""><p>首先先表个态，我并不是实体书的脑残粉。也许大家看到这个标题会觉得我是实体书的忠实拥趸，阐述实体书的各种好。然而让大家失望了，我是来吐槽大家为什么一定要非实体书不读的。</p><p>周边有不少的朋友，家中有「藏书」的习惯。漂漂亮亮的书柜，花花绿绿的书籍，想必也是花了不少心思和银子的吧？但是，有几个人敢信誓旦旦地说其家中的每一本书自己都看过呢？</p><span id="more"></span><p>那些天天叫嚷着非实体不读的人，回忆下你们的藏书是不是很多都是在大促的时候购买的？「200 - 100」、「100 - 50」、「免费包邮」是不是耳熟能详？</p><p>有没有一种**「买书如山倒，看书如抽丝」**的感觉？</p><p>很多实体书的拥护者认为实体书才是最正宗的阅读方式，电子书就不是书。</p><p>更有甚者，觉得电子版的书籍根本就看不动。我很好奇，如果因为载体不同，你就看不下去，这是载体的问题，还是你其实根本就不想看，而给自己找的一个逃避的理由和借口呢？</p><img src="/2018/04/04/why-everybody-loves-real-books/kindle_vs_book.jpg" class=""><p>在我看来，实体书也好，电子书也罢，都仅仅是人类文化传承的一种载体而已。</p><p>同样一本书，我们通过纸质版和电子版所获取的信息量并没有任何的不同。</p><p>有的人会反驳说，实体书有纸张的触感，有沉甸甸的质感，还有油墨的清香。</p><p>那我敢问一句，那你们为什么不去用竹简来阅读呢？这样不是更有历史的沉淀？还有沉甸甸的质感？还有原汁原味的墨水味呢，不是？</p><p>哦……对了，如果你要是更有人文情怀，也可以看刻在龟壳上的甲骨文，毕竟这个更高端，更有情调。</p><p>这么说也许比较抬杠，但看看人类文明的发展和进步，造纸术确实极大地加速了文明的进程。</p><p>而现在科技发展已经到了另外一个极大地加速人类文明进步的时代。如果我们裹足不前，拒绝接受新的方式来获取知识，那与原始人类拒绝使用纸张和印刷术有何区别？</p><p>毕竟纸张和印刷术的发明，使得书的重量减轻了，知识的流动性更强了，让更多人能更容易的接触到不同的思想。</p><p>而电子书不正是在这种基础上的一种延续吗？进一步降低了重量，进一步增强了流动性，使得思想的交流更快速和便捷。</p><p>相比于实体书，电子书拥有诸多优点：</p><ol><li>更便携</li><li>更节省空间</li><li>更容易获得书籍</li><li>永久保存（数字化）</li><li>更环保（减少纸张和树木的砍伐）</li><li>快速标注</li><li>多设备同步，多终端阅读</li><li>可变排版（大小、字体、样式等）</li></ol><img src="/2018/04/04/why-everybody-loves-real-books/oasis.jpg" class=""><p>古人云：「书，非借不能读也」，到如今却变成了：「书，非实体不能读也」？</p><p>究竟阅读的根本是为了获得知识，获得他人有趣的分享，还是为了承载这些内容的载体本身？</p><p>与其纠结实体书和电子书的存在，难道读书本身，不才是更重要的事情吗？</p><p>我毫不忌讳地承认自己是一个电子书的拥护者，更具体一点来说，是电纸书（Kindle）的拥护者。</p><p>但我并不会因此而抗拒实体书，如果一本好书只有纸质版，我也会毫不犹豫地买回来阅读，因为读书本身才是最重要的。</p><p>虽然我倾向于电子书的阅读方式，但我还是很反感 E-Ink 以外的，并不以阅读为唯一目的的电子设备，包括但不限于：iPhone, Android, iPad 等。因为这些货真～的～不～是～用～来～阅～读～的～～～</p><p>姑且不说其对视力的伤害，一会儿一个消息推送，一会儿一个 App 提醒，你还有什么心思耐下心来静静地享受阅读的美好时光？</p><p>然而，大多数国人就是喜欢大而全的全家桶产品。要能上网的，要能听歌的，要能看视频的，要能玩游戏的，要能这个，能那个，最后才是能看书的。这种情况，我觉得就不要在勉强自己看书了吧，你也累，书也累！</p><img src="/2018/04/04/why-everybody-loves-real-books/kindle.jpg" class=""><p>还是那句话，用什么看书不重要，看书本身才是重点。不管实体也好，电子也罢，把书看完，有所感悟才是真正的有所收获。</p><p>读一本好书，就像与一个有趣的灵魂对话。好比你喜欢一个人，你很想跟 TA 聊天，你会在意你们用的是有线电话，移动电话，亦或是网络电话来聊的天吗？</p><p>好用的手机千篇一律，有趣的灵魂万里挑一，你最后跟我说，你选择了手机？！（目测很多人 get 不到我这个梗）</p>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Book </tag>
            
            <tag> Reading </tag>
            
            <tag> Kindle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生命本就是一个奇迹</title>
      <link href="/2018/03/20/the-miracle-of-life/"/>
      <url>/2018/03/20/the-miracle-of-life/</url>
      
        <content type="html"><![CDATA[<img src="/2018/03/20/the-miracle-of-life/miracle.png" class=""><p>昨天晚上看书的时候，同事 Chris 发了一个连接给我：<a href="https://weibo.com/1301890202/G85QVy6JC">https://weibo.com/1301890202/G85QVy6JC</a></p><p>文中讲述了一个人坠马导致腰椎骨折受伤以后，坚持不做手术，最后通过中医正骨的方式重获新生的故事。</p><p>故事说得有点神乎其神，虽然事情的真假无法考证，不过文中的一句话我很是欣赏：</p><blockquote><p>聆听内在的声音，尊重身体感受，不被科学和权威撼动，真是最简单也最艰难的抉择。</p></blockquote><span id="more"></span><p>大概 4 年前一次打篮球，抢篮板的时候被人撞了一下。就是这看似很平常的一撞，我趴在地上几分钟没起来。</p><p>自以为还年轻的我，觉得不就是磕碰一下，休息一会儿不就好了？不管不顾又打了几分钟，发现依旧疼痛难忍，不得不草草收场结束了战斗。</p><p>本以为事情就这样过去了，一两个星期以后，又作死去打篮球，结果用不了几分钟，再次疼痛难忍退下阵来。</p><p>从此以后腰疼就没有停过，加上严重的拖延症和懒癌晚期，一直以工作忙、没时间等理由和借口拖着没去就医。</p><p>最严重的时候连下床都困难，坐着超过 20 分钟大腿就会发麻、疼痛不止，甚至失去知觉。</p><p>最后终于在亲朋好友的劝说下去医院做了个检查，结果可想而知，严重的腰间盘突出。</p><p>问了 N 个专家的意见，结论竟然惊人的相似：<strong>立<del>刻</del>手<del>术</del>！</strong></p><p>当时的我听到这个消息仿若晴天霹雳，我还辣么年轻啊（假装）~~~</p><p>难道下半辈子都要躺在床上度过了吗？什么运动也不能做了吗？Oh no，简直太可怕了！</p><p>不死心的我就追问专家，除了做手术还有什么其他办法吗？</p><p>专家说：有的……</p><p>我突然眼前一亮，感觉又重新燃起了生的希望，在经过了超过一个世纪地等待以后。</p><p>专家继续幽幽地说到：「每天除了吃饭、洗澡去洗手间之外，全天在床上躺着，先躺 2 个月再说。」</p><p>我当时的内心真的是：!()@<em>&amp;%!&amp;@^$#!</em>&amp;@^$!</p><p>后来呢？我并没有遵医嘱，也没有保守治疗，也没有卧床休养，当然也没有做所谓的手术。</p><p>现在的我虽然偶尔还是会旧病复发，严重的时候甚至连床都下不了。但主要原因还是因为自己作死，比如恬不知耻地跟年轻人去参加电音节什么的。</p><p>身边每每总有好心人教育我：你这腰就不要潜水了；你这腰就不要滑雪了；你这腰就不要……了。这个时候我总是笑着自嘲道：「嗯，我也知道我腰不好……」，然后继续去挑战自己，去解锁更多的人生技能。</p><p>我坚信生存是为了更好的活着，而活着不仅仅是为了生存。如果人生只剩下生存，那也便失去了生命的意义。</p><p>生命本就是一个奇迹，于我而言，生命在于折腾，生生不息，折腾不止，这才是活着的最好证明。</p>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Basketball </tag>
            
            <tag> Faith </tag>
            
            <tag> Health </tag>
            
            <tag> Miracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一周开始于星期一还是星期日</title>
      <link href="/2018/03/15/starts-monday-or-sunday/"/>
      <url>/2018/03/15/starts-monday-or-sunday/</url>
      
        <content type="html"><![CDATA[<img src="/2018/03/15/starts-monday-or-sunday/calendar.jpg" class=""><p>有一个问题我其实纠结了蛮久，那就是新的一周是开始于星期一还是星期日？</p><p>前几天跟 Chaos 聊天，发现他也有这个疑惑，于是花时间了解了下「周」的概念。</p><p>Long story short，不想看的朋友，答案：<strong>「星期一」</strong>。</p><span id="more"></span><h2 id="星期一还是星期日"><a href="#星期一还是星期日" class="headerlink" title="星期一还是星期日"></a>星期一还是星期日</h2><p>按照<a href="https://en.wikipedia.org/wiki/ISO_8601">国际标准 ISO 8601</a> 的说法，星期一是一周的开始，而星期日是一周的结束。</p><p>虽然已经有了国际标准，但是很多国家，比如「美国」、「加拿大」和「澳大利亚」等国家，依然以星期日作为一周的开始。</p><p>同时参考<a href="http://www.cmaph.org/attachment/2013530/1369881489484.pdf">国家标准 GB&#x2F;T 7408-2005</a>，其中也明确表述了星期一为一周的开始。</p><p>从此以后不用再纠结，统一使用星期一作为一周的开始就好了。</p><h2 id="一周七天的由来"><a href="#一周七天的由来" class="headerlink" title="一周七天的由来"></a>一周七天的由来</h2><p>对于一个星期为什么由 7 天构成，大家有很多不同的意见。</p><p>现在普遍认为一周 7 天的计算方法，主要来源于古巴比伦人。 </p><p>他们把一个星期七天分别用太阳、月亮和五大行星的名字命名：</p><ul><li>Sun</li><li>Moon</li><li>Mercury</li><li>Venus</li><li>Mars</li><li>Jupiter</li><li>Saturn</li></ul><p>后来古罗马人用他们自己的神替换了五大行星的名字，并形成了<a href="https://zh.wikipedia.org/wiki/%E7%BE%85%E9%A6%AC%E6%9B%86">「罗马历」</a>。</p><p>这些名字传到大不列颠以后，他们保留了部分叫法，比如「Sunday」、「Monday」和「Saturday」。</p><p>同时又用自己的信仰改造了其中四个名字，最后形成了关于周的英文名：</p><ul><li>Sunday</li><li>Monday</li><li>Tuesday (Tīw’s Day)</li><li>Wednesday (Woden’s Day)</li><li>Thursday (Thor’s Day)</li><li>Friday (Frigg’s Day)</li><li>Saturday</li></ul><h2 id="周末"><a href="#周末" class="headerlink" title="周末"></a>周末</h2><p>什么时候才是周末呢？</p><p>因为一个星期开始的时间在不同的文化中表现不一样，所以周末也不一样。</p><p>比如基督教和西方国家将星期日作为休息和礼拜日，穆斯林选择周五作为休息和祈祷日等。</p><p>现今社会星期六和星期日已经是公认的休息日。</p><p>而且很多日历软件也会把星期一到五作为工作日，而星期六和日作为休息日。</p><p>也许把星期一作为一周的开始，才能更好的把星期六和星期日处理为周末吧。</p>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ISO </tag>
            
            <tag> Monday </tag>
            
            <tag> Sunday </tag>
            
            <tag> Week </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>节后甩肉跑步大军</title>
      <link href="/2018/03/12/the-jogging-army-after-spring-festival/"/>
      <url>/2018/03/12/the-jogging-army-after-spring-festival/</url>
      
        <content type="html"><![CDATA[<img src="/2018/03/12/the-jogging-army-after-spring-festival/challenge.jpg" class=""><p>前几天写了篇关于<a href="../../../../2018/03/09/2018-late-year-plan/">新年计划</a>的文章，其中一项就是关于跑步的。</p><p>其实在写这个计划之前，我就已经开始在践行 2018 年跑步计划了，大概每个月 50 公里的样子，从元旦滑雪回来以后开始的。</p><p>在年前的时候天气不算很冷，最低温度大概 4 ~ 6 度左右，不过对于跑步来说，还是个不大不小的挑战。</p><span id="more"></span><p>每天晚上夜跑的时候，我在小区内基本看不到其他跑步的人，就算零零散散见到一两个，基本上跑第二圈也就消失不见了。</p><p>特别是 4 度左右的时候，我是没见到除了我以外的「疯子」。</p><p>然而，这一切在年后都变得不一样了……</p><p>当过完年上班的第一天，我像往常一样夜跑的时候，眼前的景象使我震惊了。</p><p>一夜之间我见到了不下 20、30 个跑步的人！</p><p>有穿羽绒的，有穿板鞋的，有穿专业运动服的，还有光着膀子的！</p><p>突然之间感觉整个小区都是人，完全跑不起来的感觉。</p><p>转眼间，时间就到了 3 月中，大家「激情澎湃」的日子终于过去了，夜跑又恢复了往日的平静。</p><p>晚上跑步的又剩下零零散散的几个人了……</p><p>本来我写这篇文章是想吐槽的，不过现在也觉得没什么好吐槽的了。</p><p>想要减肥，想要健康，想要更好的生活品质，想要做更好的自己，这不都是很美好的诉求吗？</p><p>只不过有人一直坚持着，有人只是三分钟热度的区别罢了。</p><p>谨以这个年后甩肉大军的事提醒自己，至少在跑步这件事情上不要做一个五分钟热度的人。</p><p>毕竟五分钟也仅仅比三分钟多了两分钟而已，更不要说自己也是一个跑步断续过好多次的人。</p><blockquote><p>If it doesn’t challenge you, it won’t change you<br>by <strong>Fred DeVito</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Persistence </tag>
            
            <tag> Jogging </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018 晚年计划</title>
      <link href="/2018/03/09/2018-late-year-plan/"/>
      <url>/2018/03/09/2018-late-year-plan/</url>
      
        <content type="html"><![CDATA[<img src="/2018/03/09/2018-late-year-plan/2018.jpg" class="" title="Hi, 2018 ~"><p>晚年计划，并不是已经老了不行的老年人「晚年」计划，而是相对于「新年」的，迟到了的年度计划，简称「2018 晚年计划」。</p><p>脑子里面想法很多，想做的很多，然而达成的不多，比如去年我想做，却没有坚持下来的：</p><ol><li>持续学钢琴</li><li>练习吉他</li><li>练习尤克里里</li></ol><span id="more"></span><p>而且翻看了一下前面几年的日志，真的没有正儿八经地写过年度的计划，从今年开始吧。</p><p>首先定几个大的方向：<strong>健康</strong>、<strong>兴趣</strong>、<strong>学习</strong>、<strong>阅读和写作</strong>、<strong>社交活动</strong></p><p>工作为什么不写？因为工作有另外的工作计划，不需要在这里体现。另外工作也可能泄露公司机密不是？😂</p><h2 id="健康"><a href="#健康" class="headerlink" title="健康"></a>健康</h2><ol><li>保持每个月 ≥ 50KM 的跑步量</li><li>保持每周最少 3 次的体能训练</li><li>一年之中做到 180 天凌晨 12 点前睡觉（全部12点前睡觉完全做不到，争取能做到一半吧）</li><li>（待定）有可能的话，秋季参加一个半程马拉松</li></ol><h2 id="兴趣"><a href="#兴趣" class="headerlink" title="兴趣"></a>兴趣</h2><ol><li>4 月底的时候，去巴厘岛学习冲浪</li><li>5 月初参加在新加坡举办的 Star Wars Run，并见见朋友们</li><li>10 月份的时候潜水执照升级到 AOW，瓶子刷到 15 瓶</li><li>年内最少下赛道练习 3 次，争取每个季度 1 次</li><li>元旦或者春节的时候去法国滑雪，争取达到 Intermediate 水平</li><li>（待定）改装轮毂和轮胎</li></ol><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><ol><li>学习并理解区块链技术，实现一个小的区块链技术 Demo</li><li>提升英文水平，目标是达到 GMAT 考试要求的基本水平，包括词汇量和语法等</li><li>（待定）学习并了解 TensorFlow 框架，尝试实现一个动物识别的 Demo</li><li>（待定）心理学？这个还在思考怎么下手，从哪里下手的问题，也许明年才会启动</li><li>（待定）练字，这个不知道从何练起，然后也不知道该如何安排时间，考虑到整天打字，很有可能无疾而终，￣□￣｜｜</li><li>（不抱任何希望的）钢琴、吉他和尤克里里的学习，这个就不说了，(╥╯^╰╥)</li></ol><h2 id="阅读和写作"><a href="#阅读和写作" class="headerlink" title="阅读和写作"></a>阅读和写作</h2><ol><li>完成《Steve Jobs》的阅读，说实在的，这本书我真的看了好久了，必须单独列出来，其他书都看完好几本了，这个还没看完</li><li>年内完成 6 本书（类别不限）的阅读，这个目标其实很低，考虑到可执行程度，还是制定的低一点比较好，循序渐进吧</li><li>去年博客的更新是比较不理想的，今年的目标还是月更，每个月最少更新一次</li><li>还有就是减少博客纯技术类的文章，争取多样化一点，最好是多点关于发展、未来和人性思考的文章</li><li>（待定）尝试用英文写博客，可以是技术相关的，不一定是观点类的</li></ol><h2 id="社交活动"><a href="#社交活动" class="headerlink" title="社交活动"></a>社交活动</h2><ol><li>在年底前，完成 Google Developer Group Guangzhou 官方网站的搭建工作</li><li>组织 Google DevFest 2018 活动，主题与人工智能、大数据和物联网相关</li><li>每个月跟朋友小聚一次，这个看似挺简单，忙起来其实很真的是很难的</li><li>利用周末时间，去体验一个人的旅行，最少一次，两次合格，三次更好</li><li>（待定）公司年会出个节目？或者申请当个主持？</li></ol><p>让我期待一下，2019 年回头来看这个计划，完成率能达到多少？</p><p>让我们一起拭目以待吧……（完）</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Annual </tag>
            
            <tag> Plan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再见 2017</title>
      <link href="/2018/03/07/good-bye-2017/"/>
      <url>/2018/03/07/good-bye-2017/</url>
      
        <content type="html"><![CDATA[<img src="/2018/03/07/good-bye-2017/2017.png" class="" title="Good Bye 2017"><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>与其说这是一个年度总结，不如说是一篇毫无条理性的随笔。</p><p>2018 年已经过去了 2 个多月了，拖延了很久的 2017 年年度总结，总算是开工了。</p><p>一时间不知道从何说起，想到哪儿就写到哪儿吧，记个流水账似乎也不错，总比什么也没留下要强。</p><span id="more"></span><h2 id="扑街的一年"><a href="#扑街的一年" class="headerlink" title="扑街的一年"></a>扑街的一年</h2><p>2017 年发生了很多的事情，不得不说这是很扑街的一年。</p><p>创业失败了，人也散了，可惜了一个不错的团队。</p><p>家庭生活也出现了问题，草草结束了 5 年的婚姻，回归单身生活。</p><p>由于创业的缘故，也是负债累累，花尽了之前的所有积蓄。</p><p>体检发现健康也是每况愈下，长期的焦虑和挥之不去的精神压力确实压得人喘不过气来。</p><p>所谓的「人又老，钱又冇，老婆走埋佬」，说的就是我这种了。</p><p>似乎 2017 年于我，注定是失败的一年。</p><p>然而在我看来，2017 年对于我来说更是人生的一个转折点。</p><h2 id="没那么不堪的一年"><a href="#没那么不堪的一年" class="headerlink" title="没那么不堪的一年"></a>没那么不堪的一年</h2><p>这一切的不顺与不如意，在现在的我看来，更多的反而是一种幸运，让我重新尝试用不同的视角去再次审视这个世界。</p><p>我尝试了很多之前不愿意做的事情，也实现了之前想做很久却一直以忙和没有时间为借口，一直没有付诸实践的心愿。</p><p>我去了蹦极，考了赛车执照，考了潜水执照，开始学习滑雪，尝试去不同的地方旅游，改变了职业，开始认识不同的人。</p><p>虽然有的时候情绪上还是有波动，但是真的感觉自己像重生了一样，感觉自己开启了第二次人生。</p><p>很多时候人确实是很难改变的，所谓江山易改本性难移，就是这个道理。</p><p>除非经历了重大的人生变革，不然人真的是很难改变的。</p><p>这一系列重大的人生变革，不得不说是让我遇见一个更好的自己的契机。</p><h2 id="没有思考的思考"><a href="#没有思考的思考" class="headerlink" title="没有思考的思考"></a>没有思考的思考</h2><p>我思考的内容也开始有了变化：更多地寻求内心的平静与安详，而不是患得患失，瞻前顾后，忧心忡忡地未雨绸缪和杞人忧天。</p><p>现在的我更愿意花钱去买经历，愈发地体会到「读万卷书不如行万里路」的道理。</p><p>突然之间，恍然隔世的感觉自己之前几十年的人生似乎都白活了。</p><p>一直很羡慕有些人，可以活在自己的世界里面不管不顾，以前一直无法理解。</p><p>而现在才深深地体会到，能活在自己的世界是多么幸福的一件事情。</p><p>不顾世俗的眼光，去追寻自己想要的幸福，做自己想做的事情。</p><p>Do what you love and love what you do.</p><p>先学会爱自己，对自己好一点，才能以更善意和更包容的心去面对这个世界。</p><p>引用《正念的奇迹》里面的一句话来结束这篇随笔：</p><blockquote><p>保护和照顾好自己，不要执迷于其他人照顾他们自己的方式，这种心理惯性会导致愤恨或忧虑。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Annual </tag>
            
            <tag> Review </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将 Hexo 升级到 v3.5.0</title>
      <link href="/2018/02/26/upgrade-hexo-to-v3-5-0/"/>
      <url>/2018/02/26/upgrade-hexo-to-v3-5-0/</url>
      
        <content type="html"><![CDATA[<img src="/2018/02/26/upgrade-hexo-to-v3-5-0/hexo.png" class="" title="Hexo"><p>其实这几个月以来，一直都想写点什么东西，很多时候笔记也做好了，但是拖延症一而再再而三的发作，进而导致到了毫无产出可言。</p><p>这不，托 Nison 同学的福，败家了一个新的 Macbook 笔记本。</p><p>新笔记本到了，最痛苦的就是各种配置环境和常用软件，以及回忆一大堆的账号密码了。</p><span id="more"></span><p>当然少不了要同步一下我这万年不更新的博客了，结果一看，果然变化不小。</p><p>首先是，Node.js 的最新稳定版本已经变成了 <a href="https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_V8.md#8.9.4">v8.9.4</a> 啦！可是我还停留在 LTS v6 的年代啊。。。(╥╯^╰╥)</p><p>果断用 Brew 安装了 n 和最新 LTS 版本的 Node.js，开始了 Hexo 的升级之路。</p><p>其实所谓的升级，也很简单，先进入 Blog 的目录，看看到底有哪些需要更新的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm outdated</span><br><span class="line">Package                              Current  Wanted  Latest  Location</span><br><span class="line">hexo-deployer-git                      0.2.0   0.2.0   0.3.1  hexo-site</span><br><span class="line">hexo-generator-search                  1.0.4   1.0.4   2.2.1  hexo-site</span><br><span class="line">hexo-generator-seo-friendly-sitemap   0.0.19  0.0.19  0.0.21  hexo-site</span><br><span class="line">hexo-renderer-ejs                      0.2.0   0.2.0   0.3.1  hexo-site</span><br><span class="line">hexo-renderer-marked                  0.2.11  0.2.11   0.3.2  hexo-site</span><br><span class="line">hexo-server                            0.2.2   0.2.2   0.3.1  hexo-site</span><br></pre></td></tr></table></figure><p>嗯，还是有不少东西需要更新的，简单修改一下 <code>package.json</code> 文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo-site&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3.5.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.5.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-deployer-git&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-deployer-rsync&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-excerpt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.1.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-archive&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-feed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-search&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-seo-friendly-sitemap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.21&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-sitemap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.1.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>把 Hexo 的版本号从 <code>3.3.8</code> 修改为 <code>3.5.0</code>，其他的也根据情况更新一下。</p><p>都修改好了以后，就 npm 更新一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save</span><br></pre></td></tr></table></figure><p>搞掂，运行 Hexo 看看效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br><span class="line">hexo: 3.5.0</span><br><span class="line">hexo-cli: 1.0.4</span><br><span class="line">os: Darwin 17.4.0 darwin x64</span><br><span class="line">http_parser: 2.7.0</span><br><span class="line">node: 8.9.4</span><br><span class="line">v8: 6.1.534.50</span><br><span class="line">uv: 1.15.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.10.1-DEV</span><br><span class="line">modules: 57</span><br><span class="line">nghttp2: 1.25.0</span><br><span class="line">openssl: 1.0.2n</span><br><span class="line">icu: 59.1</span><br><span class="line">unicode: 9.0</span><br><span class="line">cldr: 31.0.1</span><br><span class="line">tz: 2017b</span><br></pre></td></tr></table></figure><p>你看到这篇文章就是 Hexo v3.5.0 发布的啦，不过 Hexo 官网好像完全没更新的样子，现在看到<a href="https://hexo.io/news/">最新的新闻</a>还是介绍 v3.2.0 的。</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 macOS 下用 Docker 配置 Lumen 开发环境</title>
      <link href="/2017/09/25/setup-lumen-development-environment-with-docker-under-macos/"/>
      <url>/2017/09/25/setup-lumen-development-environment-with-docker-under-macos/</url>
      
        <content type="html"><![CDATA[<img src="/2017/09/25/setup-lumen-development-environment-with-docker-under-macos/lumen.png" class="" title="Lumen"><p>就在两三天前（开始写这个文章是 9 月 8 号，确实是 2，3 天前，然而写完的时候已经是 9 月 25 号了，😂 ），<a href="https://laravel-news.com/lumen-5-5-released">Lumen 发布了 5.5 版本</a>。傻乎乎的我就在第一时间把现有运行着 Lumen 5.4 的系统都升级到了 5.5 版本。因为很多东西变化了，升级过程中出现了不少的坑，尤其是第三方的库对于新系统的支持还非常的不好。</p><p>不过今天主要想要讨论的不是如何将 Lumen 从 5.4 升级到 5.5，而是介绍如何搭建 Lumen 开发环境。</p><span id="more"></span><p>之前 Madison 同学一直苦恼于如何在 macOS 下搭建基于 PHP 的 Lumen 开发环境，我就随手把配置文件给他了，也没有时间好好解释一下为什么。</p><p>正好借着这次系统升级的机会，写篇文章简单介绍下，也算是给 Madison 同学一个交代了。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h3><p>作为一个使用 macOS 的工程师，<a href="https://brew.sh/">Homebrew</a> 是必不可少的，没有的话自己安装吧。</p><p>首先安装 Docker 相关的程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew install docker docker-machine docker-compose</span><br></pre></td></tr></table></figure><p>如果你没有安装过 VirtualBox 的话，你还需要先安装一个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install virtualbox</span><br></pre></td></tr></table></figure><p>接着创建一个 Docker 虚拟机，名字用 <code>default</code> 就好，当然你也可以改成你喜欢的名字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-machine create default</span><br></pre></td></tr></table></figure><p>接着就是要下载需要的 Docker 镜像了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull tommylau/php:7.1</span><br><span class="line">docker pull nginx:1.12-alpine</span><br><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure><p>分别对应我们需要的 <code>MySQL</code>、<code>PHP</code> 和 <code>Nginx</code>，到这里 Docker 的准备工作就算是完成了。</p><h3 id="获取-Lumen-程序"><a href="#获取-Lumen-程序" class="headerlink" title="获取 Lumen 程序"></a>获取 Lumen 程序</h3><p>Lumen 官方的建议是使用命令行的方式来安装，因为我在写这篇文章的时候，官方的 Lumen 还停留在 5.4 的版本，没有 5.5 的版本，所以我就直接下载了。</p><p><a href="https://github.com/laravel/lumen/archive/v5.5.0.tar.gz">https://github.com/laravel/lumen/archive/v5.5.0.tar.gz</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf lumen-5.5.0.tar.gz</span><br></pre></td></tr></table></figure><p>解压缩到任意目录，然后进入该目录，Lumen 的准备工作就算是完成了。</p><h2 id="Nginx-配置文件"><a href="#Nginx-配置文件" class="headerlink" title="Nginx 配置文件"></a>Nginx 配置文件</h2><p>在 Lumen 目录里面创建一个名为 <code>default.conf</code> 的 Nginx 配置文件，内容如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">root</span> /var/www/public;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">        <span class="attribute">fastcgi_pass</span>   php:<span class="number">9000</span>;</span><br><span class="line">        <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">        <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME  <span class="variable">$request_filename</span>;</span><br><span class="line">        <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置-Docker-compose-文件"><a href="#配置-Docker-compose-文件" class="headerlink" title="配置 Docker compose 文件"></a>配置 Docker compose 文件</h2><p>创建一个名为 <code>docker-compose.yml</code> 的文件，用于配置 <code>MySQL</code>、<code>PHP</code>、<code>Nginx</code> 服务，同时还会创建一个用于数据库的存储空间。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">data:/var/lib/mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">Passw0rd</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">lumen</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">lumen</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">lumen</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">php:</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">tommylau/php:7.1</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$PWD:/var/www</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">php</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:1.12-alpine</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span><span class="string">:80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">443</span><span class="string">:443</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$PWD:/var/www</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$PWD/default.conf:/etc/nginx/conf.d/default.conf</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="string">data</span></span><br></pre></td></tr></table></figure><p>其中 MySQL 的用户名、密码还有数据库的名字都是：<code>lumen</code>，数据库的文件存储名为：<code>data</code></p><h2 id="配置-Lumen-的数据库"><a href="#配置-Lumen-的数据库" class="headerlink" title="配置 Lumen 的数据库"></a>配置 Lumen 的数据库</h2><p>首先先复制一份预配置的文件，并命名为 <code>.env</code>，这个文件务必要在 Lumen 的根目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> .env.example .<span class="built_in">env</span></span><br></pre></td></tr></table></figure><p>然后修改 <code>.env</code> 文件的内容如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">APP_ENV</span>=local</span><br><span class="line"><span class="attr">APP_DEBUG</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">APP_KEY</span>=</span><br><span class="line"><span class="attr">APP_TIMEZONE</span>=UTC</span><br><span class="line"></span><br><span class="line"><span class="attr">DB_CONNECTION</span>=mysql</span><br><span class="line"><span class="attr">DB_HOST</span>=mysql</span><br><span class="line"><span class="attr">DB_PORT</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">DB_DATABASE</span>=lumen</span><br><span class="line"><span class="attr">DB_USERNAME</span>=lumen</span><br><span class="line"><span class="attr">DB_PASSWORD</span>=lumen</span><br><span class="line"></span><br><span class="line"><span class="attr">CACHE_DRIVER</span>=array</span><br><span class="line"><span class="attr">QUEUE_DRIVER</span>=array</span><br></pre></td></tr></table></figure><h2 id="运行-Docker-compose"><a href="#运行-Docker-compose" class="headerlink" title="运行 Docker compose"></a>运行 Docker compose</h2><p>我们只需要一条简单的命令，便可以将几个服务跑起来了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose up -d</span><br><span class="line">Creating network <span class="string">&quot;lumen550_default&quot;</span> with the default driver</span><br><span class="line">Creating volume <span class="string">&quot;lumen550_data&quot;</span> with default driver</span><br><span class="line">Pulling mysql (mysql:5.7)...</span><br><span class="line">5.7: Pulling from library/mysql</span><br><span class="line">ad74af05f5a2: Pull complete</span><br><span class="line">0639788facc8: Pull complete</span><br><span class="line">de70fa77eb2b: Pull complete</span><br><span class="line">724179e94999: Pull complete</span><br><span class="line">50c77fb16ba6: Pull complete</span><br><span class="line">d51f459239fb: Pull complete</span><br><span class="line">937bbdd4305a: Pull complete</span><br><span class="line">35369f9634e1: Pull complete</span><br><span class="line">f6016aab25f1: Pull complete</span><br><span class="line">5f1901e920da: Pull complete</span><br><span class="line">fdf808213c5b: Pull complete</span><br><span class="line">Digest: sha256:96edf37370df96d2a4ee1715cc5c7820a0ec6286551a927981ed50f0273d9b43</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> mysql:5.7</span><br><span class="line">Pulling php (tommylau/php:7.1)...</span><br><span class="line">7.1: Pulling from tommylau/php</span><br><span class="line">90f4dba627d6: Pull complete</span><br><span class="line">19ae35d04742: Pull complete</span><br><span class="line">6d34c9ec1436: Pull complete</span><br><span class="line">729ea35b870d: Pull complete</span><br><span class="line">d9a9bce03ae5: Pull complete</span><br><span class="line">14722aee56a9: Pull complete</span><br><span class="line">cddf82133cfb: Pull complete</span><br><span class="line">f947a5248e64: Pull complete</span><br><span class="line">df8066eb849b: Pull complete</span><br><span class="line">f1c3a7903b82: Pull complete</span><br><span class="line">f79a49b80174: Pull complete</span><br><span class="line">9b1090fd4e6a: Pull complete</span><br><span class="line">Digest: sha256:08c2f4a744cc1691a91b38e3dc8b59c494c68e3b2e80a8533d170949d5eb5fce</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> tommylau/php:7.1</span><br><span class="line">Pulling nginx (nginx:1.12-alpine)...</span><br><span class="line">1.12-alpine: Pulling from library/nginx</span><br><span class="line">019300c8a437: Pull complete</span><br><span class="line">6699c6d12419: Pull complete</span><br><span class="line">49502b430ca1: Pull complete</span><br><span class="line">9bb3a196cbc6: Pull complete</span><br><span class="line">Digest: sha256:d4656aba193a5e0df453a7e6eea3e339c2137097beb1ed06b8d76528edfc0a8a</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> nginx:1.12-alpine</span><br><span class="line">Creating lumen550_mysql_1 ...</span><br><span class="line">Creating lumen550_mysql_1 ... <span class="keyword">done</span></span><br><span class="line">Creating lumen550_php_1 ...</span><br><span class="line">Creating lumen550_php_1 ... <span class="keyword">done</span></span><br><span class="line">Creating lumen550_nginx_1 ...</span><br><span class="line">Creating lumen550_nginx_1 ... <span class="keyword">done</span></span><br><span class="line">Attaching to lumen550_mysql_1, lumen550_php_1, lumen550_nginx_1</span><br><span class="line">mysql_1  | Initializing database</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.235209Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation <span class="keyword">for</span> more details).</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.495735Z 0 [Warning] InnoDB: New <span class="built_in">log</span> files created, LSN=45790</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.533504Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.593576Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 2d40d947-9446-11e7-9d10-0242ac120002.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.594961Z 0 [Warning] Gtid table is not ready to be used. Table <span class="string">&#x27;mysql.gtid_executed&#x27;</span> cannot be opened.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.595220Z 1 [Warning] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.974914Z 1 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;root@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.975846Z 1 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;mysql.session@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.975888Z 1 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.977453Z 1 [Warning] <span class="string">&#x27;db&#x27;</span> entry <span class="string">&#x27;performance_schema mysql.session@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.977474Z 1 [Warning] <span class="string">&#x27;db&#x27;</span> entry <span class="string">&#x27;sys mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.977500Z 1 [Warning] <span class="string">&#x27;proxies_priv&#x27;</span> entry <span class="string">&#x27;@ root@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.977543Z 1 [Warning] <span class="string">&#x27;tables_priv&#x27;</span> entry <span class="string">&#x27;user mysql.session@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:18.977559Z 1 [Warning] <span class="string">&#x27;tables_priv&#x27;</span> entry <span class="string">&#x27;sys_config mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | Database initialized</span><br><span class="line">mysql_1  | Initializing certificates</span><br><span class="line">mysql_1  | Generating a 2048 bit RSA private key</span><br><span class="line">mysql_1  | ..................+++</span><br><span class="line">mysql_1  | ..............................................................................+++</span><br><span class="line">mysql_1  | unable to write <span class="string">&#x27;random state&#x27;</span></span><br><span class="line">mysql_1  | writing new private key to <span class="string">&#x27;ca-key.pem&#x27;</span></span><br><span class="line">mysql_1  | -----</span><br><span class="line">mysql_1  | Generating a 2048 bit RSA private key</span><br><span class="line">mysql_1  | ............................+++</span><br><span class="line">mysql_1  | ...........................+++</span><br><span class="line">mysql_1  | unable to write <span class="string">&#x27;random state&#x27;</span></span><br><span class="line">mysql_1  | writing new private key to <span class="string">&#x27;server-key.pem&#x27;</span></span><br><span class="line">mysql_1  | -----</span><br><span class="line">mysql_1  | Generating a 2048 bit RSA private key</span><br><span class="line">mysql_1  | ...........+++</span><br><span class="line">mysql_1  | .......................................................................................+++</span><br><span class="line">mysql_1  | unable to write <span class="string">&#x27;random state&#x27;</span></span><br><span class="line">mysql_1  | writing new private key to <span class="string">&#x27;client-key.pem&#x27;</span></span><br><span class="line">mysql_1  | -----</span><br><span class="line">mysql_1  | Certificates initialized</span><br><span class="line">mysql_1  | MySQL init process <span class="keyword">in</span> progress...</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.203861Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation <span class="keyword">for</span> more details).</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.204753Z 0 [Note] mysqld (mysqld 5.7.19) starting as process 87 ...</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.207345Z 0 [Note] InnoDB: PUNCH HOLE support available</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.207429Z 0 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.207443Z 0 [Note] InnoDB: Uses event mutexes</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.207456Z 0 [Note] InnoDB: GCC <span class="built_in">builtin</span> __atomic_thread_fence() is used <span class="keyword">for</span> memory barrier</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.207465Z 0 [Note] InnoDB: Compressed tables use zlib 1.2.3</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.207474Z 0 [Note] InnoDB: Using Linux native AIO</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.207635Z 0 [Note] InnoDB: Number of pools: 1</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.207707Z 0 [Note] InnoDB: Using CPU crc32 instructions</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.208790Z 0 [Note] InnoDB: Initializing buffer pool, total size = 128M, instances = 1, chunk size = 128M</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.214422Z 0 [Note] InnoDB: Completed initialization of buffer pool</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.217735Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.229522Z 0 [Note] InnoDB: Highest supported file format is Barracuda.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.236377Z 0 [Note] InnoDB: Creating shared tablespace <span class="keyword">for</span> temporary tables</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.236517Z 0 [Note] InnoDB: Setting file <span class="string">&#x27;./ibtmp1&#x27;</span> size to 12 MB. Physically writing the file full; Please <span class="built_in">wait</span> ...</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.253899Z 0 [Note] InnoDB: File <span class="string">&#x27;./ibtmp1&#x27;</span> size is now 12 MB.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.255052Z 0 [Note] InnoDB: 96 redo rollback segment(s) found. 96 redo rollback segment(s) are active.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.255095Z 0 [Note] InnoDB: 32 non-redo rollback segment(s) are active.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.255560Z 0 [Note] InnoDB: Waiting <span class="keyword">for</span> purge to start</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.305698Z 0 [Note] InnoDB: 5.7.19 started; <span class="built_in">log</span> sequence number 2539315</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.306978Z 0 [Note] Plugin <span class="string">&#x27;FEDERATED&#x27;</span> is disabled.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.310284Z 0 [Note] Found ca.pem, server-cert.pem and server-key.pem <span class="keyword">in</span> data directory. Trying to <span class="built_in">enable</span> SSL support using them.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.310489Z 0 [Warning] CA certificate ca.pem is self signed.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.310681Z 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.312210Z 0 [Note] InnoDB: Buffer pool(s) load completed at 170908  3:31:21</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.318300Z 0 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;root@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.318379Z 0 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;mysql.session@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.318405Z 0 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.318431Z 0 [Warning] <span class="string">&#x27;db&#x27;</span> entry <span class="string">&#x27;performance_schema mysql.session@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.318445Z 0 [Warning] <span class="string">&#x27;db&#x27;</span> entry <span class="string">&#x27;sys mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.318461Z 0 [Warning] <span class="string">&#x27;proxies_priv&#x27;</span> entry <span class="string">&#x27;@ root@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.319426Z 0 [Warning] <span class="string">&#x27;tables_priv&#x27;</span> entry <span class="string">&#x27;user mysql.session@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.319455Z 0 [Warning] <span class="string">&#x27;tables_priv&#x27;</span> entry <span class="string">&#x27;sys_config mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.323252Z 0 [Note] Event Scheduler: Loaded 0 events</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.323374Z 0 [Note] mysqld: ready <span class="keyword">for</span> connections.</span><br><span class="line">mysql_1  | Version: <span class="string">&#x27;5.7.19&#x27;</span>  socket: <span class="string">&#x27;/var/run/mysqld/mysqld.sock&#x27;</span>  port: 0  MySQL Community Server (GPL)</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.323390Z 0 [Note] Executing <span class="string">&#x27;SELECT * FROM INFORMATION_SCHEMA.TABLES;&#x27;</span> to get a list of tables using the deprecated partition engine. You may use the startup option <span class="string">&#x27;--disable-partition-engine-check&#x27;</span> to skip this check.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.323398Z 0 [Note] Beginning of list of non-natively partitioned tables</span><br><span class="line">mysql_1  | 2017-09-08T03:31:21.335016Z 0 [Note] End of list of non-natively partitioned tables</span><br><span class="line">mysql_1  | Warning: Unable to load <span class="string">&#x27;/usr/share/zoneinfo/iso3166.tab&#x27;</span> as time zone. Skipping it.</span><br><span class="line">mysql_1  | Warning: Unable to load <span class="string">&#x27;/usr/share/zoneinfo/leap-seconds.list&#x27;</span> as time zone. Skipping it.</span><br><span class="line">mysql_1  | Warning: Unable to load <span class="string">&#x27;/usr/share/zoneinfo/zone.tab&#x27;</span> as time zone. Skipping it.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.416481Z 5 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;root@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.416577Z 5 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.416605Z 5 [Warning] <span class="string">&#x27;db&#x27;</span> entry <span class="string">&#x27;performance_schema mysql.session@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.416617Z 5 [Warning] <span class="string">&#x27;db&#x27;</span> entry <span class="string">&#x27;sys mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.416633Z 5 [Warning] <span class="string">&#x27;proxies_priv&#x27;</span> entry <span class="string">&#x27;@ root@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.416665Z 5 [Warning] <span class="string">&#x27;tables_priv&#x27;</span> entry <span class="string">&#x27;user mysql.session@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.416681Z 5 [Warning] <span class="string">&#x27;tables_priv&#x27;</span> entry <span class="string">&#x27;sys_config mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">mysql_1  | mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">mysql_1  | mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">mysql_1  | mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.431887Z 9 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;root@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.431938Z 9 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.431972Z 9 [Warning] <span class="string">&#x27;db&#x27;</span> entry <span class="string">&#x27;performance_schema mysql.session@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.431987Z 9 [Warning] <span class="string">&#x27;db&#x27;</span> entry <span class="string">&#x27;sys mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.432004Z 9 [Warning] <span class="string">&#x27;proxies_priv&#x27;</span> entry <span class="string">&#x27;@ root@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.432123Z 9 [Warning] <span class="string">&#x27;tables_priv&#x27;</span> entry <span class="string">&#x27;user mysql.session@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.432144Z 9 [Warning] <span class="string">&#x27;tables_priv&#x27;</span> entry <span class="string">&#x27;sys_config mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  |</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.434536Z 0 [Note] Giving 0 client threads a chance to die gracefully</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.434596Z 0 [Note] Shutting down slave threads</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.434614Z 0 [Note] Forcefully disconnecting 0 remaining clients</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.434630Z 0 [Note] Event Scheduler: Purging the queue. 0 events</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.434700Z 0 [Note] Binlog end</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435339Z 0 [Note] Shutting down plugin <span class="string">&#x27;ngram&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435363Z 0 [Note] Shutting down plugin <span class="string">&#x27;ARCHIVE&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435377Z 0 [Note] Shutting down plugin <span class="string">&#x27;partition&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435386Z 0 [Note] Shutting down plugin <span class="string">&#x27;BLACKHOLE&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435396Z 0 [Note] Shutting down plugin <span class="string">&#x27;MyISAM&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435409Z 0 [Note] Shutting down plugin <span class="string">&#x27;MRG_MYISAM&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435418Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_SYS_VIRTUAL&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435426Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_SYS_DATAFILES&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435434Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_SYS_TABLESPACES&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435443Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_SYS_FOREIGN_COLS&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435451Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_SYS_FOREIGN&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435459Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_SYS_FIELDS&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435468Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_SYS_COLUMNS&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435482Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_SYS_INDEXES&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435492Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_SYS_TABLESTATS&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435500Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_SYS_TABLES&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435508Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_FT_INDEX_TABLE&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435515Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_FT_INDEX_CACHE&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435523Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_FT_CONFIG&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435531Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_FT_BEING_DELETED&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435539Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_FT_DELETED&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435547Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_FT_DEFAULT_STOPWORD&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435570Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_METRICS&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435579Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_TEMP_TABLE_INFO&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435586Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_BUFFER_POOL_STATS&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435594Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_BUFFER_PAGE_LRU&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435602Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_BUFFER_PAGE&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435610Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_CMP_PER_INDEX_RESET&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435617Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_CMP_PER_INDEX&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435625Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_CMPMEM_RESET&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435633Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_CMPMEM&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435641Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_CMP_RESET&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435648Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_CMP&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435656Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_LOCK_WAITS&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435664Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_LOCKS&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435672Z 0 [Note] Shutting down plugin <span class="string">&#x27;INNODB_TRX&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435679Z 0 [Note] Shutting down plugin <span class="string">&#x27;InnoDB&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435746Z 0 [Note] InnoDB: FTS optimize thread exiting.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.435927Z 0 [Note] InnoDB: Starting shutdown...</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.537135Z 0 [Note] InnoDB: Dumping buffer pool(s) to /var/lib/mysql/ib_buffer_pool</span><br><span class="line">mysql_1  | 2017-09-08T03:31:23.537513Z 0 [Note] InnoDB: Buffer pool(s) dump completed at 170908  3:31:23</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.151481Z 0 [Note] InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 12143451</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.153272Z 0 [Note] InnoDB: Removed temporary tablespace data file: <span class="string">&quot;ibtmp1&quot;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.153318Z 0 [Note] Shutting down plugin <span class="string">&#x27;CSV&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.153341Z 0 [Note] Shutting down plugin <span class="string">&#x27;MEMORY&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.153354Z 0 [Note] Shutting down plugin <span class="string">&#x27;PERFORMANCE_SCHEMA&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.153387Z 0 [Note] Shutting down plugin <span class="string">&#x27;sha256_password&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.153402Z 0 [Note] Shutting down plugin <span class="string">&#x27;mysql_native_password&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.153632Z 0 [Note] Shutting down plugin <span class="string">&#x27;binlog&#x27;</span></span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.154298Z 0 [Note] mysqld: Shutdown complete</span><br><span class="line">mysql_1  |</span><br><span class="line">mysql_1  |</span><br><span class="line">mysql_1  | MySQL init process <span class="keyword">done</span>. Ready <span class="keyword">for</span> start up.</span><br><span class="line">mysql_1  |</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.360932Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation <span class="keyword">for</span> more details).</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.361606Z 0 [Note] mysqld (mysqld 5.7.19) starting as process 1 ...</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.364436Z 0 [Note] InnoDB: PUNCH HOLE support available</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.364484Z 0 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.364497Z 0 [Note] InnoDB: Uses event mutexes</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.364511Z 0 [Note] InnoDB: GCC <span class="built_in">builtin</span> __atomic_thread_fence() is used <span class="keyword">for</span> memory barrier</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.364522Z 0 [Note] InnoDB: Compressed tables use zlib 1.2.3</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.364532Z 0 [Note] InnoDB: Using Linux native AIO</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.364785Z 0 [Note] InnoDB: Number of pools: 1</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.364914Z 0 [Note] InnoDB: Using CPU crc32 instructions</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.365918Z 0 [Note] InnoDB: Initializing buffer pool, total size = 128M, instances = 1, chunk size = 128M</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.371658Z 0 [Note] InnoDB: Completed initialization of buffer pool</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.373208Z 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.384808Z 0 [Note] InnoDB: Highest supported file format is Barracuda.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.391336Z 0 [Note] InnoDB: Creating shared tablespace <span class="keyword">for</span> temporary tables</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.391463Z 0 [Note] InnoDB: Setting file <span class="string">&#x27;./ibtmp1&#x27;</span> size to 12 MB. Physically writing the file full; Please <span class="built_in">wait</span> ...</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.404213Z 0 [Note] InnoDB: File <span class="string">&#x27;./ibtmp1&#x27;</span> size is now 12 MB.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.404731Z 0 [Note] InnoDB: 96 redo rollback segment(s) found. 96 redo rollback segment(s) are active.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.404753Z 0 [Note] InnoDB: 32 non-redo rollback segment(s) are active.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.405016Z 0 [Note] InnoDB: Waiting <span class="keyword">for</span> purge to start</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.455194Z 0 [Note] InnoDB: 5.7.19 started; <span class="built_in">log</span> sequence number 12143451</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.455947Z 0 [Note] Plugin <span class="string">&#x27;FEDERATED&#x27;</span> is disabled.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.458896Z 0 [Note] Found ca.pem, server-cert.pem and server-key.pem <span class="keyword">in</span> data directory. Trying to <span class="built_in">enable</span> SSL support using them.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.459094Z 0 [Warning] CA certificate ca.pem is self signed.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.460412Z 0 [Note] Server hostname (bind-address): <span class="string">&#x27;*&#x27;</span>; port: 3306</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.460486Z 0 [Note] IPv6 is available.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.460505Z 0 [Note]   - <span class="string">&#x27;::&#x27;</span> resolves to <span class="string">&#x27;::&#x27;</span>;</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.460526Z 0 [Note] Server socket created on IP: <span class="string">&#x27;::&#x27;</span>.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.460875Z 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.462385Z 0 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;root@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.462432Z 0 [Warning] <span class="string">&#x27;user&#x27;</span> entry <span class="string">&#x27;mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.462460Z 0 [Warning] <span class="string">&#x27;db&#x27;</span> entry <span class="string">&#x27;performance_schema mysql.session@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.462471Z 0 [Warning] <span class="string">&#x27;db&#x27;</span> entry <span class="string">&#x27;sys mysql.sys@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br><span class="line">mysql_1  | 2017-09-08T03:31:25.462487Z 0 [Warning] <span class="string">&#x27;proxies_priv&#x27;</span> entry <span class="string">&#x27;@ root@localhost&#x27;</span> ignored <span class="keyword">in</span> --skip-name-resolve mode.</span><br></pre></td></tr></table></figure><p>我们可以运行一下 <code>docker ps</code> 来看一下现在 Docker 的运行情况。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                      NAMES</span><br><span class="line">dfbe025c3dce        nginx:1.12-alpine   <span class="string">&quot;nginx -g &#x27;daemon ...&quot;</span>   2 minutes ago       Up 13 seconds       0.0.0.0:80-&gt;80/tcp, 0.0.0.0:443-&gt;443/tcp   lumen550_nginx_1</span><br><span class="line">b9088942eff5        tommylau/php:7.1    <span class="string">&quot;docker-php-entryp...&quot;</span>   2 minutes ago       Up 13 seconds       9000/tcp                                   lumen550_php_1</span><br><span class="line">8f67ea7e4a75        mysql:5.7           <span class="string">&quot;docker-entrypoint...&quot;</span>   2 minutes ago       Up 13 seconds       3306/tcp                                   lumen550_mysql_1</span><br></pre></td></tr></table></figure><p>可以看到几个服务都已经在正常运行了。</p><h2 id="Lumen-Composer-安装"><a href="#Lumen-Composer-安装" class="headerlink" title="Lumen Composer 安装"></a>Lumen Composer 安装</h2><p>几个服务跑起来了以后，并不代表着 Lumen 就可以正常使用了，因为还有很多的第三方依赖关系，是需要通过 <code>Composer</code> 来完成的。</p><p>这个时候我们需要进入到 PHP Container 的内部，来执行 PHP Composer 相关的命令来加载第三方的库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -ti lumen550_php_1 sh</span><br></pre></td></tr></table></figure><p>通过上面的命令，我们就可以进入到 PHP 的容器里面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">$ composer install --optimize-autoloader --no-dev</span><br><span class="line">Loading composer repositories with package information</span><br><span class="line">Updating dependencies</span><br><span class="line">Package operations: 41 installs, 0 updates, 0 removals</span><br><span class="line">  - Installing symfony/polyfill-mbstring (v1.5.0): Downloading (100%)</span><br><span class="line">  - Installing symfony/http-foundation (v3.3.8): Downloading (100%)</span><br><span class="line">  - Installing symfony/event-dispatcher (v3.3.8): Downloading (100%)</span><br><span class="line">  - Installing psr/log (1.0.2): Downloading (100%)</span><br><span class="line">  - Installing symfony/debug (v3.3.8): Downloading (100%)</span><br><span class="line">  - Installing symfony/http-kernel (v3.3.8): Downloading (100%)</span><br><span class="line">  - Installing nikic/fast-route (v1.2.0): Downloading (100%)</span><br><span class="line">  - Installing mtdowling/cron-expression (v1.2.0): Downloading (100%)</span><br><span class="line">  - Installing monolog/monolog (1.23.0): Downloading (100%)</span><br><span class="line">  - Installing symfony/translation (v3.3.8): Downloading (100%)</span><br><span class="line">  - Installing nesbot/carbon (1.22.1): Downloading (100%)</span><br><span class="line">  - Installing psr/simple-cache (1.0.0): Downloading (100%)</span><br><span class="line">  - Installing psr/container (1.0.0): Downloading (100%)</span><br><span class="line">  - Installing illuminate/contracts (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing doctrine/inflector (v1.2.0): Downloading (100%)</span><br><span class="line">  - Installing illuminate/support (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing symfony/finder (v3.3.8): Downloading (100%)</span><br><span class="line">  - Installing illuminate/filesystem (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/container (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/events (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/view (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/translation (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/validation (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing symfony/process (v3.3.8): Downloading (100%)</span><br><span class="line">  - Installing illuminate/database (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing symfony/console (v3.3.8): Downloading (100%)</span><br><span class="line">  - Installing illuminate/console (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/queue (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/pipeline (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/pagination (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/session (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/http (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/hashing (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/encryption (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/config (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/cache (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/bus (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/broadcasting (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing illuminate/auth (v5.5.2): Downloading (100%)</span><br><span class="line">  - Installing laravel/lumen-framework (v5.5.0): Downloading (100%)</span><br><span class="line">  - Installing vlucas/phpdotenv (v2.4.0): Downloading (100%)</span><br><span class="line">Writing lock file</span><br><span class="line">Generating optimized <span class="built_in">autoload</span> files</span><br><span class="line">$ composer dump-autoload --optimize</span><br><span class="line">Generating optimized <span class="built_in">autoload</span> files</span><br></pre></td></tr></table></figure><p>这样，所有需要的文件就算齐备了。</p><p>一般 macOS 下 VirtualBox 默认的虚拟机地址为：192.168.99.100</p><p>所以我们访问下：<a href="http://192.168.99.100/">http://192.168.99.100/</a></p><p>应该就会看到正在运行的 Lumen 输出了。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://docs.docker.com/compose/">Docker Compose</a></li><li><a href="https://pkg.phpcomposer.com/">Packagist &#x2F; Composer 中国全量镜像</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Development </tag>
            
            <tag> Nginx </tag>
            
            <tag> Docker </tag>
            
            <tag> Brew </tag>
            
            <tag> MySQL </tag>
            
            <tag> PHP </tag>
            
            <tag> macOS </tag>
            
            <tag> Laravel </tag>
            
            <tag> Lumen </tag>
            
            <tag> Lumen 5.5 </tag>
            
            <tag> MySQL 5.7 </tag>
            
            <tag> Nginx 1.12 </tag>
            
            <tag> PHP 7.1 </tag>
            
            <tag> VirtualBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自己动手升级 PS4 硬盘</title>
      <link href="/2017/09/04/how-to-upgrade-ps4-hdd/"/>
      <url>/2017/09/04/how-to-upgrade-ps4-hdd/</url>
      
        <content type="html"><![CDATA[<img src="/2017/09/04/how-to-upgrade-ps4-hdd/ps4.jpg" class="" title="PlayStation 4"><h2 id="为什么要换-xia-硬-zhe-盘-teng-？"><a href="#为什么要换-xia-硬-zhe-盘-teng-？" class="headerlink" title="为什么要换(xia)硬(zhe)盘(teng)？"></a>为什么要换(xia)硬(zhe)盘(teng)？</h2><p>PS4 买了也有几年了，常年属于荒废和封尘的状态。最近清理房间的时候，又把 PS4 挖出来了。</p><p>我买的是第一批的 PS4，不是 PS4 Slim 的那种，原厂配的是 500GB 5400RPM 的机械硬盘。</p><p>至于速度慢，这个是肯定的啦，而比速度慢更让人糟心的是它的存储容量。</p><span id="more"></span><p>你要知道像 GTA5 这样的游戏，动辄就得占用个 50 ~ 60GB 的。</p><p>还有其他什么比较好的游戏，比如大制作的 Until Dawn，也是 50 ~ 60GB 起步。</p><p>500GB 的硬盘基本上装不了几个游戏就空间告急了。</p><p>尤其是最近剁手了一套 PlayStation VR 套装，更使得硬盘空间显得捉襟见肘。</p><p>于是乎萌生了更换更大容量硬盘的想法。</p><h2 id="选硬盘"><a href="#选硬盘" class="headerlink" title="选硬盘"></a>选硬盘</h2><p>要换硬盘第一个要考虑的当然是换什么硬盘。</p><p>纵观整个存储市场，无外乎 3 种选择：</p><ol><li>继续用 HDD，但是换大容量的</li><li>使用 SSHD，但是换大容量的</li><li>上 SSD，但容量未必能增加，因为 500GB SSD 的价格已是 1K+</li></ol><p>从网友反馈的信息来看，SSD 只在加载和存储的时候有比较好的体验，但是在游戏过程中感觉优势并不是很明显，而且还达不到扩容的效果。1TB 的 SSD 大概 2000 多，2TB 的 SSD 嗯，也就 5000 多，可以买 3 台 PS4 Slim 主机而已，土豪请随意。</p><p>传统 HDD 价格便宜量又足，但是加载和存储的时候比较慢。而 SSHD 刚好可以在这块发挥一点小优势，比 HDD 快一点点，虽比不上 SSD，但却兼顾了大容量。同时考虑 PS4 的主机只有 SATA2 接口这一事实，就算是上了 SATA3 的 SSD 其性能也未必很理想。所以综合考虑，还是 SSHD 最适合本次的升级改造（其实是为穷找借口😂）。</p><p>SSHD 主要有 2 个厂家，一个是「Western Digital」，一个是「Seagate」。</p><p>WD 只有一款 2.5 寸的 SSHD：<a href="https://www.wdc.com/products/internal-storage/wd-blue-sshd.html">WD10J31X</a>，容量为 1TB，而且还买不到。</p><p>Seagate 有多款 2.5 寸的 SSHD，最大容量 2TB 版本为型号 <a href="http://www.seagate.com/internal-hard-drives/hdd/firecuda/#2-5-inch-specs">ST2000LX001</a> 的硬盘，而且号称质保 5 年！</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/sshd1.jpg" class=""><img src="/2017/09/04/how-to-upgrade-ps4-hdd/sshd2.jpg" class=""><p>基本上没什么选择了，只能是 Seagate ST2000LX001 了。某东报价 799，某宝报价 599，差价有点大啊。。。</p><h2 id="备份资料"><a href="#备份资料" class="headerlink" title="备份资料"></a>备份资料</h2><p>首先我们需要一个移动硬盘，用于资料的备份，可以是 FAT32 格式的，也可以是 exFAT 格式的，个人推荐 exFAT 格式的，可以储存超过 4G 的单个文件。</p><p>接入 PS4 然后进入系统，选择备份，然后就可以去喝咖啡慢慢等了。。。</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/backup1.jpg" class=""><img src="/2017/09/04/how-to-upgrade-ps4-hdd/backup2.jpg" class=""><img src="/2017/09/04/how-to-upgrade-ps4-hdd/backup3.jpg" class=""><img src="/2017/09/04/how-to-upgrade-ps4-hdd/backup4.jpg" class=""><img src="/2017/09/04/how-to-upgrade-ps4-hdd/backup5.jpg" class=""><img src="/2017/09/04/how-to-upgrade-ps4-hdd/backup6.jpg" class=""><p>备份完成后，显示是这样的。</p><h2 id="更换硬盘"><a href="#更换硬盘" class="headerlink" title="更换硬盘"></a>更换硬盘</h2><p>把 PS4 按照这个角度摆好</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/replace1.jpg" class=""><p>用力地往上推盖子，就可以打开了，不需要使用任何工具辅助</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/replace2.jpg" class=""><p>完整拆开后如下图</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/replace3.jpg" class=""><p>拆下旧硬盘</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/replace4.jpg" class=""><p>装上新硬盘</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/replace5.jpg" class=""><p>就这么简单，顺便来个新老硬盘的对比照</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/compare1.jpg" class=""><img src="/2017/09/04/how-to-upgrade-ps4-hdd/compare2.jpg" class=""><p>可以看到原厂也是 Seagate 的硬盘，不过是 Samsung 出品的。</p><p>最后来个 PlayStation 情怀螺丝的特写</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/screw.jpg" class=""><h2 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h2><p>换了新硬盘以后，需要重装 PS4 系统。</p><p>网上各种说法不一，说什么必须要用美版的镜像，港版的镜像什么的。其实都是不需要的，直接去中国官网<a href="http://www.playstation.com.cn/ps4-system-1.htm">下载最新的固件</a>就可以了，全球的 PS4 的固件都是通用的。</p><p>发这篇文章的时候的最新固件下载地址如下：</p><p><a href="http://dcn01.ps4.update.playstation.net/update/ps4/image/2017_0725/sys_5b25ad39b7039ee2d88a825d2a04ab30/PS4UPDATE.PUP">http://dcn01.ps4.update.playstation.net/update/ps4/image/2017_0725&#x2F;sys_5b25ad39b7039ee2d88a825d2a04ab30&#x2F;PS4UPDATE.PUP</a></p><p>接下来我们需要找个U盘或者移动硬盘也可以，在根目录创建一个名为「PS4」的文件夹，再在该文件夹下创建一个名为「UPDATE」的文件夹。</p><p>将刚才下载的「PS4UPDATE.PUP」复制到「UPDATE」文件夹。然后把U盘连接到 PS4 上开机。</p><p>按照屏幕提示，连接好 DUALSHOCK 4 手柄，一步一步操作就可以开始系统恢复工作了。</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/install.jpg" class=""><p>系统重装后，可以查看磁盘，可用空间已经变成 1.77TB 了。</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/size.jpg" class=""><h2 id="恢复资料"><a href="#恢复资料" class="headerlink" title="恢复资料"></a>恢复资料</h2><p>同样是在系统里面选择恢复，连接好刚才备份用的移动硬盘。</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/restore1.jpg" class=""><p>因为恢复会格式化原来的系统，所以建议重装好系统以后马上就进行数据恢复的操作。</p><img src="/2017/09/04/how-to-upgrade-ps4-hdd/restore2.jpg" class=""><p>恢复的时间根据数据量的大小会有不同，数据恢复完成后，系统会重新启动。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>网上有不少人说换了 SSHD 以后，游戏速度加载改善明显等等。但是我实际使用过程中，感觉并不是很明显。</p><p>感觉应该有一点点提速的作用吧？但是也有可能只是心理作用？</p><p>但是不管怎么说，磁盘容量是实实在在的增加了，如果出于成本考虑的话，也许普通的 2TB 硬盘也是不错的选择。</p>]]></content>
      
      
      <categories>
          
          <category> Hardware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PlayStation </tag>
            
            <tag> Sony </tag>
            
            <tag> HDD </tag>
            
            <tag> PS4 </tag>
            
            <tag> PlayStation 4 </tag>
            
            <tag> SSD </tag>
            
            <tag> SSHD </tag>
            
            <tag> Samsung </tag>
            
            <tag> Seagate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「简单做」之简单读书笔记</title>
      <link href="/2017/04/06/zen-to-done-reading-notes/"/>
      <url>/2017/04/06/zen-to-done-reading-notes/</url>
      
        <content type="html"><![CDATA[<img src="/2017/04/06/zen-to-done-reading-notes/ztd.jpg" class="" title="Zen To Done"><h1 id="简单做读书笔记"><a href="#简单做读书笔记" class="headerlink" title="简单做读书笔记"></a>简单做读书笔记</h1><p>最近为了提升工作效率，又双叒叕读了一遍 <a href="https://zenhabits.net/">Leo Babauta</a> 的《Zen To Done》，为了不浪费阅读所花费的时间，同时为了巩固学习效果，遂决定写一篇读书笔记。</p><p>因为这本书没有中文版，所以名字延续使用了<a href="http://www.mifengtd.cn/">「褪墨・时间管理」</a>所用的翻译名**「简单做」**。</p><span id="more"></span><h2 id="什么是-Zen-To-Done（简单做）？"><a href="#什么是-Zen-To-Done（简单做）？" class="headerlink" title="什么是 Zen To Done（简单做）？"></a>什么是 Zen To Done（简单做）？</h2><p>Zen To Done (ZTD) 是 Leo 本人在 David Allen 所著的<a href="http://gettingthingsdone.com/">《Getting Things Done》</a>和其他时间管理系统的基础上，归纳和总结出来的一套时间管理方法。</p><p>他一共总结了 10 个需要培养的好习惯。通过掌握这 10 个好习惯，你可以重新掌控你的人生，并做到心如止水，把自己想要做的事情都落地，而不仅仅是痴人说梦。</p><p>这 10 个习惯是：</p><ol><li>Collect Habit（收集）</li><li>Process Habit（处理）</li><li>Plan Habit（计划）</li><li>Do Habit（执行）</li><li>Simple Trusted System Habit（信任系统）</li><li>Organize Habit（管理）</li><li>Review Habit（回顾）</li><li>Simplify Habit（简化）</li><li>Routine Habit（常规）</li><li>Find your passion Habit（激情）</li></ol><h2 id="最小化-ZTD"><a href="#最小化-ZTD" class="headerlink" title="最小化 ZTD"></a>最小化 ZTD</h2><p>整个 ZTD 有 10 个习惯需要培养，而且按照原书的描述，每个习惯最少需要坚持 30 天才有可能真真正正的成为习惯。这样说的，每个人可能至少需要 1 年以上的时间，才有可能真正的体会到 ZTD 到好处。而往往不到一个月的时间，很多人就放弃了。</p><p>之所以很多人多次尝试时间管理都失败，主要的原因还是因为改变习惯过于困难。一次改变一个习惯已经是异常困难，更何况同时改变多个习惯？</p><p>于是乎有了这个最小化 ZTD 实现的说法，但就算是最小化我们还是需要最少培养 4 种新的习惯。</p><h3 id="1-Collect-Habit（收集）"><a href="#1-Collect-Habit（收集）" class="headerlink" title="1. Collect Habit（收集）"></a>1. Collect Habit（收集）</h3><p>原书出版的比较早，原文中关于「收集」的介绍是这样的：</p><blockquote><p>Carry a small notebook and write down any tasks, ideas, projects, or other information that pop into your head. Get it out of your head and onto paper, so you don’t forget it.</p></blockquote><p>随身携带一个小笔记本，然后写下任何突然闪现在你脑海中的任务、想法、项目或者其它任何的信息。把它们从你的大脑中释放出来，并记录在本子上，以免遗忘。</p><p>而作者发布 ZTD 的时间是 2007 年，而今年已经是 2017 年了，😂</p><p>对于很多人来说，随身携带一个小笔记本并不一定那么方便。所以，我的建议是使用任何一个你熟手的方便快捷的手机 App 来进行收集工作。比如：Evernote、Trello、Notes、Keep、Fantastical 等等。但一定要方便快捷，就是一划屏幕，马上就可以开始输入的那种。</p><p>如果你的手机性能不好，或者你操作手机不熟练，又或者是操作步骤超过 3 步，那么我还是强烈建议你买一个专用的小笔记本。毕竟掏出笔记本，开始写，也就是两个步骤而已。</p><h3 id="2-Process-Habit（处理）"><a href="#2-Process-Habit（处理）" class="headerlink" title="2. Process Habit（处理）"></a>2. Process Habit（处理）</h3><blockquote><p>Make quick decisions on things in your inbox, do not put them off. Process your inboxes (email, physical, voicemail, notebook) at least once a day, and more frequently if needed.</p></blockquote><p>快速的处置「收件箱」里面的东西，而不是任由其堆积。每天最少处理一次你的收件箱（包括电子邮件、现实生活中的收件箱、语音信箱和记事本），如果需要的话就一天检查多次。</p><p>当处理的时候，本着从上到下，从一到二的原则。不要跳过任何一个可能的要处理的事务，不管你有多抗拒这个事务，第一时间处理之。如果 2 分钟内可以解决的，那么马上完成它。如果无法在 2 分钟内完成的，要么放在日程表或任务清单上，稍后执行。要么归档或者指派给他人，如果上述情况都不符合，且这事情毫不重要那么就直接删除它。</p><h3 id="3-Plan-Habit（计划）"><a href="#3-Plan-Habit（计划）" class="headerlink" title="3. Plan Habit（计划）"></a>3. Plan Habit（计划）</h3><blockquote><p>Set MITs for each week, and each day. Do your MITs early in the day to get them out of the way and to ensure that they get done.</p></blockquote><p>这里要先解释一下 <code>MIT</code>，这个并不是我们熟知的「麻省理工学院」，而是**「Most Important Thing」——最重要的事情**。</p><p>简单来说，我们每周、每日都应该将重要的事情列出来。这个重要的事情需要跟我们的年度计划相匹配，比如说：今年的目标是实现半程马拉松。那么对于你来说一个可能的 MIT 就是每周 2 - 3 次的跑步训练。</p><p>每周或每日都列出 1 - 3 个<strong>最重要的事情</strong>，并尽早去完成它，以免被其它不重要的事情所影响。毕竟完成重要的事情，要比无意义地做重复工作要有意义的多。</p><h3 id="4-Do-Habit（执行）"><a href="#4-Do-Habit（执行）" class="headerlink" title="4. Do Habit（执行）"></a>4. Do Habit（执行）</h3><blockquote><p>Focus on one task at a time, without distractions. Eliminate all distractions, then just focus on your task for as long as possible. Don’t let yourself get distracted from it. Don’t try to multi-task.</p></blockquote><p>其实，有了「收集」、「处理」与「计划」，没有这最后一步最重要的「执行」，一切也只是空谈而已。</p><p>ZTD 建议任何时候都要毫无杂念地专注做一件事情。尽可能地抛开所有可能的干扰，尽可能长时间地专注在你正在做的事情。切记不要任由自己被其它的事情所影响或分神。绝对不要尝试同时去做几件事情。</p><p>反正，归根结底，就是一个时间只做一件事情。如果实在被中断了，那就做好记录，以便稍后可以快速恢复到工作状态。如果突发事件 2 分钟内能解决，参考「处理」部分，快速解决掉，然后继续专注做现在正在做的事情。</p><h1 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h1><p>「这个读书笔记就这么短就没有了？」</p><p>其实不是的，这个读书笔记有很多，毕竟有 10 个习惯那么多。但是大部分的笔记都是摘抄文中的英文，所以没有办法直接复用。</p><p>如果一定要用中文写，那么相当于重新翻译了一遍。全因工（lan）作（ai）繁（wan）忙（qi），实在没有精力逐字逐句地翻译。</p><p>而且，考虑到很多人其实对于「时间管理」的概念还很陌生，一次性把所有东西一股脑地搬出来给大家也未必是件好事。于是乎选择了最简化的「简单做」，给大家做个简单的介绍和入门。</p><p>就算是一个简单的入门介绍，如果真的能认认真真的做好这 4 个习惯，也不是一件容易的事情。如果按照一般人 30 天培养一个习惯的规律来看，能做到入门级「简单做」也得 4 个月左右。😂</p><p>当然大家如果有兴趣也可以留言，有时间和精力的话，可以视情况继续更新 ZTD 相关的文章。</p><blockquote><p>写完文章以后，突然发现竟然有了中文版电子版的 Zen To Done ——《轻松搞定》。该书可以<a href="https://www.amazon.cn/dp/B01NCX5BOW">在「亚马逊」上购买 Kindle 版本</a>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Reading </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Productivity </tag>
            
            <tag> Book </tag>
            
            <tag> Note </tag>
            
            <tag> Reading </tag>
            
            <tag> ZTD </tag>
            
            <tag> Zen To Done </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从《保卫萝卜》联想到的企业管理</title>
      <link href="/2017/03/25/management-tips-from-carrot-fantasy/"/>
      <url>/2017/03/25/management-tips-from-carrot-fantasy/</url>
      
        <content type="html"><![CDATA[<img src="/2017/03/25/management-tips-from-carrot-fantasy/carrot_fantasy.jpg" class="" title="保卫萝卜3"><p>首先要澄清一下，这个真的不是腾讯的广告文，毕竟<a href="http://luobo3.qq.com/">《保卫萝卜3》</a>已经上市有<a href="http://baike.baidu.com/item/%E4%BF%9D%E5%8D%AB%E8%90%9D%E5%8D%9C3">快一年</a>了吧。</p><p>这个游戏去年刚出来的时候，身边有不少的朋友都在玩。但是因为难度设置的不是特别合理，外加很多道具功能的引入，使得这个游戏变得很氪金。</p><span id="more"></span><p>作为一个认(si)真(qiong)游(diao)戏(si)的人来说，我是很反感什么东西都花钱买道具来解决的，因为我相信不花一分钱，也是可以好好体验这个游戏的。</p><p>事实证明，虽然不花钱玩得挺不容易的，但是归根结底，腾讯还算是良心了。在我一分钱未花的状况下，也拿了全部关卡的「金萝卜」。</p><p>然而，今天的主题不是讨论这个游戏的好坏与值不值，而是在坚持玩这个游戏一段时间以后我个人的一些感悟。当然，也是为了交这个月的作业。😂</p><blockquote><p>本文涉及不少《保卫萝卜3》游戏中的内容，如果没有玩过这个游戏，可能无法明白文中的部分内容，望知悉。</p></blockquote><hr><p>玩萝卜的过程中，我愈发地感觉到，人生就像各种游戏，不停地打怪升级，积累经验，为了挑战下一个高峰做好准备。</p><p>比如说，玩萝卜，就有几个很重要的事情：</p><ul><li>战略很重要</li><li>执行很重要</li><li>管理很重要</li><li>时机很重要</li><li>运气很重要</li><li>舍得很重要</li></ul><p>而这些要素与企业的运营与管理完全不谋而合。</p><h2 id="战略很重要"><a href="#战略很重要" class="headerlink" title="战略很重要"></a>战略很重要</h2><p>说起战略，大家都觉得很重要，但问题是，什么是战略？</p><p>在萝卜里面，这就体现在地形的观察，道具的部署，以及道具之际的互补与搭配。</p><p>比如说，一开场，习惯性的我就会先暂停，看看萝卜在哪里，有几个怪物出口，有几波怪物，有多少钱，有些什么炮塔可以用。</p><p>然后结合现有的资金情况，配合不同的炮塔使用。有的时候快速把一个炮塔升满级，而有的时候，你需要好几个不同的炮塔来保证萝卜的安全。</p><p>这种全局思考和考量是很重要的一件事情，往往某一个关卡过不去，多数是失败在这个开局的战略思考阶段。</p><p>这个阶段想清楚了，基本上也就成功了一半。</p><p>公司运营亦是如此，做之前想清楚后面就容易很多，毕竟战略层面的决策关乎到公司的生死存亡。</p><h2 id="执行很重要"><a href="#执行很重要" class="headerlink" title="执行很重要"></a>执行很重要</h2><p>有了战略的指导，剩下的就是执行了。用个不大恰当的游戏术语，就是<a href="https://zh.wikipedia.org/zh-hans/%E5%BE%AE%E6%93%8D%E4%BD%9C">「微操」</a>了，然而这是一个基本上没有什么操作难度可言的游戏。</p><p>虽说没有太难的操作，但是执行依然是很重要的。比如说你的防塔放得晚了一点，可能就有一个怪物溜过去了。又或者是，有一些跑得比较快的怪物，你需要手动点它们，以便能提前把它们解决掉。</p><p>如果这个过程中你偷懒了，那么很有可能到了中后段，就会突然跑出来一个跑得很快的家伙。就算你集中所有火力，最后也没能消灭它，反而被它狠狠地咬了萝卜一口。</p><p>因此在执行的时候，也要时刻保持一个大局观。要不停地修正和调整，让执行保持跟我们的战略相匹配。而不是制定好一个完美的战略目标，然后撒手不管，任由其自生自灭。</p><p>还有很重要的一点是，我们往往都急于求胜，甚至很多人喜欢将速度设置为 2X。出于节约时间的角度来看，这本无可厚非。</p><p>但有的时候，为了最终的完美结局，我们反而需要慢下来，甚至是暂停。说句很有哲理的话，那就是：「慢是为了更好的快。」</p><p>对应到公司的管理，作为管理层不能实时地根据战略决策动态调整，又或者是制定了方向就撒手扔给下面的员工去做，都是极其不负责任的行为。</p><p>管理人员不单止要深入透彻地理解公司的发展战略，还应该在此基础上安排工作和检查相关工作的产出。同时定期或不定期地总结现状与战略的匹配度，及时做出有效地调整，公司才有可能在激烈的市场竞争之中获得一丝生机。</p><h2 id="管理很重要"><a href="#管理很重要" class="headerlink" title="管理很重要"></a>管理很重要</h2><p>咋一看，这个游戏似乎不需要什么管理，反正无脑堆防塔就好了。</p><p>嗯，看似是这样的，实则不然。如果你只是为了消灭怪物，那似乎确实不需要什么管理。</p><p>但是，当你又要消灭敌人，又要扫清障碍，还要保全萝卜的时候呢？是不是还那么得心应手呢？</p><p>要做好一件事情本身就已经不容易了，要同时做好三件事，那需要的就更多了。除了战略、执行还需要艺术：管理的艺术。</p><p>我们需要利用一切空档去清理障碍，而有的障碍离主路径很远，单独放置一个炮塔显得很浪费，尤其是钱不够的情况下。那这个炮塔是建还是不建呢？这个时候我们就需要权衡各种利弊，找到一个平衡的点。</p><p>相对于上面的这种情况，还有另外一种情况：就是某个位置很重要，快速清理出来可以摆放更多的炮塔。然而可能因为障碍物的防御比较高，连续几波怪物过去了，都没能消除这个障碍。这时也需要我们权衡利弊，是否继续坚持清理，还是优先在其他地方部署炮塔，以保证后续的怪物不会啃到我们可爱的萝卜。</p><p>公司运营依然如此，比如说买好的显示器，可以极大地提升研发人员的工作效率。可是，如果我每个人都配置一个不错的显示器，可能我就多花了一个月的运营成本。也就意味着将来某天资金跟不上了，团队就面临着提前解散的风险。那这个显示器是买还是不买呢？</p><p>再比如说我们都希望给员工好的薪资和福利，但是如果我们的薪资福利特别好，那么意味着我们可以投入到项目里面的研发费用就会缩水。如果研发费用不缩水，就意味着我们还是有可能要提前解散团队。但是换个角度，如果员工的薪资水平特别低，你也很难招到有足够能力的人。就算你能支持 2 年甚至 3 年，你也无法做出符合市场需求的优质产品。</p><p>所以说管理是门艺术，上面所列举的几个例子，每一个都没有简单完美的标准答案。就算是游戏，也没有。每个人都有每个人的解读，但是要尽可能地根据战略发展的要求，找到一个平衡点。</p><h2 id="时机很重要"><a href="#时机很重要" class="headerlink" title="时机很重要"></a>时机很重要</h2><p>这个倒是好理解，比如游戏过程中，我什么时候放宠物，什么时候释放萝卜的技能等等。</p><p>在企业运营中，这个就是考验工作者的经验和能力了。</p><p>比如我们应该在投放市场前多久，做哪些准备工作？在哪个最恰当的时间点去做宣传，去做销售等等。</p><p>我相信很多读者都比我更有心得，而且这个时机，真的是得审时度势，到某个时间点去做某个特定的事情。</p><p>就好像我们大多数人不会考虑在 60 岁的时候要小朋友，也不会在 10 岁就考虑创业一样。</p><p>在最适合的时候做最适合的事情，把握好时机，才有冲出重围的可能。</p><h2 id="运气很重要"><a href="#运气很重要" class="headerlink" title="运气很重要"></a>运气很重要</h2><p>这个，就真的很考验人品了。</p><p>好比萝卜中隐藏在障碍物里面的道具，魔盒里面出来的随机炮塔。这些都不是我们能控制的，有的时候会出现很多很不错的，有的时候还会连续出来很多没有用的。</p><p>比如在一个很重要的位置，我们想要一个「太阳花」，可以全方位攻击。但是我们反复试验了 10 几次，把钱都花光了也没有出来，而在别的位置随便一放，就来了个「太阳花」。</p><p>人生这种不如意的事情，真的是十有八九。遇到了就忍了吧，看米下饭，自己有什么就用什么，毕竟不是人人都有资本全盘推倒重来的。</p><p>就算是能推倒重来，你又怎么知道新的一局就一定会比这一局好呢？哪个赌徒不是觉得这把输了，下把一定可以赢回来的？</p><p>创业也是如此，尽自己最大的努力，利用一切可以利用的资源。哪怕是多么的不如意，多么的艰难，该走的路还是要走，该坚持的还是要坚持。剩下的那 1% 的幸运，就留给老天爷做决定吧！</p><h2 id="舍得很重要"><a href="#舍得很重要" class="headerlink" title="舍得很重要"></a>舍得很重要</h2><p>中国有句古话，叫做「不破不立」。</p><p>这个游戏玩到后期，想要完美通关的精髓就在于「不破不立」这四个字。</p><p>在某些关卡的最后，往往有一波防御力特别高的怪物。就算你集中了所有的炮塔，往往也是在最后被人啃了一口，错失了「金萝卜」。</p><p>往往这个时候，我们需要根据怪物的行进路线，果断拆除、变卖怪物已经经过，且再也无法攻击到怪物的炮塔。哪怕这些炮塔在之前的很多波中曾立下汗马功劳。</p><p>只有这样，我们才能获得更多的资金，修建更多高级的炮塔。并将所有火力集中于一点，最后克敌制胜。</p><p>所谓有舍有得，如果我们不牺牲一部分的炮塔，最终等待我们的将是全盘失败。也只有舍，才会有所得，才能换得最终的胜利。</p><p>对于公司来说，经常会有眼前的一些小利和公司的长远发展的利益相矛盾。而大多数的中国公司选择了眼前的小利，因为舍不得那点蝇头小利，这也是为什么中国鲜有百年老店的原因。</p><p>我不奢求我们的公司能成为一个享誉全球的百年老字号，但是希望我们能明白舍得的真谛。想清楚自己想要什么，不因利小而图之，真正做到有舍有得。</p><p>做人又何尝不是如此呢？🙂</p>]]></content>
      
      
      <categories>
          
          <category> Startup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Startup </tag>
            
            <tag> Carrot Fantasy </tag>
            
            <tag> Company </tag>
            
            <tag> Game </tag>
            
            <tag> Management </tag>
            
            <tag> Opinion </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 macOS 下用 Bamboo 实现可持续集成</title>
      <link href="/2017/02/05/continuous-integration-with-bamboo-and-xcode-under-macos/"/>
      <url>/2017/02/05/continuous-integration-with-bamboo-and-xcode-under-macos/</url>
      
        <content type="html"><![CDATA[<img src="/2017/02/05/continuous-integration-with-bamboo-and-xcode-under-macos/xcode_8.2.1.png" class="" title="Xcode 8.2.1"><p>几经磨难以后，终于<a href="../../../../2017/01/11/running-macos-as-kvm-guest">在 KVM 中跑起了 macOS 虚拟机</a>。</p><p>当初答应过大家会做一个自动化编译的后记，说到做到。还是老样子，继续使用 <a href="https://www.atlassian.com/">Atlassian</a> 全家桶配套的 <a href="https://www.atlassian.com/software/bamboo">Bamboo</a> 来做可持续集成。</p><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在进入正题之前，我们需要做以下的准备工作：</p><ul><li>安装 Xcode</li><li>安装 Brew</li><li>安装 Ruby</li><li>安装 Shenzhen</li></ul><h3 id="安装-Xcode"><a href="#安装-Xcode" class="headerlink" title="安装 Xcode"></a>安装 Xcode</h3><p>这个没有什么好说的了，Mac App Store 直接下载安装。如果是公共服务器，不想用自己的 Apple ID 登录的话，也可以登录 Apple Developer 网站下载。</p><p>Stack Overflow 有个不错的回答，大家可以参考下：<a href="http://stackoverflow.com/questions/10335747/how-to-download-xcode-4-5-6-7-8-and-get-the-dmg-or-xip-file?answertab=votes#tab-top">http://stackoverflow.com/questions/10335747/how-to-download-xcode-4-5-6-7-8-and-get-the-dmg-or-xip-file?answertab=votes#tab-top</a></p><h3 id="安装-Brew"><a href="#安装-Brew" class="headerlink" title="安装 Brew"></a>安装 Brew</h3><p>Brew 也介绍过好多次了，不了解的同学可以<a href="../../../../2015/02/24/enable-zsh-completion-of-brew-under-mac-os-x">看这里</a>。</p><p>一行命令搞掂。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="安装-Ruby"><a href="#安装-Ruby" class="headerlink" title="安装 Ruby"></a>安装 Ruby</h3><p>为了不破坏系统自带的 Ruby，我还是习惯性安装一个新版本的，另外升级什么的也比较方便。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ brew install <span class="keyword">ruby</span></span><br><span class="line">$ <span class="keyword">ruby</span> -v</span><br><span class="line"><span class="keyword">ruby</span> <span class="number">2.4</span>.<span class="number">0</span>p0 (<span class="number">2016</span>-<span class="number">12</span>-<span class="number">24</span> revision <span class="number">57164</span>) [x86_64-darwin16]</span><br></pre></td></tr></table></figure><h3 id="更新-Ruby-Gem-镜像"><a href="#更新-Ruby-Gem-镜像" class="headerlink" title="更新 Ruby Gem 镜像"></a>更新 Ruby Gem 镜像</h3><p>官方的镜像经常无法访问或者出现各种各样的异常，所以使用 <a href="http://gems.ruby-china.org/">Ruby China</a> 的镜像就好了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ gem sources --add https://gems.ruby-china.org/ --remove https://rubygems.org/</span><br><span class="line">$ gem sources -l</span><br><span class="line">*** CURRENT SOURCES ***</span><br><span class="line"></span><br><span class="line">https://gems.ruby-china.org</span><br></pre></td></tr></table></figure><blockquote><p>今天写文章才发现，原来的<a href="https://ruby.taobao.org/">大阿里淘宝镜像</a>也合并到 Ruby China 了，有意思。</p></blockquote><h3 id="安装-Shenzhen"><a href="#安装-Shenzhen" class="headerlink" title="安装 Shenzhen"></a>安装 Shenzhen</h3><p><a href="https://github.com/nomad/shenzhen">Shenzhen</a> 并不是我们理解的深圳市，而是一个基于 Xcode 6 API 的命令行编译工具。嗯，好像 Xcode 6 是有点旧了……</p><p>写这篇文章的时候发现了一个新的叫做 <a href="https://github.com/fastlane/fastlane/tree/master/gym">gym</a> 的东东，看来稍后要有新的东西研究了，毕竟现在都开始往 Swift 3 迁移了。似乎 <code>Shenzhen</code> 并不能很好的支持一些新的特性了。</p><p>安装依然很简单很粗暴：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ gem install shenzhen</span><br><span class="line">$ ipa --version</span><br><span class="line">ipa 0.14.3</span><br></pre></td></tr></table></figure><h2 id="自动化编译"><a href="#自动化编译" class="headerlink" title="自动化编译"></a>自动化编译</h2><p>这个步骤比较啰嗦和繁琐，但是基本上都是基于 Apple 的要求。</p><p>简单说，就是参考其他文章生成签名的证书或者是导入已有证书。</p><p>然后打开需要自动化编译的项目，配置好 Team 和 Bundle ID。</p><p>有了 <code>Shenzhen</code> 这个工具，我们只需要一个命令行就可以解决编译的问题了。</p><p>命令行进入项目目录，运行 <code>ipa build</code> 命令来编译 iOS App：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> project</span><br><span class="line">$ ipa build</span><br><span class="line">Successfully built:</span><br><span class="line">/Users/builder/project/Project.ipa</span><br></pre></td></tr></table></figure><p>就是这么简单，就可以命令行编译 iOS 的应用了。</p><h2 id="自动启动-Bamboo-Agent"><a href="#自动启动-Bamboo-Agent" class="headerlink" title="自动启动 Bamboo Agent"></a>自动启动 Bamboo Agent</h2><p>最后是配置 Bamboo Agent，好让 Bamboo Server 可以把任务发到 Mac 上编译。</p><p>之前都是先启动好 Mac，然后登录，然后开终端，手动运行 Bamboo Agent，但是这个真的是太傻缺了。</p><p>所以新搭建的环境，要再自动化一点。看了下文章，编写了如下配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">plist</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//Apple Computer//DTD PLIST 1.0//EN&quot;</span> <span class="string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">string</span>&gt;</span>com.atlassian.bamboo-agent<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">string</span>&gt;</span>/Users/builder/bamboo-agent-home/bin/bamboo-agent.sh<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">string</span>&gt;</span>console<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>RunAtLoad<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>ServiceDescription<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">string</span>&gt;</span>Atlassian Bamboo Agent for macOS<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">   &lt;key&gt;StandardErrorPath&lt;/key&gt;</span></span><br><span class="line"><span class="comment">   &lt;string&gt;/Users/builder/bamboo-agent-home/logs/bamboo-agent.err&lt;/string&gt;</span></span><br><span class="line"><span class="comment">   &lt;key&gt;StandardOutPath&lt;/key&gt;</span></span><br><span class="line"><span class="comment">   &lt;string&gt;/Users/builder/bamboo-agent-home/logs/bamboo-agent.out&lt;/string&gt;</span></span><br><span class="line"><span class="comment">   --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>KeepAlive<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>UserName<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">string</span>&gt;</span>builder<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>SessionCreate<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将该文件保存为 <code>com.atlassian.bamboo-agent.plist</code> 便可，当然也可以是你自己喜欢的名字。</p><blockquote><p>注意：这里的 <code>SessionCreate</code> 一定要加，否则 <code>security cms</code> 无法提取 provisioning 文件中的信息，一直报 write permission 错误，导致无法正确签名，这里查了好久。<br>另外注释了两个 log 输出，因为 Bamboo Server 本身也会记录，有需要的可以自行打开。</p></blockquote><p>在设置守护进程之前，记得务必要先用 <code>builder</code> 用户单独运行一次 Bamboo Agent，以便生成用户目录下的 <code>bamboo-agent-home</code> 目录。相关的操作直接按照 Bamboo Server 上 Remote Agent 安装说明一步一步操作就好了。</p><p>最后把写好的配置文件扔到系统守护进程目录里面，并启动之：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">mv</span> com.atlassian.bamboo-agent.plist /Library/LaunchDaemons/</span><br><span class="line">$ sudo <span class="built_in">chown</span> root:wheel /Library/LaunchDaemons/com.atlassian.bamboo-agent.plist</span><br><span class="line">$ sudo launchctl load /Library/LaunchDaemons/com.atlassian.bamboo-agent.plist</span><br></pre></td></tr></table></figure><p>检查一下看看是不是已经在运行了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ps aux | grep bamboo</span><br><span class="line">builder  43  0.0  0.1  2442612  2324  ??  Ss  11:55AM  0:00.03 /bin/sh /Users/builder/bamboo-agent-home/bin/bamboo-agent.sh console</span><br></pre></td></tr></table></figure><p>一切正常，在 Bamboo Server 上配置一个 Plan，运行一下编译，成功生成 IPA 文件，收工。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://confluence.atlassian.com/bamkb/configuring-bamboo-to-start-automatically-on-startup-on-mac-os-x-302812729.html">Configuring Bamboo to start automatically on startup on Mac OS X</a></li><li><a href="http://mgrebenets.github.io/mobile%20ci/2015/02/01/bamboo-remote-agent">Bamboo Remote Agent on Mac OS X</a></li><li><a href="http://stackoverflow.com/questions/6827874/missing-certificates-and-keys-in-the-keychain-while-using-jenkins-hudson-as-cont/9482707#9482707">Missing certificates and keys in the keychain while using Jenkins&#x2F;Hudson as Continuous Integration for iOS and Mac development</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby </tag>
            
            <tag> Brew </tag>
            
            <tag> Xcode </tag>
            
            <tag> macOS </tag>
            
            <tag> Bamboo </tag>
            
            <tag> CI </tag>
            
            <tag> Continuous Integration </tag>
            
            <tag> Git </tag>
            
            <tag> macOS Sierra </tag>
            
            <tag> Gem </tag>
            
            <tag> Shenzhen </tag>
            
            <tag> Xcode 8.2.1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 KVM 虚拟机中运行 macOS 系统</title>
      <link href="/2017/01/11/running-macos-as-kvm-guest/"/>
      <url>/2017/01/11/running-macos-as-kvm-guest/</url>
      
        <content type="html"><![CDATA[<img src="/2017/01/11/running-macos-as-kvm-guest/sierra.jpg" class="" title="macOS Sierra"><p>之前介绍过如何<a href="../../../../2017/01/06/install-windows-under-ubuntu-and-kvm">在 Ubuntu 系统和 KVM 中安装 Windows 系统</a>，当时就说了，希望有机会能把 macOS 也给虚拟化了，这样就完美了。今天这篇文章就是解决这个问题的。</p><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>开始之前，你需要做好以下的准备工作：</p><ul><li>一台可以正常工作的 Mac 电脑</li><li>一台装好了 KVM 的 Linux 主机</li><li>下载好了的 macOS 安装包</li><li>一颗不怕折腾的心</li></ul><p>首先参考 <a href="https://github.com/kholia">Dhiru Kholia</a> 的方式，获取一份代码先：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git<span class="keyword">@github</span>.<span class="attribute">com</span>:kholia/OSX-KVM.git</span><br><span class="line">Cloning into <span class="string">&#x27;OSX-KVM&#x27;</span>...</span><br><span class="line"><span class="attribute">remote</span>: Counting <span class="attribute">objects</span>: <span class="number">28</span>, done.</span><br><span class="line"><span class="attribute">remote</span>: Total <span class="number">28</span> (delta <span class="number">0</span>), reused <span class="number">0</span> (delta <span class="number">0</span>), pack-reused <span class="number">28</span></span><br><span class="line">Receiving <span class="attribute">objects</span>: <span class="number">100%</span> (<span class="number">28</span>/<span class="number">28</span>), <span class="number">2.62</span> MiB | <span class="number">98.00</span> KiB/s, done.</span><br><span class="line">Resolving <span class="attribute">deltas</span>: <span class="number">100%</span> (<span class="number">1</span>/<span class="number">1</span>), done.</span><br></pre></td></tr></table></figure><p>当然，如果你没有 Git 也可以<a href="https://github.com/kholia/OSX-KVM/archive/master.zip">直接下载 ZIP 压缩包</a>。</p><h2 id="创建-ISO-镜像"><a href="#创建-ISO-镜像" class="headerlink" title="创建 ISO 镜像"></a>创建 ISO 镜像</h2><p>虚拟机是无法识别 Apple 的 DMG 文件的，所以我们需要在 Mac App Store 获取的 macOS Installer 的基础上，生成一个可以在虚拟机中启动的 ISO 镜像。</p><p>如果 <strong>macOS Sierra</strong> 已经下载好了的话，我们直接执行下面的命令就可以生成一个安装光盘镜像了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo ./create_install_iso.sh</span></span><br></pre></td></tr></table></figure><img src="/2017/01/11/running-macos-as-kvm-guest/create_iso_1.png" class="" title="Create ISO"><img src="/2017/01/11/running-macos-as-kvm-guest/create_iso_2.png" class="" title="Create ISO Done"><p>运行截图如上，程序结束后，会在当前目录生成了一个名为 <code>Install_macOS_Sierra_(OS_X_10.12.2).iso</code> 的光盘镜像文件。</p><p>把这个文件复制到 KVM 服务器，这一步就算是完成了。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avP Install_macOS_Sierra_(OS_X_10.<span class="number">12.2</span>).iso server:<span class="regexp">/path/</span>to<span class="regexp">/iso/</span></span><br></pre></td></tr></table></figure><h2 id="启动虚拟机"><a href="#启动虚拟机" class="headerlink" title="启动虚拟机"></a>启动虚拟机</h2><p>这里就是大坑了，之前折腾了 2 天都是卡在这里，用网上的各种方法一启动，就显示一个 <code>boot:</code> 就没有然后了。</p><p>我们先创建好需要的磁盘镜像 <code>sierra.qcow2</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /path/to/kvm</span><br><span class="line">$ qemu-img create -f qcow2 sierra.qcow2 64G</span><br><span class="line">Formatting <span class="string">&#x27;sierra.qcow2&#x27;</span>, <span class="built_in">fmt</span>=qcow2 size=68719476736 encryption=off cluster_size=65536 lazy_refcounts=off refcount_bits=16</span><br></pre></td></tr></table></figure><p>参考仓库里面的 <code>boot.sh</code> 和 <code>boot-macOS.sh</code>，整理了如下的命令用于首次启动虚拟机：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">kvm-spice -enable-kvm -m 4096 -cpu core2duo,kvm=off \</span><br><span class="line">    -machine pc-q35-2.4 \</span><br><span class="line">    -smp 4,cores=2 \</span><br><span class="line">    -usb -device usb-kbd -device usb-mouse \</span><br><span class="line">    -device isa-applesmc,osk=<span class="string">&quot;ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc&quot;</span> \</span><br><span class="line">    -kernel ./enoch_rev2839_boot \</span><br><span class="line">    -smbios <span class="built_in">type</span>=2 \</span><br><span class="line">    -device ide-drive,bus=ide.2,drive=MacHDD \</span><br><span class="line">    -drive <span class="built_in">id</span>=MacHDD,<span class="keyword">if</span>=none,file=./sierra.qcow2 \</span><br><span class="line">    -vnc 0.0.0.0:0 -k en-us \</span><br><span class="line">    -netdev tap,<span class="built_in">id</span>=net0,ifname=tap0,script=no,downscript=no -device e1000-82545em,netdev=net0,<span class="built_in">id</span>=net0,mac=52:54:00:c9:18:27 \</span><br><span class="line">    -device ide-drive,bus=ide.0,drive=MacDVD \</span><br><span class="line">    -drive <span class="built_in">id</span>=MacDVD,<span class="keyword">if</span>=none,snapshot=on,file=<span class="string">&#x27;/path/to/iso/Install_OS_X_10.11.6_El_Capitan.iso&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：这里我使用了 <strong>OS X El Capitan</strong> 的安装镜像，因为直接使用 <strong>macOS Sierra</strong> 无法调出「磁盘工具」，就算在「语言选择」界面等了多久都无法正常操作。所以最终选择了一个折中的办法，用老版本的镜像启动来初始化硬盘，然后再用新版本的镜像来安装系统。</p><p><strong>OS X El Capitan</strong> 安装光盘的制作方法与 <strong>macOS Sierra</strong> 类似，请参考**「创建 ISO 镜像」**部分。</p></blockquote><h2 id="初始化磁盘"><a href="#初始化磁盘" class="headerlink" title="初始化磁盘"></a>初始化磁盘</h2><p>执行过上述命令后，命令行会一直处于等待状态，这个时候我们需要使用 VNC 远程桌面来完成剩下的操作。</p><blockquote><p>注意：系统自带的 VNC 客户端还有 RealVNC Viewer 都无法正常访问没有密码保护的远程桌面。只有 <a href="http://tigervnc.org/">TigerVNC</a> 才能正常访问，这里也浪费了不少的时间。</p></blockquote><p>正常连接后，可以看到 El Capitan 的欢迎界面：</p><img src="/2017/01/11/running-macos-as-kvm-guest/el_capitan_welcome.jpg" class="" title="El Capitan"><p>接着像正常安装一样，开启「磁盘工具」，初始化磁盘：</p><img src="/2017/01/11/running-macos-as-kvm-guest/disk_utility.jpg" class="" title="Disk Utility"><img src="/2017/01/11/running-macos-as-kvm-guest/disk_utility_1.jpg" class="" title="Disk Utility"><img src="/2017/01/11/running-macos-as-kvm-guest/disk_utility_2.jpg" class="" title="Disk Utility"><p>这样，初始化磁盘的工作就完成了。</p><h2 id="准备启动文件"><a href="#准备启动文件" class="headerlink" title="准备启动文件"></a>准备启动文件</h2><p>其实，虽然是虚拟化 macOS，其实本质上还是运行一个 Hackintosh （黑苹果）。所以，必要的启动文件配置还是需要的。</p><p>好在在制作光盘镜像的时候，一些需要的文件就已经被打包在 ISO 光盘镜像里面了。</p><p>我们只需要打开 Terminal 把需要的文件复制到刚才初始化过的磁盘里面就可以了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp -avP /Extra /Volumes/Macintosh/</span></span><br></pre></td></tr></table></figure><img src="/2017/01/11/running-macos-as-kvm-guest/terminal.jpg" class="" title="Terminal"><img src="/2017/01/11/running-macos-as-kvm-guest/terminal_cp.jpg" class="" title="Terminal"><p>然后我们就可以把虚拟机关闭了。</p><h2 id="安装-macOS-Sierra"><a href="#安装-macOS-Sierra" class="headerlink" title="安装 macOS Sierra"></a>安装 macOS Sierra</h2><p>虚拟机关闭以后，我们换一个命令来执行刚才的启动步骤：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">kvm-spice -enable-kvm -m 4092 -cpu Penryn,kvm=off,vendor=GenuineIntel \</span><br><span class="line">    -machine pc-q35-2.4 \</span><br><span class="line">    -smp 4,cores=2 \</span><br><span class="line">    -usb -device usb-kbd -device usb-mouse \</span><br><span class="line">    -device isa-applesmc,osk=<span class="string">&quot;ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc&quot;</span> \</span><br><span class="line">    -kernel ./enoch_rev2839_boot \</span><br><span class="line">    -smbios <span class="built_in">type</span>=2 \</span><br><span class="line">    -vnc 0.0.0.0:0 -k en-us \</span><br><span class="line">    -device ide-drive,bus=ide.2,drive=MacHDD \</span><br><span class="line">    -drive <span class="built_in">id</span>=MacHDD,<span class="keyword">if</span>=none,file=./sierra.qcow2 \</span><br><span class="line">    -netdev tap,<span class="built_in">id</span>=net0,ifname=tap0,script=no,downscript=no -device e1000-82545em,netdev=net0,<span class="built_in">id</span>=net0,mac=52:54:00:c9:18:27 \</span><br><span class="line">    -device ide-drive,bus=ide.0,drive=MacDVD \</span><br><span class="line">    -drive <span class="built_in">id</span>=MacDVD,<span class="keyword">if</span>=none,snapshot=on,file=<span class="string">&#x27;/path/to/iso/Install_macOS_Sierra_(OS_X_10.12.2).iso&#x27;</span></span><br></pre></td></tr></table></figure><p>其实跟第一次启动虚拟机没有太多的不同，主要的变化是 CPU 的配置还有安装镜像不一样而已。</p><img src="/2017/01/11/running-macos-as-kvm-guest/sierra_install.jpg" class="" title="Sierra Install"><p>安装完成以后提示 <strong>Restart</strong> 到这里基本的安装就算完成了，我们需要关闭虚拟主机，然后再进行下一步。</p><img src="/2017/01/11/running-macos-as-kvm-guest/sierra_restart.jpg" class="" title="Sierra Install"><h2 id="用-Virsh-配置虚拟主机"><a href="#用-Virsh-配置虚拟主机" class="headerlink" title="用 Virsh 配置虚拟主机"></a>用 Virsh 配置虚拟主机</h2><p>参考 <code>libvirt-macOS.xml</code> 生成了如下的 XML 配置文件：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">domain</span> <span class="attr">type</span>=<span class="string">&#x27;kvm&#x27;</span> <span class="attr">xmlns:qemu</span>=<span class="string">&#x27;http://libvirt.org/schemas/domain/qemu/1.0&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>sierra<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span># echo 1 <span class="symbol">&amp;gt;</span> /sys/module/kvm/parameters/ignore_msrs<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">memory</span> <span class="attr">unit</span>=<span class="string">&#x27;KiB&#x27;</span>&gt;</span>4194304<span class="tag">&lt;/<span class="name">memory</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">currentMemory</span> <span class="attr">unit</span>=<span class="string">&#x27;KiB&#x27;</span>&gt;</span>4194304<span class="tag">&lt;/<span class="name">currentMemory</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">vcpu</span> <span class="attr">placement</span>=<span class="string">&#x27;static&#x27;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">vcpu</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">os</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span> <span class="attr">arch</span>=<span class="string">&#x27;x86_64&#x27;</span> <span class="attr">machine</span>=<span class="string">&#x27;pc-q35-2.4&#x27;</span>&gt;</span>hvm<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">kernel</span>&gt;</span>/path/to/kvm/enoch_rev2839_boot<span class="tag">&lt;/<span class="name">kernel</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">os</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">features</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">acpi</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">kvm</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">hidden</span> <span class="attr">state</span>=<span class="string">&#x27;on&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">kvm</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">features</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cpu</span> <span class="attr">mode</span>=<span class="string">&#x27;custom&#x27;</span> <span class="attr">match</span>=<span class="string">&#x27;exact&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">model</span> <span class="attr">fallback</span>=<span class="string">&#x27;allow&#x27;</span>&gt;</span>Penryn<span class="tag">&lt;/<span class="name">model</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">cpu</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">devices</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">emulator</span>&gt;</span>/usr/bin/kvm-spice<span class="tag">&lt;/<span class="name">emulator</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">disk</span> <span class="attr">type</span>=<span class="string">&#x27;file&#x27;</span> <span class="attr">device</span>=<span class="string">&#x27;disk&#x27;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">driver</span> <span class="attr">name</span>=<span class="string">&#x27;qemu&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;qcow2&#x27;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">source</span> <span class="attr">file</span>=<span class="string">&#x27;/path/to/kvm/sierra.qcow2&#x27;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">target</span> <span class="attr">dev</span>=<span class="string">&#x27;sda&#x27;</span> <span class="attr">bus</span>=<span class="string">&#x27;sata&#x27;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">boot</span> <span class="attr">order</span>=<span class="string">&#x27;1&#x27;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">&#x27;drive&#x27;</span> <span class="attr">controller</span>=<span class="string">&#x27;0&#x27;</span> <span class="attr">bus</span>=<span class="string">&#x27;0&#x27;</span> <span class="attr">target</span>=<span class="string">&#x27;0&#x27;</span> <span class="attr">unit</span>=<span class="string">&#x27;0&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">disk</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">interface</span> <span class="attr">type</span>=<span class="string">&#x27;bridge&#x27;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">source</span> <span class="attr">bridge</span>=<span class="string">&#x27;br0&#x27;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">model</span> <span class="attr">type</span>=<span class="string">&#x27;e1000-82545em&#x27;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">&#x27;pci&#x27;</span> <span class="attr">domain</span>=<span class="string">&#x27;0x0000&#x27;</span> <span class="attr">bus</span>=<span class="string">&#x27;0x00&#x27;</span> <span class="attr">slot</span>=<span class="string">&#x27;0x03&#x27;</span> <span class="attr">function</span>=<span class="string">&#x27;0x0&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">interface</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;mouse&#x27;</span> <span class="attr">bus</span>=<span class="string">&#x27;usb&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;keyboard&#x27;</span> <span class="attr">bus</span>=<span class="string">&#x27;usb&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">graphics</span> <span class="attr">type</span>=<span class="string">&#x27;vnc&#x27;</span> <span class="attr">port</span>=<span class="string">&#x27;5911&#x27;</span> <span class="attr">autoport</span>=<span class="string">&#x27;no&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">model</span> <span class="attr">type</span>=<span class="string">&#x27;vmvga&#x27;</span> <span class="attr">vram</span>=<span class="string">&#x27;16384&#x27;</span> <span class="attr">heads</span>=<span class="string">&#x27;1&#x27;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">address</span> <span class="attr">type</span>=<span class="string">&#x27;pci&#x27;</span> <span class="attr">domain</span>=<span class="string">&#x27;0x0000&#x27;</span> <span class="attr">bus</span>=<span class="string">&#x27;0x00&#x27;</span> <span class="attr">slot</span>=<span class="string">&#x27;0x02&#x27;</span> <span class="attr">function</span>=<span class="string">&#x27;0x0&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">memballoon</span> <span class="attr">model</span>=<span class="string">&#x27;none&#x27;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">devices</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">qemu:commandline</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">qemu:arg</span> <span class="attr">value</span>=<span class="string">&#x27;-device&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">qemu:arg</span> <span class="attr">value</span>=<span class="string">&#x27;isa-applesmc,osk=ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">qemu:arg</span> <span class="attr">value</span>=<span class="string">&#x27;-smbios&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">qemu:arg</span> <span class="attr">value</span>=<span class="string">&#x27;type=2&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">qemu:arg</span> <span class="attr">value</span>=<span class="string">&#x27;-k&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">qemu:arg</span> <span class="attr">value</span>=<span class="string">&#x27;en-us&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">qemu:arg</span> <span class="attr">value</span>=<span class="string">&#x27;-cpu&#x27;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">qemu:arg</span> <span class="attr">value</span>=<span class="string">&#x27;Penryn,vendor=GenuineIntel&#x27;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">qemu:commandline</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">domain</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面这个是配置文件，比如保存为 <code>sierra.xml</code>，然后用 <code>virsh</code> 注册一个新的虚拟机：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ virsh define sierra.xml</span><br><span class="line">Domain sierra defined from sierra.xml</span><br><span class="line"></span><br><span class="line">$ virsh start sierra</span><br><span class="line">Domain sierra started</span><br><span class="line"></span><br><span class="line">$ virsh list</span><br><span class="line"> Id    Name                           State</span><br><span class="line">----------------------------------------------------</span><br><span class="line">  1    sierra                         running</span><br></pre></td></tr></table></figure><p>接下来，用老方法映射一个本地端口来 VNC：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -L 5911:127.0.0.1:5911 server</span><br></pre></td></tr></table></figure><p>重新启动以后的效果如下图：</p><img src="/2017/01/11/running-macos-as-kvm-guest/sierra_desktop.jpg" class="" title="Sierra Desktop"><p>最后，我们再把虚拟机设置为开启自动启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ virsh autostart sierra</span><br><span class="line">Domain sierra marked as autostarted</span><br></pre></td></tr></table></figure><p>设置好远程桌面和远程登录以后，就再也不用使用 VNC 了，完美！收工！</p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> macOS </tag>
            
            <tag> KVM </tag>
            
            <tag> QEMU </tag>
            
            <tag> Ubuntu 16.04 </tag>
            
            <tag> VM </tag>
            
            <tag> Virtualization </tag>
            
            <tag> macOS Sierra </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Windows 下用 Bamboo 和 IAR 实现持续集成</title>
      <link href="/2017/01/09/continuous-integration-with-bamboo-and-iar-under-windows/"/>
      <url>/2017/01/09/continuous-integration-with-bamboo-and-iar-under-windows/</url>
      
        <content type="html"><![CDATA[<img src="/2017/01/09/continuous-integration-with-bamboo-and-iar-under-windows/continuous_integration.jpg" class="" title="Continuous Integration"><p>前两天写了篇名为<a href="../../../../2017/01/06/install-windows-under-ubuntu-and-kvm">《在 Ubuntu 的 KVM 中安装 Windows 系统》</a>的文章，主要介绍了如何在 Linux 平台上运行 Windows 虚拟主机。</p><p>而搭建这一虚拟机的主要目的，就是为了完成今天这篇文章所介绍的内容：<strong>可持续化集成</strong>。</p><span id="more"></span><p>Previously on Tommy’s Blog 有提到，我们使用的是 <a href="https://www.atlassian.com/">Atlassian</a> 全家桶，因此配套的 CI 系统就是 <a href="https://www.atlassian.com/software/bamboo">Bamboo</a> 啦。</p><h2 id="安装-Bamboo-Agent"><a href="#安装-Bamboo-Agent" class="headerlink" title="安装 Bamboo Agent"></a>安装 Bamboo Agent</h2><p>众所周知，IAR 只能跑在 Windows 下面，所以我们需要配置一个能跟 Bamboo 系统联动的 Bamboo Agent。大家可以参考官方的 <a href="https://confluence.atlassian.com/bamboo/bamboo-remote-agent-installation-guide-289276832.html">Bamboo remote agent installation guide</a>，里面有详细的 Bamboo Agent 安装方法介绍。</p><p>在安装之前我们还需要先去 Java 官方的 Oracle 网站<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">下载 JDK</a>，因为 Atlassian 家的东西都是跑在 Java 上面的。当前 JDK 最新的版本是 <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">JDK 8u111</a>。选择对应架构的版本，比如 <code>x86</code>，然后一路 Next 就安装好了。</p><p>为了重启以后不用人工启动 Bamboo Agent 服务，我们还需要在最后加一个小参数 <code>installntservice</code>，这样就可以把 Bamboo Agent 注册为系统服务了。像这样：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar atlassian-bamboo-agent-installer-<span class="number">5.13</span>.<span class="number">2</span>.jar https:<span class="regexp">//</span>bamboo.domain.ltd<span class="regexp">/agentServer/</span> installntservice</span><br></pre></td></tr></table></figure><blockquote><p>注意：该命令必须要在管理员权限下执行，否则会报权限错误！</p></blockquote><h2 id="安装-Babun"><a href="#安装-Babun" class="headerlink" title="安装 Babun"></a>安装 Babun</h2><p>因为 Windows 下默认没有 Git 之类的工具，更不要说 OpenSSH 类的客户端了。所以要想好好的把 Bamoo Agent 跑起来，Git 是不可或缺的，毕竟我们总要取代码仓库的代码不是？</p><p><a href="http://babun.github.io/">Babun</a> 是个什么鬼？参考官方的 feature list，Babun 是：</p><ul><li>Pre-configured Cygwin with a lot of addons</li><li>Silent command-line installer, no admin rights required</li><li>pact - advanced package manager (like apt-get or yum)</li><li>xTerm-256 compatible console</li><li>HTTP(s) proxying support</li><li>Plugin-oriented architecture</li><li>Pre-configured git and shell</li><li>Integrated oh-my-zsh</li><li>Auto update feature</li><li>“Open Babun Here” context menu entry</li></ul><p>说人话和中文就是：一个好用的 Windows 下的基于 Cygwin 的 Linux-like 命令行工具套件。</p><p>安装方法也很简单，下载压缩包，解压缩，然后运行 <code>install.bat</code> 搞掂。</p><p>默认安装在用户目录里面的 <code>.babun</code> 目录内，稍后我们会用到。</p><img src="/2017/01/09/continuous-integration-with-bamboo-and-iar-under-windows/babun.png" class="" title="Babun"><p>安装好的 Babun 如上图所示，已经内置好了 Git 和 OpenSSH，我们就不需要再单独安装这 2 个软件了。我的用户名是 <code>Builder</code>，所以 Babun 的安装目录是：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">C:</span>\Users\Builder\.babun</span><br></pre></td></tr></table></figure><h2 id="IAR-命令行编译"><a href="#IAR-命令行编译" class="headerlink" title="IAR 命令行编译"></a>IAR 命令行编译</h2><p>本来以为 IAR 的命令行编译会比较麻烦，还要重新写 <code>Makefile</code> 什么的，然而是我多虑了。官方在 2013 年就已经给出了标准答案：<a href="https://www.iar.com/support/tech-notes/general/build-from-the-command-line/">Technical Note 47884</a></p><p>本身我们用的就是 <code>IAR Embedded Workbench IDE</code>，所以保存的文件会有 <code>.ewp</code> 后缀的项目文件。只需要进入项目目录，运行如下命令就可以命令行编译了：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">installation </span><span class="keyword">dir&gt;\common\bin\IarBuild.exe </span>test.ewp -<span class="keyword">build </span><span class="built_in">Debug</span> -log all</span><br></pre></td></tr></table></figure><p>其中 <code>-build Debug</code> 相当于传统意义上的 <code>make clean; make Debug</code>。<code>-log all</code> 表示 Log 所有信息，这个可要可不要。</p><blockquote><p>需要注意的是，这里的 <code>Debug</code> 并不一定是我们理解的传统意义上的 Debug，而是一个 Configuration 而已，具体的参数需要与实际项目配置相匹配，否则无法正常编译。</p></blockquote><p>举个栗子：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">C</span>:\Users\Builder\Desktop\BLE-CC254x-<span class="number">1.4.2.2</span>\Projects\ble\HIDEmuKbd\CC2540DB&gt;<span class="string">&quot;C:\Program Files (x86)\IAR Systems\Embedded Workbench 7.3\common\bin\IarBuild.exe&quot;</span> HIDEmuKbd.ewp -build <span class="string">&quot;CC2540DK-MINI Keyfob Slave&quot;</span></span><br><span class="line"></span><br><span class="line">     <span class="attribute">IAR</span> Command Line Build Utility V<span class="number">7.3.2.403</span>7</span><br><span class="line">     <span class="attribute">Copyright</span> <span class="number">2002</span>-<span class="number">2015</span> IAR Systems AB.</span><br><span class="line"></span><br><span class="line"><span class="attribute">Changed</span> project file will force a full rebuild: C:\Users\Builder\Desktop\BLE-CC254x-<span class="number">1.4.2.2</span>\Projects\ble\HIDEmuKbd\CC2540DB\HIDEmuKbd.ewp</span><br><span class="line"><span class="attribute">Building</span> configuration: HIDEmuKbd - CC2540DK-MINI Keyfob Slave</span><br><span class="line"><span class="attribute">Updating</span> build tree...</span><br><span class="line"></span><br><span class="line"><span class="attribute">0</span>  file(s) deleted.</span><br><span class="line"><span class="attribute">Updating</span> build tree...</span><br><span class="line"><span class="attribute">battservice</span>.c</span><br><span class="line"><span class="attribute">devinfoservice</span>.c</span><br><span class="line"><span class="attribute">gap</span>.c</span><br><span class="line"><span class="attribute">gapbondmgr</span>.c</span><br><span class="line"><span class="attribute">gatt_uuid</span>.c</span><br><span class="line"><span class="attribute">gattservapp_util</span>.c</span><br><span class="line"><span class="attribute">hal_adc</span>.c</span><br><span class="line"><span class="attribute">hal_aes</span>.c</span><br><span class="line"><span class="attribute">hal_dma</span>.c</span><br><span class="line"><span class="attribute">hal_drivers</span>.c</span><br><span class="line"><span class="attribute">hal_flash</span>.c</span><br><span class="line"><span class="attribute">hal_key</span>.c</span><br><span class="line"><span class="attribute">hal_lcd</span>.c</span><br><span class="line"><span class="attribute">hal_led</span>.c</span><br><span class="line"><span class="attribute">hal_sleep</span>.c</span><br><span class="line"><span class="attribute">hal_startup</span>.c</span><br><span class="line"><span class="attribute">hal_timer</span>.c</span><br><span class="line"><span class="attribute">hal_uart</span>.c</span><br><span class="line"><span class="attribute">hiddev</span>.c</span><br><span class="line"><span class="attribute">hidemukbd</span>.c</span><br><span class="line"><span class="attribute">hidemukbd_Main</span>.c</span><br><span class="line"><span class="attribute">hidkbdservice</span>.c</span><br><span class="line"><span class="attribute">npi</span>.c</span><br><span class="line"><span class="attribute">OnBoard</span>.c</span><br><span class="line"><span class="attribute">OSAL</span>.c</span><br><span class="line"><span class="attribute">osal_bufmgr</span>.c</span><br><span class="line"><span class="attribute">osal_cbtimer</span>.c</span><br><span class="line"><span class="attribute">OSAL_ClockBLE</span>.c</span><br><span class="line"><span class="attribute">OSAL_hidemukbd</span>.c</span><br><span class="line"><span class="attribute">OSAL_Memory</span>.c</span><br><span class="line"><span class="attribute">OSAL_PwrMgr</span>.c</span><br><span class="line"><span class="attribute">osal_snv</span>.c</span><br><span class="line"><span class="attribute">OSAL_Timers</span>.c</span><br><span class="line"><span class="attribute">peripheral</span>.c</span><br><span class="line"><span class="attribute">scanparamservice</span>.c</span><br><span class="line"><span class="attribute">Linking</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">Total</span> number of errors: <span class="number">0</span></span><br><span class="line"><span class="attribute">Total</span> number of warnings: <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">C</span>:\Users\Builder\Desktop\BLE-CC254x-<span class="number">1.4.2.2</span>\Projects\ble\HIDEmuKbd\CC2540DB&gt;dir <span class="string">&quot;CC2540DK-MINI Keyfob Slave\Exe&quot;</span></span><br><span class="line"> <span class="attribute">Volume</span> in drive C has no label.</span><br><span class="line"> <span class="attribute">Volume</span> Serial Number is EEF7-E82D</span><br><span class="line"></span><br><span class="line"> <span class="attribute">Directory</span> of C:\Users\Builder\Desktop\BLE-CC254x-<span class="number">1.4.2.2</span>\Projects\ble\HIDEmuKbd\CC2540DB\CC2540DK-MINI Keyfob Slave\Exe</span><br><span class="line"></span><br><span class="line"><span class="attribute">01</span>/<span class="number">09</span>/<span class="number">2017</span>  <span class="number">02</span>:<span class="number">58</span> PM    &lt;DIR&gt;          .</span><br><span class="line"><span class="attribute">01</span>/<span class="number">09</span>/<span class="number">2017</span>  <span class="number">02</span>:<span class="number">58</span> PM    &lt;DIR&gt;          ..</span><br><span class="line"><span class="attribute">01</span>/<span class="number">09</span>/<span class="number">2017</span>  <span class="number">02</span>:<span class="number">58</span> PM         <span class="number">1</span>,<span class="number">493</span>,<span class="number">621</span> HIDEmuKbd.d51</span><br><span class="line"><span class="attribute">01</span>/<span class="number">09</span>/<span class="number">2017</span>  <span class="number">02</span>:<span class="number">58</span> PM           <span class="number">332</span>,<span class="number">658</span> HidEmuKbd.hex</span><br><span class="line">               <span class="attribute">2</span> File(s)      <span class="number">1</span>,<span class="number">826</span>,<span class="number">279</span> bytes</span><br><span class="line">               <span class="attribute">2</span> Dir(s)  <span class="number">21</span>,<span class="number">357</span>,<span class="number">543</span>,<span class="number">424</span> bytes free</span><br><span class="line"></span><br><span class="line"><span class="attribute">C</span>:\Users\Builder\Desktop\BLE-CC254x-<span class="number">1.4.2.2</span>\Projects\ble\HIDEmuKbd\CC2540DB&gt;</span><br></pre></td></tr></table></figure><h2 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h2><p>有了 Bamboo Agent 有了 Git，而且 IAR 命令行也编译通过了。那么 Bamboo 自动化应该可以做了吧？No no no, that’s too young too simple, sometimes naive.</p><p>当你运行 Bamboo 编译的时候，会出现类似无法 fork，git 工作不正常的错误，<code>failed with code 128</code>。这个就是环境变量设置的问题了。</p><p>打开系统环境变量设置，并在用户的环境变量中增加：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="name">C</span>:\Users\Builder\.babun\cygwin\bin</span><br></pre></td></tr></table></figure><p>这样当前用户才能直接在系统级别访问到 Git 和 OpenSSH 等工具，如图：</p><img src="/2017/01/09/continuous-integration-with-bamboo-and-iar-under-windows/ev1.png" class="" title="Environment Variables"><img src="/2017/01/09/continuous-integration-with-bamboo-and-iar-under-windows/ev2.png" class="" title="Edit environment variables"><p>接下来我们需要打开「系统服务」，把 <code>Bamboo Agent</code> 的运行账号从系统修改为当前用户 <code>Builder</code>：</p><img src="/2017/01/09/continuous-integration-with-bamboo-and-iar-under-windows/service.png" class="" title="Services"><p>再次运行 Bamboo 编译，发现环境变量已经变成了：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Path=<span class="name">C</span>:\Users\Builder\AppData\Local\Microsoft\WindowsApps;<span class="name">C</span>:\Users\Builder\.babun;<span class="name">C</span>:\Users\Builder\.babun\cygwin\bin</span><br></pre></td></tr></table></figure><p>并且也可以正常编译和输出项目文件了。</p><p>这里也参考了 Atlassian 官方的文档：<a href="https://confluence.atlassian.com/bamkb/bamboo-does-not-pick-up-the-path-environment-variable-correctly-323982768.html">Bamboo does not pick up the Path environment variable correctly</a>，但是并没有使用官方推荐的 Work around，而是使用了上述的方法。</p><h2 id="Windows-自动登录"><a href="#Windows-自动登录" class="headerlink" title="Windows 自动登录"></a>Windows 自动登录</h2><p>Windows 在重启后，默认停留在登录界面，这个时候远程桌面什么的都是不可用的。为了方便远程管理，我们还要多做一个步骤，那就是自动登录。</p><p>这个也很简单，在下面的 Cortana 中输入：<code>netplwiz</code></p><img src="/2017/01/09/continuous-integration-with-bamboo-and-iar-under-windows/netplwiz.png" class="" title="netplwiz"><p>启动 <code>User Accounts</code>，选中要登录的账号，去除登录电脑需要用户名和密码前面的复选框，输入账号和密码就可以了，如图：</p><img src="/2017/01/09/continuous-integration-with-bamboo-and-iar-under-windows/ua.png" class="" title="User Accounts"><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://confluence.atlassian.com/bamboo/bamboo-remote-agent-installation-guide-289276832.html">Bamboo remote agent installation guide</a></li><li><a href="https://confluence.atlassian.com/bamboo/additional-remote-agent-options-436044733.html">Additional remote agent options</a></li><li><a href="https://confluence.atlassian.com/bamkb/bamboo-does-not-pick-up-the-path-environment-variable-correctly-323982768.html">Bamboo does not pick up the Path environment variable correctly</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Windows 10 </tag>
            
            <tag> Babun </tag>
            
            <tag> Bamboo </tag>
            
            <tag> CI </tag>
            
            <tag> Continuous Integration </tag>
            
            <tag> Git </tag>
            
            <tag> IAR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>终于可以使用独立的 ADB 和 Fastboot 工具了</title>
      <link href="/2017/01/08/now-we-can-use-adb-and-fastboot-as-standalone-tools/"/>
      <url>/2017/01/08/now-we-can-use-adb-and-fastboot-as-standalone-tools/</url>
      
        <content type="html"><![CDATA[<img src="/2017/01/08/now-we-can-use-adb-and-fastboot-as-standalone-tools/adb_fastboot.jpg" class="" title="ADB &amp; Fastboot"><p>在经历了 N 久的等待之后，Google 终于良心发现，发布了可以独立于 Android SDK 使用的 ADB 和 Fastboot 工具。</p><p>大部分安卓用户都或多或少的知道 ROOT 和刷 ROM 这 2 个概念，甚至是 CPU 超频什么的。然而要完成这样的工作，用户首先需要先下载 Android SDK，才能获得需要的 ADB 和 Fastboot。</p><span id="more"></span><p>虽然有的网站提供了单独的 ADB 和 Fastboot 文件，但是我一直不屑于使用这种第三方提供的二进制文件，主要有几个考虑：</p><ul><li>安全没有保障，二进制文件可能被恶意篡改过</li><li>工具版本过旧，无法支持最新的设备，或者无法连接设备</li><li>大多只提供 Windows 版本，没有 macOS 和 Linux 版本</li><li>在装有 Android SDK 的机子上偶尔出现些奇怪的问题</li></ul><p>原本以为是 Google 良心发现，又或者是被人吐槽的太多了，所以单独发布了这两个工具。而结果其实是 Google 自己的工程师顶不顺了，所以发布出来的。</p><p>从 Google 工程师 Elliott Hughes 发布在他自己 Google+ 上的 <a href="https://plus.google.com/+ElliottHughes/posts/U3B6H3Sejvv">Post</a> 可以得知，他给出的 3 个不同平台的工具软件都是跟最新版 Android SDK 同步的。也就是说，对于普通用户来说，原来需要下载 1.6GB+ 的 SDK，现在只需要下载 3-4MB 的 Platform Tools 就可以了，简直不能更赞啦！</p><p>对于很多 Android 脑残粉来说，这 2 个工具可能早就装好了，但是对于新手来说，这无疑是个福音。尤其是我帮朋友弄手机的时候，再也不用下载一个完整的 SDK 啦。而且还一定可以保证是官方出品，而不是一些来路不明的冒牌货。</p><p>最后，附上下载地址：</p><ul><li>Mac: <a href="https://dl.google.com/android/repository/platform-tools-latest-darwin.zip">https://dl.google.com/android/repository/platform-tools-latest-darwin.zip</a></li><li>Linux: <a href="https://dl.google.com/android/repository/platform-tools-latest-linux.zip">https://dl.google.com/android/repository/platform-tools-latest-linux.zip</a></li><li>Windows: <a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip">https://dl.google.com/android/repository/platform-tools-latest-windows.zip</a></li></ul><p>不是我歧视 Windows 用户，原文作者的 Post 就是这个顺序，真的不关我事。😂</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Development </tag>
            
            <tag> Tool </tag>
            
            <tag> Google </tag>
            
            <tag> ADB </tag>
            
            <tag> Fastboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Ubuntu 的 KVM 中安装 Windows 系统</title>
      <link href="/2017/01/06/install-windows-under-ubuntu-and-kvm/"/>
      <url>/2017/01/06/install-windows-under-ubuntu-and-kvm/</url>
      
        <content type="html"><![CDATA[<img src="/2017/01/06/install-windows-under-ubuntu-and-kvm/virtualization.png" class="" title="Virtualization"><h2 id="为什么要折腾-KVM-虚拟机"><a href="#为什么要折腾-KVM-虚拟机" class="headerlink" title="为什么要折腾 KVM 虚拟机"></a>为什么要折腾 KVM 虚拟机</h2><p>最近因为公司的事情，没有太多时间进行写作，就用一篇技术类的文章来凑数吧。</p><p>事情是这样的，我们公司有一个小东西是基于嵌入式的系统开发的，不属于 Android 也不属于 iOS 平台。嗯，这意味着什么呢？这意味着开发这个小东西的语言是 C 语言，而不是 Java, Objective-C 抑或是 Swift。所以我们需要一个 <a href="https://en.wikipedia.org/wiki/Cross_compiler">Cross Compiler</a>，也就是俗称的交叉编译环境来编译这个代码。</p><span id="more"></span><blockquote><p>其实 Xcode 编译出来的 iOS App 也属于交叉编译的范畴。</p></blockquote><p>然鹅，这个交叉编译环境竟然只有 Windows 平台的！其实，好像除了 GCC 之外，好用的交叉编译环境都是 Windows 下面的。估计很多玩嵌入式的同学应该都知道，现在业内用得比较多的也就是 <a href="https://www.keil.com/">Keil</a> 和 <a href="https://www.iar.com/">IAR</a> 系列了。而及其不幸的是，两者都是 Windows 特供的，没有 macOS 或 Linux 版本。</p><p>为什么 Windows 会让我这么得不爽呢？因为平常为了更好的提高工作效率（其实是为了公司的逼格够高），除了不得不使用的行业应用软件必须要跑在 Windows 下的时候，我们只用 Mac 不用 Windows。所以，我们基本上没有闲置和富裕的 Windows 主机，不！是压根就没有，没有什么「基本没有」一说。</p><p>而在服务器端，更不要跟我说什么 Windows Server 云云的。作为一个 macOS 和 Ubuntu 的脑残用户，我是不可能在 <a href="https://en.wikipedia.org/wiki/Bare_metal">Bare metal</a> 上跑一个 Windows Server 的。服务器我们只跑 Linux，别的没兴趣。</p><p>那么问题来了，我们有一套自动化编译系统，也就是大家所熟知的 CI 体系 (Continuous integration)，用的是 <a href="https://www.atlassian.com/">Atlassian</a> 的全家桶：Bitbucket、Bamboo、JIRA 还有 Confluence 什么的，全部跑在 Linux 平台的 Docker 虚拟化容器中。</p><p>现在我们想把这个小东西也自动化编译器来，以便更好地把人力释放出来，也方便未来跟踪和管理每一次 Release 的内容。而第一个要解决的问题就是：我们没有 Windows 的服务器。</p><p>既然现在虚拟化这么流行，那么我们就利用现有的 Ubuntu 服务器虚拟化一个 Windows 好啦，走起！</p><h2 id="啥是-KVM"><a href="#啥是-KVM" class="headerlink" title="啥是 KVM"></a>啥是 KVM</h2><p>KVM 的全称是：<a href="https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine">Kernel-based Virtual Machine</a>，简单一句话概括，就是一个基于 Linux 内核的虚拟化管理系统。</p><p>从 Linux 内核 2.6.20 版本开始就已经集成了该功能。简单理解 Docker 是在应用层的虚拟化，而 KVM 是在系统层的虚拟化。</p><p>区别就是，Docker 虚拟化的内容，必须跟 Host 主机共享内核，也就意味着只能跑 Linux 类系统。</p><p>而 KVM 是整个主机虚拟，所以可以安装不同的操作系统，而不局限于 Linux 本身。等我过段时间抽风的时候，看看能不能在 Ubuntu 上虚拟化个 macOS 出来。这样就不用单独再弄个 Mac 主机来自动化编译 iOS App 了。</p><h2 id="安装-KVM"><a href="#安装-KVM" class="headerlink" title="安装 KVM"></a>安装 KVM</h2><p>我这里使用的是 Ubuntu 16.04 LTS 版本，考虑长期使用和稳定性，基本上只选 LTS 版本，其他版本差别也不太大，参考着做就好了。</p><p>首先是安装 KVM 相关的包文件，因为我的服务器都是命令行，没有安装 X 桌面，所以我加了 <code>--no-install-recommends</code> 参数。不然的话它会安装 <code>virt-viewer</code> 之类的包，而它们的依赖关系中又有 X11 和很多图形图像库，而这些都用不上。但是如果你开启了桌面系统，那么也可以不加该参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install --no-install-recommends qemu-kvm qemu-utils libvirt-bin virtinst cpu-checker</span><br></pre></td></tr></table></figure><p>让我们来验证一下是不是一切 OK</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kvm-ok</span><br><span class="line">INFO: /dev/kvm exists</span><br><span class="line">KVM acceleration can be used</span><br></pre></td></tr></table></figure><p>很好，一切顺利，我们再来弄个桥接网络。其实这个也不是必须的，看你的使用场景。</p><p>KVM 会自己创建一个 virbr0 的桥接网络，但是这个是一个 NAT 的网络，没有办法跟局域网内的其他主机进行通信，所以还是别偷懒，自己建一个桥接网络吧。</p><p>参考配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/network/interfaces</span><br><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># and how to activate them. For more information, see interfaces(5).</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> /etc/network/interfaces.d/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># The loopback network interface</span></span><br><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line"><span class="comment"># The bridged network interface</span></span><br><span class="line">auto br0</span><br><span class="line">iface br0 inet static</span><br><span class="line">    address 1.2.3.4</span><br><span class="line">    netmask 255.255.255.0</span><br><span class="line">    gateway 1.2.3.1</span><br><span class="line">    dns-nameservers 1.2.3.1</span><br><span class="line">    bridge_ports enp9s0</span><br><span class="line">    bridge_stop off</span><br><span class="line">    bridge_fd 0</span><br><span class="line">    bridge_maxwait 0</span><br></pre></td></tr></table></figure><p>重启网络，并验证一下桥接状态：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart networking</span><br><span class="line">$ sudo <span class="keyword">brctl </span><span class="keyword">show</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">bridge </span>name     <span class="keyword">bridge </span>id               STP enabled     interfaces</span><br><span class="line"><span class="keyword">br0 </span>            <span class="number">8000</span>.f079593874d9       no              enp9s0</span><br><span class="line">virbr0          <span class="number">8000</span>.<span class="number">525400087</span>ef2       yes             virbr0-nic</span><br></pre></td></tr></table></figure><p>OK，一切正常，可以开始创建虚拟主机了。</p><h2 id="创建虚拟主机"><a href="#创建虚拟主机" class="headerlink" title="创建虚拟主机"></a>创建虚拟主机</h2><p>KVM 只是完成了第一步，我们还需要创建虚拟主机才可以继续往下走。</p><p>在开始之前，我们要准备好几个东西：</p><ul><li>Windows 安装镜像</li><li><a href="https://fedoraproject.org/wiki/Windows_Virtio_Drivers">Virtio ISO 和软盘镜像</a></li><li>VNC 客户端（macOS 自带）</li></ul><p>我这里使用的是 <a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.126-2/">Virtio 0.1.126-2</a> 版本。操作系统版本是：Ubuntu 16.04.1 LTS。</p><p>一切准备就绪，使用 <code>virt-install</code> 命令来帮助创建虚拟机：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">virt-install \</span><br><span class="line">--name win10 \</span><br><span class="line">--memory 2048 \</span><br><span class="line">--vcpus <span class="attribute">sockets</span>=1,cores=1,threads=2 \</span><br><span class="line"><span class="attribute">--cdrom</span>=/path/to/windows_10.iso \</span><br><span class="line"><span class="attribute">--os-variant</span>=win8.1 \</span><br><span class="line">--disk /path/<span class="keyword">to</span>/win10/win10.qcow2,<span class="attribute">bus</span>=virtio,size=40 \</span><br><span class="line">--disk /path/<span class="keyword">to</span>/virtio/virtio-win-0.1.126_amd64.vfd,<span class="attribute">device</span>=floppy \</span><br><span class="line">--network <span class="attribute">bridge</span>=br0,model=virtio \</span><br><span class="line">--graphics vnc,<span class="attribute">password</span>=Passw0rd,port=5910 \</span><br><span class="line">--hvm \</span><br><span class="line">--virt-type kvm</span><br></pre></td></tr></table></figure><p>基本上配置信息都在上面了，虚拟信息机配置如下：</p><ul><li>2G 内存</li><li>1 个 CPU，1 个核，2 个线程</li><li>1 个 CDROM（Windows 安装光盘）</li><li>40G 硬盘（系统盘）</li><li>1 个软驱（Virtio 驱动）</li><li>在 5910 端口开放一个 VNC 远程桌面</li></ul><p>如果你的命令输入的正确，应该会得到类似的反馈信息：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">Starting</span></span> install...</span><br><span class="line"><span class="function"><span class="title">Creating</span></span> domain...</span><br><span class="line">Domain installation still in progress. Waiting <span class="keyword">for</span> installation to complete.</span><br></pre></td></tr></table></figure><p>简单来说，就是虚拟机已经创建好了，但是因为没有图像界面，所以没有办法下一步了。当我们连接了 VNC 以后，就可以继续往下走了。这个提示只会出现一次，安装好系统以后，不会出现这个启动等待的情况。</p><h2 id="安装-Windows-10"><a href="#安装-Windows-10" class="headerlink" title="安装 Windows 10"></a>安装 Windows 10</h2><p>虽然我们在创建虚拟机的时候，指明了使用 <code>5910</code> 端口来提供 VNC 远程桌面。但是这个端口是不能直接访问的，因为它默认绑定在 <code>127.0.0.1</code> 上，也就是只有本地才能访问。我们需要先把远程的本地端口，映射成本地的端口。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -L <span class="number">5910</span>:<span class="number">127.0.0.1:5910</span> server</span><br></pre></td></tr></table></figure><p>然后在 macOS 下，<code>⌘ + Space</code> 呼叫出 <code>Spotlight</code>，然后输入：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnc:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">5910</span></span><br></pre></td></tr></table></figure><p>在弹出的窗口中输入密码：<code>Passw0rd</code></p><p>然后就可以愉快的安装 Windows 系统了，如果不能识别硬盘，需要手动加载一下驱动，选择 A 盘和对应的 Windows 目录就可以了。同样的，如果网卡没有驱动，也是如法炮制。</p><p>附安装完成的屏幕截图一张：</p><img src="/2017/01/06/install-windows-under-ubuntu-and-kvm/kvm_w10.jpg" class=""><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.cyberciti.biz/faq/installing-kvm-on-ubuntu-16-04-lts-server/">How to install KVM on Ubuntu 16.04 LTS Headless Server</a></li><li><a href="http://www.mojocode.com/content/getting-windows-10-install-using-qemu-and-kvm">Getting Windows 10 to Install Using qemu and kvm</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> KVM </tag>
            
            <tag> QEMU </tag>
            
            <tag> Ubuntu 16.04 </tag>
            
            <tag> VM </tag>
            
            <tag> Virtio </tag>
            
            <tag> Virtualization </tag>
            
            <tag> Windows 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从踢弟弟到逼弟弟</title>
      <link href="/2017/01/04/from-test-driven-development-to-behavior-driven-development/"/>
      <url>/2017/01/04/from-test-driven-development-to-behavior-driven-development/</url>
      
        <content type="html"><![CDATA[<img src="/2017/01/04/from-test-driven-development-to-behavior-driven-development/tdd_bdd.jpg" class=""><blockquote><p>此文为「<strong>Enrico</strong>」同学的原创投稿，非 Tommy 出品。本文原作者之观点不代表本人及本网站的任何观点，仅代表其个人或组织，特此声明。</p></blockquote><p>自从 2015 年 10 月十八届五中全会决定全面放开二胎，一对夫妇可以生育两个孩子。身边不少头胎生了女孩的夫妻积极响应国家号召，生下了第二胎，而且大部分人二胎生的都是男孩，凑得个好字，儿女双全。</p><p>但是，有人的地方就有江湖，有江湖的地方就有竞争。许多头胎的孩子，本来颠颠高高兴兴，万千宠爱在一身。突然一天，爸爸妈妈告诉他们，要当哥哥／姐姐了，懵懂的他们还不知道是什么回事。直到弟弟／妹妹降生，全家人注意力迅速转移，哥哥／姐姐们才知道歌里唱的「由来只有新人笑，有谁听到旧人哭」是什么意思。小小年纪开始了体会怨憎会、求不得之苦。</p><span id="more"></span><p>若是二胎是弟弟，自己是女儿身，而又生在那重男轻女之家，那苦真叫作苦过弟弟。老大心理上如不能适应，则有可能对弟弟下手，各种踢弟弟。然而小孩动手不知轻重，踢弟弟容易有伤痕，被大人发现了那可是胆汁送黄莲，苦上加苦。于是，扭曲的小孩另寻方法，改为心理上摧残弟弟，从踢弟弟转为逼弟弟。</p><p>国外就有一些小孩，早早就从踢弟弟转为逼弟弟。他们就是</p><h2 id="敏捷开发工程师"><a href="#敏捷开发工程师" class="headerlink" title="敏捷开发工程师"></a>敏捷开发工程师</h2><p>他们搞了个<a href="http://agilemanifesto.org/">敏捷宣言</a></p><blockquote><p>Individuals and interactions over processes and tools</p><p>Working software over comprehensive documentation</p><p>Customer collaboration over contract negotiation</p><p>Responding to change over following a plan</p><p>That is, while there is value in the items on the right, we value the items on the left more.</p></blockquote><p>简单来说是加强沟通，忙尽快出能工作的软件。</p><p>目的是为了摆脱过去那种大型项目开发的中因为因循繁琐的流程、维护大量的文档所造成的低效率，从而适应项目小型化，拥抱需求变化，营造一个欢乐开发的海洋。</p><p>为了实现其中的第二点，尽快提供工作的软件 (Working software)，有些小孩又搞了一个敏捷实践，叫做</p><h2 id="踢弟弟-TDD-Test-Driven-Development"><a href="#踢弟弟-TDD-Test-Driven-Development" class="headerlink" title="踢弟弟 (TDD Test-Driven Development)"></a>踢弟弟 (TDD Test-Driven Development)</h2><p>他搞了<a href="https://www.agilealliance.org/glossary/tdd/">几个原则</a></p><blockquote><p>write a “single” unit test describing an aspect of the program</p><p>run the test, which should fail because the program lacks that feature</p><p>write “just enough” code, the simplest possible, to make the test pass</p><p>“refactor” the code until it conforms to the simplicity criteria</p><p>repeat, “accumulating” unit tests over time</p></blockquote><p>概括来说，是先写一小段某个功能的测试代码，测试失败，再写实现代码，测试成功，再迭代下一个功能。</p><p>这对于单元测试与开发是很有用的一种实践。因为踢弟弟是要求在写代码之前就要想好怎么测，测什么，这解决了可测性低的问题。另外，踢弟弟还可以提高代码的测试覆盖率，令 bug 在编码阶段就能被发现。减少上线后发现问题，修复问题的指数级增长成本。</p><p>然而，踢弟弟也有它的不足。</p><ul><li><p>它解决的是代码级的验证，但是测试代码与需求的符合问题解决得不是很好，非技术人员、客户看不懂代码，无法评审测试是否符合需求。</p></li><li><p>测试代码可能写得太大或者太小，令开发人员效率下降。这与测试代码与功能对应不起来有很大关系。</p></li></ul><p>于是，又有一些小孩扩展了踢弟弟，提出了</p><h2 id="逼弟弟-BDD-Behavior-Driven-Development"><a href="#逼弟弟-BDD-Behavior-Driven-Development" class="headerlink" title="逼弟弟 (BDD Behavior-Driven Development)"></a>逼弟弟 (BDD Behavior-Driven Development)</h2><p>他们发现，如果将自然语言按照一些简单语法组织起来，代码将会非常容易解释与处理。使用这种方法可以让非技术人员、客户可以参与到需求的确认与验收当中。</p><p>我们看一下两个例子</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Scenario: </span>Refunded items <span class="keyword">should </span><span class="keyword">be </span>returned to stock</span><br><span class="line">  Given a customer <span class="keyword">bought </span>a <span class="keyword">black </span><span class="keyword">sweater </span>from me</span><br><span class="line">    <span class="keyword">And </span>I have three <span class="keyword">black </span><span class="keyword">sweaters </span>left in stock.</span><br><span class="line">  When he returns the <span class="keyword">sweater </span>for a refund</span><br><span class="line">  Then I <span class="keyword">should </span>have four <span class="keyword">black </span><span class="keyword">sweaters </span>in stock.</span><br><span class="line"></span><br><span class="line">场景：微信聊天</span><br><span class="line">  假如 手机安装了微信</span><br><span class="line">    当 用户打开微信</span><br><span class="line">  那么 手机会出现用户的微信聊天界面</span><br></pre></td></tr></table></figure><p>以上就是逼弟弟使用的叫做 <a href="https://github.com/cucumber/cucumber/wiki/Gherkin">Gherkin</a> 的语言，它的理念是使用自然语言来描述功能，而且强调的是使用例子来说明需求功能。是不是跟敏捷开发中的用户故事 (User Story) 很像？嗯，因为它们都是一个妈生的。</p><p>其实只要我们回顾一下敏捷宣言，就会发现，逼弟弟干的事就是解决个体之间互动与客户协作这两个问题。</p><h3 id="逼弟弟的需求研讨会-Specification-Workshops"><a href="#逼弟弟的需求研讨会-Specification-Workshops" class="headerlink" title="逼弟弟的需求研讨会 (Specification Workshops)"></a>逼弟弟的需求研讨会 (Specification Workshops)</h3><p>那么，我们使用这种语言，把需求一个个用例子列出来，客户／产品、开发、测试三方一起讨论与确认。</p><h3 id="逼弟弟的由外而内的开发模式-Outside-In-Development"><a href="#逼弟弟的由外而内的开发模式-Outside-In-Development" class="headerlink" title="逼弟弟的由外而内的开发模式 (Outside-In Development)"></a>逼弟弟的由外而内的开发模式 (Outside-In Development)</h3><p>然后，开发人员使用 BDD 工具 (<a href="http://jbehave.org/">JBehave</a>, <a href="https://cucumber.io/">Cucumber</a>, <a href="http://pythonhosted.org/behave/">Behave</a>) 去运行、实现测试脚本。再一点点编写实现功能代码，走到所有的功能都运行通过。</p><p>由于开发的过程是从最接近用户的 UI 界面开始，再想到内部设计，因此它称为由外而内的开发模式。如果再加上由内而外的过程，嗯，《开发人员的自我修养》就等着你来写了，你叫史坦尼斯拉夫斯基对吧？</p><p>回到 Gherkin 语言，我们上面提到它需要遵循一定的简单语法：</p><ul><li><strong>Scenario</strong> (场景)，说明功能的例子</li><li><strong>Given</strong> (假如)，构造测试的环境条件</li><li><strong>When</strong> (当)，给予的输入，可以是用户，也可以是外部系统，也可以是系统本身定时／条件触发的</li><li><strong>Then</strong> (那么)，系统的输出，或者说行为</li></ul><p>若干个 Given, When, Then 构成一个 Scenario，若干个 Scenario 构成一个 Feature，若干个 Feature 最终构成一个系统的完整功能需求。</p><h2 id="逼弟弟的不足"><a href="#逼弟弟的不足" class="headerlink" title="逼弟弟的不足"></a>逼弟弟的不足</h2><p>由于自然语言的天生缺陷，光用文字总会有一些歧义会产生。例如</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">冬天能穿多少就穿多少</span><br><span class="line">夏天能穿多少就穿多少</span><br></pre></td></tr></table></figure><p>Gherkin 语言不能完全解决自然语言的歧义问题，如果有图片，那会很有帮助。然而，现有的 Gherkin 语言与BDD工具并不支持插入图片。</p><img src="/2017/01/04/from-test-driven-development-to-behavior-driven-development/tuski.jpg" class="" title="碰壁"><p>那你问我资不资瓷，我当然资瓷啊。你们啊，要努力提高姿势水平。国外那 Stack Overflow，水平不知道比你们高到哪里去，我跟他们谈笑风生。</p><p>支持的办法就是将 Gherkin 语言与 Markdown 语法 crossover，用 Markdown 标签来插入图片。就像这样：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    场景： 微信聊天</span><br><span class="line">    假如 手机安装了微信</span><br><span class="line">      当 用户打开微信</span><br><span class="line">    那么 手机会出现用户的微信聊天界面</span><br><span class="line">!<span class="selector-attr">[微信聊天界面]</span>(wechat.jpg)</span><br></pre></td></tr></table></figure><p>但是由于 Markdown 不支持图片尺寸定义，图片不能缩放，效果可能就会变成</p><img src="/2017/01/04/from-test-driven-development-to-behavior-driven-development/wechat.jpg" class="" title="Markdown 图像"><p>图片会显得很大，一页都显示不完，体验很差。</p><p>有人提出使用</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="selector-attr">[微信聊天界面]</span>(wechat.jpg =<span class="number">320</span>x)</span><br></pre></td></tr></table></figure><p>这种办法，可惜的是，不是所有工具／网站都支持。</p><p>又有人提出另外写一个 CSS 文件来解决这个问题，但是 Stack Overflow 上很多人表示，另外维护一个文件很不友好。而且，在逼弟弟这个事情上，让非技术人员去写 CSS 更加不切实际。因此，我暂时推荐的解决办法是在 Markdown 中使用 HTML 标签 <code>&lt;img&gt;</code>。</p><p>就像这样</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">场景： 在搜索框搜索目的地</span><br><span class="line">假如 用户在手机上登录了手机助手</span><br><span class="line">  当 用户在手机助手上选择导航</span><br><span class="line">那么 手机助手进入导航页面</span><br><span class="line">#&lt;<span class="selector-tag">img</span> <span class="attribute">src</span>=<span class="string">&quot;./Main.jpg&quot;</span> width=<span class="string">&quot;240&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>效果就会是这样</p><img src="/2017/01/04/from-test-driven-development-to-behavior-driven-development/html_img.jpg" class="" title="HTML 图像"><p>这里有个 tricky 的地方，就是 HTML 标签前面要用井号注释起来，这样写的好的 Markdown 文件，只要将后缀名从 <code>.md</code> 改为 <code>.feature</code>，就可以使用各种 BDD 工具运行解释，不影响运行啦。</p><img src="/2017/01/04/from-test-driven-development-to-behavior-driven-development/sakuragi.jpg" class="" title="天才"><h2 id="附一"><a href="#附一" class="headerlink" title="附一"></a>附一</h2><p>使用 Markdown 编辑工具 MacDown 查看插入图片的效果</p><center><iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=s0358i60d8t&tiny=0&auto=0" allowfullscreen></iframe></center><h2 id="附二"><a href="#附二" class="headerlink" title="附二"></a>附二</h2><p>使用 Python BDD 工具 Behave 运行插入了图片的 Feature 文件的效果</p><center><iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=y0358xp065i&tiny=0&auto=0" allowfullscreen></iframe></center>]]></content>
      
      
      <categories>
          
          <category> Friend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Development </tag>
            
            <tag> BDD </tag>
            
            <tag> Behave </tag>
            
            <tag> Behavior-Driven </tag>
            
            <tag> Cucumber </tag>
            
            <tag> Enrico </tag>
            
            <tag> Gherkin </tag>
            
            <tag> JBehave </tag>
            
            <tag> Markdown </tag>
            
            <tag> TDD </tag>
            
            <tag> Test </tag>
            
            <tag> Test-Driven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不发梦会死星人</title>
      <link href="/2016/11/15/never-sleep-without-a-dream/"/>
      <url>/2016/11/15/never-sleep-without-a-dream/</url>
      
        <content type="html"><![CDATA[<img src="/2016/11/15/never-sleep-without-a-dream/dreamer.jpg" class=""><blockquote><p>此文为「<strong>Hebe</strong>」同学的原创投稿，非 Tommy 出品。本文原作者之观点不代表本人及本网站的任何观点，仅代表其个人或组织，特此声明。</p></blockquote><p>不知道这世界上会有多少个人像我一样，90% 的夜晚都会发梦，睡眠不佳，然后第二天上班又继续崩溃。</p><span id="more"></span><img src="/2016/11/15/never-sleep-without-a-dream/crash1.jpg" class=""><p>有一天我无聊在翻看 iPhone 自带的「健康」，其中「睡眠分析」模块中推荐了几款 App，我就下载了几个来试用。近一个月尝试对比了 3 个睡眠质量监测的 App，分别是**「Sleep+」、「Sleep Cycle」、「Sleep Better」<em><em>，所以这「处女文」诞生了</em>（第一次写文章来对比 App 产品，没收任何广告费，求轻虐）</em></p><p>话不多说，分别来简单看看 3 个 App 的「玩法」：</p><hr><img src="/2016/11/15/never-sleep-without-a-dream/sleep_plus.jpg" class="" title="「Sleep+」"><p>监测方式：通过 Apple Watch 的传感器进行监测<br>使用方式：睡觉前打开手表 App 点击 「Start Sleeping」，醒来后打开 App 点击 「Stop Sleeping」</p><img src="/2016/11/15/never-sleep-without-a-dream/01.jpg" class=""><p>优点：</p><ul><li>一共只有 3 个界面，界面简约，交互简约，逼格满满。</li></ul><p>不足：</p><ul><li>只能用 Apple Watch 来监测。</li><li>受限于 Apple Watch 的续航。曾经有一晚，因为手表续航不足，半夜关机了。我第二天下午才充电打开，这样导致它记录我睡了 20+ 小时，囧</li></ul><img src="/2016/11/15/never-sleep-without-a-dream/02.jpg" class=""><hr><img src="/2016/11/15/never-sleep-without-a-dream/sleep_cycle.jpg" class="" title="「Sleep Cycle」"><p>监测方式：通过手机的麦克风&#x2F;加速度计进行监测<br>使用方式：睡前打开手机 App 点击「开始」，醒来后打开 App 滑动「停止」</p><img src="/2016/11/15/never-sleep-without-a-dream/03.jpg" class=""><p>优点：</p><ul><li>开始和结束非常简单直接。</li><li>个人感觉「睡眠质量的百分比」比较接近我的人体感受。</li><li>使用过程有不少图示或 tips，让用户尽可能以最正确的方式使用。</li></ul><p>不足：</p><ul><li>因为需要占用麦克风（主界面顶部有红条），像我有听音乐入睡习惯的人，就会有极大影响。</li><li>统计图是曲线图，不够直观，特别是「突然醒来又睡回去」的情况难以体现。</li><li>耗电不少，记录一晚约为手机电池的 20%</li></ul><img src="/2016/11/15/never-sleep-without-a-dream/04.jpg" class=""><hr><img src="/2016/11/15/never-sleep-without-a-dream/sleep_better.jpg" class="" title="「Sleep Better」"><p>监测方式：通过手机的振动传感器进行监测<br>使用方式：睡前打开手机 App 选择几个选项后点击「开始」，醒来后打开 App 滑动「停止」，停止后可选择性记录自己的梦境&#x2F;自我感觉等。</p><img src="/2016/11/15/never-sleep-without-a-dream/05.jpg" class=""><p>优点：</p><ul><li>统计图是颜色鲜明的柱状图，直观。</li><li>免费版，也至少可以看到统计数据的「概况」（周&#x2F;月&#x2F;年的统计数据则需要高级版）。</li><li>收集的数据比较多，除了记录当天「是否锻炼过」、「是否压力大的日子」、「是否自己的床」，还有醒来记录梦境、自我感觉等。后续记录数据多了，方便找出影响睡眠的因素，从而对症下药。</li></ul><p>不足：</p><ul><li>开始前和结束后的记录&#x2F;操作较繁琐，用户长期使用会烦。</li></ul><img src="/2016/11/15/never-sleep-without-a-dream/06.jpg" class=""><hr><p>接下来，简单抽取这 3 个 App 共同记录的 2 天睡眠数据来看看：</p><img src="/2016/11/15/never-sleep-without-a-dream/07.jpg" class=""><img src="/2016/11/15/never-sleep-without-a-dream/08.jpg" class=""><ol><li>一个月以来的记录显示，每天「Sleep+」里的 Restful 和「Sleep Better」的睡眠效率都是比较接近、而且一般都超过 90%，但事实上我自身感觉没睡得那么好。以 11 月 3 - 4 日睡眠记录为例，我那天在外出差，睡得不好，「Sleep+」和「Sleep Better」的睡眠效率都偏高；所以我上面在「Sleep Cycle」中提过，个人感觉「睡眠质量的百分比」比较接近我的人体感受。</li><li>一个月里的记录，3 个 App 大部分的数据是接近的，但偶尔也会有不同。如 11 月 12 - 13 日睡眠记录那图来看，Best Sleep 应该是在 2:00 - 3:00 时间段附近，「Sleep+」「Sleep Cycle」是吻合的，但「Sleep Better」这段明显是浅睡眠。</li><li>11 月 13 日早上 11 点多醒了在被窝里动来动去，但我拖到 12 点才结束监测，看记录发现「Sleep+」没有把醒来这一段标识为「Awake」，而「Sleep Cycle」、「Sleep Better」都记录正常，所以这次「Sleep+」让我比较失望。</li></ol><blockquote><p>以上 3 个 App 对比的都是本人下载的低（mian）端（fei）版，吐槽 App 中广告的土豪，可以直接体验高（fu）端（fei）版。</p></blockquote><p>现在我体验的时间还不算长，所以不好说哪一款 App 最好，但目前在我心目中的比分暂时会是*「Sleep Cycle」&gt;「Sleep Better」&gt;「Sleep+」*，接下来希望我可以坚持多对比多几个 App 后，再为大伙推荐最好用的一款。</p><p>BTW，尽管我近 1 个月监测了自己的睡眠质量，但，重点是，还是暂时无法改善。TAT 。</p><p>大神们如有任何建议，求不吝指教啊~</p><img src="/2016/11/15/never-sleep-without-a-dream/crash2.jpg" class="">]]></content>
      
      
      <categories>
          
          <category> Friend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> iPhone </tag>
            
            <tag> Analysis </tag>
            
            <tag> Hebe </tag>
            
            <tag> Sleep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如果这样了，那就那样吧</title>
      <link href="/2016/11/13/ifttt/"/>
      <url>/2016/11/13/ifttt/</url>
      
        <content type="html"><![CDATA[<img src="/2016/11/13/ifttt/ifttt_logo.png" class=""><blockquote><p>此文为「<strong>Yui</strong>」同学的原创投稿，非 Tommy 出品。本文原作者之观点不代表本人及本网站的任何观点，仅代表其个人或组织，特此声明。</p></blockquote><p>标题是一个被翻译（非官方）的一个 App 的名字 ，正确的是 <a href="https://ifttt.com/">IFTTT —— IF THIS THEN THAT</a>。这个 App 执行的事情叫做 Recipe，比如「IF 我发了照片在朋友圈，THEN 把照片也发到微博」，这就是一个 Recipe 了。</p><span id="more"></span><img src="/2016/11/13/ifttt/1.png" class=""><p>初听闻 IFTTT 是两年半前的事，那是和 YO 一起火爆的时候。当时好奇下载了 IFTTT，可发现什么都做不到，因为被墙了。而在半年后，我才开启了第一个 Recipe。这是在做手表系统的时候，看了 MJ 推荐的一篇文章(<a href="https://medium.com/@JCrossNeumann/watch-wear-a0acedb6f6e7#.cemqbrlc2">https:&#x2F;&#x2F;medium.com&#x2F;@JCrossNeumann&#x2F;watch-wear-a0acedb6f6e7#.cemqbrlc2</a>)，其中作者提到的一个 Recipe —— IF 太空站飞过你的头顶，THEN 手表给我发一个推送。</p><img src="/2016/11/13/ifttt/2.png" class=""><p>然而可悲的是，这个 Recipe 一次都没有运行过，因为获取太空站的数据需要一直开启 VPN。那时的我还只是在使用免费而十分不稳定的 VPN。</p><p>现在，即使换了手机，IFTTT 依旧静静地躺在文件夹里，直到最近它大改版了。（我比较喜欢以前的 icon 诶）Recipe 也改名为 Applet 了。</p><img src="/2016/11/13/ifttt/3.png" class=""><p>打开 IFTTT 的第一件事，就是奔去重启两年前那个安静的 Recipe。毕竟现在手机有了稳定的 VPN，再也没有什么能阻挡这个 Applet 运行了吧。</p><img src="/2016/11/13/ifttt/4.png" class=""><p>接着看到这个 Applet 的隔壁，也是一个很有意思的 Applet —— IF 当天 NASA 的宇宙照片更新了，THEN 保存到我的手机相册。</p><img src="/2016/11/13/ifttt/5.png" class=""><p>于是现在每天手机里都新躺一张当天 NASA 拍摄宇宙的照片，很美。如果能有一个 Applet 是「IF 照片更新了，THEN 更换为我的手机壁纸」，那就完美了。这简直就是壁纸常换重度患者的福音。</p><img src="/2016/11/13/ifttt/6.png" class=""><p>除了这两个如此情怀的 Applets，因为工作缘故，我开启了一个新的 Applet —— IF 纽约时报的科技专栏更新了一篇热门文章，THEN 把文章添加到我的 Reading List 里面。然而我每次都只看了通知里面的标题，没有进入阅读详细的文章。</p><img src="/2016/11/13/ifttt/7.png" class=""><p>除了因为是英文的，还有一个阻碍因素，就是每次点开 IFTTT 的推送，不是直接进入 Reading List，而是先进入 IFTTT 的 Applet 里面，然后再次点击底部的 open in Safari 才能阅读文章。这个过程已把我的阅读兴趣消磨掉一大半了。</p><img src="/2016/11/13/ifttt/8.png" class=""><p>最后是开启了一个日常的 Applet —— IF 到了早上7点半，THEN 把天气预报推送给我。这是因为最近天气忽冷忽热，不知道如何穿衣服，得参考天气预报了。这 Applet 真的很省心，每天起床闹钟响起后，抓起手机关闹钟时，顺便也能看到在手机顶部的天气预报推送了。</p><img src="/2016/11/13/ifttt/9.png" class=""><p>有人说直接在插件中心加一个天气插件就好了啊。是的，之前我也是这么干的，每天早上在状态栏处下划再向右划进入插件中心查看天气预告。可是你们不觉得就这两个动作，也是很麻烦的吗？再加上插件出现 bug 的概率太大了，每天早上看到这样的天气预告，能不烦么？（摔手机…）</p><img src="/2016/11/13/ifttt/10.png" class=""><p>关于天气预告的获取，也是需要网络的，所以得每天早上保持手机的网络畅通。但我是一个睡觉就开启飞行模式的孩子，这就意味着，事实上每天闹钟响起后，我在按停闹钟后需要上划拉出控制中心关掉飞行模式，然后闭眼等待，听到「叮」的通知声后，再睁眼看天气预告。</p><p>看到这就知道我是一个多么懒的人了吧。早上起床的时间这么宝贵，一秒钟都不想浪费在操作手机上。可是由于 iOS 的封闭性，「IF 到早上七点半，THEN 关闭飞行模式」的 Applet 是沒法实现的了。同理比如「IF 到早上七点半，THEN 播放 Apple Music 的热门音乐」和前面提到的「IF 照片更新了，THEN 更换为我的手机壁纸」也没法实现。</p><p>写到这的时候，刚好就收到了太空站的推送。仰望天空，遥想远在天边的空间站正在经过我的头顶，思绪也飘到了远方。宇宙这么大，我也只是一个很小很小的点，保持对宇宙的好奇和敬畏的心吧。</p><img src="/2016/11/13/ifttt/11.jpg" class=""><p>P.S. 关于常换壁纸这个癖好，电脑端的话，个人十分推荐 <a href="https://itunes.apple.com/us/app/irvue-unsplash-wallpapers/id1039633667">Irvue</a> 这款软件，因为它的壁纸都是些很漂亮的摄影作品，总能给我带来小惊喜。Irvue 可以设置壁纸更新的频率以及保存壁纸，可惜的是电脑得翻墙，因为壁纸的资源是来自墙外的网站。</p><p>最后的最后分享一张壁纸。这是我最近很喜欢的一张，因为在我十分烦闷的时候，Irvue 就恰巧给我换上了这张壁纸，看到它的瞬间就被治愈了。</p><img src="/2016/11/13/ifttt/12.jpg" class="">]]></content>
      
      
      <categories>
          
          <category> Friend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Yui </tag>
            
            <tag> Album </tag>
            
            <tag> IFTTT </tag>
            
            <tag> NASA </tag>
            
            <tag> iPhone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VoLTE，一边电话一边上网</title>
      <link href="/2016/11/12/volte-browsing-the-internet-while-calling/"/>
      <url>/2016/11/12/volte-browsing-the-internet-while-calling/</url>
      
        <content type="html"><![CDATA[<img src="/2016/11/12/volte-browsing-the-internet-while-calling/volte.jpg" class=""><h2 id="没有-VoLTE-的-4G-时代"><a href="#没有-VoLTE-的-4G-时代" class="headerlink" title="没有 VoLTE 的 4G 时代"></a>没有 VoLTE 的 4G 时代</h2><p>今天要跟大家聊的是一个叫 <a href="https://en.wikipedia.org/wiki/Voice_over_LTE">VoLTE</a> 的东西。虽然看似很技术，但是相信我，这是一篇科普文，而绝对不是一篇技术屌丝文。</p><p>就好像文章标题所说的一样，VoLTE 可以帮助我们实现一边通话一边上网的诉求。</p><span id="more"></span><p>作为一个 20 多年的中国移动全球通用户，我已经被中国移动的号码深深地绑架了。因为捆绑了太多的业务，实在无法更换号码。</p><p>这里要吐槽一下，在中国为什么所有互联网和非互联网相关的服务行业都要手机号码呢？你们就不能用邮箱么？不知道邮箱大家很少更换，而手机号码是随着时间变化会变更的吗？</p><p>还有一个想吐槽的是，从 09 年就开始说要做的携号转网，到现在也没有见到任何落地的迹象。人家美帝都实现了几个世纪了，技术上根本毫无难度。如果可以携号转网，我早就使用中国联通的服务了，毕竟中国移动的 3G 慢到不要不要的，就算是 4G 也就是联通 3G 的水准而已。</p><p>跑题了，回来说说我们在没有 VoLTE 的 4G 时代，是怎样一种体验？你有没有过下面的经历（限中国移动用户）：</p><ul><li>正在用移动网络访问网站，然后卡死好久，突然 4G 信号消失，然后一个电话来了，网络断开了</li><li>通话过程中，想要查看一下微信的信息，发现提示：<strong>无法连接服务器</strong></li><li>正在导航，电话来了，切回导航发现走错路了，导航再也无法重新规划路线了，因为没有网络</li><li>通话结束后，信号一直停留在 2G 网络，长时间无法恢复 4G，往往需要手动重启或者飞行模式一下，才能恢复正常</li><li>明明上网速度很快的地方，接打电话却断断续续，信号差，频繁断线</li></ul><p>如果你经历过上面的任何一种，那么启用 VoLTE 后，你将再也不用忍受这种痛苦了。</p><h2 id="什么是-LTE"><a href="#什么是-LTE" class="headerlink" title="什么是 LTE"></a>什么是 LTE</h2><p>开始正题之前，还是例行的科普时间。（啪啪啪，拍黑板）「各位同学请认真听讲！」</p><p>介绍 VoLTE 之前，我们先介绍一下什么是 <a href="https://en.wikipedia.org/wiki/LTE_%28telecommunication%29">LTE</a>。LTE 的全称是 <strong>Long-Term Evolution</strong>，是第四代的高速无线网络标准，通常被各大运营商宣传为 4G 网络。</p><p>在国外，比如美国，运营商直接宣传的就是 LTE，所以用 AT&amp;T 等网络的手机显示的都是 LTE 标志。而国内的运营商为了减少不必要的宣传成本，则统一使用 4G 作为手机显示的标志。</p><p>所以，简单粗暴的理解就是 4G &#x3D; LTE，LTE &#x3D; 4G 就可以了。</p><h2 id="什么是-VoLTE"><a href="#什么是-VoLTE" class="headerlink" title="什么是 VoLTE"></a>什么是 VoLTE</h2><p>VoLTE 的全称是 <strong>Voice over LTE</strong>，其实也很好理解，就是在 LTE 上传输的语音。</p><p>在 VoLTE 之前，语音（Voice）是通过无线频谱来进行传播的，所以对于运营商来说，要想在一定区域内支持更多的并发通话的话，就需要更大的频谱带宽资源。</p><p>而使用 VoLTE，实际上所有的语音走的都是 IP 网络。对于运营商来说，他们可以在现有频谱资源上，最大限度的复用带宽，同时提供高质量和清晰的语音通话，而其边际成本近乎为 0。</p><p>既然 VoLTE 这么好，为什么不早早就用起来呢？主要是由于 VoLTE 是基于 IP 网络的，所以通话的延时是一个比较大的挑战，这里就需要用到 <a href="https://en.wikipedia.org/wiki/Quality_of_service">QoS (Quality of service)</a> 等技术来进行线路优化。但这些优化需要持续长时间的进行，不可能一蹴而就，所以很难一下子在短期内全面开放 VoLTE 服务。</p><p>回想一下好几年前我们用的 IP 长途电话功能，在电话号码之前加拨 12593，就可以以更便宜的资费来拨打国内长途。这种技术叫做 <a href="https://en.wikipedia.org/wiki/Voice_over_IP">VoIP (Voice over IP)</a>，其基本原理与 VoLTE 是一样的。想想那个时候 IP 电话动辄 1、2 秒的延时和卡顿，你就知道 VoLTE 也面临着同样的挑战。</p><p>这也是为什么好多有钱人，宁愿花贵价钱直接打长途，也不愿意使用 IP 电话，因为延时和卡顿会让人很不舒服。但是随着时间的推移和网络基础设施的演进，现在这些以前的问题都已经不是瓶颈，也是时候打开 VoLTE 的篇章了。</p><h2 id="怎么玩-VoLTE"><a href="#怎么玩-VoLTE" class="headerlink" title="怎么玩 VoLTE"></a>怎么玩 VoLTE</h2><p>好了，废话说了好多，终于可以说说怎么玩 VoLTE 了。据说现在中国联通在试点城市的网络，只要手机在网络上注册，就自动开启了 VoLTE 功能，无需额外设置。因为我现在基本上不用联通的手机打电话，所以没有试验过，因此主要围绕着中国移动来说。</p><p>准备工作，首先我们需要具备以下几个条件才可以玩 VoLTE：</p><ol><li>一个支持 4G (LTE) 网络的手机，比如说 iPhone 6 以后的机型</li><li>运营商配置文件的版本不低于 23.2， iOS 10.1.1 为 26.0</li><li>你已经开通 4G 网络和相关的服务</li><li>你所在的区域已经开通 VoLTE 服务</li><li>你还必须是全球通用户才能提前享受到这项服务</li></ol><p>大家可以通过<a href="http://www.10086.cn/volte/index/#fugai">这个地址</a>实时地查询中国移动 VoLTE 的覆盖情况，也可以参考下图看自己所在区域是否支持 VoLTE：</p><img src="/2016/11/12/volte-browsing-the-internet-while-calling/cm_volte.gif" class=""><p>当条件都符合的情况下，发送短信「<strong>KTVOLTE</strong>」到「<strong>10086</strong>」开通 VoLTE 服务：</p><img src="/2016/11/12/volte-browsing-the-internet-while-calling/ktvolte.png" class=""><p>最后一步就是在手机上开启 VoLTE 功能了。进入「<strong>设置</strong>」-&gt;「<strong>蜂窝移动网络</strong>」-&gt;「<strong>蜂窝移动数据选项</strong>」-&gt;「<strong>启用4G</strong>」，选择「<strong>语音与数据</strong>」。</p><img src="/2016/11/12/volte-browsing-the-internet-while-calling/setting.png" class=""><p>可以看到，在我将「<strong>仅数据（Data Only）</strong>」调整为「<strong>语音与数据（Voice &amp; Data）</strong>」后，4G 信号会消失一下。这时候手机正在重新注册网络，在网络重新注册后会再次出现 4G 信号。我们可以拨打中国移动的 10086 号码来验证下：</p><img src="/2016/11/12/volte-browsing-the-internet-while-calling/10086.png" class=""><p>可以看到，以前拨打 10086，4G 信号标志会消失，而现在就算在拨打电话的状况下，4G 信号也不会消失了。经过测试，在打电话的时候也可以正常导航与刷微信了，就连通话质量都感觉变好了（其实完全是心理作用，实际情况是否如此，表示不得而知）。</p><p>从此以后再也不用担心打游戏和导航的时候来电话了。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><blockquote><p>声明一下：这绝对不是一篇中国移动的软文，本人也没有收取中国移动的任何好处，只是职业病的原因喜欢追新技术而已。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Network </tag>
            
            <tag> Carrier </tag>
            
            <tag> China Mobile </tag>
            
            <tag> China Unicom </tag>
            
            <tag> LTE </tag>
            
            <tag> Mobile </tag>
            
            <tag> Technology </tag>
            
            <tag> VoIP </tag>
            
            <tag> VoLTE </tag>
            
            <tag> Wireless </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创业维「坚」</title>
      <link href="/2016/11/07/persistence-is-the-key-for-startup/"/>
      <url>/2016/11/07/persistence-is-the-key-for-startup/</url>
      
        <content type="html"><![CDATA[<img src="/2016/11/07/persistence-is-the-key-for-startup/do_it.jpg" class=""><p>赶在 10 月最后的尾巴写了篇<a href="../../../../2016/10/31/don-t-save-money-for-rubbish">《不要省钱买垃圾》</a>的文章后，忙忙碌碌的还没回过神，11 月俨然已经过去一个星期了。</p><p>今天偶然跟一个外地创业的朋友聊天，发现资本寒冬下，创业早已不是几年前的「<strong>当上 CEO、迎娶白富美、从此走上人生巅峰</strong>」这样美好的剧情了。下意识地看看自己，也已经举步维艰地在创业的道路上走了 3 年多了。与之形成强烈对比的是同期创业的一些小伙伴不单止实现了财务自由，甚至有的个人身价还超过了 20 亿。而另一边则是另外 2 个创业的好友在 9 月底的时候相继结束了他们的创业之旅，重新回到了大公司。</p><span id="more"></span><p>在**「大众创新、万众创业」**的召唤下，看看创业众生，可谓是几家欢喜几家愁。如今的创业早已不是「九死一生」或者是「百死一生」，抑或是「千死一生」，而是「万死一生」了。有一句我很喜欢的话是这么说的：「<strong>梦想总是要有的，万一实现了呢？</strong>」所以，如果看这篇文章的你，想创业但还没有开始创业的话，先问问自己有没有破釜沉舟和视死如归的勇气？如果没有的话，我建议你就不要创业了。因为就算你具备了上述的勇气，你也可能仅有万分之一的机会能成功。</p><img src="/2016/11/07/persistence-is-the-key-for-startup/the_hard_thing_about_hard_things.jpg" class="" title="The Hard Thing About Hard Things"><p>之前看了一本书，叫做<a href="https://www.amazon.com/dp/B00DQ845EA">《The Hard Thing About Hard Things》</a>，中文名叫做<a href="https://www.amazon.cn/dp/B00SMB8ZVU">《创业维艰》</a>。与我今天写的文章只一字之差，当我看完这本书的时候，那种感同身受、相见恨晚的情感简直溢于言表。我自己一直是一个悲观主义创业者，因此我对书中所介绍的事情有着深深地认同感。而讽刺的是，我认识的大部分的创业者都是天生的乐天派，他们天不怕、地不怕，觉得自己身体中蕴藏着无穷无尽的能量，觉得自己如乔帮主般所向披靡，远见非凡。我多么希望每一个创业者在创业之前都能很好的审视一遍自己，仔细拜读一下《创业维艰》，看看是否自己真的已经准备好去开创一份事业，而不是头脑发热觉得短时间内就可以财务自由而贸贸然去创业。</p><p>看到这里，你可能会觉得这是一篇创业辛苦吐槽文，然而它不是。创业固然辛苦，然而辛苦却不一定能成功。每一个创业成功的故事背后总有其不可复制的东西，而每一个创业失败的背后也都有我们可以引以为鉴的错误。往往太多人在给我们灌输「成功学」，而太少人告诉我们要学会「失败」。我想这才是比失败更可怕的，因为每一个创业的人都觉得自己一定会成功。而事实的真相是，你经历了各种艰辛与磨难，而成功却在你的全世界路过。</p><p>一直以来我都很好奇，我这样一个风险规避型的人为什么会走上创业这条不归路。理论上来讲，我可以找份不错又体面的工作，好吃好住，有个好家庭。但似乎血液中又总是攒动着一股激情，想要去实现些什么。为了去实现这个看不见、摸不着、说不清、讲不明的东西，我竟鬼使神差地响应了国家的号召，义无反顾地投身到了创业大军之中。而一路支撑我走下来的便是**「创业维坚」<strong>，而</strong>「坚」<strong>则代表了</strong>「坚定」<strong>、</strong>「坚韧」<strong>、</strong>「坚强」<strong>、和</strong>「坚持」**。</p><ul><li><p><strong>坚定</strong>：也许是自欺欺人，也许是高瞻远瞩，但不管怎样我们都应该坚定的朝着认定的方向前进，而不是左顾右盼心不在焉地前行。哪怕是面对可能是米饭帮主的投资人，我们也应该坚持自己的观点，毕竟一个投资人一个观点，你不可能讨好所有的投资人。只有坚持你自己的方向，才会在对的时间遇到对的投资人。也不要因为朋友的几句话而放弃自己坚定的方向，否则最后只会沦为「这个主意我早在几年前就想到了，只是没有做而已」那种人。</p></li><li><p><strong>坚韧</strong>：有的时候，硬碰硬只会弄得两败俱伤。就好像硬的东西易碎一样，这个道理我们都懂，然而落到实际中，往往是知易行难。有的时候投资人会压你的价，竞争对手会恶意中伤你，这个时候也许你需要做的不是「以牙还牙、以暴制暴」，也许只是「退一步海阔天空」而已。大丈夫能屈能伸，也便是这个道理而已。</p></li><li><p><strong>坚强</strong>：一旦你选择了创业这条路，你就开启了与众不同的人生。无论最终成功与失败，当你老去的时候，你也会庆幸你选择了一段精彩纷呈的人生，而不是一段死气沉沉波澜不惊的人生。所谓<strong>经得起多少诋毁，就担得起多少赞美</strong>。不管受到了怎样的委屈，自己埋在心里就好，没有人会在意你曾经的失意与挫败，只有耐得住寂寞，受得了孤单才有可能见到明天的曙光。</p></li><li><p><strong>坚持</strong>：创业最难的还不是上述的三点，而是这最后的坚持。不知道有多少人死在了黎明的曙光前，而差的就是那么一点点的坚持。我每日三省吾身告诫自己，如果我这次创业失败了，那么最大的可能性是我的「退路」太多。而退路多，则更加考验一个人是否能够做到持之以恒。小时候父母就经常教育我：要**「立长志」<strong>而不是</strong>「常立志」<strong>。随着时间的推移，我也一直在努力践行</strong>「立长志」**这一理念。把创业当成一个毕生的事业去做，哪怕是 10 年，20 年，30 年甚至是 40 年。</p></li></ul><p>创业维艰，但是创业更要维「坚」。也许说了很多危言耸听的话，让大家觉得创业是个极其苦逼的事儿。没错，创业是很辛苦，但是创业也让我乐在其中。不是说那种当上 CEO 大家「唯命是从」的权利感，也不是那种坐拥亿万财富的金钱欲，而是那种从无到有，从 1 到 100 的那种满足感。</p><p>当我把全副身家砸到新的公司的时候，我焦虑过，我失眠过，我不安过，我彷徨过，我犹豫过，我踌躇过，我迷茫过。但是当你看着产品从一个点子到图纸，再到实物，这种美妙的感觉不是可以用金钱来衡量的。它与为别人打工有着天壤之别，这里面倾注的不仅仅是你的努力和热情，更是你的心血。就好像不经历风雨怎么见彩虹一样，不经历创业又怎能体验不一样的人生？又怎能把自己从那狭隘的小思想里面解放出来？</p><img src="/2016/11/07/persistence-is-the-key-for-startup/li_dong.jpg" class="" title="立冬"><p><strong>创业维坚</strong>，感谢创业路上所有帮助和支持过我的亲朋好友们，更要感谢我的合伙人和公司的小伙伴们，你们一直是我创业路上坚持不懈的原动力。2016 年立冬，寒冬将至，春天还远吗？是以为记，自勉。</p>]]></content>
      
      
      <categories>
          
          <category> Startup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Persistence </tag>
            
            <tag> Startup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不要省钱买垃圾</title>
      <link href="/2016/10/31/don-t-save-money-for-rubbish/"/>
      <url>/2016/10/31/don-t-save-money-for-rubbish/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/31/don-t-save-money-for-rubbish/circuit_boards.jpg" class=""><p>写东西这个事情还是不能停下来的，一旦停下来，受惰性驱使很容易就一直停下去了。最早构思「不要省钱买垃圾」这个主题的时候是一个月之前。</p><p>为什么是一个月之前呢？因为一个月之前我们公司同事「村长」同学的电脑扑街了。作为一个硬件工程师，他竟然表示对于电脑硬件产品出现的问题毫不知情。在此之前，他已经因为没有发现 Wi-Fi 适配器的天线没有连接好，天天哭喊着 Wi-Fi 信号不好，而被我们嘲笑了好久。</p><span id="more"></span><p>而这一次，出问题的是他选装的 SSD 硬盘，更具体一点是一个垃圾山寨无品牌速度慢到无与伦比还价格不菲的 M.2 SSD。作为工作的主力的电脑，其用 SSD 启动的速度竟然比 5400 RPM 的 HDD 还要慢，请问这是怎样一种体验？如果知乎上有「为何用了 SSD 硬盘反而比机械硬盘更慢」这样的问题，我一定会邀请「村长」来回答的。</p><p>为了这个垃圾 SSD，前前后后重装了 N 次系统不说，还要重装一大堆的专业软件。影响工作效率不说，还严重影响心情。因为系统是直接安装在 SSD 上的，机械硬盘只作为数据存储。而「村长」同学为了省钱，表示暂时不考虑再入 SSD 了。嗯，好的，那么就整个硬盘重新分区吧。嗯，好的，再借个移动硬盘备份数据吧。嗯，好的，那就连续拷贝 N 个小时吧，谁让你数据多呢。嗯，好的，为了不影响工作，那就把整个周末都搭进去弄电脑吧。嗯，好的，终于系统跑起来了，所有软件重装一次吧。嗯，好的，再花 N 个小时把移动硬盘的数据再恢复一下吧。嗯，好的，从此开机要等好几分钟了。嗯，好的，等哪天新买了 SSD，我们再全部重新再折腾一次吧！所谓，生命不息，折腾不止，大抵也不过如此吧。</p><p>好了，故事讲完了，最后看似问题解决了，告一段落了，但是事实果真如此吗？我们来算笔账，「村长」同学买的山寨货，比一些大品牌的货只相差不到 100 元的差价。而为了这 100 元，所付出的额外的成本则是其 10 倍甚至更多。而如果工作需要，将来务必还要换回 SSD 的话，那么更意味着你花了两倍的价钱买了一个中等质量的产品而已。这到底是便宜了，实惠了，性价比高了，还是自欺欺人了呢？</p><img src="/2016/10/31/don-t-save-money-for-rubbish/waste_of_time.jpg" class=""><p>前两天刚好看到一篇文章，相信不少同学也看过了，叫<a href="https://36kr.com/p/5055447.html">《你和头等舱的距离，差的不只是钱》</a>。其实我很认同作者的观点，同样的回顾我们自己的人生轨迹，不难发现我们也再重复地犯着同样的错误。</p><p>为了节约少量的金钱，追求所谓的「性价比」，我们往往牺牲了大量的时间来获得不成比例的「回报」，比如：</p><ul><li>花 1、2 天的时间去找一本盗版书，而不愿意花 3、5 元在 Amazon 上买正版</li><li>冒着电脑中病毒的危险，到处找盗版视频，而不愿意付费购买和去电影院</li><li>为了便宜几块钱，在淘宝上翻看 N 久，结果买了个假货。又或者是为了包邮与否，与店家斗智斗勇</li><li>买了「特价」的清洁剂，发现搓到手指都烂了都清洁不干净污渍</li><li>买了 10 元包邮 3 张的手机贴膜，发现贴了 2 个小时都贴不好，屏幕看着还有色差</li><li>为了省钱，买书自学不报班，结果花了大量的钱财，却什么也没学会</li></ul><p>当然，我还可以列举出更多类似的例子，看着是不是很眼熟？是不是很多自己也都亲身经历过？</p><p>产品是应该更好的为人类服务的，而不是让人类去适应各种产品。在利益的驱使下，有很多的厂家为了追求眼前的利益，不惜一切降低成本，甚至使用废旧元器件来进行加工生产和制造。使用这样的产品无异于给自己添堵，人生已经如此短暂，请不要为这些垃圾产品买单。</p><p>其实归根结底，作出这种省钱买垃圾的决定的人是我们自己。很多时候，我们真的并不是就差那么点钱，而是差了那么点「觉悟」。而我们保守固化的思维，正是我们自身作出这种错误决策的罪魁祸首。</p><img src="/2016/10/31/don-t-save-money-for-rubbish/time_is_money.jpg" class=""><p>我不是鼓励大家只买贵的，而是建议大家应该买合适的和对的。人只活一次，钱固然重要，但是比钱更重要的是你的人生经历和阅历。毕竟时间成本才是最大的成本，在自己可以承受的范围内，尽可能的节约时间，其实就是在变相延长生命和提升生命的质量。</p><p>放在 10 年前，很多事情我也无法理解，为什么要花几百块钱买个键盘？为什么要花 1 万多弄个网络存储设备？不玩游戏为什么要买那么高配置的电脑？为什么总是要换新手机？</p><p>而当身边的朋友抱怨手指难受，关节疼痛的时候，我知道我还可以愉快地写文章。当身边朋友抱怨数据储存不方便，找不到资料，网盘一个二个再关闭，还担心隐私泄露的时候，我已经拥有了 12TB 带冗余备份存储的私有云。当身边的朋友抱怨开个机要 10 分钟，弄个 Excel 文档时不时就崩溃的时候，我可以马上开机进入工作状态而无需等待。当身边的朋友天天都要清理照片，清理微信，手机半天打不开一个 App 的时候，我已经从容地完成了任务添加，日历调整和备忘记事。也许你会说这是装逼，但我想说的是，把时间留给思考更重要的事情，而不是浪费在这些旁枝末节的事情上。</p><p>中国有句话，我不确定是不是古话，叫做：「能花钱解决的事，都不是事」。以前无法理解，现在愈发地觉得这句话的精妙。我相信任何一个财富相对来说 OK 的人，都会认同时间的重要性，如果时间真的是可以购买的，我相信世界上的有钱人一定会倾其所有去购买时间，毕竟「一寸光阴一寸金，寸金难买寸光阴」。</p><p>买了垃圾事小，伤了钱财也无伤大雅，发了点小脾气过几天也会好，而浪费了的时间才是莫大的损失。奉劝诸君，珍惜生命，切勿省钱买垃圾。</p>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Money </tag>
            
            <tag> Time </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>胆小鬼的 VR 初体验</title>
      <link href="/2016/10/24/chicken-s-first-vr-experience/"/>
      <url>/2016/10/24/chicken-s-first-vr-experience/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/24/chicken-s-first-vr-experience/htc_vive.jpg" class="" title="HTC Vive"><blockquote><p>此文为「<strong>Yui</strong>」同学的原创投稿，非 Tommy 出品。本文原作者之观点不代表本人及本网站的任何观点，仅代表其个人或组织，特此声明。</p></blockquote><p>记一则没法比这更流水的 <a href="https://en.wikipedia.org/wiki/Virtual_reality">VR</a> 体验流水账，体验视频在文章的最后喔。</p><p>最近有幸跟着大管家 Hebe 来到了广州的一家 VR 工作室，跟着工作室的梓龙哥哥体验了一下当前最 hit 的 VR 眼镜，玩的是 HTC 的 <a href="https://www.vive.com/">Vive</a>。</p><span id="more"></span><h2 id="好奇宝宝"><a href="#好奇宝宝" class="headerlink" title="好奇宝宝"></a>好奇宝宝</h2><p>首先体验的是 Hebe。在她玩海底探险、滑雪等等的游戏的时候，我在旁边的大屏幕看到她 VR 眼镜里的景象，心里大概有了底，稍微知道了游戏怎么玩。在 Hebe 玩的过程中，我着急地问手柄会不会像 <a href="http://wii.com/">Wii</a> 那样会有震感反馈，眼镜会不会有什么特别的反应，她都说没有。听完后我心里咯噔了一下，VR 好像也不是很真实啊。这时在玩滑雪游戏的 Hebe 问了一个问题，「为什么我会有失重的感觉？」，「眼睛骗了你啊。」我不由自主地说了出来，「不，眼睛不会骗你的，所看即所得。」梓龙哥哥回答道。「那是为什么啊？」我忍不住地追问，他略带神秘地回答说：「到时候你就知道了。」</p><p>好吧，怀着忐忑又期待的心情，我开始了 VR 眼镜的体验之旅。一开始从戴头盔就出现了小小的问题，因为近视的缘故，戴着近视眼镜再戴头盔，不管怎样调整，都会有一点点压着眼镜，眼镜又压着鼻梁，所以有点不舒服，不过这种感觉在之后沉浸到游戏当中，就会被忽略了。再是手柄没有反应，调试了几次后还是只能进入「重启试试」的程序，折腾了一小会后终于可以愉快地玩耍了。</p><h2 id="视觉冲击"><a href="#视觉冲击" class="headerlink" title="视觉冲击"></a>视觉冲击</h2><p>戴着 VR 眼镜，往四周看，是一片无边的平原，界面悬浮在空中；抬头看，眼前是一片无尽的星空，闪烁灿烂。这绝对不是目前的屏幕游戏能带来的开阔感，这是 360° 无死角的视觉效果，要说前者带来的开阔感冲击，估计能有《三体》里面人从三维世界进入四维世界时所感受到的视觉冲击的万分之一。是的，这是一个很高的评价了。</p><p>第一个体验式的游戏还是海底探险，我在一艘浅海的沉船上，周围很明亮，鱼群在海里游来游去，听到了海水流动的声音。由于看过 Hebe 玩，所以操作还蛮顺畅的，拿着手柄去摸海底的鱼。虽然手柄没反馈没震感，但是看到鱼儿会避开感觉还是挺新奇的，于是就到处挥动手柄惊扰鱼群和骚扰巨型鲸鱼了。梓龙哥哥看我这么随性，于是指导我切换到另一个场景。在选择场景的时候，看到场景的图片是一只张大嘴的鲨鱼，加上被梓龙哥哥吓唬说会有点恐怖，开始有点害怕了。进入游戏后，我毫无预兆地进入了一个极度黑暗和极度安静的地方。扳动手柄的扳机，一束手电筒的光照在了一堆白骨上，我那个去，好可怕，挥动手电筒，看到周围都是白骨，巨型的白骨。仔细一看，啊，原来我是在一条鲸鱼的骨骸里。我很害怕地问梓龙哥哥，会不会有恐怖的东西突然出现啊，他说可能有喔，你看看周围嘛。迫于无奈而又好奇，我只能打着手电筒小心翼翼地走走看看了，气氛阴深又可怕。「抬头看看啊。」梓龙哥哥提醒说。我抬头一看，「哇，好美好美」，发着幽幽蓝光的水母和鱼在头顶成群游过，我不禁发出了赞叹。这时他才解释说，这是深海探索的场景喔。怪不得这么黑这么安静了，原来是在海底深处啊。这是看了那么多 Discovery 的深海纪录片也无法想象出来的感觉，充满了黑暗和安静带来的恐惧以及意想不到的美丽，也许跟进入宇宙深处那种漆黑得看不到尽头可是星光璀璨美丽得目不转睛的感觉一样吧。看着看着，思绪不禁飘到了《三体》里的场景了。</p><p>深海探索的视觉冲击真的很震撼和很直接，估计我这辈子都不会有机会到大海和宇宙的深处吧，可是因为 VR 技术的存在，小小地实现了这个愿望，开拓了想象力，也让我对 VR 眼镜更有好感了。深海探索作为 VR 眼镜的第一个体验游戏还是挺不错的，感受到了 VR 眼镜带来的无法想象的视觉体验，也可以习惯一下 VR 眼镜的手柄操作。</p><h2 id="失重体验"><a href="#失重体验" class="headerlink" title="失重体验"></a>失重体验</h2><p>我接着进入了一个新的游戏——滑雪，这也是还没轮到我玩的时候，我最好奇的一个游戏了。游戏很简单，使用手柄模仿滑雪的动作，侧头控制滑雪方向避开障碍物就可以了。在开始滑雪的时候，划动手柄的确没什么感觉，手柄没有反馈的确是有点不足。这时梓龙哥哥提醒我划快一点，于是我快速划动手柄然后……我那个去，居然飞起来，然后又加速地掉了下去，十几米的垂直高度，这他妈是悬崖啊，就这么冲了下去，失重的感觉随之而来，吓了我一跳，腿都有点软了，心里默默地说了好几句我去。这时他解释说，「这是眼睛骗了你的小脑，让你以为真的有这么高，所以才会有失重感啊。」这真的跟玩跳楼机的失重感是一样的啊。之后再体验玩过山车的场景，失重与离心的感觉更加强烈了，不禁「啊」了好几声，Hebe 都在笑我了。幸好我还是比较喜欢这些刺激一点的游戏，在想如果还有体感，比如在滑雪时觉得冷，在冲下悬崖和玩过山车的时候有迎面而来的风，那感觉肯定会更真实更刺激。所以也难怪那些喜欢极限运动的爱好者，即使危险但仍会勇敢地去尝试，在我通过 VR 眼镜体验后，也是能稍微感受到了他们所追求的刺激的感觉了。</p><h2 id="恐怖袭击"><a href="#恐怖袭击" class="headerlink" title="恐怖袭击"></a>恐怖袭击</h2><p>High 了一轮后，Hebe 就提醒梓龙哥哥说，给 Yui 玩恐怖的啊，她说想玩的。啊啊啊啊，简直就是 no zuo no die 啊，我略带担忧地问梓龙哥哥，会不会很恐怖，我会很害怕的啊。可是他就像完全听不到我说的，就让我进入了一个新的游戏：打僵尸……我的眼前立马变成了一片废墟，黑乎乎的，只有惨淡的月光照在废墟上，加上一些恐怖的声音，我吓得「啊」的一声立马就蹲下来了，狂按手柄上的板机乱射一番。这时他很无奈地说，「我们都还没进去游戏，还在 loading 画面啊……不要蹲下，站起来啊。」引来 Hebe 的一阵狂笑。好吧，虽然真的很怕，可是谁怕谁啊，玩就玩呗。于是鬼使神差般听着他的指导进入了游戏，他鼓励我说，「这一关就只有 5 只僵尸，很简单的。」我心想，怎么说我也玩过街机的打僵尸，5 只僵尸没难度啊。想着的时候，就看到远处一只僵尸向我走过来了，浑身都是红色的，面目全非，于是我举起手柄向他开枪。射了几枪还没死，僵尸也离我远来越近了，我也吓到了，不停地尖叫，同时也有一只僵尸在更远处向我走来了，我很着急只能乱射一番。「要爆头啊，对准开枪！」梓龙哥哥喊道。于是我稍微冷静下来对准僵尸的头部狂按板机，终于射中了他们的头部，2 只僵尸倒下了。这时梓龙哥哥提醒说，「看看你的左手边。」啊啊啊啊啊啊我去你妈的，不知何时左边走来了一只僵尸，现在离我只有不到一米的距离，还向我扑来要攻击我。我立马往后走开，一边尖叫着，一边拿着手枪狂射他，连续不断的尖叫声响彻房间。终于射死了，机智的我立马往四周看会不会有僵尸的突袭。可是一转身又有2只离我十分近的僵尸，真的是一波未平，一波又起，又一阵尖叫声，还夹杂着「我不要玩了我不要玩了，妈的真他妈的太恐怖了！」乱射一番后终于把最后一只僵尸射死，游戏也终于结束了。我脱下 VR 眼镜，发现自己满头大汗，眼睛也湿润了，不知道这是玩 high 了的汗还是吓坏了的泪。</p><h2 id="赛后报告"><a href="#赛后报告" class="headerlink" title="赛后报告"></a>赛后报告</h2><p>VR 眼镜说是还原现实，其实我觉得更像是制造了一个新的现实。这句话很难理解吧，毕竟现在 VR 的技术有限，VR 眼镜看到的就是和现实世界看到的不一样，还是会有童话故事的游戏感。是的，它的确通过眼睛骗过了我们的小脑，会造成失重感和失平衡感，还通过声音等等制作了跟现实相似的场景，但是眼睛看到的还是电脑造出来的景象，还是让人感觉到这是电脑效果。再是上面多次提到的手柄没有反馈的震感，没有场景带来的体感，我猜测，多玩几次后，视觉的冲击就会降低，其他感官的差异体验就会暴露得更明显，真实感就会减弱了。就像我猜测我再多玩几次打僵尸的游戏就不会那么害怕一样 🙂 （呵呵呵呵我不信 from 场外观众）最后一点就是玩后确实会造成眩晕感。然而即使可能会习惯，VR 技术带给我的体验感受还是无法想象的，娱乐化的 VR 产物也会是一个趋势吧。</p><p>最近看第三季的《黑镜》，也是有围绕虚拟现实的主题，如果不是我体验过 VR 眼镜，我就不会那么理解 Cooper 的恐惧感吧。话说回来，会不会有一天能玩到《三体》里面的「三体 VR 游戏」，这谁知道呢。</p><center>又要威又要戴头盔之胆小鬼的 VR 初体验温馨提示，请大家关小音量再观看喔 🙂<iframe frameborder="0" width="640" height="498" src="https://v.qq.com/iframe/player.html?vid=j0339ujr5vg&tiny=0&auto=0" allowfullscreen></iframe></center>]]></content>
      
      
      <categories>
          
          <category> Friend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTC </tag>
            
            <tag> VR </tag>
            
            <tag> Vive </tag>
            
            <tag> Yui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js 下一波大浪潮</title>
      <link href="/2016/10/18/the-next-big-thing-node-js/"/>
      <url>/2016/10/18/the-next-big-thing-node-js/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/18/the-next-big-thing-node-js/node_js_development.jpg" class="" title="Node.js Development"><p>前段时间写了一篇名为《<a href="../../../../2016/10/02/time-to-learn-swift">是时候该学 Swift 了</a>》的文章，强力安利了一下 Swift。也许很多人，尤其是老程序员们，可能并不是很认同这个观点，觉得 Swift 还是无法与传统的 C、C++、Java 之类的抗衡。不过没关系，我们今天不是继续安利 Swift，我们今天是来安利 <a href="https://nodejs.org/">Node.js</a> 的。</p><p>其实本文的英文，在我的想法中应该是：”The next big thing: Node.js”，然而，好像很难翻译成中文的样子，于是乎就接地气一点的，把中文名写成了《Node.js 下一波大浪潮》。</p><span id="more"></span><p>为什么要在今天这个时间点来安利呢？因为，据说今天是 <a href="https://github.com/nodejs/LTS#lts-schedule">Node.js v6 要准备 LTS 的日子了</a>。</p><img src="/2016/10/18/the-next-big-thing-node-js/schedule.png" class="" title="LTS Schedule"><p>按照计划来看的话，2016 年 10 月 18 日，也就是今天应该 Node.js v6 就会成为 LTS(Long-term Support) 版本了。考虑到时区的问题，官网现在并没有更新。当然，也不排除跳票的可能性，现时最新版本的 Node.js 是 <code>v6.8.1</code>。</p><h2 id="重新认识-Node-js"><a href="#重新认识-Node-js" class="headerlink" title="重新认识 Node.js"></a>重新认识 Node.js</h2><p>其实早年的时候，我对 Node.js 的印象并不是很好。混乱的版本发布，乱七八糟的调用，太过于灵活的语法，还有社区的分裂等。当然，我自己平常并不经常使用 JavaScript 作为主要的编程语言可能也是问题之一，毕竟不少人觉得 JavaScript 是世界上最好用的语言。而且坊间也时有传闻，不少原来用 Node.js 搭建的网站，也逐渐地使用其它语言重写了。</p><p>重新关注 Node.js 是在大概 8 月份的时候。因为做项目的原因，想要寻找一种又快速效率又高，又可以复用前端工程师的方法。于是乎在 <a href="https://twitter.com/reducm">JAS</a> 同学的「布道」下，开始重新了解起 Node.js。</p><h2 id="先说说版本"><a href="#先说说版本" class="headerlink" title="先说说版本"></a>先说说版本</h2><p>让我重新考虑 Node.js 的一个主要原因是版本，也许说出来很多人不信，但，这是真的。</p><p>Node 社区闹过分裂，现在好了。Node.js 跟 io.js 又重新合并到一起了。然后，把之前混乱的版本号终于统一起来了。</p><p>而且，最最重要的是，他们有了 LTS 版本了！！！这意味着什么？意味着，你再也不会出现昨天编写的代码，明后天部署到服务器发现，TMD 语法不兼容了，NPM 包不行了，版本太旧了，然后你就要花很多的时间重新梳理代码，重新处理依赖关系等。</p><p>而 JavaScript 的粉丝们，大多年轻充满热情，又非常热衷于新东西。这也导致到他们很少考虑长期商业使用的情况，但对于企业来说，程序能长期稳定的运行才是最重要的。</p><p>早期的时候因为不稳定，运维人员往往还要做很多监控手段，一旦发现服务器挂了，就要赶紧重启相关的服务，也是让人觉得很痛苦的。当然，为了服务器可以长期稳定地运行，现在还是需要做这些工作的。</p><h2 id="ECMAScript-6"><a href="#ECMAScript-6" class="headerlink" title="ECMAScript 6"></a>ECMAScript 6</h2><p>也许大部分人对于 <a href="https://en.wikipedia.org/wiki/ECMAScript">ECMAScript</a> 这个名字很陌生，然而它才是 JavaScript 真正的名字。JavaScript 实际上是当年 <a href="https://en.wikipedia.org/wiki/Netscape">Netscape</a> 为了借着 Java 这个热点炒作自己而起的名字，它最早在 Netscape 发布的时候叫做 LiveScript。就我个人而言，我觉得其实 LiveScript 反而还好听一点。</p><p>那为什么叫 ECMAScript 呢？因为 1996 年的时候 Netscape 把 JavaScript 递交到了 <a href="http://www.ecma-international.org/">ECMA International</a> 以便对其进行标准化。而且标准化过后的名字就是 <strong>ECMAScript</strong> 了。然而这个名字太傻了，别说普罗大众，连攻城狮们都嫌弃，所以除了在很正式的会议和标准化文档中，大家还是习惯使用 JavaScript 这个名字来指代。</p><p>而 <a href="http://es6-features.org/#Constants">ECMAScript 6 (ES6)</a> 实际上是 2015 年已经完成了标准化的 ECMAScript 的第六个修正版，一般大家简称为 ES6。</p><p>而这个 ES6 就厉害了，引入了超级讨好的语法糖、解构、let 和 const 等新特性。简单来说，很多的语法都得到了简化，使得开发速度得以提升。最重要的是，JavaScript 引入了「类」，变成了真正意义上的面向对象语言。还有「模块」特性的引入，使代码变得更加简洁和可维护。当然，还有更多语法相关的改善，但本文的重点不是介绍 JavaScript ES6，就不展开了介绍了。</p><p>总之，ES6 很未来，很先进，很好用，很流弊，这样。</p><h2 id="异步和-Callback-Hell"><a href="#异步和-Callback-Hell" class="headerlink" title="异步和 Callback Hell"></a>异步和 Callback Hell</h2><p>Node.js 的效率高是出了名的，这个就不需要单独再拿篇幅来写了。但是这种高性能是建筑在异步处理这一实现之上的。类似于 Nginx，所有的处理都需要用到回调（Callback），否则就会造成堵塞（Blocking），甚至比用传统的 Apache 更慢。</p><p>当然，有利有弊，让人又爱又恨的 Node.js，最要命的一点就是其 Callback Hell，它会让代码的可读性大大降低。于是乎，后来大家就开始使用 <a href="https://www.promisejs.org/">Promise</a> 来处理异步调用了。现在 ES6 可以使用生成器（Generators）来解决这个问题，再也不用担心 Callback Hell 的问题了。更好的方式是使用 Babel 在 ES6 实现 <strong>await</strong> 和 <strong>async</strong> 功能，这样可以进一步地提升开发效率和代码可读性。写代码感觉就像是编写同步代码一样，让研发人员专注在功能和逻辑的开发上，而不是操心如何处理一层又一层的回调。</p><p>举个 Callback Hell 的例子，像下面这样的代码，当你要理解逻辑的时候，就会变得异常的痛苦：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">a</span>(<span class="keyword">function</span> (<span class="params">resultsFromA</span>) &#123;</span><br><span class="line">  <span class="title function_">b</span>(resultsFromA, <span class="keyword">function</span> (<span class="params">resultsFromB</span>) &#123;</span><br><span class="line">    <span class="title function_">c</span>(resultsFromA, <span class="keyword">function</span> (<span class="params">resultsFromC</span>) &#123;</span><br><span class="line">      <span class="title function_">d</span>(resultsFromA, <span class="keyword">function</span> (<span class="params">resultsFromD</span>) &#123;</span><br><span class="line">        <span class="title function_">e</span>(resultsFromA, <span class="keyword">function</span> (<span class="params">resultsFromE</span>) &#123;</span><br><span class="line">          <span class="title function_">f</span>(resultsFromA, <span class="keyword">function</span> (<span class="params">resultsFromF</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(resultsFromF);</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="实现-Node-js-的引擎"><a href="#实现-Node-js-的引擎" class="headerlink" title="实现 Node.js 的引擎"></a>实现 Node.js 的引擎</h2><p>现在的 Node 基本上都是基于 <a href="https://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29">Google Chrome V8 引擎</a>实现的。可以说，如果 Google 没有开源 V8 引擎，就不可能有 Node.js 的春天。包括知名的 <a href="https://www.mongodb.com/">MongoDB</a> 也离不开 V8 引擎的支持。</p><p>然后，随着 Microsoft 最近越来越开放，Google Chrome V8 的竞争对手也来了。那就是 Chakra，微软最新一代浏览器 Edge 的御用 JavaScript 处理引擎，据说在某些特定情况下，其处理效率远远超过 V8 引擎。而且 <a href="https://github.com/Microsoft/ChakraCore">Chakra 源代码</a>可以直接在 GitHub 上找到。Node.js 官方的代码仓库，也能找到<a href="https://github.com/nodejs/node-chakracore">基于 ChakraCore 的 Node.js</a>。</p><p>不得不说，未来这个世界，真的是越来越开放，越来越合作共赢了。这也意味着，在将来 Node.js 将获得更好的跨平台支持。随着微软的进入，也许将来 Node.js 不仅仅在服务端和浏览器端有所建树，说不定 PC 端也能用 JavaScript 来开发了。还有原来的 <a href="http://phonegap.com/">PhoneGap</a>，现在也成了 Apache 基金会旗下的 <a href="https://cordova.apache.org/">Cordova</a>，在性能不是主要需求的情况下，我们又怎么能知道 JavaScript 是否也会横扫移动端呢？</p><h2 id="配套工具"><a href="#配套工具" class="headerlink" title="配套工具"></a>配套工具</h2><p>第一个要介绍的就是 <a href="http://mean.io/">MEAN 大杂烩</a>，这个是一个合集，包括了：</p><ul><li><a href="https://www.mongodb.com/">MongoDB</a></li><li><a href="https://expressjs.com/">Express.js</a></li><li><a href="https://angularjs.org/">AngularJS</a></li><li><a href="https://nodejs.org/">Node.js</a></li></ul><p>基本上就是你开发一个 Web 应用的所有方面都覆盖到了，这就跟我们 2000 年左右流行的 LAMP(Linux + Apache + MySQL + PHP) 一样。基本上就是一个开箱即用的全家桶，如果想省事的话，直接用全家桶吧。</p><p>除了全家桶，其实还有很多的框架可以选择，比如：</p><ul><li><a href="http://koajs.com/">Koa</a></li><li><a href="http://restify.com/">restify</a></li><li><a href="http://hapijs.com/">hapi</a></li><li><a href="http://sailsjs.org/">Sails.js</a></li><li><a href="https://www.meteor.com/">Meteor</a></li></ul><p>基本上从 Web 到 API 到轻量应用全部都覆盖到了，剩下的就是你的 Idea 和动手能力了。</p><p>而且测试也有很多不错的框架可以使用，比如：</p><ul><li><a href="https://mochajs.org/">Mocha</a></li><li><a href="http://chaijs.com/">Chai</a></li><li><a href="http://sinonjs.org/">Sinon.js</a></li><li><a href="http://zombie.js.org/">Zombie.js</a></li></ul><p>当然，还有其他很多不错的框架，并未能一一列举，简而言之，就是整个社区来讲，现在比较成熟了，而且可以选择的框架也很丰富，用别人造好的轮子，可以快速地实现产品原型。</p><h2 id="Next-Big-Thing"><a href="#Next-Big-Thing" class="headerlink" title="Next Big Thing?"></a>Next Big Thing?</h2><p>没有入坑的小伙伴，可以考虑入坑了。新版的 Node.js 虽然真的很吸引人，但我个人感觉这还是一个坑。为什么说是坑呢？因为不管什么语言到了一定的程度，总是会有各种各样的坑是规避不了的。但社会总是会进步的，IT 业也是一样。你今天让工程师用 MFC 去写一个 Windows 的应用程序，我估计大部分人更情愿用 C#，毕竟两者的效率相差实在是太大了。</p><p>工具除了好玩之外，根本还是要从解决实际生产中的问题为出发点。之前我不愿意尝试 Node.js，是因为我觉得它更像是一个极客的玩具而不是一个生产力工具。今天我们也许该尝试一下，看看 Node.js 对于我们是个惊喜还是有惊无喜。说不定，Node.js 真的就是下一个 Big Thing 呢？期待……</p>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> ECMAScript </tag>
            
            <tag> JavaScript </tag>
            
            <tag> LTS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将 DDS 格式的贴图转换成 PNG 格式</title>
      <link href="/2016/10/18/convert-dds-texture-to-png-format/"/>
      <url>/2016/10/18/convert-dds-texture-to-png-format/</url>
      
        <content type="html"><![CDATA[<p>最近为了实现更好更炫酷的 UI 交互效果，我们在尝试使用 3D UI 来做，在网上找了些模型，发现很多 dump 出来模型使用的都是 <a href="https://en.wikipedia.org/wiki/DirectDraw_Surface">DDS(DirectDraw Surface)</a> 格式的纹理贴图，而不是通用的诸如 PNG、JPG、BMP、TIF 等文件格式。</p><p>由于我主要使用 macOS 作为主力电脑，所以总不想再开个虚拟机去转换这些东西。而且网上很多转换工具也都不是特别好用。最后是使用了 <a href="http://www.imagemagick.org/">ImageMagick</a> 这个大杀器来解决问题的。</p><span id="more"></span><p>Mac 下面安装很容易，用 <a href="http://brew.sh/">Brew</a> 就好了，这个软件我已经「安利」过很多次，不再赘述。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ brew install imagemagick</span><br><span class="line">==&gt; Installing dependencies <span class="keyword">for</span> imagemagick: libtool, jpeg, libpng, libtiff, freetype</span><br><span class="line">==&gt; Installing imagemagick dependency: libtool</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/libtool-2.4.6_1.sierra.bottle.tar.gz</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Pouring libtool-2.4.6_1.sierra.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">In order to prevent conflicts with Apple<span class="string">&#x27;s own libtool we have prepended a &quot;g&quot;</span></span><br><span class="line"><span class="string">so, you have instead: glibtool and glibtoolize.</span></span><br><span class="line"><span class="string">==&gt; Summary</span></span><br><span class="line"><span class="string">🍺  /usr/local/Cellar/libtool/2.4.6_1: 70 files, 3.7M</span></span><br><span class="line"><span class="string">==&gt; Installing imagemagick dependency: jpeg</span></span><br><span class="line"><span class="string">==&gt; Downloading https://homebrew.bintray.com/bottles/jpeg-8d.sierra.bottle.2.tar.gz</span></span><br><span class="line"><span class="string">######################################################################## 100.0%</span></span><br><span class="line"><span class="string">==&gt; Pouring jpeg-8d.sierra.bottle.2.tar.gz</span></span><br><span class="line"><span class="string">🍺  /usr/local/Cellar/jpeg/8d: 19 files, 708.2K</span></span><br><span class="line"><span class="string">==&gt; Installing imagemagick dependency: libpng</span></span><br><span class="line"><span class="string">==&gt; Downloading https://homebrew.bintray.com/bottles/libpng-1.6.25.sierra.bottle.tar.gz</span></span><br><span class="line"><span class="string">######################################################################## 100.0%</span></span><br><span class="line"><span class="string">==&gt; Pouring libpng-1.6.25.sierra.bottle.tar.gz</span></span><br><span class="line"><span class="string">🍺  /usr/local/Cellar/libpng/1.6.25: 25 files, 1.2M</span></span><br><span class="line"><span class="string">==&gt; Installing imagemagick dependency: libtiff</span></span><br><span class="line"><span class="string">==&gt; Downloading https://homebrew.bintray.com/bottles/libtiff-4.0.6_2.sierra.bottle.tar.gz</span></span><br><span class="line"><span class="string">######################################################################## 100.0%</span></span><br><span class="line"><span class="string">==&gt; Pouring libtiff-4.0.6_2.sierra.bottle.tar.gz</span></span><br><span class="line"><span class="string">🍺  /usr/local/Cellar/libtiff/4.0.6_2: 261 files, 3.4M</span></span><br><span class="line"><span class="string">==&gt; Installing imagemagick dependency: freetype</span></span><br><span class="line"><span class="string">==&gt; Downloading https://homebrew.bintray.com/bottles/freetype-2.7.sierra.bottle.tar.gz</span></span><br><span class="line"><span class="string">######################################################################## 100.0%</span></span><br><span class="line"><span class="string">==&gt; Pouring freetype-2.7.sierra.bottle.tar.gz</span></span><br><span class="line"><span class="string">🍺  /usr/local/Cellar/freetype/2.7: 61 files, 2.4M</span></span><br><span class="line"><span class="string">==&gt; Installing imagemagick</span></span><br><span class="line"><span class="string">==&gt; Downloading https://homebrew.bintray.com/bottles/imagemagick-6.9.6-2.sierra.bottle.tar.gz</span></span><br><span class="line"><span class="string">######################################################################## 100.0%</span></span><br><span class="line"><span class="string">==&gt; Pouring imagemagick-6.9.6-2.sierra.bottle.tar.gz</span></span><br><span class="line"><span class="string">🍺  /usr/local/Cellar/imagemagick/6.9.6-2: 1,465 files, 22.5M</span></span><br></pre></td></tr></table></figure><p>安装好以后，进入需要转换格式的贴图文件目录，运行如下命令，即可一键转换：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> *.dds</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    convert <span class="string">&quot;<span class="variable">$file</span>&quot;</span> <span class="string">&quot;<span class="subst">$(basename <span class="string">&quot;<span class="variable">$file</span>&quot;</span> .dds)</span>.png&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>用 Cinema 4D、Maya 等导入 OBJ 文件，就可以正常贴图了。</p><p>我们也可以使用 <code>identify</code> 命令，来看看 <code>ImageMagick</code> 支持哪些文件格式，我这里只关心 <code>DDS</code> 的处理，好像新版本的已经支持 <code>DDS</code> 的读写了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ identify -list format | grep DDS</span><br><span class="line">      DDS* DDS       rw+   Microsoft DirectDraw Surface</span><br><span class="line">     DXT1* DDS       rw+   Microsoft DirectDraw Surface</span><br><span class="line">     DXT5* DDS       rw+   Microsoft DirectDraw Surface</span><br></pre></td></tr></table></figure><p>参考：<a href="http://superuser.com/questions/159379/convert-dds-to-png-using-linux-command-line">Convert DDS to PNG using linux command line</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Brew </tag>
            
            <tag> 3D </tag>
            
            <tag> Cinema 4D </tag>
            
            <tag> DDS </tag>
            
            <tag> ImageMagick </tag>
            
            <tag> Maya </tag>
            
            <tag> PNG </tag>
            
            <tag> Texture </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 14 - JUMPBAR</title>
      <link href="/2016/10/15/swift-project-14-jumpbar/"/>
      <url>/2016/10/15/swift-project-14-jumpbar/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/15/swift-project-14-jumpbar/project_14.gif" class="" title="JUMPBAR"><p>主要学习的内容：</p><ul><li>好吧，只是多增加了一个 UITableViewDataSource 的方法就实现了，没有难度</li><li>用 Tuple 替换 Dictionary 重写了一下数据的处理</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/uikit/uitableviewcontroller">UITableViewController</a></li><li><a href="https://developer.apple.com/reference/uikit/uitableviewdatasource">UITableViewDataSource</a></li></ul><p>参考：</p><ul><li><a href="http://www.edumobile.org/ios/indexed-table-views-in-swift/">Indexed Table Views In Swift</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2014">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 14</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 13 - STICKY SECTION HEADERS</title>
      <link href="/2016/10/15/swift-project-13-sticky-section-headers/"/>
      <url>/2016/10/15/swift-project-13-sticky-section-headers/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/15/swift-project-13-sticky-section-headers/project_13.gif" class="" title="STICKY SECTION HEADERS"><p>主要学习的内容：</p><ul><li>用代码实现了 Section 的显示，主要的是 UITableViewDataSource 而不是 UITableView 和 UITableViewDelegate</li><li>了解了 Dictionary 的基本用法，全编程实现 Table Row 和 Section Header 显示</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/uikit/uitableviewcontroller">UITableViewController</a></li><li><a href="https://developer.apple.com/reference/uikit/uitableviewdatasource">UITableViewDataSource</a></li></ul><p>参考：</p><ul><li><a href="http://stackoverflow.com/questions/24640990/how-do-i-get-the-key-at-a-specific-index-from-a-dictionary-in-swift">How do I get the key at a specific index from a Dictionary in Swift?</a></li><li><a href="https://www.hackingwithswift.com/example-code/uikit/how-to-add-a-section-header-to-a-table-view">How to add a section header to a table view</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2013">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 13</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 12 - ADD NEW ITEM</title>
      <link href="/2016/10/15/swift-project-12-add-new-item/"/>
      <url>/2016/10/15/swift-project-12-add-new-item/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/15/swift-project-12-add-new-item/project_12.gif" class="" title="ADD NEW ITEM"><p>主要学习的内容：</p><ul><li>进一步了解了 TextView 对于键盘的处理，包括如何直接按 “Done” 来完成输入</li><li>键盘界面上 Return 变为 Done</li><li>处理了一个 Xcode 8 &#x2F; Swift 3 NavigationController PopView 的 warning</li><li>在之前单向推送数据的基础上，了解了如何把数据反向传回上一级 Controller（用 Delegate）</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/uikit/uitableviewcontroller">UITableViewController</a></li><li><a href="https://developer.apple.com/reference/uikit/uinavigationcontroller">UINavigationController</a></li><li><a href="https://developer.apple.com/reference/uikit/uitextview">UITextView</a></li></ul><p>参考：</p><ul><li><a href="http://stackoverflow.com/questions/987975/how-do-i-give-a-uitextview-focus-programatically">How do I give a UITextView focus programatically?</a></li><li><a href="http://stackoverflow.com/questions/31886720/change-return-button-function-to-done-in-swift-in-uitextview">Change ‘Return’ button function to ‘Done’ in swift in UITextView</a></li><li><a href="http://stackoverflow.com/questions/37843049/xcode-8-swift-3-expression-of-type-uiviewcontroller-is-unused-warning">Xcode 8 &#x2F; Swift 3: “Expression of type UIViewController? is unused” warning</a></li><li><a href="https://www.hackingwithswift.com/example-code/system/how-to-pass-data-between-two-view-controllers">How to pass data between two view controllers</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2012">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 12</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 11 - DELETING AND REARRANGING</title>
      <link href="/2016/10/15/swift-project-11-deleting-and-rearranging/"/>
      <url>/2016/10/15/swift-project-11-deleting-and-rearranging/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/15/swift-project-11-deleting-and-rearranging/project_11.gif" class="" title="DELETING AND REARRANGING"><p>主要学习的内容：</p><ul><li>进一步了解了 UITableViewDelegate 的使用方法</li><li>删除 table row 的内容</li><li>删除的时候显示动画</li><li>处理 Table 显示内容的顺序调整</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/uikit/uitableviewcontroller">UITableViewController</a></li><li><a href="https://developer.apple.com/reference/uikit/uitableviewdelegate">UITableViewDelegate</a></li></ul><p>参考：</p><ul><li><a href="http://stackoverflow.com/questions/9471642/swipe-to-delete-tableview-row">Swipe To Delete TableView Row</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2011">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 11</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 10 - PULL TO REFRESH TABLE VIEW</title>
      <link href="/2016/10/15/swift-project-10-pull-to-refresh-table-view/"/>
      <url>/2016/10/15/swift-project-10-pull-to-refresh-table-view/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/15/swift-project-10-pull-to-refresh-table-view/project_10.gif" class="" title="PULL TO REFRESH TABLE VIEW"><p>主要学习的内容：</p><ul><li>了解了 UIRefreshControl 的使用方法，它是 TableView 的一个成员，可以在 Storyboard 里面设置是否开启 Refreshing，开启则初始化实例，否则为 nil</li><li>学会了一种 Swift 3.0 中的延时方式</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/uikit/uirefreshcontrol">UIRefreshControl</a></li></ul><p>参考：</p><ul><li><a href="https://www.andrewcbancroft.com/2015/03/17/basics-of-pull-to-refresh-for-swift-developers/">Basics of Pull to Refresh for Swift Developers</a></li><li><a href="http://stackoverflow.com/questions/30430550/how-to-create-an-empty-array-in-swift">How to create an empty array in Swift?</a></li><li><a href="http://stackoverflow.com/questions/38031137/how-to-program-a-delay-in-swift-3">How to program a delay in Swift 3</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2010">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 10</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>错在哪里？</title>
      <link href="/2016/10/14/what-s-wrong/"/>
      <url>/2016/10/14/what-s-wrong/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/14/what-s-wrong/sharing_economy.jpg" class="" title="Sharing Economy"><blockquote><p>此文为「<strong>数码小王子</strong>」同学的原创投稿，非 Tommy 出品。本文原作者之观点不代表本人及本网站的任何观点，仅代表其个人或组织，特此声明。</p></blockquote><p>生活中总有一些事情会触碰到你的神经，而触碰到我神经的是这么一件事。</p><span id="more"></span><img src="/2016/10/14/what-s-wrong/1.jpg" class=""><p>某日在刷朋友圈，看到好友的一张照片。想必你和我一样，怎么看都不知道错在哪里。于是我回复这位母亲：是否交了白卷，发下来再填上去的？</p><p>回头想想这个可能性很低，小学生的认知程度不会这么差。哪怕是幼儿园也会了吧。</p><p>这位母亲公布了事情的缘由，原来是少画了数字外的圆圈，３ 和 ③ 的区别。事后再填上那个揪心的圆圈。</p><p>分析一下，小朋友的认知没有问题，起码是全部答对了。落得这个下场，对于心灵的打击比答错还要难受。我觉得也不能太怪责老师，毕竟还有很多同学是答上画圈的数字。究其原因，是我国特色的应试教育。最失败的应该是万般无奈的教育制度。园丁培养出来是修整统一的花朵，扼杀了多少有创造的灵魂！怪不得我国是山寨大国，十万元圆你保时捷梦。</p><p>国庆过后，一纸文书，滴滴的下场成为了新闻热点。多少借钱买车，每天在塞车道路上奋斗的司机，心寒到了极点。看到媒体不断采访的司机，大都是心灰意冷。互联网上各种分析大放阙词，然而大家都在看滴滴如何死法。</p><p>生活在广州，外地牌一向都是常见的。只是有了共享经济进场之后，外地牌变得更多。讲真，未有 Uber、滴滴以前，广州就不塞车吗？天河还不是每天都堵到屎一样。</p><p>上个月，我爸接受新事物，主动要注册滴滴打车去江南西。注册成功之后，滴滴送了两张劵，来回都是 10 元以内，还送到小区内家门口。不可否定，未提价之前的打车 App，确实是出行最佳性价比，极大方便着广大市民的出行。</p><p>可惜，滴滴触动了太多人的利益，落得如此下场。</p><p>而触动到我神经的是<a href="http://mobike.com/">摩拜单车</a>被城管没收。国庆期间，相信大家都接触到这个好玩的新鲜事物，大街小巷都能见到造型特立独行的摩拜单车。</p><img src="/2016/10/14/what-s-wrong/2.jpg" class=""><p>看到新事物，我往往很喜欢想漏洞，总觉得不靠谱。以国民的素质来看，随手就可以不解锁，直接抱起摩拜就跑。胡乱丢弃，甚至离谱到落入废品站。</p><p>又或是肢解摩拜。看了点资料才知道，摩拜单车为了防肢解，创新 12 项发明专利、11 项实用新型专利和 5 项外观设计专利。目的只是为了难以肢解和肢解了也和其他单车零件不通用，卖不到好价钱。这点已经比 <a href="http://www.ofo.so/">ofo 共享单车</a>强多了。</p><img src="/2016/10/14/what-s-wrong/3.jpg" class=""><p>然而摩拜最大的敌人却是城管，随便安你个轮停乱放的罪名，就可以大量没收！可伶的摩拜公司，你有预想到这笔赎回单车的费用吗？</p><p>打车 App 冲击了的士，让奢侈的扬手即停变得平民化。而单车 App 更让大众回归到绿色出行，到家门口的最后一公里变得无比轻松。怎么看都是便民的大好事，可为什么就被打压了呢？！</p><p>科技改变生活，甚至改变了利益的获取方式。共享经济触碰了谁的蛋糕？难道共产主义不是人类的进化目标吗？</p><p>我很失望，以往觉得生活环境进步缓慢，只是慢于一些发达国家。而共享经济的出现，这样打压很明显是开倒车。就出行问题而言，谁是祸害民生的最大祸首？</p><p>滴滴经过磕磕碰碰的几年统一了江山又如何？单车 App 方便了出行又如何？答对了括号中的答案又如何？还是一个凌厉的红叉！</p><p>希望大家多去支持共享经济！</p>]]></content>
      
      
      <categories>
          
          <category> Friend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数码小王子 </tag>
            
            <tag> Economy </tag>
            
            <tag> Mobike </tag>
            
            <tag> Sharing </tag>
            
            <tag> ofo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 09 - ADD PHOTO FROM CAMERA ROLL</title>
      <link href="/2016/10/14/swift-project-09-add-photo-from-camera-roll/"/>
      <url>/2016/10/14/swift-project-09-add-photo-from-camera-roll/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/14/swift-project-09-add-photo-from-camera-roll/project_09.gif" class="" title="ADD PHOTO FROM CAMERA ROLL"><p>主要学习的内容：</p><ul><li>了解学习 UIImagePickerController &#x2F; UIImagePickerControllerDelegate</li><li>iOS 10 新的隐私设定，不提前声明要访问隐私数据的话，App 直接 Crash</li><li>Info.plist 中增加 NSPhotoLibraryUsageDescription 声明以便访问 Photo Library</li><li>学习了 NSMutableAttributedString 和 NSAttributedString</li><li>了解了如何简单处理 UIImage 图像</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/uikit/uiimagepickercontroller">UIImagePickerController</a></li><li><a href="https://developer.apple.com/reference/uikit/uiimagepickercontrollerdelegate">UIImagePickerControllerDelegate</a></li><li><a href="https://developer.apple.com/reference/foundation/nsmutableattributedstring">NSMutableAttributedString</a></li><li><a href="https://developer.apple.com/reference/foundation/nsattributedstring">NSAttributedString</a></li><li><a href="https://developer.apple.com/reference/uikit/uiimage">UIImage</a></li></ul><p>参考：</p><ul><li><a href="https://www.techotopia.com/index.php/Accessing_the_iOS_8_Camera_and_Photo_Library_in_Swift">Accessing the iOS 8 Camera and Photo Library in Swift</a></li><li><a href="https://makeapppie.com/2016/06/28/how-to-use-uiimagepickercontroller-for-a-camera-and-photo-library-in-swift-3-0/">HOW TO USE UIIMAGEPICKERCONTROLLER FOR A CAMERA AND PHOTO LIBRARY IN SWIFT 3.0</a></li><li><a href="http://useyourloaf.com/blog/privacy-settings-in-ios-10/">Privacy Settings in iOS 10</a></li><li><a href="http://stackoverflow.com/questions/32772007/how-to-add-images-as-text-attachment-in-swift-using-nsattributedstring">How to add images as text attachment in Swift using nsattributedstring</a></li><li><a href="http://stackoverflow.com/questions/5249664/iphone-how-can-i-get-the-height-and-width-of-uiimage">iphone - how can i get the height and width of uiimage</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2009">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 09</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 08 - SWIPE TO DISMISS KEYBOARD</title>
      <link href="/2016/10/13/swift-project-08-swipe-to-dismiss-keyboard/"/>
      <url>/2016/10/13/swift-project-08-swipe-to-dismiss-keyboard/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/13/swift-project-08-swipe-to-dismiss-keyboard/project_08.gif" class="" title="SWIPE TO DISMISS KEYBOARD"><p>主要学习的内容：</p><ul><li>重温了一下 UIBarButtonItem</li><li>学习了解了 UISwipeGestureRecognizer 的用法</li><li>处理 4 种不同的 swipe 动作</li><li>赶进一步了解 selector 的用法</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/uikit/uibarbuttonitem">UIBarButtonItem</a></li><li><a href="https://developer.apple.com/reference/uikit/uiswipegesturerecognizer">UISwipeGestureRecognizer</a></li></ul><p>参考：</p><ul><li><a href="http://stackoverflow.com/questions/30042352/dismiss-keyboard-with-swipe-gesture">Dismiss keyboard with swipe gesture</a></li><li><a href="http://stackoverflow.com/questions/36958911/dismiss-uitextfield-keyboard-with-swipe">Dismiss UITextField Keyboard With Swipe</a></li><li><a href="http://stackoverflow.com/questions/24215117/how-to-recognize-swipe-in-all-4-directions">How to recognize swipe in all 4 directions</a></li><li><a href="http://stackoverflow.com/questions/36166248/understanding-swift-2-2-selector-syntax-selector">Understanding Swift 2.2 Selector Syntax - #selector()</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2008">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 08</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 07 - PASSING DATA TO ANOTHER VIEW</title>
      <link href="/2016/10/12/swift-project-07-passing-data-to-another-view/"/>
      <url>/2016/10/12/swift-project-07-passing-data-to-another-view/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/12/swift-project-07-passing-data-to-another-view/project_07.gif" class="" title="PASSING DATA TO ANOTHER VIEW"><p>主要学习的内容：</p><ul><li>继续了解了一下 Navigation Controller 和 UIViewController 的整合</li><li>了解了 UIBarButtonItem 来设置 <code>Done</code> 按钮，并指定 selector 来 pass 数据</li><li>了解了 UITextView</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/uikit/uitextview">UITextView</a></li></ul><p>参考：</p><ul><li><a href="https://code.tutsplus.com/tutorials/ios-sdk-passing-data-between-controllers-in-swift--cms-27151">Passing Data Between Controllers in Swift</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2007">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 07</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 06 - GETTING CURRENT DATE AND TIME</title>
      <link href="/2016/10/12/swift-project-06-getting-current-date-and-time/"/>
      <url>/2016/10/12/swift-project-06-getting-current-date-and-time/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/12/swift-project-06-getting-current-date-and-time/project_06.gif" class="" title="GETTING CURRENT DATE AND TIME"><p>主要学习的内容：</p><ul><li>很多的参考资料都是关于 NSDate 和 NSDateFormatter 的介绍的，这里主要使用了 Swift 3.0 新的 <code>Date</code> 和 <code>DateFormatter</code> 而不是带 <code>NS</code> 前缀的</li><li>格式化日期和时间输出</li><li>刷新日期和时间</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/foundation/date">Date</a></li><li><a href="https://developer.apple.com/reference/foundation/dateformatter">DateFormatter</a></li><li><a href="https://developer.apple.com/reference/foundation/timezone">TimeZone</a></li><li><a href="https://developer.apple.com/reference/foundation/nsdate">NSDate</a></li><li><a href="https://developer.apple.com/reference/foundation/nsdateformatter">NSDateFormatter</a></li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0086-drop-foundation-ns.md">Drop NS Prefix in Swift Foundation</a></li></ul><p>参考：</p><ul><li><a href="http://stackoverflow.com/questions/24070450/how-to-get-the-current-time-as-datetime">How to get the current time as datetime</a></li><li><a href="https://gist.github.com/stinger/553bdbd7af26f8c43059f8774cbab077">Swift 3: Working with dates</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2006">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 06</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 05 - BASIC TABLE VIEW</title>
      <link href="/2016/10/12/swift-project-05-basic-table-view/"/>
      <url>/2016/10/12/swift-project-05-basic-table-view/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/12/swift-project-05-basic-table-view/project_05.png" class="" title="BASIC TABLE VIEW"><p>主要学习的内容：</p><ul><li>UITableViewController</li><li>Interface Builder 里面添加 Table View Controller，并整合 Navigation</li><li>动态设置 Table View 里面的内容</li><li>设置 Table View 按钮</li><li>TableViewCell 设置 Cell 修饰符（右边的小箭头）</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/uikit/uitableviewcontroller">UITableViewController</a></li><li><a href="https://developer.apple.com/reference/uikit/uitableviewcell">UITableViewCell</a></li></ul><p>参考：</p><ul><li><a href="https://www.ralfebert.de/tutorials/ios-swift-uitableviewcontroller/">iOS &amp; Swift Tutorial: UITableViewController</a></li><li><a href="http://stackoverflow.com/questions/7385835/uitableview-edit-done-button">UITableView Edit&#x2F;Done Button</a></li><li><a href="http://stackoverflow.com/questions/6322798/adding-the-little-arrow-to-the-right-side-of-a-cell-in-an-iphone-tableview-cell">Adding the little arrow to the right side of a cell in an iPhone TableView Cell</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2005">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 05</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爱情和面包，我们总得先搞定面包</title>
      <link href="/2016/10/06/love-or-bread/"/>
      <url>/2016/10/06/love-or-bread/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/06/love-or-bread/p2p-lending.jpg" class=""><blockquote><p>此文为「<strong>阿力</strong>」同学的原创投稿，非 Tommy 出品。本文原作者之观点不代表本人及本网站的任何观点，仅代表其个人或组织，特此声明。</p></blockquote><h2 id="我们先定义目标"><a href="#我们先定义目标" class="headerlink" title="我们先定义目标"></a>我们先定义目标</h2><p>大部分人自称屌丝，是自嘲，其实他们内心是不认可自己是屌丝。这是老虎屁股，只能自己摸，不许别人摸。你真说 TA 屌丝，TA 非和你急不可，非对骂不可。</p><p>然并卵，其实大部分人都是屌丝——处于一二线城市 20 - 30 岁的工薪阶层，处于准备买房或者刚刚买上房、准备跳槽或者刚刚工作、准备生娃或者刚刚生娃，收入中位数，天天被大量的朋友圈文章所影响，随时奋发图强或随时辞职旅游的状态中。</p><span id="more"></span><h2 id="屌丝的特征"><a href="#屌丝的特征" class="headerlink" title="屌丝的特征"></a>屌丝的特征</h2><h3 id="小额分散总量低"><a href="#小额分散总量低" class="headerlink" title="小额分散总量低"></a>小额分散总量低</h3><p>我不自量力的发明一个新词——<strong>中国式基尼系数</strong>。屌丝首先是——<strong>穷</strong>。穷是相对的，用经济学的角度，穷的重要指标就是基尼系数比较高，而中国一二线城市的基尼系数，得把住房（租金或房贷）和炫耀性消费（应酬、旅游、包包、iPhone）算进去，这么一看，基本都是 0.9 以上了——对，就是传说中的月光族。这是中国特色，是由中国特有的熟人社会、人情社会、面子社会因素导致的.</p><h3 id="高频短期不能亏"><a href="#高频短期不能亏" class="headerlink" title="高频短期不能亏"></a>高频短期不能亏</h3><p>屌丝的梦想都是——路过银行几百万钱从天上掉，美女脑子都坏掉，哭着喊着求我泡。第二点不在本文探讨范畴，而第一点，是大部分中国年轻工薪族们典型梦想，属于典型的赌徒心态，以小博大，追求短期高收益，典型的特征就是「炒」，博傻理论的典型代表，总认为有下一个傻子会更高的价格买入自己手中的资产然后发现自己就是最后一个傻子。一旦亏损，会迅速的寻找外部原因来掩盖自己的过错，并通过制造舆论、过激行为等寻求外界支援和认同。</p><h3 id="投资无门消费高"><a href="#投资无门消费高" class="headerlink" title="投资无门消费高"></a>投资无门消费高</h3><p>随着消费金融的深入，个人小额信贷的业务迅速的在一二线城市扩展，传统上财务加杠杆，只能是房贷车贷，而现在可以通过消费贷、信用贷等方式迅速的增加杠杆，最严重的问题是，这些贷款中，除了房贷是属于收益大于支出，其他的贷款，都是享受型收益是无法变现的，意味着这些贷款，并不能为目标人群提供净现金流或者账上的财富增值。面向屌丝人群的理财手段不但没有增加，反而在被大量消费享受的吸引下，急速的挤压和吸收掉原始的资本（都分期付款花掉了本来不应该化的钱）。及时通过信用贷等模式套出来的杠杆现金，以屌丝们的资金总量（低于 100 万）和圈子眼界，也难以找到高于借贷成本（一般实际复合利率 10% 以上）的安全投资。</p><h2 id="小额高频理财人群理财心态处理"><a href="#小额高频理财人群理财心态处理" class="headerlink" title="小额高频理财人群理财心态处理"></a>小额高频理财人群理财心态处理</h2><p>我们遵循典型的说服路径法则：</p><ol><li>先定一个小目标——赚他一个亿？通过貌似仔细实质不可实现的远景图来定义最终目标，并得到人群的认同。典型案例为基金公司的定投，实现 10 年后资产翻 2.59 倍的重要前提是稳定的年化收益在 10% 以上，事实上在 10 年的长经济周期，较难实现，一般牛市经济周期 5 - 7 年，熊市周期更久。因此重要的方式，应该是明确的指出这些理财目标的漏洞，并直接定义符合目标人群的理财目标——<strong>再 3 - 5 年内能提供一笔稳定的现金流，符合目标人群在中期内需要大笔支出的现实，获得目标人群的真正认同</strong>。解决心态教育问题。</li><li>根据人群目标，提供<strong>复杂的解决方案</strong>。对于大部分的目标人群来说，复杂的解决方案，一方面提现了专业性，另一方面直接引发“简单解决方案”的思考回路，为下一步推荐说法提供切入口。</li><li>提供快速解决方案：目前符合目标人群的产品，只有基金公司定投或 P2P 公司的高额保本固定收益。首先两者都是低门槛产品，符合目标人群每月小额剩余资金的现状；其次，两者都提供快速变现的现金流能力（开放式基金赎回 T + 3 左右、P2P 短期产品 + 长期产品转让），解决流动性问题。最后，P2P 由于提供明确可计算的复利收益，比浮动收益的基金产品更加吸引，因此，可预见很长一段时间内，背景强大 + 收益稳固 + 变现灵活的 P2P 产品，将会是小额高频理财人群的首选。</li></ol><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>嗯，我就是来安利 P2P 的，因为对于大部分人来说，别无选择。</p>]]></content>
      
      
      <categories>
          
          <category> Friend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿力 </tag>
            
            <tag> Finance </tag>
            
            <tag> Investment </tag>
            
            <tag> Lending </tag>
            
            <tag> P2P </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>长草与情怀</title>
      <link href="/2016/10/05/zhangcao-and-qinghuai/"/>
      <url>/2016/10/05/zhangcao-and-qinghuai/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/05/zhangcao-and-qinghuai/00.jpg" class=""><blockquote><p>此文为「<strong>数码小王子</strong>」同学的原创投稿，非 Tommy 出品。本文原作者之观点不代表本人及本网站的任何观点，仅代表其个人或组织，特此声明。</p></blockquote><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>最近有个梗把老任黑得体无完肤，索尼 PS4 推出了薄版 PS4 Slim，微软推出 Xbox 薄版 Xbox One S，而老任也来凑热闹推出红白机 Famicom Mini。看似是梗，实际上却映射出老任这些年来的辛酸。</p><span id="more"></span><img src="/2016/10/05/zhangcao-and-qinghuai/01.jpg" class=""><p>曾经雄霸全球的任天堂，如今已经跌出了主流阵营。由 06 年底推出的 Wii 开始，就已经走向下坡。Wii 虽然打体感牌，但机能画面的感人非主流，注定笼络不了专业玩家的心。而 Wii U GamePad 的奇葩设计，更让老任彻底滚到了第二阵营（还是专心玩掌机 NDS 吧）。所以，当巨头们推出薄版的时候，老任就只能悲哀地挖挖老本。</p><h2 id="极具性价比的迷你红白机"><a href="#极具性价比的迷你红白机" class="headerlink" title="极具性价比的迷你红白机"></a>极具性价比的迷你红白机</h2><img src="/2016/10/05/zhangcao-and-qinghuai/02.jpg" class=""><p>不过，老任还是很精明，知道什么产品才能在市场上赚钱。FC 红白机是多少人的童年啊，能用钱买回童年回忆这招了得。培养了三十多年的全球庞大忠粉，多少也甘愿掏腰包的，只要钱不抢得太离谱。</p><img src="/2016/10/05/zhangcao-and-qinghuai/03.jpg" class=""><p>11 月 10 日发售的 Famicom Mini，仅售 5,980 円，还不到 400 人民币。就冲这个价钱，我愿意！当然我只代表部分忠粉。既然变迷你了，与当年的红白机相比多少也应该有所进化。</p><img src="/2016/10/05/zhangcao-and-qinghuai/04.jpg" class=""><p>从外观看由于整机迷你化缩小，只有原版的六成大小，就连手柄也一同缩小。对于已经长大的朋友们，大手掌操控小手柄要适应一段时间。</p><img src="/2016/10/05/zhangcao-and-qinghuai/05.jpg" class=""><p>主机画面经过数码化处理，直接支持 HDMI 输出。减少了横纹，画面也更加精致。为了确保原汁原味，画面依然是 4:3 比例。虽然跟不上现代的显示器和电视，两边会流出了很粗的黑边，but 尚可接受。</p><img src="/2016/10/05/zhangcao-and-qinghuai/06.jpg" class=""><p>加入了中断画面记录，可以随时开关机继续 Play，Save &#x2F; Load 大法又得以发扬光大了。想当年，多少 RPG 是这样玩过局的。</p><img src="/2016/10/05/zhangcao-and-qinghuai/07.jpg" class=""><p>内置三十款游戏（列表看文末），满满的都是回忆。问题来了，只有三十款吗？相信精明的老任怎么肯放弃怀旧生态圈呢？就算老任不作为，毕竟是三十多年前的技术，很快就有方法加载更多游戏，老司机都懂。</p><h2 id="不买迷你红白机-也有模拟器止渴"><a href="#不买迷你红白机-也有模拟器止渴" class="headerlink" title="不买迷你红白机 也有模拟器止渴"></a>不买迷你红白机 也有模拟器止渴</h2><p>其实在这台迷你红白机未发布之前，老司机们都知道模拟器。早年的模拟器出现在 PC 里，有处女座完美情意结的还会收集完整的游戏 ROM，在电脑中不时回味当年 FC 的乐趣。而智能手机的出现，模拟器也发展到 iOS 和 Android 两大阵营中，我略为推荐几款。</p><img src="/2016/10/05/zhangcao-and-qinghuai/08.jpg" class=""><p>iOS 中如果是越狱了，一切都变得轻松简单。可惜近年 iOS 的抄袭同化，越狱用户在不断锐减，很多模拟器都需要在越狱的环境下运行。本来想推荐 Nescaline 的，由于导入 ROM 困难，资源不好找作罢。</p><img src="/2016/10/05/zhangcao-and-qinghuai/09.jpg" class=""><p>所以推荐这款不用越狱也可以安装的模拟器 <a href="http://iemulators.com/newgamepad">NewGamepad</a>。除了支持 FC 以外，还支持 NDS、GBA、PSP、PS、N64 等共 12 款机种，太强大了。</p><img src="/2016/10/05/zhangcao-and-qinghuai/10.jpg" class=""><p>App 还内置了游戏下载，免除了自己找 ROM 的烦恼，直接在 App 就可以下载运行。不过，模拟器大多数有侵权之嫌疑，慎玩。</p><img src="/2016/10/05/zhangcao-and-qinghuai/11.jpg" class=""><p>设定好虚拟按键，iOS 设备瞬间变身为童年掌机。什么？你童年不玩 FC？你没有童年了啦。</p><img src="/2016/10/05/zhangcao-and-qinghuai/12.jpg" class=""><p>至于 Android 阵营的 FC 模拟器，找起来也太方便了，一抓一大堆。（看吧，并不是什么时候都是 iOS 平台优胜的）先来介绍这款声名在外的模拟器 <a href="https://play.google.com/store/apps/details?id=com.nostalgiaemulators.neslite">NES Emulator</a>。</p><img src="/2016/10/05/zhangcao-and-qinghuai/13.jpg" class=""><img src="/2016/10/05/zhangcao-and-qinghuai/14.jpg" class=""><p>NES Emulator 内置了 64 款游戏，不就是当年的 64 合 1 吗？都是当年的经典作品。功能上还有暂停、保存游戏等，对于一款体积只有 2.5MB 来说的模拟器，已经非常强大。</p><img src="/2016/10/05/zhangcao-and-qinghuai/15.jpg" class=""><img src="/2016/10/05/zhangcao-and-qinghuai/16.jpg" class=""><p>另外一款 <a href="https://play.google.com/store/apps/details?id=com.retroarch">RetroArch</a>，同样是支持多游戏机种，甚至支持 PlayStation 以及街机。RetroArch 兼容 USB 以及蓝牙，就是说支持无线蓝牙手柄玩游戏。</p><h2 id="游戏不能没有了手柄"><a href="#游戏不能没有了手柄" class="headerlink" title="游戏不能没有了手柄"></a>游戏不能没有了手柄</h2><p>万事俱备只欠手柄，要打得爽又怎么可以不用手柄呢？虚拟按键遮挡屏幕，零手感你也忍？隆重推荐八位堂的蓝牙手柄给大家。（真的不是广告植入文，我本人亲自购买把玩过，才真心推荐）</p><img src="/2016/10/05/zhangcao-and-qinghuai/17.jpg" class=""><p>为什么推荐八位堂？因为完美。我入手的是 FC30 Pro 真空刃蓝牙手柄，完美支持全平台 Android、iOS(iCade)、Windows、macOS，通过底部按键组合开机，就可达到平台的完美支持。</p><img src="/2016/10/05/zhangcao-and-qinghuai/18.jpg" class=""><p>按键完美，双摇杆 PS 布局风格，很对我胃口。顶部不止有 LR 按键，居然连 L2R2 都有。两侧真空刃会闪烁不同颜色灯光，以显示不同工作状态，完美。</p><img src="/2016/10/05/zhangcao-and-qinghuai/19.jpg" class=""><p>配的充电线也是一丝不苟，与手柄用色统一，还有不少周边赠送。我在活动季购买时，还送了八位堂 T 恤一件，完美。</p><img src="/2016/10/05/zhangcao-and-qinghuai/20.jpg" class=""><p>八位堂做产品确实不错，深得任粉喜爱，推出了不少任天堂造型的蓝牙手柄，就连日本科技媒体也有不少报道。</p><img src="/2016/10/05/zhangcao-and-qinghuai/21.jpg" class=""><p>这款体积超小巧可爱的手柄 ZERO，甚至可以挂在钥匙扣上，拉女票入坑之恩物。</p><img src="/2016/10/05/zhangcao-and-qinghuai/22.jpg" class=""><p>还有这款 FC30 ARCADE JOYSTICK 街机蓝牙无线摇杆，无线还零延迟。八位堂的手柄都是无线，零延迟技术确实玩起来特别爽。</p><img src="/2016/10/05/zhangcao-and-qinghuai/23.jpg" class=""><p>最近还在 Kickstarter 上玩起了<a href="https://www.kickstarter.com/projects/8bitdo/ap40-a-bluetooth-controller-for-ios-android-mac-pc">苹果情怀手柄套装</a>。（我先抹一下口水）</p><p>又开始长草了，有目标有收割。希望大家喜欢本文，老司机们不用我教了吧，快 Like 我顺手转友圈啊。</p><h2 id="附上-Famicom-Mini-内置游戏列表"><a href="#附上-Famicom-Mini-内置游戏列表" class="headerlink" title="附上 Famicom Mini 内置游戏列表"></a>附上 Famicom Mini 内置游戏列表</h2><ul><li>Donkey Kong</li><li>孖宝兄弟</li><li>食鬼Pac-Man</li><li>Excitebike</li><li>Balloon Fight</li><li>Ice Climber</li><li>太空侵略者 Galaga</li><li>功夫 Kung-Fu</li><li>超级孖宝兄弟 Super Mario Bros.</li><li>撒尔达传说 The Legend of Zelda</li><li>亚特兰堤斯之谜</li><li>Gradius</li><li>魔界村 Ghosts ‘n Goblins</li><li>所罗门之键</li><li>Metroid</li><li>恶魔城 Castlevania</li><li>撒尔达传说 2 Zelda II：The Adventure of Link</li><li>大相扑 Tsuppari Ozumo</li><li>超级孖宝兄弟3 Super Mario Bros. 3</li><li>忍者龙剑传</li><li>洛克人2 RockMan 2</li><li>热血物语</li><li>双截龙2</li><li>超级魂斗罗</li><li>Final Fantasy III</li><li>Dr. Mario</li><li>热血行进曲</li><li>Mario Open Golf</li><li>Super Mario USA（超级孖宝兄弟 2美版）</li><li>星之卡比</li></ul>]]></content>
      
      
      <categories>
          
          <category> Friend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Microsoft </tag>
            
            <tag> 8Bitdo </tag>
            
            <tag> Famicom Mini </tag>
            
            <tag> Joystick </tag>
            
            <tag> Nintendo </tag>
            
            <tag> PlayStation </tag>
            
            <tag> Sony </tag>
            
            <tag> Wii </tag>
            
            <tag> Xbox </tag>
            
            <tag> 数码小王子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 04 - TIP CALCULATOR</title>
      <link href="/2016/10/03/swift-project-04-tip-calculator/"/>
      <url>/2016/10/03/swift-project-04-tip-calculator/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/03/swift-project-04-tip-calculator/project_04.gif" class="" title="TIP CALCULATOR"><p>主要学习的内容：</p><ul><li>了解了 Navigation Bar</li><li>使用了 MVC 架构（其实一直都是，只是把计算部分独立了出来而已）</li><li>了解键盘 <code>Number Pad</code> 和 <code>Decimal Pad</code> 的区别（有无小数点）</li><li>给 Keyboard 增加 <code>Done</code> 按键（UIBarButtonItem 组件）</li><li>格式化 String</li><li>NSString 转化成 Float 类型的数据</li><li>UISlider 组件</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/uikit/uibarbuttonitem">UIBarButtonItem</a></li><li><a href="https://developer.apple.com/reference/uikit/uislider">UISlider</a></li></ul><p>参考：</p><ul><li><a href="https://www.raywenderlich.com/86477/introducing-ios-design-patterns-in-swift-part-1">Introducing iOS Design Patterns in Swift – Part 1&#x2F;2</a></li><li><a href="http://stackoverflow.com/questions/28338981/how-to-add-done-button-to-numpad-in-ios-8-using-swift">How to add “Done” button to Numpad in IOS 8 using Swift?</a></li><li><a href="http://stackoverflow.com/questions/20192303/how-to-add-a-done-button-to-numpad-keyboard-in-ios">How to add a ‘Done’ button to numpad keyboard in iOS</a></li><li><a href="http://stackoverflow.com/questions/29524191/swift-add-dot-in-number-pad-keyboard">Swift - Add dot in Number Pad Keyboard</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2004">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 04</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 03 - SWIFT IAD</title>
      <link href="/2016/10/02/swift-project-03-swift-iad/"/>
      <url>/2016/10/02/swift-project-03-swift-iad/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/02/swift-project-03-swift-iad/project_03.png" class="" title="IAD SWIFT"><blockquote><p>注意：从 2016 年 7 月 1 号开始，Apple 已经关闭了 iAd Network。所以没有办法再写 iAd 相关的东西了。项目中需要把 Target 设置为 9.x 系列。因为从 10.0 开始所有 iAd 相关的 API 都已经被标记为废弃了。还有就是在 Interface Builder 里面也找不到 iAd Banner 了。为了更好的看到 iAd，背景使用了蓝色，大家可以看到底部的 <code>Ad</code> 字样，表示 iAd 已经加载了。</p></blockquote><span id="more"></span><p>主要学习的内容：</p><ul><li>添加 <code>iAd.framework</code> 到项目中</li><li>给当前 <code>View</code> 添加 <code>Subview</code></li><li>了解了 <code>CGRect</code></li></ul><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/iad/">iAd</a></li></ul><p>参考：</p><ul><li><a href="http://codewithchris.com/iad-tutorial/">iAd Tutorial – How To Integrate iAd Banners Into Your App</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2003">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 03</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 02 - TAP OR HOLD COUNTER</title>
      <link href="/2016/10/02/swift-project-02-tap-or-hold-counter/"/>
      <url>/2016/10/02/swift-project-02-tap-or-hold-counter/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/02/swift-project-02-tap-or-hold-counter/project_02.gif" class="" title="TAP OR HOLD COUNTER"><p>主要学习的内容：</p><ul><li>直接调用 <code>UIKit</code> 提供的 <code>UIGestureRecognizer</code> 方法</li><li>代码级别关联 events</li><li>学习了解 <code>Selector</code> 的调用方法</li><li>学习了解 <code>Timer</code> 的使用方法</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/foundation/timer">Timer</a></li><li><a href="https://developer.apple.com/reference/uikit/uigesturerecognizer">UIGestureRecognizer</a></li><li><a href="https://developer.apple.com/reference/uikit/uitapgesturerecognizer">UITapGestureRecognizer</a></li><li><a href="https://developer.apple.com/reference/uikit/uilongpressgesturerecognizer">UILongPressGestureRecognizer</a></li></ul><p>参考：</p><ul><li><a href="http://stackoverflow.com/questions/34548263/swift-button-tap-and-long-press-gesture">Swift Button tap and long press gesture</a></li><li><a href="http://en.swifter.tips/selector/">Swift Tips - Selector</a></li><li><a href="http://www.ios-blog.co.uk/tutorials/swift/swift-nstimer-tutorial-lets-create-a-counter-application/">Swift NSTimer Tutorial – Lets create a Swift Timer (counter) application</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2002">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 02</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Project 01 - TAP COUNTER</title>
      <link href="/2016/10/02/swift-project-01-tap-counter/"/>
      <url>/2016/10/02/swift-project-01-tap-counter/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/02/swift-project-01-tap-counter/project_01.gif" class="" title="TAP COUNTER"><p>主要学习的内容：</p><ul><li>使用 Interface Builder 来建立标签和按钮</li><li>编写 Swift function 来增加和重置数字</li><li>在标签、按钮与代码之间建立关联</li></ul><span id="more"></span><p>开发环境：</p><ul><li>macOS 10.12</li><li>Xcode 8.0</li><li>iOS 10.0</li><li>Swift 3.0</li></ul><p>组件：</p><ul><li><a href="https://developer.apple.com/reference/uikit">UIKit</a></li></ul><p>参考：</p><ul><li><a href="https://www.sitepoint.com/creating-hello-world-app-swift/">Creating a ‘Hello World’ App with Swift</a></li></ul><p>源代码：</p><ul><li><a href="https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift%20Project%2001">https://github.com/TommyLau/100-Days-of-Swift-3/tree/master/Swift Project 01</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Learning </tag>
            
            <tag> Study </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Xcode 8 </tag>
            
            <tag> iOS 10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>是时候该学 Swift 了</title>
      <link href="/2016/10/02/time-to-learn-swift/"/>
      <url>/2016/10/02/time-to-learn-swift/</url>
      
        <content type="html"><![CDATA[<img src="/2016/10/02/time-to-learn-swift/swift_3_0.jpg" class=""><p>我绝对是一个闲不下来，且喜欢自虐的人。早在一两个星期前，Yui 同学一直很纠结于她正在使用的「<a href="https://itunes.apple.com/us/app/shadowrocket/id932747118?mt=8">Shadowrocket</a>」不好用。主要体现在程序在开启的状态下，很多国内的网站访问不正常，而相比之下「<a href="https://itunes.apple.com/us/app/surge-web-developer-tool-proxy/id1040100637?mt=8">Surge</a>」的表现则要良好的多得多，然而 50 刀（刚刚降价）的价钱，则不是人人都愿意买单的。后来发现有个叫「<a href="https://itunes.apple.com/us/app/tu-dou-si-potatso-qiang-da/id1070901416?mt=8">Potatso</a>」的 App 有着类似的功能，而且在 GitHub 上<a href="https://github.com/shadowsocks/Potatso">开放源码</a>。</p><span id="more"></span><p>有 Apple 开发者账号的我和 Jason 很跃跃欲试地尝试了一下编译该工程，结果无疾而终。一堆一堆的依赖错误和无法解决的编译错误，纵然就算我们拿到了很多人梦寐以求的 <strong>Network Extensions Entitlement</strong> 也是无功而返。而这个「土豆丝」正是用 Swift 来编写的，由于我的才疏学浅，从 Swift 发布至今，一直尚未染指 Swift。但是因为这个倒霉的 App 编译不过，反而激起了我极大地学习兴趣。</p><p>仔细研究过后发现，编译不过一方面是作者的 <code>Podfile</code> 写得不好（各种依赖关系没有很严格限制，出现了 2.0 -&gt; 3.0 这种大版本的跨度），另一方面是我刚好赶在了苹果发布 <code>Xcode 8</code> 和 <code>Swift 3</code> 的时候。嗯，没错，新版本不兼容旧版本的语法哦，是不是很开心？反正我是炒（ping）鸡（guo）开（qu）心（si）的啦，欢喜之情溢于言表。</p><p>但是伟大的苹果总得照顾下这么多的开发者吧？当然有照顾了，苹果很贴心地提供了语法转换工具。好，那我们就看看这个强大的转换工具吧！转换之后，好开心，编译错误从几百变成了 <code>999+</code>，我的内心OS：!#(<em>&amp;!@</em>#&amp;!(@*$&amp;</p><p>最后的最后，无论是 Jason 还是我，都没有能成功的把这个程序编译出来，更不要说解决签名问题了。但是，这确引发了我的兴趣，到处了解一下 Swift 现在的情况，这一看不要紧，厉害了。</p><p>不是我不知道，这世界变化快啊。首先是 IBM 在 2015 年底出了个 <a href="https://developer.ibm.com/swift/ibm-swift-sandbox/">IBM Swift Sandbox</a>，这货可以直接在线体验 Swift 编程、还可以跟同事分享代码。我就想说，IBM 的人都这么无聊么？每次出什么新东西，他们都可以跟进的这么快吗？感兴趣的同学可以去体验下，跟 Xcode 里面跑 Swift Playground 的感觉类似。</p><p>然后上半年又有消息传出说 <a href="http://thenextweb.com/dd/2016/04/07/google-facebook-uber-swift/">Google 可能用 Swift 作为 Android 第一语言</a>。而 Facebook 和 Uber 也在考虑把 Swift 作为中心运营使用的语言。我觉得 Google 这也是被 Oracle 给欺负的吧。不了解的同学可以自行搜索一下 Java 语言的前世今生以及 Google 与 Oracle 之间因为 Java 而产生的恩怨情仇。</p><p>接下来我又发现了用 Swift 构建的服务端框架 <a href="http://perfect.org/">Perfect</a>。好吧，连名字都这么大（xiao）气（zhang）！我就好奇，这个域名得多少钱呢？一个开源的软件，能买得起这么好的域名，背后必然有「黑手」啊。感情这是要跟 <code>Node.js</code>、<code>Ruby on Rails</code> 和 <code>PHP</code> 大打出手的节奏啊！什么时候出个浏览器前端专用，iOS 工程师可以改变世界了啊！</p><p>然后，连 <code>C#</code> 背后的大佬 Microsoft 都按耐不住了，有文章说为了吸引更多的 iOS 开发者来开发 Windows 10 应用，<a href="http://www.windowscentral.com/microsoft-also-working-towards-swift-compiler-ios-developers-come-windows-10">微软已经在努力开发 Swift 编译器</a>了！太可怕了，这简直就是要逆天的节奏啊。</p><p>虽然大家都这么 high，但是我实在不觉得一个商业公司推动的一个像玩具一样的语言，从推出仅仅 2 年左右的时间，就给这么多人洗了脑。Youtube 上一大堆 10 几岁除了 Swift 其他语言都不懂的年轻程序员更是大放厥词，大有 Swift 一统天下的感觉。不信邪的我去查了一下 <a href="http://www.tiobe.com/tiobe-index/">TIOBE Index for September 2016</a>，现时语言排名 Swift 排名第 13，已经超越 Objective-C 紧跟 Ruby 之后。看来，从现在开始应该用 Swift 来写 iOS 和 macOS 的 App 了。</p><p>不得不说，男怕入错行，女怕嫁错郎。攻城狮这一行，确实不好做。看来还是得不断学习和进修才行。既然 Swift 开源了，Xcode 升级到 8 了，Swift 也已经 3.0 了，似乎又到了该学一门语言的时候了。在写本文之前，Swift 3 的基本语言特性和语法已经快速过了一遍了，接下来需要做一些实质性的编程工作来更深入地了解。</p><p>在 Medium 上发现了 Sam Lu 写的「<a href="https://medium.com/@samvlu/100-days-of-swift-736d45a19b63#.l9td2doel">100 Days of Swift</a>」，然后就心血来潮，想要加以效仿了。于是乎，本文又成了一篇立 flag 的湿货多、不接地气的文章了。</p><blockquote><p>目标：100 天内用 Xcode 8 和 Swift 3 独立完成 Sam 哥的 40 个小程序</p></blockquote><p>从伟大祖国母亲生日开始算的话，100 天，刚好是过农历新年前，看看那个时候我能不能完成这个挑战，欢迎各位鞭（gu）策（li）。所有的源代码都会上传到 <a href="https://github.com/TommyLau/100-Days-of-Swift-3">GitHub</a> 上。感兴趣的同学可以关注一下，欢迎大家交流讨论。</p><p>另外，那些已经有了好的点子，只差一个程序员的同学，你们要等我啊。给我 100 天的时间，苟富贵勿相忘，到时候我去帮你们做 App！</p>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Development </tag>
            
            <tag> Apple </tag>
            
            <tag> Swift </tag>
            
            <tag> Swift 3 </tag>
            
            <tag> Xcode </tag>
            
            <tag> Facebook </tag>
            
            <tag> Google </tag>
            
            <tag> IBM </tag>
            
            <tag> Microsoft </tag>
            
            <tag> Potatso </tag>
            
            <tag> Programming </tag>
            
            <tag> Shadowrocket </tag>
            
            <tag> Surge </tag>
            
            <tag> Uber </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你和现实之间差了100个童话故事</title>
      <link href="/2016/09/26/there-are-100-fairytales-between-you-and-the-realism/"/>
      <url>/2016/09/26/there-are-100-fairytales-between-you-and-the-realism/</url>
      
        <content type="html"><![CDATA[<img src="/2016/09/26/there-are-100-fairytales-between-you-and-the-realism/fairytale_realism.jpg" class=""><blockquote><p>此文为「<strong>阿力</strong>」同学的原创投稿，非 Tommy 出品。本文原作者之观点不代表本人及本网站的任何观点，仅代表其个人或组织，特此声明。</p></blockquote><p>莫言前段时间得了诺奖，一时间铺天盖地，我才去看《红高粱》、《丰乳肥臀》，看完后整个人是「一半海水一半火焰」，既为里面描绘的光怪陆离的乱世而觉得心凉，又为里面在乱世中挣扎的情感而感动。这种莫名的情绪，还真有点「莫言」的感觉——说不出来。</p><span id="more"></span><p>一看这现实生活（嗯，我总得上班养家糊口对吧？），很好，真是够魔幻的。大城市离婚买房，小城市醉生梦死，高层精英先移民，中层焦虑要离婚，底层读书没卵用，国外天天打仗，国内天天唱歌。</p><p>这哪是我们这些根红苗正的社会主义接班人从小接受的三观教育所能接受的呀！这帮大老爷真的厉害，满嘴仁义道德教育小孩，满肚男盗女娼欲壑难填。于是，当我们长大后，惊奇的发现，这是什么鬼世界？90后00后是网络时代，信息爆炸，很小就知道了外面世界的精彩和无奈了，我们这代人倒好了，三观崩塌，重建？你以为是世贸大厦？炸了我难道还能建个博物馆缅怀我死去的价值观？</p><p>现实就是这样在时代的洪流中，在大家的手中扭曲了，可是小时候的童话，还是深深的在我脑海里，虽然我明知道童话里都是骗人的。活在童话世界里面的我们，看着这个奇怪的世界，总觉得是在做梦，总觉得是变态的、神经病的、疯狂的。</p><p>可是……你咕咕叫的肚子、你威严的老板、你慈祥的丈母娘&#x2F;或者逼婚的母上人大、你周边飞黄腾踏的亲朋好友，无一不在提醒你，这就是现实，这就是你今天要面对的事情，生或死，做还是不做。</p><p>一查豆瓣，原来这叫「魔幻现实主义」，你觉得如此魔性和幻觉，但是你掐自己觉得很痛，丫的就活生生的在你面前上演，用互联网的语言，这叫——活久见。</p><p>这个时候，童话算个屁，面包才是关键，这就是现实主义，现实比人强，美金比人民币强，马云比你强，你得活下去。</p><p>极度失落的我们赫然发现，我们回不去童话时代，也适应不了现实世界，于是我们就在现实和梦想之间的 100 个童话世界里面来回摇摆，今天想好好工作先赚他一个亿，明天想去西藏寻找心灵的自由。今天想找个大公司好好混，明天想去他丫的老子要创业。</p><p>间歇性壮志凌云，持续性混吃等死。</p><p>嗯，照照镜子，是不是看到你了？</p><p>宝贝，童话里都是骗人的，可你就那么笨，非要信。魔幻的世界，现实的生活，之间没有桥梁，魔幻就是现实，你之所以觉得魔幻，无法是你要么坚持不了内心的坚持，又跟不上世界的变化，在模棱两可中，失去了原来的自己，又被魔幻的现实给抛弃。</p><p>生或死，要么拥抱这个魔幻的现实，要么逃离在自己远离的世界里面继续生活。</p><p>嗯，为什么那么纠结和摇摆？因为我是天秤座啊。</p>]]></content>
      
      
      <categories>
          
          <category> Friend </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fairytale </tag>
            
            <tag> Realism </tag>
            
            <tag> 莫言 </tag>
            
            <tag> 阿力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iPad Pro 生产力工具？</title>
      <link href="/2016/09/25/ipad-pro-as-productivity-tool/"/>
      <url>/2016/09/25/ipad-pro-as-productivity-tool/</url>
      
        <content type="html"><![CDATA[<img src="/2016/09/25/ipad-pro-as-productivity-tool/ipad_pro.jpg" class=""><h2 id="背景故事"><a href="#背景故事" class="headerlink" title="背景故事"></a>背景故事</h2><p>其实 <a href="https://zh.wikipedia.org/wiki/IPad_Pro">iPad Pro</a> 从 2015 年 9 月 9 日发布至今，已经刚好一年多了，坊间传闻 <a href="http://www.macworld.co.uk/news/ipad/ipad-pro-2-release-date-rumours-specs-price-rumour-ios-wwdc-a10x-leaked-photos-space-inbetweener-10-5-inch-ipad-pro-mini-3492180/">iPad Pro 2</a> 也已经在路上了。在很多人科技圈的人看来，现在才来开始讨论 iPad Pro 有一点过时和跟不上潮流了，甚至还会嗤之以鼻。不过没关系，毕竟在 iPad Pro 发布一年多以后，我身边也没有太多交**「苹果税」**的朋友，就算有也没有使用 iPad Pro 来作为生产力工具的。</p><span id="more"></span><p>如果不是机缘巧合的情况下，Niki 同学偶然问起 iPad Pro，把这个事情推到了台面上，也许就不会有今天这么一篇文章了。Niki 的原话大概是问我怎么看 iPad Pro？而这个问题背后，我的解读是 iPad Pro 是否可以作为一个独立的生产力工具来使用，是否值得购买？我当时就毫不犹豫地表达了个人的观念：<strong>现阶段我并不看好 iPad Pro 作为一个主要的生产力工具来使用，也不推荐她购买。</strong></p><h2 id="iPad-Pro-是什么？"><a href="#iPad-Pro-是什么？" class="headerlink" title="iPad Pro 是什么？"></a>iPad Pro 是什么？</h2><p>对于大部分人来说，介绍 iPad Pro 可能有点多余。科技迷们可以直接跳过本部分，伪科技迷可以温故而知新，不明就里的吃瓜群众可以简单入门。</p><p>Long story short，<strong>iPad Pro</strong> 是苹果公司设计、开发和销售的一款「平板电脑」，意在对标微软公司的 Surface Pro 4 并有着想要替代全球电脑的野心（呵呵……）。几个重点关键词：<code>12.9英寸</code>，<code>Retina</code>，<code>轻薄</code>，<code>指纹识别</code>，<code>高性能A9X处理器</code>，<code>高清摄像头</code>。各位看官把它简单理解为更大块头的高清超大 iPad 就是了。详细的介绍可以看 Wikipedia 上的 <a href="https://zh.wikipedia.org/wiki/%E8%98%8B%E6%9E%9C%E5%85%AC%E5%8F%B8">iPad Pro 介绍</a>。</p><h2 id="我的应用场景"><a href="#我的应用场景" class="headerlink" title="我的应用场景"></a>我的应用场景</h2><p>在说我为什么不建议使用 iPad Pro 作为主要的生产力工具之前，有必要先介绍一下我使用电脑的主要应用场景：</p><ul><li>日常办公 &#x2F; 演示</li><li>写代码</li><li>维护服务器</li><li>阅读</li><li>写文章</li><li>娱乐</li></ul><p>日常办公这个比较好理解，就是大家每天日常都会用到的一些 Office 套件。比如说微软的 Word、Excel、和 PowerPoint，还有苹果系列的 Pages、Numbers 和 Keynote 等。再有就是日常的邮件处理，OA，审批流程等等这一类的工作。这个应用场景对于我来说 iOS 设备（iPad Pro 也是 iOS 系统）部分可用，我可以在这些设备上做演示，但我绝对不会在这些设备上做大量地编辑工作，尤其是 Presentation 类的制作，其排版是极其痛苦的事情。只有一个例外，就是简单的邮件处理是很方便的，但是这个我用手机就可以完成，而且更快捷，那又干嘛要这么麻烦拿个这么大部的设备出来呢？</p><p>写代码，我平常经常用到的语言包括但不限于：<code>C/C++</code>、<code>Java</code>、<code>JavaScript</code>、<code>Objective-C</code>、<code>PHP</code>、<code>Ruby</code>、<code>Swift</code>。还有各种好用的 IDE，方便的调试工具，伟大的虚拟机和 Docker。反正这个是没什么好说的啦，iPad Pro 完全无法胜任。其实对于我来说，就这一个理由就可以把 iPad Pro 给枪毙了。</p><p>维护服务器大多数情况下都是基于 *nix 类的系统，更准确的说是 Linux 系统居多。那么有一个好的 Terminal（终端）是非常重要的。在 Mac &#x2F; Windows 上都有非常不错的 Terminal 可以用，比如 Mac 下的 <a href="https://www.iterm2.com/">iTerm2</a> 和 Windows 下的 <a href="http://www.putty.org/">PuTTY</a>，当然我本人更偏爱在 macOS 下使用 iTerm2。在 iOS 平台下我使用 15 大洋的 <a href="https://itunes.apple.com/us/app/prompt-2/id917437289">Prompt</a> 来进行远程管理。虽然该软件已经做得很好，但还是没有在电脑上使用方便。更不要说电脑上这些好用的软件都是免费的，而 iOS 上的都是贵价的啦。还有像 rsync &#x2F; scp 等等这类的操作，在 iOS 的封闭系统下也是无法使用的，各个 App 之间也无法互通数据（因为沙箱的存在）。所以使用 iOS 进行远程管理，完全是在无法使用电脑的情况下，临时抱佛脚不得已而为之的无奈选择。</p><p>阅读这个范畴略大，一般的书籍我会更倾向于使用 Kindle 来阅读，科技类的文献会用电脑上的 Kindle、iBooks 或者 Acrobat 来阅读。其余的阅读大多是浏览各种网站来获取信息，比如市场、媒体、创业、经济和科技相关的文章。其实这个 iPad Pro 是可以基本胜任的，但是浏览器不支持插件，我没有办法做广告过滤，也没有办法做 Evernote Clipping，也没有办法 Read it later。总之，就是解决了有无，但是用着不爽。尤其是我喜欢开着很多个 tab 来浏览各种相关信息，在 iPad 上切换的时候，往往页面就要重新加载一次，感觉挺浪费青春的。</p><p>写文章，这个其实倒是可以在 iPad Pro 上比较好的完成，当然是在外接键盘的情况下。我说的可以胜任仅限于写作本身，因为我使用 Markdown 语言作为书写的主要工具，所以仅仅是写作本身是没有任何问题的，因为它本身就是纯文本。但是如果需要做文章的渲染的话，我还是会回归到电脑上来完成的。比如发布到自己的博客，发布到微信公众号，同步到 GitHub 上等等，用 iPad Pro 就显得很困难了。但如果是「简书」或者是「知乎」的用户的话，那我觉得 iPad Pro 还是完全可以胜任的。</p><p>最后来说说娱乐吧，我本人是脑残美剧消费者。由于需求小众和版权等各种原因，经常有想看的美剧，在国内各大视频网站上都找不到的情况。所以我只能用 BT 或者迅雷离线等下载工具先下载到本地，再搜索配套字幕来配合播放，而这类操作在 iOS 设备上基本上很难无痛实现。如果你只看国内视频，且是优酷、乐视、爱奇艺等的重度或者付费用户的话，那么 iPad Pro 应该可以完全胜任您的娱乐需求。对于音乐的消费，我来卖个广告，基本上用**「网易云音乐」**就都搞掂了。</p><h2 id="还有哪些槽点"><a href="#还有哪些槽点" class="headerlink" title="还有哪些槽点"></a>还有哪些槽点</h2><p>其实就我个人使用的应用场景来说，iPad Pro 已经被完全的枪毙了。</p><p>那么除了一些行业特定应用之外，作为一个普通电脑使用者是不是可以用 iPad Pro 来作为第一生产力工具呢？Well，大部分情况下是可以的，如果你能忍受下面的这些问题：</p><ul><li><strong>设备过重</strong>：日常使用与超极本无异，几乎无法长时间单手使用。</li><li><strong>键盘键程太短</strong>：不适合高强度的文字输入，长时间输入很累。</li><li><strong>快捷键缺失</strong>：iOS 的系统快捷键非常鸡肋，只有简单的功能可以使用快捷键。</li><li><strong>触控设计</strong>：这个是 iOS 的优势，但是放到生产力工具上反而变成了弱势。很多操作，你必须要手离开键盘在屏幕上点触，效率何其低下。</li><li><strong>说不上来的笔</strong>：有个笔还是挺好的，可是配套的软件还没跟上，而且也还没有 Killer 级的应用，大家都是玩玩就不用了。而且用电子笔，总有种拿着圆珠笔划过玻璃表面的感觉。PS：画家除外。</li></ul><p>但如果你是一个脑残粉，且不差钱的话，我觉得上述的这些都不是问题，「买买买」就是了。如果还要掂量一下荷包的话，那就考虑一下上述的问题。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>现在使用 iPad Pro 作为生产力工具的人，大多数情况下是误以为 iPad Pro 是一台电脑，因为苹果的宣传也是「平板电脑」，但 iPad Pro 真的不是电脑。对于这类消费者，他们实际的需求是一个更轻更薄的一个笔记本，只不过他们对于电脑需求不强烈，所以刚好被暂时满足了而已。</p><p>也许 iPad Pro 在未来会成为一个方便好用的生产力工具，然而我个人认为在短时间内，比如说 3 到 5 年内，iPad Pro 还是没有办法成为大多数人可以使用的日常生产力工具。一个更小、更薄、更节能、性能更好的便携笔记本，才是消费者们真正所期待的。</p><p>当然，我觉得下面这些用户，是有可能将 iPad Pro 作为生产力工具来使用的：</p><ul><li>文字工作者</li><li>简单视频处理</li><li>简单音频处理</li><li>摄影师、摄像师</li><li>手工艺者</li><li>艺术家、画家</li><li>不需要行业应用的电脑用户</li><li>轻度电脑用户</li><li>「苹果税」贡献者</li></ul><p>最后，歪个楼。iOS 开发者之间流传着一种说法：就是苹果的产品，第一代是专坑小白鼠的试水产品，不建议购买。第二代的硬件产品会改善很多一代的问题，而要到真正好用，还得等到第三个版本的软件。这样说的话，Apple Watch 完全符合这个定理啊！Apple Watch Series 2 出了，然后呢系统也升级到了 watchOS 3.0，各位看官可以出手了哦~~~（一颗赛艇）</p>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apple </tag>
            
            <tag> iPad </tag>
            
            <tag> Productivity </tag>
            
            <tag> Tool </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那些你不知道的英文短语</title>
      <link href="/2016/09/18/the-english-slangs-that-you-don-t-know/"/>
      <url>/2016/09/18/the-english-slangs-that-you-don-t-know/</url>
      
        <content type="html"><![CDATA[<img src="/2016/09/18/the-english-slangs-that-you-don-t-know/internet_slang.jpg" class=""><p>在过去的好多年里，互联网用户发明了好多的互联网名词，从早年的「88」，「886」到现在的「坑爹」、「吐槽」和「扶脸杀」等等，然而这种中文短语和网络流行词并不适合于日常办公的邮件中使用。白领们，尤其是外企工作的白领们更倾向于使用「FYI」、「BTW」和「ASAP」等常用英文缩略语。</p><span id="more"></span><p>大多数的英文缩略语都是无法发音的，它们大多是为了减少击键次数而产生的，比如我们上述的「For your information」、「By the way」和「As soon as possible」。本文没什么高级内容和营养的东西，就是某天和朋友聊天，无意中提起「IMHO」这个缩略语，朋友表示完全没有听过。相信我，我这个朋友的英文水平绝对是 above above above average 的，当时我还是半信半疑的。事后觉得，凑个字数写篇文章，跟大家分享下一些常用的英文短语也是不错的。毕竟，以后也可以跟小伙伴们愉（zhuang）快（bi）地用英文短语来聊天。</p><p>下面是按照字幕顺序排列的，因为英文单词都比较简单，就不翻译了（我不会跟你说其实是因为自己懒的）。</p><ul><li>AFAIK</li><li>“as far as I know”</li><li>AFK</li><li>“away from keyboard”</li><li>ASAP</li><li>“as soon as possible”</li><li>BRB</li><li>“be right back” </li><li>BTW</li><li>“by the way”</li><li>CU</li><li>“see you”</li><li>FAQ</li><li>“frequently asked question”</li><li>FOAF</li><li>“friend of a friend”</li><li>FTF</li><li>“face to face”</li><li>FYI</li><li>“for your information”</li><li>HTH</li><li>“hope this helps”</li><li>IC</li><li>“I see”</li><li>IMHO</li><li>“in my humble opinion” &#x2F; “in my honest opinion”</li><li>IMO</li><li>“in my opinion”</li><li>LMAO</li><li>“laughing my ass off”</li><li>LOL</li><li>“laughing out loud” &#x2F; “lots of laughs”</li><li>NSFW</li><li>“Not safe for work”</li><li>OMG</li><li>“Oh my god!”</li><li>PITA</li><li>“pain in the ass”</li><li>SFW</li><li>“safe for work”</li><li>TBD</li><li>“to be decided” &#x2F; “to be discussed”</li><li>TBH</li><li>“to be honest”</li><li>WTF</li><li>“What the fuck?”</li></ul>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English </tag>
            
            <tag> Slang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个月饼引发的「血案」</title>
      <link href="/2016/09/17/you-are-fired-because-of-mooncake/"/>
      <url>/2016/09/17/you-are-fired-because-of-mooncake/</url>
      
        <content type="html"><![CDATA[<img src="/2016/09/17/you-are-fired-because-of-mooncake/mooncake.jpg" class=""><h2 id="背景故事"><a href="#背景故事" class="headerlink" title="背景故事"></a>背景故事</h2><p>我相信关注科技圈的老鸟们，最近应该或多或少都听说过关于阿里公司内部员工因为抢月饼导致被开除的事。最早得知该事件，是事发没多久后原 UCWeb 老员工群里面爆出来的一个知乎链接，原文是<a href="https://www.zhihu.com/question/50600301">《如何看待阿里巴巴安全部门的月饼事件？》</a>。</p><span id="more"></span><p>对于不知情的吃瓜群众，长话短说：</p><blockquote><p>阿里集团中秋前夕剩了些月饼，拿出来做内部秒杀，每人限购3盒。有 5 个做安全的同学写了脚本抢月饼，一不小心就刷了 124 盒月饼（后官方声明说是 133 盒）。然后其中 4 位同学在 2 个小时内闪电般被开除了。另外一个同学因为部门不同，还在等候处理结果。</p></blockquote><p>对于整个事件的来龙去脉感兴趣的同学，可以访问知乎原文链接。原链接时不时也会有当事人自己在上面 update 最新的情况。</p><p>接下来的事情就更有趣了，好多个群里面对于这个事件产生了激烈地讨论。基本上无一例外一边倒地骂阿里是傻逼，为被开除的几个小伙伴愤愤不平。</p><p>主要有以下几个观点：</p><ol><li>阿里的政治正确过头了</li><li>阿里什么问题都能上升到价值观问题</li><li>阿里不再是个技术公司了（也许从来都不是）</li><li>阿里这么做违反劳动法</li><li>阿里没有说明规则</li><li>阿里研发的锅要安全的人来背</li><li>技术无罪，阿里傻逼</li></ol><p>再有就是各种历史比较和讨论什么社会缩影和阿里老员工吐槽公司的事了，这里就不展开了。还是那句话，有兴趣自己看原文连接。</p><h2 id="胡言乱语"><a href="#胡言乱语" class="headerlink" title="胡言乱语"></a>胡言乱语</h2><p>其实看似很简单一件事，之所以可以引发这么大规模的讨论，实际上跟阿里树大招风和树敌过多也不无关系。当然，发达的现代互联网也是这一事件推进过程中不可或缺的重要一环。我觉得大家的很多观点都有其道理，但是往往也只是站在自己的某一个特定的角度来看这个问题。比如说，IT 从业人员就会觉得这不是很正常一个事情吗，不就是写了个脚本，至于吗？法务和 HR 相关的人员，则会从开除是否合法，以及公司是否需要补偿的角度来展开讨论。但其实所有的讨论都忽略了很重要的一点，那就是「公平性原则」。关于「公平性原则」展开来讨论，好像太大了，也不是三言两语就能讨论的清楚的，也不是我这种能力的人能解释得清楚的。不过，我还是想从这个角度去说几句。</p><p>首先，阐明一下利益相关，曾就职于 UCWeb，属于半个阿里前员工。我并不是为阿里洗地，但我很反对那些道貌岸然，一味指责阿里开除员工，从道德、伦理、法律各个角度口诛笔伐阿里的人。抛开阿里月饼事件来看，先不说开除是否正确，单说用技术手段「抢」这一点，本身就是三观不正和严重违背「公平性原则」的（当然，纯粹地验证安全问题本身，不在此列）。还有的人在下面理直气壮地留言：「抢火车票不是抢吗？恳请国家开除我国籍！」，对于这种土匪和流氓的嘴脸，我也只能「呵呵」了。这种感觉就跟那种「我弱我有理」一样让人恶心，相信我，幸好我不是国家领导人，不然您会如愿以偿被开除国籍的！中国少一些这样的人，社会秩序会更好，「抢」何以让这些人产生了「优越感」？通过技术压制和「抢」产生的优势，又与众多键盘侠吐槽的「特权」人群有何不同？</p><p>阿里就没有错吗？当然不是。UC 的抢票软件难道不也是自己打脸吗？说好的价值观呢？其实说白了，天下熙熙皆为利来，天下攘攘皆为利往。阿里的价值观如何，我不敢妄加评判，但我作为一个个人看到的是马主席的个人崇拜和利字当头。在这样的价值观指导下，符合自身利益的，自然是三观正确，不相符的那自然是必须铲除。自己本身都不尊重「公平性原则」的公司，又何以要求员工要遵循之？上梁不正下梁歪的道理，不是人尽皆知吗？而且一个公司内部处理，需要公开公布所有被处理员工的名字吗？在这一事件中，我不仅没有看到支撑阿里这一决策的「价值观」，更没有看到他们处理此次事件的专业性，完全不像是一个上市公司应该有的表现。</p><p>讲完阿里，再来说说「键盘侠」和「道德卫士」以及「科技支持者」们。醒醒吧，别被别人利用了，你们觉得你们是在阐释自己的观点，其实不还是被阿里的竞争对手引导着做出了抨击阿里的言论？还有那么多出来号称「挖角」的，叫别人投简历的，这秀做得也是挺好的（没错我就是点名 360 呢！），差不多就洗洗睡吧。科技是第一生产力没错，但是科技不能是免责的工具。就好比火药，极大地促进了现代社会的文明，但也催生了枪支和大炮，那么使用这些工具是否就一定是正确的呢？你会觉得二战期间德国纳粹使用这些工具无罪吗？答案显而易见。科技本身就是把双刃剑，必需合理使用，大可不必言必称「扼杀科技发展」，该发展的科技并不会因为一个刷单小脚本而倒退 20 年。</p><p>最后，说说几个「可怜」的被开除的阿里小伙伴吧。我觉得他们可怜，并不是因为他们刷单被开除可怜，而是为他们没有深思熟虑和不尊重「社会公平原则」而感到悲哀。当然，不是要指责他们，毕竟这其中很多的问题都是教育和社会导致的，我本人也无法免俗。对于他们而言，他们已经为此付出了不算小的代价，其实对于他们后续的发展来说也许是件好事。做事先做人，先把人做好了，事才有可能做得好。就算是结果正确，我也坚持认为过程也需要正确。我相信刷单的同学一定是深爱着阿里的，不然也不会自费掏钱都要买阿里的月饼送给亲朋好友，甚至在买不到的情况下还花精力研究脚本。不管如何，我觉经历此次事件，在未来他们会比别人更成熟，做事会更有原则和分寸。塞翁失马焉知非福，谁又能说他们离开阿里不是上天最好的安排呢？只能说吃一堑长一智，真心地祝福他们。</p><h2 id="后续思考"><a href="#后续思考" class="headerlink" title="后续思考"></a>后续思考</h2><p>这是一个娱乐至死的年代，过完中秋，我估计大家就再也不记得这么一起由月饼引发的「血案」了。我大胆预测一下，这一事件最终将以阿里的「胜利」告终。被开除的小伙伴也必定能找到不错的下家，而各路吃瓜群众也必将作鸟兽散状，各回各家各找各妈。</p><p>估计此文一出，会得罪不少人。但没有观点，无法给人予启迪和思考的文章，更像是浪费时间和谋财害命。如有得罪多多包涵，请勿对号入座。</p><p>最后的最后，对于那些一边谩骂着阿里，一边又用着阿里 UC 抢火车票的吃瓜群众们，你们是否有跟罗锤子自己打脸一样的感觉？（蜜汁微笑）</p>]]></content>
      
      
      <categories>
          
          <category> Opinion </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Society </tag>
            
            <tag> Mooncake </tag>
            
            <tag> Alibaba </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何降低商务旅行的焦虑感</title>
      <link href="/2016/09/10/how-to-reduce-stress-while-traveling-for-business/"/>
      <url>/2016/09/10/how-to-reduce-stress-while-traveling-for-business/</url>
      
        <content type="html"><![CDATA[<img src="/2016/09/10/how-to-reduce-stress-while-traveling-for-business/stress.jpg" class=""><h2 id="出差焦虑症"><a href="#出差焦虑症" class="headerlink" title="出差焦虑症"></a>出差焦虑症</h2><p>最近发现自己有一个非常不好的情况，就是每每一到要出差，人就会变得莫名的焦虑和烦躁。当然，也许这已经不是最近，而是有段时间了。</p><p>于是乎我就跟我们家领导提出了「<strong>出差焦虑症</strong>」这一说法，我们家领导还很不以为然并嗤之以鼻。领导以为，我之所以出差这么焦虑，完全是因为我懒得打包行李。但我觉得懒得打包行李毕竟还是一个比较表面上的事情，背后肯定有更深入的原因。而且我也不相信这么奇葩的事情就只发生在我一个身上。本着不到黄河不死心，不见棺材不落泪和好奇心害死猫的探索精神 Google 了一下，发现竟然真的有「<strong>出差焦虑症</strong>」这一说法。然而不幸的是，很多相关的信息都是一些治疗焦虑什么的医学网站和广告。就连在国内被誉为高端问答平台的<a href="https://www.zhihu.com/">知乎</a>上，也没有找到相关的答案。</p><span id="more"></span><p>改用英文搜索「<strong>business travel anxiety</strong>」，反倒是有不少的文章介绍出差焦虑症的。下面我会列举一些常见的导致出差焦虑的一些表现。</p><h2 id="导致出差焦虑症的因素"><a href="#导致出差焦虑症的因素" class="headerlink" title="导致出差焦虑症的因素"></a>导致出差焦虑症的因素</h2><p>有文章说这是因为平常的压力等级比较高所导致的，与是否出差并无半毛钱关系。也有的说跟出差有关，其中比较让我相信跟出差有关的，是 <a href="http://www.carlsonwagonlit.com/">Carlson Wagonlit Travel</a> (CWT) 所做的一份名为「<a href="http://www.cwt-solutions-group.com/export/sites/cwt/cwtsg/.content/files/cwt-stress-triggers-for-business-travelers.pdf">Stress Triggers for Business Travelers</a>」的报告。我将报告中所描述的可能导致出差焦虑的排行榜截了个图：</p><img src="/2016/09/10/how-to-reduce-stress-while-traveling-for-business/stress_triggers.png" class=""><p>其中出差最容易使人产生焦虑的几个事情，排名从 1 到 4 分别是（红色部分）：</p><ol><li>托运行李丢失或延误</li><li>没有或网络连接差</li><li>中长途距离乘坐经济舱</li><li>航班延误</li></ol><p>对于第一点来说，国内航班这方面做得还是要点赞的，相对来说美国的航空公司在这方面做得比国内的要差得多，这个排名第一倒是有点出乎我的意料，当然这个调查本身更多的也是针对国外的情况，国情有所不同也能理解。而至于为什么说这个会让人最焦虑，主要是这种情况的发生实在令人太 surprise 了，它有可能毁了你一整天的行程安排，比如午餐、休息和运动等等。相信如果这种事情发生在国内航班上，大家也是会很狂躁的，好在这种情况在国内出现的比较少，至少现在我还没有碰到过。</p><p>第二点，主要源于大家对于互联网的依赖，这已经是个放之四海而皆准的真理。现代人感觉离开了网络，就像是鱼离开了水一样的痛苦。君不见国内各大餐厅里，大家坐下的第一句话都是：「服务员，你们这里有 Wi-Fi 吗？Wi-Fi 密码是多少？」而大家平时在家和在工作单位都会有 Wi-Fi，所以其网络连通性是有保障的，而外出时没有 Wi-Fi，手机数据网络又不好或者没有流量，大家就很容易抓狂了。话说我本人就有好几次在国内机场被歪果仁索要手机号码，以便他们可以使用机场的免费 Wi-Fi，没错，<strong>好几次</strong>，我也不知道他们是怎么判断我会英文的😂。也许有些人会说，那是你们网瘾患者，我们这些看书且 inner peace 的人，并没有这些焦虑。对于这种观点我部分认同，因为出差过程中我也喜欢看书打发时间。但毕竟是出差而不是旅游，很多时候公司有临时任务需要协作处理的时候，网络的连通性还是很重要的。</p><p>第三点这个也是绝对的痛点啊，也不知道是国内的航空公司觉得国人就是长的苗条还是怎样，在我搭乘过的众多<strong>经济舱</strong>（作为屌丝的我最有发言权了）中，国内航空公司当仁不让地获得了「舒适度最差一等奖」。我已经不奢求能把腿伸直了，但是国内我就没有碰到过不顶膝盖的经济舱，如有欢迎告知。比国内航班更痛苦的是国际航班（仅限于国航、南航等国内航空公司），随随便便 10 几个小时起跳，还有很多落地转机的，那酸爽简直溢于言表。</p><p>关于第四点延误，其实也无需赘述。隔三差五在新闻上，就能看到因为机场大面积延误导致的打砸机场和扰乱秩序的不良行为，大家对于飞机延误的怨念可见一斑。不说别人就我自己，都在机场被滞留过好多次了，每每去北京和上海出差更是不延误不爽夫斯基。</p><p>除了排名前四的，还有排名 5 到 12 的，也是让大家产生出差焦虑的主要因素：</p><ol start="5"><li>出发或到达时间不便</li><li>较差的住宿条件</li><li>酒店地址出行不便</li><li>紧急出差</li><li>没办法吃得很健康</li><li>周末出差</li><li>到目的地的距离</li><li>需要转机</li></ol><p>感兴趣的可以阅读前文提到的「<strong>Stress Triggers for Business Travelers</strong>」，这里就不展开了。</p><h2 id="如何治愈「出差焦虑症」？"><a href="#如何治愈「出差焦虑症」？" class="headerlink" title="如何治愈「出差焦虑症」？"></a>如何治愈「<strong>出差焦虑症</strong>」？</h2><p>其实「<strong>出差焦虑症</strong>」是无法治愈的，但是按照以往出差的经验，我们可以通过以下一些方法来缓解。</p><h3 id="提前准备"><a href="#提前准备" class="headerlink" title="提前准备"></a>提前准备</h3><p>做一个详细的出差清单（Checklist），包括所有出差期间可能用到的电脑、文件和演示所需的设备。提前确认酒店或展馆是否有无线网络覆盖，如果没有的话提前准备好移动 Mi-Fi 或使用手机热点。务必记得带好手机充电器和充电宝。商务出行期间有时间的话，尽可能地跟同事保持沟通并完成日常工作，这样出差结束你才不会感觉回到公司还有一堆未完成的工作在等着你。</p><h3 id="日程安排"><a href="#日程安排" class="headerlink" title="日程安排"></a>日程安排</h3><p>做好日程安排可以有效减少莫名其妙的压力感。再三确认好酒店和商务会面的地点，以便选择最合适的机场，尤其是有两个机场的城市，比如说上海。如果可能的话，尽可能选择直达航班，这可以有效地减少换乘带来的焦虑和可能的延误。如果不幸只有中转航班的话，切记不要安排转机时间较短的行程，否则你会一直处在担心赶不上换乘航班的焦虑之下。</p><h3 id="打包行李"><a href="#打包行李" class="headerlink" title="打包行李"></a>打包行李</h3><p>对于我个人而言，减少出差焦虑最重要的一点是只使用登机箱和打包最必须的物品。这样的话，你就不用担心丢失行李，又或者是排长队来托运和等待行李了。记得准备好备用的衣服，因为你永远不知道什么时候会不小心弄脏衬衫或西裤。经常出差的老司机一般也会提前准备好各种洗漱用品，这样就不会在匆忙中遗漏拖鞋、牙刷和剃须刀什么的。记得使用清单，没有什么比到了酒店以后才发现没有带西装配套的皮鞋更让人恼火的啦。最后，别忘了检查一下天气。如果碰上下雨天，一把雨伞或一件夹克衫是不错的选择。</p><h3 id="舒适出行"><a href="#舒适出行" class="headerlink" title="舒适出行"></a>舒适出行</h3><p>穿着舒适的休闲服装出行，随身带个外套更好，这样无论温度如何变化都可以很好的应对。作为女士，休闲裤、运动鞋搭配一个小外套是不错的选择。你肯定不希望别人眼中的自己是一个披头散发、手忙脚乱，穿着高跟鞋在机场里面飞奔赶飞机的女神经病形象。而作为男士，不要穿着西装乘机，亦或者是把西装放在头顶的行李架上。找空乘人员帮忙，把西装挂起来，以免西装褶皱。如果落地后马上就要参加会面，记得在机场的休息室或洗手间更换衣服并简单梳理一下，以保持良好的精神面貌。最后，别忘了带上耳机、耳塞、一本好书（杂志）和一个旅行枕，这有助于在旅行途中让你保持放松。</p><h3 id="合理饮食"><a href="#合理饮食" class="headerlink" title="合理饮食"></a>合理饮食</h3><p>出差期间最容易产生焦虑，又经常会被人们忽视的一点，就是出差期间无法保持日常的生活和作息习惯。比如我自己，在出差期间就经常忽略早餐，甚至有的时候一天只吃一顿快餐就把自己给打发了。建议大家最好能尽可能的保证与自己平日的作息一样，这可以有效降低焦虑感。另外，在机场候机的时候，记得时不时地就站起来活动一下，这有助于缓解肌肉疲劳和焦虑。尽可能多喝水和吃一些高蛋白的食物以保持精力充沛。一定要好好休息，因为水土不服等原因，如果没有办法保证良好的睡眠，很容易因为疲劳导致疾病的产生。当然，随身带上一些常用的药物，也是非常推荐的。</p><h3 id="及时报销"><a href="#及时报销" class="headerlink" title="及时报销"></a>及时报销</h3><p>提前了解好公司的报销制度，尽可能避免一些可能导致无法报销的开销。用信封或文件袋把出差期间的发票和详单保存好，回到公司第一时间着手处理报销的事情。回公司上班前，在家休整一天也是个不错的选择，这样你就可以有充分的时间整理行李、调整好作息时间和状态，以便更好的回归到日常的工作状态。 </p><h2 id="出差焦虑的本质是什么？"><a href="#出差焦虑的本质是什么？" class="headerlink" title="出差焦虑的本质是什么？"></a>出差焦虑的本质是什么？</h2><p>所谓<strong>知易行难</strong>，就是道理大家都懂，落地实施的时候就傻眼了。看了 CWT 的报告，我也觉得出差焦虑跟出差本身是密切关联的，然而我要觉得焦虑肯定变不仅仅局限于出差这个事情本身。</p><p>当「出差」已经条件反射一样变成：烦躁、拖延跟焦虑的时候，我不禁问自己：究竟是出差这件事本身让我焦虑，还是说出差所要做的事情让我焦虑？我相信有很多人的出差焦虑，实际上并不是来自于出差这个事情本身，而是出差所要做的事情可能是自己不想做的？又或者是不想离开家？再者是身体不适？归根结底，「<strong>出差焦虑症</strong>」的罪魁祸首真的是「出差」吗？未必，这可能是<strong>知难行易</strong>的问题了。</p><p>反思我自己，在经历了一个星期的出差后，总结了几个出差焦虑的真正因素：</p><ol><li>无法掌控事情所带来的不安全感</li><li>不断变化的行程安排</li><li>生理上的疲惫</li><li>商务合作不顺带来的挫败感</li><li>其它未知的不确定性</li></ol><p>其实这些才是导致我「<strong>出差焦虑症</strong>」的根本原因，而这其中的每一个问题，都需要对症下药。相对于大多数情况下，上文提到的「如何治愈『出差焦虑症』」已经可以解决大多数可能导致焦虑的情况了。而「不安全感」和「失控感」所带来的焦虑，则只能通过自己不断地锻炼和修行来调整了。看来也只有做到「不以物喜、不以己悲」，方能做到彻底治愈「<strong>出差焦虑症</strong>」，估计短期内这个目标的实现还是比较困难的啦。但找到了问题的根本，相对来说才有解决的可能性，才不会永远停留在治标不治本的状态下。</p><p>如果有跟我类似经历的朋友，也可以多问自己几个为什么，找到焦虑的根本才是最重要的。不要让焦虑控制了你，而应该努力掌控好自己的人生。说起来容易，践行起来还是荆棘满路，希望大家不再恐惧出差，不再焦虑，做自己人生的掌控者。</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anxiety </tag>
            
            <tag> Business </tag>
            
            <tag> CWT </tag>
            
            <tag> Life </tag>
            
            <tag> Stress </tag>
            
            <tag> Travel </tag>
            
            <tag> Trip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于书写的思考</title>
      <link href="/2016/09/03/thinking-about-writing/"/>
      <url>/2016/09/03/thinking-about-writing/</url>
      
        <content type="html"><![CDATA[<img src="/2016/09/03/thinking-about-writing/the_power_of_words.jpg" class=""><h2 id="书写的历史"><a href="#书写的历史" class="headerlink" title="书写的历史"></a>书写的历史</h2><p>从接受文化教育开始，其实书写就从未间断过，只不过那个时候写的文字，都是为了完成任务而存在的，而不是发自内心的。要说真正想要写点什么，并真的写了点什么狗屁不通的文章，应该是从高中开始的。</p><span id="more"></span><p>高中历史上应该有三个事情是跟文字相关的：</p><ul><li>参加广州市首届中学生环保知识辩论赛，获得唯一一个最佳辩手的称号</li><li>参加校团委组织的校刊相关的工作，并拿了市团委校刊评比二等奖</li><li>参加第七届中学生运动会，作为大会新闻中心网站负责人</li></ul><p>看似很厉害，然而事到如今，我依然只能写写这种没有文化底蕴，连快消品文化都算不上的大白话无营养文章。</p><p>待到大学时期，因为专业原因，可谓是彻底地变成了「没文化」的人了。但是偶尔还是会写写博客无病呻吟一下，读过大学的朋友们应该都能理解的。</p><p>到了读 MBA 的时候，才是写作大爆发的时候。每周那铺天盖地的 essay，没完没了的 paper，永远做不完的 report，还有永远不够时间的 presentation。迄今为止我都无法理解我是如何完成那 6 万字的管理学论文并顺利毕业的，在我看来那简直是比技术类的毕业论文难太多太多了。因为这段时期的磨练，写文章也得心应手起来了，然而杯具的是写的内容全部都是议论文，而更更悲剧的是使用的语言是英文！因此导致了一些水土不服，虽然有不少的思考，可是由于过于严谨，导致到写什么都要找好多的资料作为参考引用。往往是写一篇文章只需要几个小时，而收集整理资料却要花上好几天。由于严重消耗体力和精力，又没有什么内在的驱动力，自毕业后也就没有什么文章输出了。</p><h2 id="那些年用过的博客"><a href="#那些年用过的博客" class="headerlink" title="那些年用过的博客"></a>那些年用过的博客</h2><p>写东西吗，总是想与人分享的，这就需要一个可以承载文字的载体。最初的载体自然是信纸，后来自然是互联网。然而由于缺少对于文字的敬畏，又不喜欢历史（这个观念现在正在改变），所以曾经书写过的很多内容都丢失了，不得不说是一种遗憾。毕竟放到今天，回头去阅读当年自己写的文章，去审视那个曾经年少轻狂的自己，也是别有一番风味。</p><p>最早开始在网上写东西是在 1998 年，那个年代还是 <a href="https://en.wikipedia.org/wiki/Bulletin_board_system">Bulletin board system</a> 流行的年代，网络也还停留在 56K Modem 的速度。那个时候 Blog 的概念还并未兴起，大多是个人建站。网易是当时为数不多的免费网站空间提供商，而我的第一个网站也就安家在了网易。后来网易取消了免费空间，最早写的一些文章也就随之消失了。</p><p>后来买了虚拟主机，做了另外一个个人的网站，写了些文章。但是由于虚拟主机运营商的主机质量太差，终究还是没用多久就放弃了。后来又陆陆续续地做了不同的尝试，比如国外的虚拟主机，MSN Space，Blogspot，Google Sites，Wordpress，百度空间等。</p><ul><li>MSN Space，没了，官方关闭了</li><li>Blogspot，被墙了</li><li>Google Sites，被墙了</li><li>Wordpress，被墙了</li><li>百度空间，没了，官方关闭了</li></ul><p>在做了这么多尝试后，终于疲惫不堪了，与其这么瞎折腾，还不如不要写东西了。反正努力写最后也是丢失也不一定有人看，而不努力一定很舒服。正是在这种懒惰思想的怂恿下，我就这样轻易地放弃了从 1998 年以来自己写过的所有东西。</p><p>时间来到了 2014 年，偶然看见 Jason 同学在研究如何使用 <a href="https://jekyllrb.com/">Jekyll</a> 来写技术博客。于是乎觉得静态页面也许是一个更好的解决办法，毕竟我不需要像 Wordpress 还得考虑升级和数据库备份的问题。经过了解与比较，最终选择了 <a href="https://hexo.io/">Hexo</a> 作为写作的工具，事实证明这个选择是对的。两年过去了，服务器已经迁移了很多次，而这次这个博客活下来了。</p><h2 id="接下来呢？"><a href="#接下来呢？" class="headerlink" title="接下来呢？"></a>接下来呢？</h2><p>其实一直想写一些技术之外的文章，但是写什么呢？感觉自己有很多想要分享的，却又不知从何说起。感觉自己好像懂点什么，又似乎什么都不懂，更别说写出什么有深度的文章了。但我觉得人总得做点什么去不断地改变和进步，不为什么目的，也许只为了遇见更好的自己。因此在朋友的「怂恿」和「劝说」下，我决定尝试和挑战一下，看看自己写文章可以坚持多久。</p><p>从小父辈就教育我<strong>不要常立志，要立长志</strong>，也许正是因为这句话，我也迟迟地不敢挑战去给自己定个目标。内心深处总是在逃避，担心自己信誓旦旦地要写文章，而最后却变成了常立志。其实历史上在健身和跑步这两个事情上，我一直保持了常立志的「优良传统」。但既然决定了，就得有个目标和规划，不盲目追求高产，从尽可能可以落地的角度出发，先给自己定个小一点的可以实现的目标，比如说每个月一篇非技术类文章（或者说非技术人员看得懂的技术分享、介绍类文章）。</p><p>对于内容的思考其实又回归到了写什么的问题上，为了更好的鞭策自己达成目标，我并不想给自己额外再设置太多的内容类的限制，就让它保持一个大杂烩的状态吧。</p><p>其实这篇文章就是我 9 月份凑字数的功课，和不作死就不会死的立 flag 文。</p><blockquote><p>Life is short, there is no time to leave important words unsaid.</p><footer><strong>Paul Coelho</strong><cite><a href="https://twitter.com/paulocoelho/status/525634901086060544">@paulocoelho</a></cite></footer></blockquote>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
            <tag> Thinking </tag>
            
            <tag> Writing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为什么市面上有这么多 EDA 软件？</title>
      <link href="/2016/08/28/why-there-are-so-many-eda-softwares/"/>
      <url>/2016/08/28/why-there-are-so-many-eda-softwares/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>博主最近脑回路抽筋， 突然想 neng 个机械键盘，之前也有用过 HHKB Pro 2 之类的货，但其按键声音实在是有点太扰民。看了网上不少的用户反馈，长时间使用的话，大家普遍推荐使用 Cherry 红轴。市面上销售的红轴感觉也有很多不错的，但是每个都有点美中不足，于是萌生了自己 DIY 一个的想法。</p><p>所谓工欲善其事，必先利其器，好的工具是必不可少的重要组成部分，而 <a href="https://en.wikipedia.org/wiki/Electronic_design_automation">EDA (Electronic Design Automation)</a> 软件更是设计 DIY 键盘 PCB 板的核心。</p><span id="more"></span><p>因为年代久远，且工作上并不需要使用 EDA 类的软件，所以我对 EDA 的认知还停留在大学毕业设计时所使用的 <a href="https://en.wikipedia.org/wiki/Protel">Protel 98</a> 的水平上，😂。所谓与时俱进，先看看现在大家都在用哪些软件。</p><h2 id="常用-EDA-软件"><a href="#常用-EDA-软件" class="headerlink" title="常用 EDA 软件"></a>常用 EDA 软件</h2><p>这里有一份来自 Wikipedia 的 <a href="https://en.wikipedia.org/wiki/Comparison_of_EDA_software">EDA 软件对比列表</a>，里面罗列了大部分常用的 EDA 软件，包括开源的商业的。</p><p>咨询几个朋友后发现大家使用的软件主要集中在以下几个：</p><ul><li><a href="http://www.altium.com/altium-designer/overview">Altium Designer</a></li><li><a href="https://www.cadence.com/content/cadence-www/global/en_US/home/tools/pcb-design-and-analysis.html">Cadence SPB</a></li><li><a href="https://www.pads.com/">PADS</a></li><li><a href="http://kicad-pcb.org/">KiCad EDA</a></li></ul><p><strong>Altium Designer</strong> 比较好理解，其实就是 <strong>Protel</strong> 后续的升级版本，没有太多不清晰的地方。</p><p><strong>PADS</strong> 属于 <a href="https://www.mentor.com/">Mentor Graphics</a>，比较多的手机厂商在使用这个软件，比如知名的 Samsung。</p><p><strong>KiCad</strong> 大多出现在 <a href="http://freedomdefined.org/OSHW">Open Source Hardware (OSHW)</a> 相关的项目上，比如现在比较出名的 60 Keyboard <a href="http://blog.komar.be/projects/gh60-programmable-keyboard/">GH60</a> 就是使用该软件完成的。</p><p>其中最让我 confusing 的地方，实际上是 <strong>Cadence SPB</strong>，也有人直接说 <strong>Cadence</strong> 的。因为别人跟我说，画原理图用 OrCAD，画 PCB 用 Allegro，What the hell?! 这都是什么跟什么啊？！一头雾水啊，有没有？！而且，这个 OrCAD 和 Allegro 也跟 Cadence 有关系。</p><p>查了下历史，原来在 1999 年的时候，Cadence 收购了 OrCAD，于是乎 OrCAD 变成了 Cadence 公司的一个产品。而 Cadence 是公司名，<strong>Allegro</strong> 是该公司 EDA 产品的名字。</p><p>收购后，Cadence 公司将 EDA 软件产品划分成了高端和低端，分别对应 <strong>Cadence SPB</strong> 和 <strong>OrCAD</strong>。</p><p>而我朋友所说的，原理图 OrCAD，PCB 用 Allegro，实际上指的是 <code>OrCAD Caputre</code> 和 <code>Allegro PCB Editor</code>。</p><p>到这里终于算是搞清楚了 <code>Altium Designer</code>，<code>Protel</code>，<code>Cadence</code>，<code>PADS</code>，<code>KiCad</code>，<code>Allegro</code>，<code>OrCAD</code> 之间的关系了。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>经过调查和了解，估计最终会使用 2 款软件：</p><ul><li>Cadence SPB</li><li>KiCad EDA</li></ul><p>选择 Cadence 主要是考虑和朋友同事之间可以更好地进行交流，因为他们现在主要以使用 Cadence SPB 为主，当然也会了解下 Altium Designer 的使用，但应该不会深入了解了。</p><p>选择 KiCad 主要是考虑参与、学习开源项目，或者自己做一些特别小型的练手项目，同时也是为了能把 KiCad 的项目转换成 Cadence 等 EDA 软件可存储的文件格式。KiCad 还有 2 个加分项，一是它可以以原生方式在 macOS 下直接使用（大多数 EDA 软件只能运行在 Windows 平台下），二是它是开源免费的，没有什么限制。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>有的时候觉得垄断不是件好事儿，但对于我这种有选择恐惧症的人来说，这么多软件也是让人挺崩溃的。为什么在 EDA 届就没有什么一家独大的寡头呢？还是说我对于这块的理解还是太肤浅了一点？</p><p>如果有业内的大牛从事 EDA 开发相关的，欢迎赐教。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Allegro </tag>
            
            <tag> Altium </tag>
            
            <tag> Cadence </tag>
            
            <tag> EDA </tag>
            
            <tag> KiCAD </tag>
            
            <tag> Mentor Graphics </tag>
            
            <tag> OSHW </tag>
            
            <tag> OrCAD </tag>
            
            <tag> PADS </tag>
            
            <tag> Protel </tag>
            
            <tag> Software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开启自动摘要</title>
      <link href="/2016/08/16/enable-automatic-excerpt/"/>
      <url>/2016/08/16/enable-automatic-excerpt/</url>
      
        <content type="html"><![CDATA[<p>一直都觉得博客应该有一个文章的自动摘要功能，可是之前使用 Hexo 自带的 <code>&lt;!-- more --&gt;</code> 总是会有奇怪的问题，包括一些莫名其妙的断句等。因为懒，所以首页也就是一直全文显示了，直到发现了 <a href="https://github.com/chekun/hexo-excerpt">hexo-excerpt</a> 这个插件。</p><p>安装方法很简单，npm 一下就好了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-excerpt --save</span><br><span class="line">hexo-site@0.0.0 /path/to/blog</span><br><span class="line">└─┬ hexo-excerpt@1.1.1</span><br><span class="line">  └─┬ htmlparser2@3.9.1</span><br><span class="line">    └─┬ readable-stream@2.1.4</span><br><span class="line">      └── isarray@1.0.0</span><br></pre></td></tr></table></figure><p>需要注意的是这个插件使用了 ES6 的语法特性，Node.js v4 LTS 无法支持该语法。</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Node.js </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用 Docker 把 PostgreSQL 数据库从 9.4 升级到 9.5</title>
      <link href="/2016/08/15/upgrade-postgresql-version-from-9-4-to-9-5-in-docker/"/>
      <url>/2016/08/15/upgrade-postgresql-version-from-9-4-to-9-5-in-docker/</url>
      
        <content type="html"><![CDATA[<h2 id="杯具是如何开始的"><a href="#杯具是如何开始的" class="headerlink" title="杯具是如何开始的"></a>杯具是如何开始的</h2><p>由于使用 Atlassian 产品的缘故，一直在服务器上跑着一个 PostgreSQL。之前在配置服务的时候，直接用的是 <code>latest</code> 标签的镜像，然后手贱运行了 <code>docker pull postgres</code> 升级了 Docker 镜像。然后……然后……服务器就挂了，跑不起来了（懵逼脸）。看了一下，原来最新的官方 PostgreSQL 已经是 9.5 了，而我当时 pull 下来的 <code>latest</code> 实际上是 9.4。这个事情教育我们，生产环境的镜像最好使用版本号 tag 而不要偷懒使用 latest。</p><p>既然杯具已经发生了，那么该解决的问题还是要解决的。看了一下，PostgreSQL 官方的升级建议是使用 <a href="https://www.postgresql.org/docs/9.5/static/pgupgrade.html">pg_upgrade</a> 来处理新旧数据库，但是有个棘手的问题，就是必须同时有 9.4 和 9.5 两个版本的 PostgreSQL，否则无法升级数据库。</p><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>因为我是使用 <code>-v</code> 来映射目录的，所以不用 <code>--volumes-from</code> 的方式来加载 Volume。因此，简单处理一下目录，把所有的 containers 都先 stop 掉，然后把待升级的数据库目录改个名，同时新建一个同名目录用于保存升级后的数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> postgres postgres_old</span><br><span class="line"><span class="built_in">mkdir</span> postgres</span><br><span class="line"><span class="built_in">chown</span> 999.999 postgres</span><br><span class="line"><span class="built_in">chmod</span> 700 postgres</span><br></pre></td></tr></table></figure><p>其中用户 <code>999.999</code> 对应的是 container 里面的用户 <code>postgres:postgres</code>。</p><p>接下来就是用新版本的 PostgreSQL 来初始化数据库，以便后续数据库升级：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name=<span class="string">&quot;postgres_new&quot;</span> -v /path/to/postgres:/var/lib/postgresql/data -ti --<span class="built_in">rm</span> postgres:9.5</span><br><span class="line">The files belonging to this database system will be owned by user <span class="string">&quot;postgres&quot;</span>.</span><br><span class="line">This user must also own the server process.</span><br><span class="line"></span><br><span class="line">The database cluster will be initialized with locale <span class="string">&quot;en_US.utf8&quot;</span>.</span><br><span class="line">The default database encoding has accordingly been <span class="built_in">set</span> to <span class="string">&quot;UTF8&quot;</span>.</span><br><span class="line">The default text search configuration will be <span class="built_in">set</span> to <span class="string">&quot;english&quot;</span>.</span><br><span class="line"></span><br><span class="line">Data page checksums are disabled.</span><br><span class="line"></span><br><span class="line">fixing permissions on existing directory /var/lib/postgresql/data ... ok</span><br><span class="line">creating subdirectories ... ok</span><br><span class="line">selecting default max_connections ... 100</span><br><span class="line">selecting default shared_buffers ... 128MB</span><br><span class="line">selecting dynamic shared memory implementation ... posix</span><br><span class="line">creating configuration files ... ok</span><br><span class="line">creating template1 database <span class="keyword">in</span> /var/lib/postgresql/data/base/1 ... ok</span><br><span class="line">initializing pg_authid ... ok</span><br><span class="line">initializing dependencies ... ok</span><br><span class="line">creating system views ... ok</span><br><span class="line">loading system objects<span class="string">&#x27; descriptions ... ok</span></span><br><span class="line"><span class="string">creating collations ... ok</span></span><br><span class="line"><span class="string">creating conversions ... ok</span></span><br><span class="line"><span class="string">creating dictionaries ... ok</span></span><br><span class="line"><span class="string">setting privileges on built-in objects ... ok</span></span><br><span class="line"><span class="string">creating information schema ... ok</span></span><br><span class="line"><span class="string">loading PL/pgSQL server-side language ... ok</span></span><br><span class="line"><span class="string">vacuuming database template1 ... ok</span></span><br><span class="line"><span class="string">copying template1 to template0 ... ok</span></span><br><span class="line"><span class="string">copying template1 to postgres ... ok</span></span><br><span class="line"><span class="string">syncing data to disk ... ok</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">WARNING: enabling &quot;trust&quot; authentication for local connections</span></span><br><span class="line"><span class="string">You can change this by editing pg_hba.conf or using the option -A, or</span></span><br><span class="line"><span class="string">--auth-local and --auth-host, the next time you run initdb.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Success. You can now start the database server using:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    pg_ctl -D /var/lib/postgresql/data -l logfile start</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">****************************************************</span></span><br><span class="line"><span class="string">WARNING: No password has been set for the database.</span></span><br><span class="line"><span class="string">         This will allow anyone with access to the</span></span><br><span class="line"><span class="string">         Postgres port to access your database. In</span></span><br><span class="line"><span class="string">         Docker&#x27;</span>s default configuration, this is</span><br><span class="line">         effectively any other container on the same</span><br><span class="line">         system.</span><br><span class="line"></span><br><span class="line">         Use <span class="string">&quot;-e POSTGRES_PASSWORD=password&quot;</span> to <span class="built_in">set</span></span><br><span class="line">         it <span class="keyword">in</span> <span class="string">&quot;docker run&quot;</span>.</span><br><span class="line">****************************************************</span><br><span class="line">waiting <span class="keyword">for</span> server to start....LOG:  database system was shut down at 2016-08-14 15:49:36 UTC</span><br><span class="line">LOG:  MultiXact member wraparound protections are now enabled</span><br><span class="line">LOG:  database system is ready to accept connections</span><br><span class="line">LOG:  autovacuum launcher started</span><br><span class="line"> <span class="keyword">done</span></span><br><span class="line">server started</span><br><span class="line">ALTER ROLE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/docker-entrypoint.sh: ignoring /docker-entrypoint-initdb.d/*</span><br><span class="line"></span><br><span class="line">LOG:  received fast shutdown request</span><br><span class="line">LOG:  aborting any active transactions</span><br><span class="line">waiting <span class="keyword">for</span> server to shut down...LOG:  autovacuum launcher shutting down</span><br><span class="line">.LOG:  shutting down</span><br><span class="line">LOG:  database system is shut down</span><br><span class="line"> <span class="keyword">done</span></span><br><span class="line">server stopped</span><br><span class="line"></span><br><span class="line">PostgreSQL init process complete; ready <span class="keyword">for</span> start up.</span><br><span class="line"></span><br><span class="line">LOG:  database system was shut down at 2016-08-14 15:49:40 UTC</span><br><span class="line">LOG:  MultiXact member wraparound protections are now enabled</span><br><span class="line">LOG:  database system is ready to accept connections</span><br><span class="line">LOG:  autovacuum launcher started</span><br><span class="line">^C</span><br><span class="line">LOG:  received fast shutdown request</span><br><span class="line">LOG:  aborting any active transactions</span><br><span class="line">LOG:  autovacuum launcher shutting down</span><br><span class="line">LOG:  shutting down</span><br><span class="line">LOG:  database system is shut down</span><br></pre></td></tr></table></figure><p>这样，我们就得到了一个新的 9.5 版本的初始化数据库。</p><h2 id="升级数据库"><a href="#升级数据库" class="headerlink" title="升级数据库"></a>升级数据库</h2><p>首先从待升级的 container 获得 9.4 版本 PostgreSQL 的运行文件和共享文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> postgres_old:/usr/lib/postgresql/9.4 .</span><br><span class="line">docker <span class="built_in">cp</span> postgres_old:/usr/share/postgresql/9.4 9.4s</span><br></pre></td></tr></table></figure><p>然后创建一个临时的 container 来升级数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name=<span class="string">&quot;tmp&quot;</span> -v $(<span class="built_in">pwd</span>)/9.4:/usr/lib/postgresql/9.4 -v $(<span class="built_in">pwd</span>)/9.4s:/usr/share/postgresql/9.4 -v /path/to/postgres:/data/new -v /path/to/postgres_old:/data/old -ti --<span class="built_in">rm</span> postgres:9.5 bash</span><br></pre></td></tr></table></figure><ul><li><code>/path/to/postgres</code> 是新数据库的路径</li><li><code>/path/to/postgres_old</code> 是 9.4 版本的旧数据库的路径</li></ul><p>在 container 中运行 <code>su - postgres</code> 把用户切换成 <code>postgres</code>，然后运行如下命令来升级数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /tmp</span><br><span class="line">$ /usr/lib/postgresql/9.5/bin/pg_upgrade -b /usr/lib/postgresql/9.4/bin -B /usr/lib/postgresql/9.5/bin -d /data/old -D /data/new</span><br><span class="line">Performing Consistency Checks</span><br><span class="line">-----------------------------</span><br><span class="line">Checking cluster versions                                   ok</span><br><span class="line">Checking database user is the install user                  ok</span><br><span class="line">Checking database connection settings                       ok</span><br><span class="line">Checking <span class="keyword">for</span> prepared transactions                          ok</span><br><span class="line">Checking <span class="keyword">for</span> reg* system OID user data types                ok</span><br><span class="line">Checking <span class="keyword">for</span> contrib/isn with bigint-passing mismatch       ok</span><br><span class="line">Creating dump of global objects                             ok</span><br><span class="line">Creating dump of database schemas</span><br><span class="line">                                                            ok</span><br><span class="line">Checking <span class="keyword">for</span> presence of required libraries                 ok</span><br><span class="line">Checking database user is the install user                  ok</span><br><span class="line">Checking <span class="keyword">for</span> prepared transactions                          ok</span><br><span class="line"></span><br><span class="line">If pg_upgrade fails after this point, you must re-initdb the</span><br><span class="line">new cluster before continuing.</span><br><span class="line"></span><br><span class="line">Performing Upgrade</span><br><span class="line">------------------</span><br><span class="line">Analyzing all rows <span class="keyword">in</span> the new cluster                       ok</span><br><span class="line">Freezing all rows on the new cluster                        ok</span><br><span class="line">Deleting files from new pg_clog                             ok</span><br><span class="line">Copying old pg_clog to new server                           ok</span><br><span class="line">Setting next transaction ID and epoch <span class="keyword">for</span> new cluster       ok</span><br><span class="line">Deleting files from new pg_multixact/offsets                ok</span><br><span class="line">Copying old pg_multixact/offsets to new server              ok</span><br><span class="line">Deleting files from new pg_multixact/members                ok</span><br><span class="line">Copying old pg_multixact/members to new server              ok</span><br><span class="line">Setting next multixact ID and offset <span class="keyword">for</span> new cluster        ok</span><br><span class="line">Resetting WAL archives                                      ok</span><br><span class="line">Setting frozenxid and minmxid counters <span class="keyword">in</span> new cluster       ok</span><br><span class="line">Restoring global objects <span class="keyword">in</span> the new cluster                 ok</span><br><span class="line">Restoring database schemas <span class="keyword">in</span> the new cluster</span><br><span class="line">                                                            ok</span><br><span class="line">Copying user relation files</span><br><span class="line">                                                            ok</span><br><span class="line">Setting next OID <span class="keyword">for</span> new cluster                            ok</span><br><span class="line">Sync data directory to disk                                 ok</span><br><span class="line">Creating script to analyze new cluster                      ok</span><br><span class="line">Creating script to delete old cluster                       ok</span><br><span class="line"></span><br><span class="line">Upgrade Complete</span><br><span class="line">----------------</span><br><span class="line">Optimizer statistics are not transferred by pg_upgrade so,</span><br><span class="line">once you start the new server, consider running:</span><br><span class="line">    ./analyze_new_cluster.sh</span><br><span class="line"></span><br><span class="line">Running this script will delete the old cluster<span class="string">&#x27;s data files:</span></span><br><span class="line"><span class="string">    ./delete_old_cluster.sh</span></span><br></pre></td></tr></table></figure><p>好了，经过上述几步，数据库就升级完毕了，接下来重启各种服务，完美！</p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> PostgreSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开启 OCSP Stapling</title>
      <link href="/2016/07/26/enable-ocsp-stapling/"/>
      <url>/2016/07/26/enable-ocsp-stapling/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天更新了博客，<a href="../../../../2016/07/25/start-using-http-2-for-this-blog">全站开启 HTTP&#x2F;2 模式</a>。基本设置完了以后，又发现了一些好玩的，今天这个算是补充说明吧。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>先说说 <a href="https://en.wikipedia.org/wiki/Online_Certificate_Status_Protocol">OCSP</a> 是个什么东东，其全名是 <code>Online Certificate Status Protocol</code>，简单说，就是一个可以检测 SSL 证书是否有效的在线证书状态查询协议。有些客户端在访问的时候，会通过 CA 提供的 OCSP URL 去查询证书的有效性，而这个过程实际上是一个阻断式的 HTTP 请求。客户端完成诸如 DNS 查询、TCP 链接建立、HTTP 请求、验证证书等操作后，用户可以开始正常浏览网站，而这中间可能会耗时很长，尤其是在中国这种奇葩的网络状况下，访问海外 CA 提供的 OCSP URL 更是如此。</p><span id="more"></span><p>而 OCSP Stapling 其实是服务器先去 CA 指定的 OCSP URL 获取 OCSP 查询结果，并将结果直接发送给客户端，免去客户端再去 CA 服务器验证的动作，从而提升访问时的连接速度和用户体验，说白了都是为了加速一丢丢。</p><h2 id="OCSP-状态查询"><a href="#OCSP-状态查询" class="headerlink" title="OCSP 状态查询"></a>OCSP 状态查询</h2><p>先查看一下未修改 Nginx 配置之前的查询结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ openssl s_client -connect tommy.net.cn:443 -servername tommy.net.cn -status -tlsextdebug &lt; /dev/null 2&gt;&amp;1 | grep -i <span class="string">&quot;OCSP response&quot;</span></span><br><span class="line">OCSP response: no response sent</span><br></pre></td></tr></table></figure><p>嗯，妥妥的，<code>no response sent</code>，表示服务器没有开启 OCSP 支持。下面是重新修改和配置好 Nginx 以后的 OCSP 查询结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$  openssl s_client -connect tommy.net.cn:443 -servername tommy.net.cn -status -tlsextdebug &lt; /dev/null 2&gt;&amp;1 | grep -i <span class="string">&quot;OCSP response&quot;</span></span><br><span class="line">OCSP response:</span><br><span class="line">OCSP Response Data:</span><br><span class="line">    OCSP Response Status: successful (0x0)</span><br><span class="line">    Response Type: Basic OCSP Response</span><br></pre></td></tr></table></figure><p>可以看到 OCSP 查询验证成功。</p><h2 id="验证-OCSP-Response"><a href="#验证-OCSP-Response" class="headerlink" title="验证 OCSP Response"></a>验证 OCSP Response</h2><p>在配置 Nginx 配置文件之前，我们需要先在命令行验证一下，得到正确的 OCSP Response 先，首先是获得 OCSP URL：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ openssl x509 -<span class="keyword">in</span> cert.pem -ocsp_uri -noout</span><br><span class="line">http://ocsp.startssl.com</span><br></pre></td></tr></table></figure><p>嗯，一看就暴露了我使用 <a href="https://www.startssl.com/">StartSSL</a> 的事实，接下来验证 OCSP Response，证书签发用的是 StartSSL 的 Intermediate DV1 证书，<code>cert.pem</code> 是服务器证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">$ openssl ocsp -issuer intermediate.pem -cert cert.pem -no_nonce -text -url http://ocsp.startssl.com</span><br><span class="line">OCSP Request Data:</span><br><span class="line">    Version: 1 (0x0)</span><br><span class="line">    Requestor List:</span><br><span class="line">        Certificate ID:</span><br><span class="line">          Hash Algorithm: sha1</span><br><span class="line">          Issuer Name Hash: 5168159AB1999B3A55E860C022C9D519E0303D29</span><br><span class="line">          Issuer Key Hash: D7914E01C4B0BFF8C86793449CE733FAAD930CAF</span><br><span class="line">          Serial Number: 560E798B0AA4C055417AAB147A96F207</span><br><span class="line">OCSP Response Data:</span><br><span class="line">    OCSP Response Status: successful (0x0)</span><br><span class="line">    Response Type: Basic OCSP Response</span><br><span class="line">    Version: 1 (0x0)</span><br><span class="line">    Responder Id: C = IL, O = StartCom Ltd., OU = StartCom Certification Authority, CN = StartCom Class 1 DV Server CA OCSP Responder</span><br><span class="line">    Produced At: Jul 25 10:07:29 2016 GMT</span><br><span class="line">    Responses:</span><br><span class="line">    Certificate ID:</span><br><span class="line">      Hash Algorithm: sha1</span><br><span class="line">      Issuer Name Hash: 5168159AB1999B3A55E860C022C9D519E0303D29</span><br><span class="line">      Issuer Key Hash: D7914E01C4B0BFF8C86793449CE733FAAD930CAF</span><br><span class="line">      Serial Number: 560E798B0AA4C055417AAB147A96F207</span><br><span class="line">    Cert Status: good</span><br><span class="line">    This Update: Jul 25 10:07:29 2016 GMT</span><br><span class="line">    Next Update: Jul 29 10:17:29 2016 GMT</span><br><span class="line"></span><br><span class="line">    Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">         81:18:0b:<span class="built_in">fc</span>:7e:3f:db:19:7d:c5:35:fa:8d:12:5a:5d:5b:24:</span><br><span class="line">         ea:2c:fe:69:c1:55:08:f7:8b:8b:51:f7:74:39:fa:43:dc:02:</span><br><span class="line">         7f:5e:b0:eb:d8:68:b4:4b:3e:a6:5c:55:d2:19:1e:84:66:86:</span><br><span class="line">         7d:e1:98:77:4c:6a:e1:61:a1:3b:08:a2:55:76:9e:79:8f:1c:</span><br><span class="line">         4f:d7:12:e1:75:92:9d:aa:85:0b:b5:bf:18:4d:e4:ba:bc:8a:</span><br><span class="line">         9c:35:4c:f4:46:f0:44:a5:fd:82:96:4e:7c:f2:56:95:d3:9b:</span><br><span class="line">         b5:47:98:6f:b1:47:3f:64:f3:4c:e0:71:f2:5c:<span class="built_in">df</span>:71:80:8a:</span><br><span class="line">         05:b6:82:cf:ec:5a:86:53:55:9e:33:e1:1b:8b:44:ca:7f:5e:</span><br><span class="line">         24:a7:40:2b:<span class="built_in">fc</span>:a2:9e:be:cb:a8:a1:ed:f0:45:3f:95:50:e8:</span><br><span class="line">         4e:0a:28:0a:0a:5a:68:75:cc:c7:17:57:67:93:3b:01:b1:40:</span><br><span class="line">         12:ef:c0:70:23:24:68:d2:28:34:65:68:4d:ac:98:05:e6:4b:</span><br><span class="line">         fb:09:b4:c7:46:0f:0d:b2:57:61:78:2e:f3:75:c5:48:1b:8a:</span><br><span class="line">         65:8e:5e:ff:40:cb:20:87:a1:c5:a7:c9:6d:c3:5f:63:db:9d:</span><br><span class="line">         c4:28:b0:9c:f8:14:70:<span class="built_in">dd</span>:b5:0a:75:47:a1:2b:57:49:f3:cf:</span><br><span class="line">         41:cc:c0:cf</span><br><span class="line">Certificate:</span><br><span class="line">    Data:</span><br><span class="line">        Version: 3 (0x2)</span><br><span class="line">        Serial Number:</span><br><span class="line">            24:<span class="built_in">dd</span>:c9:af:57:42:41:b8:ca:bc:8d:bf:96:9e:82:dc</span><br><span class="line">    Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">        Issuer: C=IL, O=StartCom Ltd., OU=StartCom Certification Authority, CN=StartCom Class 1 DV Server CA</span><br><span class="line">        Validity</span><br><span class="line">            Not Before: Jun 10 01:59:42 2016 GMT</span><br><span class="line">            Not After : Sep 28 01:59:42 2016 GMT</span><br><span class="line">        Subject: C=IL, O=StartCom Ltd., OU=StartCom Certification Authority, CN=StartCom Class 1 DV Server CA OCSP Responder</span><br><span class="line">        Subject Public Key Info:</span><br><span class="line">            Public Key Algorithm: rsaEncryption</span><br><span class="line">                Public-Key: (2048 bit)</span><br><span class="line">                Modulus:</span><br><span class="line">                    00:ef:a0:56:07:82:f3:21:f8:a3:58:ca:7d:ef:f0:</span><br><span class="line">                    51:f8:f0:67:4b:23:56:cb:d2:f5:5e:55:fa:d9:ef:</span><br><span class="line">                    37:e2:c4:02:07:ba:a9:b2:d7:b3:67:bb:5e:fd:2f:</span><br><span class="line">                    fd:a9:4d:80:94:1d:a4:7c:5f:5f:d4:fb:d5:c7:c8:</span><br><span class="line">                    07:61:8a:4f:d5:6f:95:8b:43:33:78:f2:87:d6:a4:</span><br><span class="line">                    43:c7:57:b9:fe:ea:2f:88:83:69:0b:25:6a:ba:67:</span><br><span class="line">                    ad:03:ec:59:1a:9b:f9:2a:74:22:9e:44:aa:77:f6:</span><br><span class="line">                    1f:15:94:22:9e:63:86:4c:00:3b:f3:fd:7c:6b:70:</span><br><span class="line">                    f7:f5:17:32:c9:d1:96:46:80:86:be:9b:d2:7c:13:</span><br><span class="line">                    db:3f:<span class="built_in">dd</span>:2d:7f:cf:3f:9a:31:d1:35:b4:d8:ac:db:</span><br><span class="line">                    6d:1f:87:10:ec:f7:98:b1:88:27:44:6d:4a:7a:91:</span><br><span class="line">                    29:be:0f:bc:7f:33:d9:ac:ea:b2:f0:a6:eb:58:cb:</span><br><span class="line">                    e6:29:05:6b:74:57:0b:d3:4b:3a:94:05:53:56:9c:</span><br><span class="line">                    07:e4:53:5d:19:1d:42:04:76:78:b1:4a:d7:b2:99:</span><br><span class="line">                    25:97:64:3b:51:5d:f3:f0:7d:c1:d8:f0:89:f8:b0:</span><br><span class="line">                    4a:2c:37:<span class="built_in">df</span>:b2:2a:e3:fa:dc:3a:f0:ec:fb:c3:a7:</span><br><span class="line">                    74:7e:f5:3a:07:77:93:b3:42:1b:59:34:48:10:9a:</span><br><span class="line">                    a7:6b</span><br><span class="line">                Exponent: 65537 (0x10001)</span><br><span class="line">        X509v3 extensions:</span><br><span class="line">            X509v3 Key Usage: critical</span><br><span class="line">                Digital Signature, Key Encipherment, Key Agreement</span><br><span class="line">            X509v3 Extended Key Usage:</span><br><span class="line">                OCSP Signing</span><br><span class="line">            OCSP No Check:</span><br><span class="line"></span><br><span class="line">            X509v3 Basic Constraints: critical</span><br><span class="line">                CA:FALSE</span><br><span class="line">            X509v3 Subject Key Identifier:</span><br><span class="line">                17:47:77:8E:AD:70:4C:F6:0C:E0:2F:9B:9E:86:38:54:9B:C2:15:18</span><br><span class="line">            X509v3 Authority Key Identifier:</span><br><span class="line">                keyid:D7:91:4E:01:C4:B0:BF:F8:C8:67:93:44:9C:E7:33:FA:AD:93:0C:AF</span><br><span class="line"></span><br><span class="line">            Authority Information Access:</span><br><span class="line">                OCSP - URI:http://ocsp.startssl.com</span><br><span class="line">                CA Issuers - URI:http://aia.startssl.com/certs/sca.server1.crt</span><br><span class="line"></span><br><span class="line">            X509v3 CRL Distribution Points:</span><br><span class="line"></span><br><span class="line">                Full Name:</span><br><span class="line">                  URI:http://crl.startssl.com/sca-server1.crl</span><br><span class="line"></span><br><span class="line">    Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">         69:67:fa:4f:23:91:f0:56:61:b2:88:09:b4:eb:<span class="built_in">cd</span>:d0:e7:f4:</span><br><span class="line">         22:a0:2c:f8:2d:cc:6f:7c:bd:1e:2e:17:8b:19:c5:be:3d:70:</span><br><span class="line">         90:6e:a6:94:2d:98:d9:a6:44:97:e6:53:c6:d9:9a:f8:1f:01:</span><br><span class="line">         f7:c3:9b:b4:22:4c:c0:81:72:49:f8:a7:bc:9d:18:49:47:d8:</span><br><span class="line">         7c:c6:5d:ef:3b:dc:b4:7c:3b:48:9a:d4:f3:ab:50:9c:<span class="built_in">fc</span>:02:</span><br><span class="line">         75:5f:69:30:2a:bc:b4:65:d3:a2:02:b8:1b:4a:c9:ab:cf:d1:</span><br><span class="line">         03:38:cf:b3:<span class="built_in">df</span>:a0:60:5b:e3:a1:a2:c7:f8:9d:9b:74:f3:08:</span><br><span class="line">         fa:8d:d8:21:b1:ec:65:b7:a0:cb:51:ec:2b:d7:01:0b:bb:54:</span><br><span class="line">         1b:63:af:<span class="built_in">df</span>:f9:9e:ce:80:c8:09:60:57:ec:<span class="built_in">cd</span>:f4:2b:d6:e4:</span><br><span class="line">         01:e4:00:00:59:ef:b1:75:28:96:82:47:16:0e:db:e5:3a:2e:</span><br><span class="line">         b5:2f:d5:9d:bf:f5:60:4c:02:<span class="built_in">fc</span>:7e:f5:41:10:58:5d:9d:bd:</span><br><span class="line">         c8:1d:e7:02:71:82:60:28:c4:7f:1e:6f:95:c1:53:8b:f1:7e:</span><br><span class="line">         2a:46:ce:81:c6:18:e3:0b:e4:e7:<span class="built_in">df</span>:aa:60:b0:80:10:60:86:</span><br><span class="line">         20:31:88:f5:46:8d:ba:d9:f9:7e:ed:1f:b3:16:ca:ba:ff:4f:</span><br><span class="line">         13:d3:9a:94</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIEvzCCA6egAwIBAgIQJN3Jr1dCQbjKvI2/lp6C3DANBgkqhkiG9w0BAQsFADB4</span><br><span class="line">MQswCQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjEpMCcGA1UECxMg</span><br><span class="line">U3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxJjAkBgNVBAMTHVN0YXJ0</span><br><span class="line">Q29tIENsYXNzIDEgRFYgU2VydmVyIENBMB4XDTE2MDYxMDAxNTk0MloXDTE2MDky</span><br><span class="line">ODAxNTk0MlowgYcxCzAJBgNVBAYTAklMMRYwFAYDVQQKDA1TdGFydENvbSBMdGQu</span><br><span class="line">MSkwJwYDVQQLDCBTdGFydENvbSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTE1MDMG</span><br><span class="line">A1UEAwwsU3RhcnRDb20gQ2xhc3MgMSBEViBTZXJ2ZXIgQ0EgT0NTUCBSZXNwb25k</span><br><span class="line">ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDvoFYHgvMh+KNYyn3v</span><br><span class="line">8FH48GdLI1bL0vVeVfrZ7zfixAIHuqmy17Nnu179L/2pTYCUHaR8X1/U+9XHyAdh</span><br><span class="line">ik/Vb5WLQzN48ofWpEPHV7n+6i+Ig2kLJWq6Z60D7Fkam/kqdCKeRKp39h8VlCKe</span><br><span class="line">Y4ZMADvz/XxrcPf1FzLJ0ZZGgIa+m9J8E9s/3S1/zz+aMdE1tNis220fhxDs95ix</span><br><span class="line">iCdEbUp6kSm+D7x/M9ms6rLwputYy+YpBWt0VwvTSzqUBVNWnAfkU10ZHUIEdnix</span><br><span class="line">SteymSWXZDtRXfPwfcHY8In4sEosN9+yKuP63Drw7PvDp3R+9ToHd5OzQhtZNEgQ</span><br><span class="line">mqdrAgMBAAGjggEzMIIBLzAOBgNVHQ8BAf8EBAMCA6gwEwYDVR0lBAwwCgYIKwYB</span><br><span class="line">BQUHAwkwDwYJKwYBBQUHMAEFBAIFADAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQX</span><br><span class="line">R3eOrXBM9gzgL5uehjhUm8IVGDAfBgNVHSMEGDAWgBTXkU4BxLC/+Mhnk0Sc5zP6</span><br><span class="line">rZMMrzBvBggrBgEFBQcBAQRjMGEwJAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLnN0</span><br><span class="line">YXJ0c3NsLmNvbTA5BggrBgEFBQcwAoYtaHR0cDovL2FpYS5zdGFydHNzbC5jb20v</span><br><span class="line">Y2VydHMvc2NhLnNlcnZlcjEuY3J0MDgGA1UdHwQxMC8wLaAroCmGJ2h0dHA6Ly9j</span><br><span class="line">cmwuc3RhcnRzc2wuY29tL3NjYS1zZXJ2ZXIxLmNybDANBgkqhkiG9w0BAQsFAAOC</span><br><span class="line">AQEAaWf6TyOR8FZhsogJtOvN0Of0IqAs+C3Mb3y9Hi4XixnFvj1wkG6mlC2Y2aZE</span><br><span class="line">l+ZTxtma+B8B98ObtCJMwIFySfinvJ0YSUfYfMZd7zvctHw7SJrU86tQnPwCdV9p</span><br><span class="line">MCq8tGXTogK4G0rJq8/RAzjPs9+gYFvjoaLH+J2bdPMI+o3YIbHsZbegy1HsK9cB</span><br><span class="line">C7tUG2Ov3/mezoDICWBX7M30K9bkAeQAAFnvsXUoloJHFg7b5ToutS/Vnb/1YEwC</span><br><span class="line">/H71QRBYXZ29yB3nAnGCYCjEfx5vlcFTi/F+KkbOgcYY4wvk59+qYLCAEGCGIDGI</span><br><span class="line">9UaNutn5fu0fsxbKuv9PE9OalA==</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">Response Verify Failure</span><br><span class="line">139666926626464:error:27069065:OCSP routines:OCSP_basic_verify:certificate verify error:ocsp_vfy.c:126:Verify error:unable to get <span class="built_in">local</span> issuer certificate</span><br><span class="line">cert.pem: good</span><br><span class="line">    This Update: Jul 25 10:07:29 2016 GMT</span><br><span class="line">    Next Update: Jul 29 10:17:29 2016 GMT</span><br></pre></td></tr></table></figure><p>可以看到证书验证成功，但是 <code>Response Verify Failure</code>，主要原因是无法找到本地证书签发者，其实这个指定 CA 证书便可，需要注意的是，这个 CA 证书必须是 CA Chained 证书，即包含 CA 和 Intermediate 的证书，这些证书根据不同的公司会有所不同，需要根据自己的情况实际调整。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ openssl ocsp -CAfile chained.pem -issuer intermediate.pem -cert cert.pem -no_nonce -text -url http://ocsp.startssl.com</span><br><span class="line">OCSP Request Data:</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Response verify OK</span><br><span class="line">cert.pem: good</span><br><span class="line">    This Update: Jul 25 06:14:54 2016 GMT</span><br><span class="line">    Next Update: Jul 29 06:24:54 2016 GMT</span><br></pre></td></tr></table></figure><p>简化了中间结果，可以看到 OCSP 查询结果已经变成了 <code>Response verify OK</code>，表示一起都冇问题了。</p><h2 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h2><p>其实，配置 Nginx 可以作弊，比如说使用 <a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/">Mozilla SSL Configuration Generator</a>，可以快速地按照需要生成各类常用 Web Server 的配置文件。我配置的时候，选择的配置如下：</p><ul><li>Nginx</li><li>Intermediate</li><li>Server version: 1.9.5</li><li>OpenSSL Version: 1.0.2</li><li>HSTS Enabled</li></ul><p>最后的配置结果如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">80</span> default_server;</span><br><span class="line">    listen [::]:<span class="number">80</span> default_server;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.</span></span><br><span class="line">    return <span class="number">301</span> https:<span class="regexp">//</span><span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">443</span> ssl http2;</span><br><span class="line">    listen [::]:<span class="number">443</span> ssl http2;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># certs sent to the client in SERVER HELLO are concatenated in ssl_certificate</span></span><br><span class="line">    ssl_certificate <span class="regexp">/path/</span>to/cert.pem;</span><br><span class="line">    ssl_certificate_key <span class="regexp">/path/</span>to/key.pem;</span><br><span class="line">    ssl_session_timeout <span class="number">1</span>d;</span><br><span class="line">    ssl_session_cache shared:SSL:<span class="number">50</span>m;</span><br><span class="line">    ssl_session_tickets off;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits</span></span><br><span class="line">    ssl_dhparam <span class="regexp">/path/</span>to/dhparam.pem;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># intermediate configuration. tweak to your needs.</span></span><br><span class="line">    ssl_protocols TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    ssl_ciphers <span class="string">&#x27;ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS&#x27;</span>;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)</span></span><br><span class="line">    add_header Strict-Transport-Security max-age=<span class="number">15768000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># OCSP Stapling ---</span></span><br><span class="line">    <span class="comment"># fetch OCSP records from URL in ssl_certificate and cache them</span></span><br><span class="line">    ssl_stapling on;</span><br><span class="line">    ssl_stapling_verify on;</span><br><span class="line"></span><br><span class="line">    <span class="comment">## verify chain of trust of OCSP response using Root CA and Intermediate certs</span></span><br><span class="line">    ssl_trusted_certificate <span class="regexp">/path/</span>to/chained.pem;</span><br><span class="line"></span><br><span class="line">    resolver <span class="number">8.8</span>.<span class="number">8.8</span>;</span><br><span class="line"></span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>几个地方修改一下便可，<code>cert.pem</code> 是服务器证书，<code>key.pem</code> 是服务器私钥，<code>chained.pem</code> 是包含 CA 和 Intermediate 的证书。配置好后，重启服务器，再查询一下便发现 OCSP Stapling 已经生效了。注意，第一次请求的时候，服务器要去 CA OCSP URL 获取 OCSP Response，所以会提示没有 OCSP 查询结果，多运行一次就可以了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ openssl s_client -connect tommy.net.cn:443 -servername tommy.net.cn -status -tlsextdebug &lt; /dev/null 2&gt;&amp;1 | grep -i <span class="string">&quot;OCSP response&quot;</span></span><br><span class="line">OCSP response:</span><br><span class="line">OCSP Response Data:</span><br><span class="line">    OCSP Response Status: successful (0x0)</span><br><span class="line">    Response Type: Basic OCSP Response</span><br></pre></td></tr></table></figure><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p>除了用命令行以为，还有个不错的网站可以用来检测服务器证书配置情况，那就是 <a href="https://www.ssllabs.com/">SSL LABS</a> 了。比如说，要检测当前网站的配置情况<a href="https://www.ssllabs.com/ssltest/analyze.html?d=tommy.net.cn&latest">点击这里</a>就可以了，效果还是蛮不错的，还可以看到不同平台不同浏览器的兼容情况，下面是本站的检测评分：</p><img src="/2016/07/26/enable-ocsp-stapling/ssl_labs_aplus.png" class=""><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="https://imququ.com/post/why-can-not-turn-on-ocsp-stapling.html">从无法开启 OCSP Stapling 说起</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Certificate </tag>
            
            <tag> SSL </tag>
            
            <tag> Nginx </tag>
            
            <tag> Web </tag>
            
            <tag> Server </tag>
            
            <tag> OpenSSL </tag>
            
            <tag> OCSP </tag>
            
            <tag> Stapling </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本博客开启 HTTP/2 模式</title>
      <link href="/2016/07/25/start-using-http-2-for-this-blog/"/>
      <url>/2016/07/25/start-using-http-2-for-this-blog/</url>
      
        <content type="html"><![CDATA[<p>随着 <a href="https://zh.wikipedia.org/wiki/HTTP/2">HTTP&#x2F;2</a> 发布1年多以来，越来越多的浏览器和服务器都开始支持 HTTP&#x2F;2 了。感觉也是时候该赶一下时髦了，让自己的 Blog 也支持 HTTP&#x2F;2 了！</p><p>因为现在常年使用 Nginx 作为服务前端，所以二话不说搜 Nginx HTTP&#x2F;2，发现 <a href="https://www.nginx.com/blog/nginx-1-9-5/">Nginx 从 1.9.5 就开始支持 HTTP&#x2F;2 了</a>。查了下 <a href="https://hub.docker.com/_/nginx/">Docker Hub</a> 上最新的 Nginx 镜像，最新的版本是 <code>1.10</code> 和 <code>1.11</code>，分别对应 <code>stable</code> 和 <code>mainline</code>，既然 <code>1.9.5</code> 都支持了，没理由 <code>1.10</code> 不支持的，那就选择 <code>1.10</code> 好了。不了解 Nginx 版本规则的，可以<a href="https://www.nginx.com/blog/nginx-1-10-1-11-released/">点击此处</a>或者参看以下图片：</p><img src="/2016/07/25/start-using-http-2-for-this-blog/NGINX-1.11-mainline-1.10-stable.png" class=""><span id="more"></span><p>然后就屁颠屁颠地跑去更新 Nginx 配置文件了，因为据说，只需要在原来 <code>listen</code> 的后面加上 <code>http2</code> 就可以开启 HTTP&#x2F;2 协议了，类似这样：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">listen</span> <span class="number">443</span> ssl http2</span><br></pre></td></tr></table></figure><p>更新一下 Docker 镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx:stable</span><br></pre></td></tr></table></figure><p>重启一下 Docker 服务，兴冲冲地想要去验证一下 HTTP&#x2F;2 到底有多爽。然而，Chrome 报告并没有开启 HTTP&#x2F;2 支持！</p><img src="/2016/07/25/start-using-http-2-for-this-blog/http2_failed.png" class=""><p>Googled around，发现问题症结所在。简单来说，为了更好的玩转 HTTP&#x2F;2，在 TLS 层面上有两个 extensions，分别是 <a href="https://tools.ietf.org/html/draft-agl-tls-nextprotoneg-04">NPN (Next Protocol Negotiation)</a> 和 <a href="https://en.wikipedia.org/wiki/Application-Layer_Protocol_Negotiation">ALPN (Application-Layer Protocol Negotiation)</a>。<code>NPN</code> 最早被 Google 应用在 <a href="https://en.wikipedia.org/wiki/SPDY">SPDY</a> 协议上，后来过渡到了 <code>HTTP/2</code> 上，但是为了大力推广 <code>HTTP/2</code>，Google 决定自废武功，<a href="http://blog.chromium.org/2016/02/transitioning-from-spdy-to-http2.html">从2016年5月15日起 Chrome 不再支持 NPN</a>。乍一看，也没什么问题，不支持 <code>NPN</code> 还有 <code>ALPN</code> 不是？然而，你这么想就天真了。看一下 <a href="https://www.openssl.org/news/openssl-1.0.2-notes.html">OpenSSL 1.0.2 官方发布说明</a>，你会发现，只有从 <code>1.0.2</code> 版本开始，OpenSSL 才开始支持 ALPN。而 <a href="https://github.com/nginxinc/docker-nginx/blob/11fc019b2be3ad51ba5d097b1857a099c4056213/stable/jessie/Dockerfile">Nginx 官方 Docker 镜像使用 Debian Jessie 作为底包</a>，<a href="https://packages.debian.org/jessie/openssl">其 OpenSSL 最新版本仅支持到 1.0.1t</a>，那就没得玩了，自己编译咯。然而，懒癌晚期发作，Nginx 官方 Docker 镜像还有个 <code>Alpine</code> 版本的，看了下 <code>Dockerfile</code> 和 Alpine 的 package list，觉得有机会，于是乎用 Alpine 版本替换 Debian 版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx:stable-alpine</span><br></pre></td></tr></table></figure><p>重新配置一下 Docker container，启动服务，oh lar~~~</p><img src="/2016/07/25/start-using-http-2-for-this-blog/http2_enabled.png" class=""><p>可以看到列表里面已经有本站的地址 <a href="https://tommy.net.cn/">tommy.net.cn</a> 了，后面的 <code>h2</code> 表示 <code>HTTP/2</code>，收工。</p><p>PS: 在 Chrome 浏览器中输入：<code>chrome://net-internals/</code> 选择 <code>HTTP/2</code> 便可以查看 <code>HTTP/2 sessions</code>。</p><p>PPS: 对 <code>HTTP/2</code> 感兴趣的同学，可以阅读<code>MrPeak技术分享</code>的<a href="http://mrpeak.cn/blog/http2/">HTTP 2.0的那些事</a>，感觉基本上都覆盖到了。</p>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Docker </tag>
            
            <tag> ALPN </tag>
            
            <tag> Blog </tag>
            
            <tag> Chrome </tag>
            
            <tag> HTTP/2 </tag>
            
            <tag> NPN </tag>
            
            <tag> OpenSSL </tag>
            
            <tag> TLS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修复 ShadowsocksX GFWList 更新提示 404 错误的问题</title>
      <link href="/2016/07/24/fix-shadowsocksx-gfwlist-update-404-error/"/>
      <url>/2016/07/24/fix-shadowsocksx-gfwlist-update-404-error/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/shadowsocks/shadowsocks-iOS">ShadowsocksX</a> 已经有好长一段时间没有更新了。但是在 Mac 上，还是它的使用效果最好，同时配合 <a href="https://github.com/gfwlist/gfwlist">GFWList</a> 一起使用，堪称完美。然而由于太久没更新，且 <code>gfwlist.txt</code> 是 hard code 在代码里面的，所以升级 <code>GFWList</code> 会报 404 错误。主要是因为原来的 <code>GFWList</code> 托管在 <code>Google Code</code> 上，现在托管在 <code>GitHub</code> 上。</p><p>先 fork 一份带代码，再 clone 一份最（lao）新（jiu）的代码到本地。二话不说，直接上 <code>Xcode</code> 编译，结果必须直接出错。Google 一番后，发现原来 Target 的版本是 10.7，<code>AFNetworking</code> 的一些特性不支持，将 Target 调整为 10.8 解决第一个问题。</p><span id="more"></span><p>继续编译，必须还有问题，这次提示找不到 <code>libsodium</code>，上网又胡乱 Google 了一圈，发现大多的解决方案都是 npm 安装 pod 解决。其实自己编译也没那么麻烦，去 <a href="https://github.com/jedisct1/libsodium">libsodium</a> 仓库扒一个最新的 release 代码回来，进入目录，运行 <code>dist-build/osx.sh</code> 就好了。运行后会在当前目录生成一个叫 <code>libsodium-osx</code> 的目录，把它整个复制到 <code>Shadowsocks</code> 项目目录里面，修改 Scheme，添加 include searh path，再把 <code>libsodium.a</code> 拖入 link lib 就解决了。</p><p>好，继续编译，这次说是没有证书什么的，这个无所谓了，去 build setting，将 code sign 部分全部修改为 don’t sign，编译通过，可以正常运行了。接下来进入正题，修改 <code>ShadowsocksX/SWBAppDelegate.m</code> 文件，用<a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt">新地址</a>替换旧地址：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[manager GET:<span class="string">@&quot;https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;</span> parameters:<span class="literal">nil</span> success:^(AFHTTPRequestOperation *operation, <span class="type">id</span> responseObject) &#123;</span><br></pre></td></tr></table></figure><p>重新编译文件，验证没有问题，<code>GFWList</code> 也可以正常更新了。最后签个名，省得整天有烦人的提醒，再打个包，方便日后使用（其实主要是<a href="https://github.com/s7lx">@龙七</a>同学说我们都是讲究人，不能太随便了，得neng个dmg 😂）。</p><p>最后来个快速传送门，给懒得折腾，不会折腾和没有开发者账号无法折腾的小伙伴们：</p><p><a href="https://github.com/TommyLau/shadowsocks-iOS/releases/download/2.6.3-GFWList/ShadowsocksX-2.6.3-GFWList.dmg">https://github.com/TommyLau/shadowsocks-iOS/releases/download/2.6.3-GFWList/ShadowsocksX-2.6.3-GFWList.dmg</a></p>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> OS X </tag>
            
            <tag> GFW </tag>
            
            <tag> GFWList </tag>
            
            <tag> Shadowsocks </tag>
            
            <tag> ShadowsocksX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Mac OS X 上创建可引导的 Ubuntu U盘</title>
      <link href="/2016/07/20/create-a-bootable-ubuntu-usb-stick-on-mac-os-x/"/>
      <url>/2016/07/20/create-a-bootable-ubuntu-usb-stick-on-mac-os-x/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前在遥远的使用 Windows 的年代，经常使用 <a href="http://cn.ultraiso.net/">UltraISO</a> 来把 ISO 镜像写入U盘，来从U盘引导系统。换了 Mac 以后，偶尔还是会用 VMware 虚拟机来使用 UltraISO 将 ISO 镜像写入U盘。最近折腾新服务器，下载了最新的 Ubuntu 16.04 LTS 镜像，又要制作U盘了，于是乎就整理下在 Mac 下制作 Ubuntu 可引导U盘的操作步骤，方便以后查阅。</p><span id="more"></span><h2 id="制作启动U盘"><a href="#制作启动U盘" class="headerlink" title="制作启动U盘"></a>制作启动U盘</h2><p>按照官方最新的建议，是下载 <a href="http://unetbootin.github.io/">UNetbootin</a> 来通过图形界面方式操作的，但是本着能少用一个软件就少用一个软件，少装垃圾的原则，最终选择了命令行方式。如果觉得命令行操作太麻烦的同学，直接参考文献部分使用图形化界面软件便可。</p><p>首先，不用说了，下载 Ubuntu Server 16.04 LTS，然后将 ISO 转换为 IMG 格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ hdiutil convert -format UDRW ubuntu-16.04-server-amd64.iso -o ubuntu-16.04-server-amd64.img</span><br><span class="line">Reading Driver Descriptor Map (DDM : 0)…</span><br><span class="line">Reading Ubuntu-Server 16.04 LTS amd64 (Apple_ISO : 1)…</span><br><span class="line">Reading Apple (Apple_partition_map : 2)…</span><br><span class="line">Reading Ubuntu-Server 16.04 LTS amd64 (Apple_ISO : 3)…</span><br><span class="line">...............................................................................................................................................</span><br><span class="line">Reading EFI (Apple_HFS : 4)…</span><br><span class="line">................................................................................................................................................</span><br><span class="line">Reading Ubuntu-Server 16.04 LTS amd64 (Apple_ISO : 5)…</span><br><span class="line">........................................................................................................................................................................................................</span><br><span class="line">Elapsed Time: 3.317s</span><br><span class="line">Speed: 197.4Mbytes/sec</span><br><span class="line">Savings: 0.0%</span><br><span class="line">created: /Users/tommy/Downloads/ubuntu-16.04-server-amd64.img.dmg</span><br></pre></td></tr></table></figure><p>OS X 会自动在文件名后面增加 DMG 后缀，所以我们手动改一下名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mv</span> ubuntu-16.04-server-amd64.img.dmg ubuntu-16.04-server-amd64.img</span><br></pre></td></tr></table></figure><p>运行 <code>diskutil list</code> 看看磁盘设备列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ diskutil list</span><br><span class="line">/dev/disk0 (internal, physical):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      GUID_partition_scheme                        *251.0 GB   disk0</span><br><span class="line">   1:                        EFI EFI                     209.7 MB   disk0s1</span><br><span class="line">   2:          Apple_CoreStorage Macintosh HD            250.1 GB   disk0s2</span><br><span class="line">   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3</span><br><span class="line">/dev/disk1 (internal, virtual):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:                  Apple_HFS Macintosh HD           +249.8 GB   disk1</span><br><span class="line">                                 Logical Volume on disk0s2</span><br><span class="line">                                 B3559850-25F0-409D-A081-927AB2B16E3C</span><br><span class="line">                                 Unlocked Encrypted</span><br><span class="line">/dev/disk2 (external, physical):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:     FDisk_partition_scheme                        *8.0 GB     disk2</span><br><span class="line">   1:             Windows_FAT_32 NUC6_WIN10              8.0 GB     disk2s4</span><br></pre></td></tr></table></figure><p>所以，很明显，U盘是 <code>/dev/disk2</code>，先把它卸载了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ diskutil unmountDisk /dev/disk2</span><br><span class="line">Unmount of all volumes on disk2 was successful</span><br></pre></td></tr></table></figure><p>然后就是将 IMG 文件写入U盘了，这个过程得花点时间，同时你可能还需要输入密码来获得管理员权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">dd</span> <span class="keyword">if</span>=ubuntu-16.04-server-amd64.img of=/dev/rdisk2 bs=1m</span><br><span class="line">Password:</span><br><span class="line">655+0 records <span class="keyword">in</span></span><br><span class="line">655+0 records out</span><br><span class="line">686817280 bytes transferred <span class="keyword">in</span> 162.123944 secs (4236372 bytes/sec)</span><br></pre></td></tr></table></figure><p>最后就是弹出U盘，收工。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ diskutil eject /dev/disk2</span><br><span class="line">Disk /dev/disk2 ejected</span><br></pre></td></tr></table></figure><h2 id="再次制作U盘"><a href="#再次制作U盘" class="headerlink" title="再次制作U盘"></a>再次制作U盘</h2><p>在按照上述方法制作了U盘后，发现只有一个EFI启动分区，然而并不能很好的使用，所以，再次使用了官方的图形化方案，重新制作了一次U盘，囧rz</p><p>先用磁盘工具把U盘重新分了下区，只留下一个 FAT32 分区，并起名为 <code>Ubuntu</code></p><img src="/2016/07/20/create-a-bootable-ubuntu-usb-stick-on-mac-os-x/disk_utility_erase.png" class=""><img src="/2016/07/20/create-a-bootable-ubuntu-usb-stick-on-mac-os-x/disk_utility_erase_complete.png" class=""> <p>然后如图所示，选择 <code>Diskimage</code> 和 Ubuntu 镜像，点 <code>OK</code></p><img src="/2016/07/20/create-a-bootable-ubuntu-usb-stick-on-mac-os-x/unetbootin_select.png" class=""> <img src="/2016/07/20/create-a-bootable-ubuntu-usb-stick-on-mac-os-x/unetbootin_in_progress.png" class=""> <img src="/2016/07/20/create-a-bootable-ubuntu-usb-stick-on-mac-os-x/unetbootin_done.png" class=""> <p>好了，这次终于制作完成了。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="http://askubuntu.com/questions/86/how-do-i-create-an-ubuntu-live-usb-using-a-mac">How do I create an Ubuntu live USB using a Mac?</a></li><li><a href="http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-mac-osx">How to create a bootable USB stick on OS X</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> OS X </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> UNetbootin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 OpenWrt 上搭建 OpenConnect (ocserv) 服务器</title>
      <link href="/2016/07/18/setting-up-openconnect-server-ocserv-on-openwrt/"/>
      <url>/2016/07/18/setting-up-openconnect-server-ocserv-on-openwrt/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前连接回公司，经常都是使用 OpenVPN、PPTP、L2TP 什么的，感觉不是很难用，但也说不上很好用。但是因为大家都知道的原因，在 iOS 上 OpenVPN 基本上无法正常下载，这对于公司员工来说就比较麻烦了，因为并不是每个人都需要科学上网的。后来无意中发现了 <a href="http://www.infradead.org/ocserv/">OpenConnect VPN Server</a>，感觉还不错，后来就用到公司网络上了。使用过一段时间，就考虑把家里的 OpenWrt 也装一个，这样外出的时候连回家里管理 NAS 也方便些，便有了此文。</p><span id="more"></span><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ol><li>首先，你得有个刷了 OpenWrt 的路由器</li><li>其次，路由器的 Flash 得大一点，我配置完后，overlay 大概使用了 3.6 MB</li><li>Chaos Calmer 15.05，<strong>注意：不要使用 15.05.1，该版本配套的 ocserv 会报 bus error</strong></li><li>自己配置好 DDNS 等服务器，可以参考之前写的<a href="../../../../2015/02/25/use-dnspod-as-ddns-on-openwrt">在 OpenWrt 环境下使用 DnsPod 来实现动态域名解析</a>的文章。</li><li>（可选）花钱或者免费弄一个服务器 SSL&#x2F;TLS 证书</li></ol><h2 id="开工"><a href="#开工" class="headerlink" title="开工"></a>开工</h2><h3 id="安装-ocserv-和-ddns"><a href="#安装-ocserv-和-ddns" class="headerlink" title="安装 ocserv 和 ddns"></a>安装 ocserv 和 ddns</h3><p>我是命令行粉丝，所以大部分工作在 Terminal 下完成。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install luci-app-ocserv</span><br><span class="line">opkg install luci-app-ddns</span><br></pre></td></tr></table></figure><p>安装 Web 界面的 <code>ocserv</code> 和 <code>ddns</code>，其实装 <code>ddns</code> 并不是为了真正的动态域名，而是 <code>ocserv</code> 的脚本会检测系统中是否有 <code>ddns</code>，如果有的话，<code>ocserv</code> 的配置脚本会自动把动态域名设置为 <code>true</code>，如果喜欢自己改脚本的，也可以不装 <code>ddns</code>，这样可以解决点空间。</p><p>装好后的效果如下：</p><img src="/2016/07/18/setting-up-openconnect-server-ocserv-on-openwrt/ocserv_ddns_installed.png" class=""><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>安装好后，系统会自动生成以下 7 个文件：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/etc/</span>ocserv/ca.pem</span><br><span class="line"><span class="regexp">/etc/</span>ocserv/ca-key.pem</span><br><span class="line"><span class="regexp">/etc/</span>ocserv/server-cert.pem</span><br><span class="line"><span class="regexp">/etc/</span>ocserv/server-key.pem</span><br><span class="line"><span class="regexp">/etc/</span>ocserv/ocserv.conf.template</span><br><span class="line"><span class="regexp">/etc/</span>ocserv<span class="regexp">/pki/</span>ca.tmpl</span><br><span class="line"><span class="regexp">/etc/</span>ocserv<span class="regexp">/pki/</span>server.tmpl</span><br></pre></td></tr></table></figure><p>其中 <code>ca.pem</code> 是服务器的 CA 证书，<code>ca-key.pem</code> 是私钥，<code>server-cert.pem</code> 是服务器证书，<code>server-key.pem</code> 是服务器私钥。</p><p>一般来说 CA 相关的可以不用管，如果你找了如 <a href="https://www.startssl.com/">StartSSL</a> 签了免费的证书的话，用他们签名过的公私钥替换 <code>server-cert.pem</code> 和 <code>server-key.pem</code> 就好了。</p><p>接下来修改模板文件 <code>ocserv.conf.template</code>，这个可以在命令行中用 Vim 操作，也可以在 Web 界面来操作，比如：</p><img src="/2016/07/18/setting-up-openconnect-server-ocserv-on-openwrt/edit_ocserv_template.png" class=""><p>因为我是使用「证书」方式来进行身份验证的，所以直接忽略系统默认的 <code>plain</code> 认证方式，如果使用该方式可以参考文章最后的参考文献。最终的配置文件如下：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># User authentication method. Could be set multiple times and in that case</span></span><br><span class="line"><span class="comment"># all should succeed.</span></span><br><span class="line"><span class="comment"># Options: certificate, pam.</span></span><br><span class="line">auth = <span class="string">&quot;certificate&quot;</span></span><br><span class="line"><span class="comment">#auth = &quot;pam&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The gid-min option is used by auto-select-group option, in order to</span></span><br><span class="line"><span class="comment"># select the minimum group ID.</span></span><br><span class="line"><span class="comment">#auth = &quot;pam[gid-min=1000]&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The plain option requires specifying a password file which contains</span></span><br><span class="line"><span class="comment"># entries of the following format.</span></span><br><span class="line"><span class="comment"># &quot;username:groupname:encoded-password&quot;</span></span><br><span class="line"><span class="comment"># One entry must be listed per line, and &#x27;ocpasswd&#x27; can be used</span></span><br><span class="line"><span class="comment"># to generate password entries.</span></span><br><span class="line"><span class="comment">#auth = &quot;|AUTH|&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A banner to be displayed on clients</span></span><br><span class="line"><span class="comment">#banner = &quot;Welcome to OpenWRT&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#isolate-workers = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When the server has a dynamic DNS address (that may change),</span></span><br><span class="line"><span class="comment"># should set that to true to ask the client to resolve again on</span></span><br><span class="line"><span class="comment"># reconnects.</span></span><br><span class="line">listen-host-is-dyndns = |DYNDNS|</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use listen-host to limit to specific IPs or to the IPs of a provided</span></span><br><span class="line"><span class="comment"># hostname.</span></span><br><span class="line"><span class="comment">#listen-host = [IP|HOSTNAME]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Limit the number of clients. Unset or set to zero for unlimited.</span></span><br><span class="line"><span class="comment">#max-clients = 1024</span></span><br><span class="line">max-clients = |MAX_CLIENTS|</span><br><span class="line"></span><br><span class="line"><span class="comment"># Limit the number of client connections to one every X milliseconds</span></span><br><span class="line"><span class="comment"># (X is the provided value). Set to zero for no limit.</span></span><br><span class="line">rate-limit-<span class="keyword">ms</span> <span class="title">= 100</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Limit the number of identical clients (i.e., users connecting</span></span><br><span class="line"><span class="comment"># multiple times). Unset or set to zero for unlimited.</span></span><br><span class="line">max-same-clients = |MAX_SAME|</span><br><span class="line"></span><br><span class="line"><span class="comment"># TCP and UDP port number</span></span><br><span class="line">tcp-port = |PORT|</span><br><span class="line">|UDP|udp-port = |PORT|</span><br><span class="line"></span><br><span class="line"><span class="comment"># Stats report time. The number of seconds after which each</span></span><br><span class="line"><span class="comment"># worker process will report its usage statistics (number of</span></span><br><span class="line"><span class="comment"># bytes transferred etc). This is useful when accounting like</span></span><br><span class="line"><span class="comment"># radius is in use.</span></span><br><span class="line"><span class="comment">#stats-report-time = 360</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Keepalive in seconds</span></span><br><span class="line">keepalive = <span class="number">32400</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Dead peer detection in seconds.</span></span><br><span class="line">dpd = |DPD|</span><br><span class="line"></span><br><span class="line"><span class="comment"># Dead peer detection for mobile clients. The needs to</span></span><br><span class="line"><span class="comment"># be much higher to prevent such clients being awaken too</span></span><br><span class="line"><span class="comment"># often by the DPD messages, and save battery.</span></span><br><span class="line"><span class="comment"># (clients that send the X-AnyConnect-Identifier-DeviceType)</span></span><br><span class="line"><span class="comment">#mobile-dpd = 1800</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MTU discovery (DPD must be enabled)</span></span><br><span class="line">try-mtu-discovery = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The key and the certificates of the server</span></span><br><span class="line"><span class="comment"># The key may be a file, or any URL supported by GnuTLS (e.g.,</span></span><br><span class="line"><span class="comment"># tpmkey:uuid=xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx;storage=user</span></span><br><span class="line"><span class="comment"># or pkcs11:object=my-vpn-key;object-type=private)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># There may be multiple certificate and key pairs and each key</span></span><br><span class="line"><span class="comment"># should correspond to the preceding certificate.</span></span><br><span class="line">server-cert = /etc/ocserv/server-cert.pem</span><br><span class="line">server-key = /etc/ocserv/server-key.pem</span><br><span class="line"></span><br><span class="line"><span class="comment"># Diffie-Hellman parameters. Only needed if you require support</span></span><br><span class="line"><span class="comment"># for the DHE ciphersuites (by default this server supports ECDHE).</span></span><br><span class="line"><span class="comment"># Can be generated using:</span></span><br><span class="line"><span class="comment"># certtool --generate-dh-params --outfile /path/to/dh.pem</span></span><br><span class="line"><span class="comment">#dh-params = /path/to/dh.pem</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If you have a certificate from a CA that provides an OCSP</span></span><br><span class="line"><span class="comment"># service you may provide a fresh OCSP status response within</span></span><br><span class="line"><span class="comment"># the TLS handshake. That will prevent the client from connecting</span></span><br><span class="line"><span class="comment"># independently on the OCSP server.</span></span><br><span class="line"><span class="comment"># You can update this response periodically using:</span></span><br><span class="line"><span class="comment"># ocsptool --ask --load-cert=your_cert --load-issuer=your_ca --outfile response</span></span><br><span class="line"><span class="comment"># Make sure that you replace the following file in an atomic way.</span></span><br><span class="line"><span class="comment">#ocsp-response = /path/to/ocsp.der</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># In case PKCS #11 or TPM keys are used the PINs should be available</span></span><br><span class="line"><span class="comment"># in files. The srk-pin-file is applicable to TPM keys only, and is the</span></span><br><span class="line"><span class="comment"># storage root key.</span></span><br><span class="line"><span class="comment">#pin-file = /path/to/pin.txt</span></span><br><span class="line"><span class="comment">#srk-pin-file = /path/to/srkpin.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The Certificate Authority that will be used to verify</span></span><br><span class="line"><span class="comment"># client certificates (public keys) if certificate authentication</span></span><br><span class="line"><span class="comment"># is set.</span></span><br><span class="line">ca-cert = /etc/ocserv/ca.pem</span><br><span class="line"></span><br><span class="line"><span class="comment"># The object identifier that will be used to read the user ID in the client</span></span><br><span class="line"><span class="comment"># certificate. The object identifier should be part of the certificate&#x27;s DN</span></span><br><span class="line"><span class="comment"># Useful OIDs are:</span></span><br><span class="line"><span class="comment">#  CN = 2.5.4.3, UID = 0.9.2342.19200300.100.1.1</span></span><br><span class="line">cert-user-oid = <span class="number">2.5</span>.<span class="number">4.3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The object identifier that will be used to read the user group in the</span></span><br><span class="line"><span class="comment"># client  certificate. The object identifier should be part of the certificate&#x27;s</span></span><br><span class="line"><span class="comment"># DN. Useful OIDs are:</span></span><br><span class="line"><span class="comment">#  OU (organizational unit) = 2.5.4.11</span></span><br><span class="line"><span class="comment">#cert-group-oid = 2.5.4.11</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The revocation list of the certificates issued by the &#x27;ca-cert&#x27; above.</span></span><br><span class="line"><span class="comment">#crl = /etc/ocserv/crl.pem</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment this to enable compression negotiation (LZS, LZ4).</span></span><br><span class="line">|COMPRESSION|compression = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># GnuTLS priority string</span></span><br><span class="line">tls-priorities = <span class="string">&quot;NORMAL:%SERVER_PRECEDENCE:%COMPAT:-VERS-SSL3.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># To enforce perfect forward secrecy (PFS) on the main channel.</span></span><br><span class="line"><span class="comment">#tls-priorities = &quot;NORMAL:%SERVER_PRECEDENCE:%COMPAT:-VERS-SSL3.0:-RSA&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The time (in seconds) that a client is allowed to stay connected prior</span></span><br><span class="line"><span class="comment"># to authentication</span></span><br><span class="line">auth-timeout = <span class="number">40</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The time (in seconds) that a client is allowed to stay idle (no traffic)</span></span><br><span class="line"><span class="comment"># before being disconnected. Unset to disable.</span></span><br><span class="line"><span class="comment">#idle-timeout = 1200</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The time (in seconds) that a mobile client is allowed to stay idle (no</span></span><br><span class="line"><span class="comment"># traffic) before being disconnected. Unset to disable.</span></span><br><span class="line"><span class="comment">#mobile-idle-timeout = 2400</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The time (in seconds) that a client is not allowed to reconnect after</span></span><br><span class="line"><span class="comment"># a failed authentication attempt.</span></span><br><span class="line">min-reauth-time = <span class="number">360</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Banning clients in ocserv works with a point system. IP addresses</span></span><br><span class="line"><span class="comment"># that get a score over that configured number are banned for</span></span><br><span class="line"><span class="comment"># min-reauth-time seconds. By default a wrong password attempt is 10 points,</span></span><br><span class="line"><span class="comment"># a KKDCP POST is 1 point, and a connection is 1 point. Note that</span></span><br><span class="line"><span class="comment"># due to difference processes being involved the count of points</span></span><br><span class="line"><span class="comment"># will not be real-time precise.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Score banning cannot be reliably used when receiving proxied connections</span></span><br><span class="line"><span class="comment"># locally from an HTTP server (i.e., when listen-clear-file is used).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Set to zero to disable.</span></span><br><span class="line">max-ban-score = <span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The time (in seconds) that all score kept for a client is reset.</span></span><br><span class="line">ban-reset-time = <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># In case you&#x27;d like to change the default points.</span></span><br><span class="line"><span class="comment">#ban-points-wrong-password = 10</span></span><br><span class="line"><span class="comment">#ban-points-connection = 1</span></span><br><span class="line"><span class="comment">#ban-points-kkdcp = 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cookie timeout (in seconds)</span></span><br><span class="line"><span class="comment"># which he can reconnect. That cookie will be invalided if not</span></span><br><span class="line"><span class="comment"># used within this timeout value. On a user disconnection, that</span></span><br><span class="line"><span class="comment"># cookie will also be active for this time amount prior to be</span></span><br><span class="line"><span class="comment"># invalid. That should allow a reasonable amount of time for roaming</span></span><br><span class="line"><span class="comment"># between different networks.</span></span><br><span class="line">cookie-timeout = <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Whether roaming is allowed, i.e., if true a cookie is</span></span><br><span class="line"><span class="comment"># restricted to a single IP address and cannot be re-used</span></span><br><span class="line"><span class="comment"># from a different IP.</span></span><br><span class="line"><span class="keyword">deny</span>-roaming = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ReKey time (in seconds)</span></span><br><span class="line"><span class="comment"># ocserv will ask the client to refresh keys periodically once</span></span><br><span class="line"><span class="comment"># this amount of seconds is elapsed. Set to zero to disable.</span></span><br><span class="line">rekey-time = <span class="number">172800</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ReKey method</span></span><br><span class="line"><span class="comment"># Valid options: ssl, new-tunnel</span></span><br><span class="line"><span class="comment">#  ssl: Will perform an efficient rehandshake on the channel allowing</span></span><br><span class="line"><span class="comment">#       a seamless connection during rekey.</span></span><br><span class="line"><span class="comment">#  new-tunnel: Will instruct the client to discard and re-establish the channel.</span></span><br><span class="line"><span class="comment">#       Use this option only if the connecting clients have issues with the ssl</span></span><br><span class="line"><span class="comment">#       option.</span></span><br><span class="line">rekey-method = ssl</span><br><span class="line"></span><br><span class="line"><span class="comment"># Script to call when a client connects and obtains an IP</span></span><br><span class="line"><span class="comment"># Parameters are passed on the environment.</span></span><br><span class="line"><span class="comment"># REASON, USERNAME, GROUPNAME, HOSTNAME (the hostname selected by client),</span></span><br><span class="line"><span class="comment"># DEVICE, IP_REAL (the real IP of the client), IP_LOCAL (the local IP</span></span><br><span class="line"><span class="comment"># in the P-t-P connection), IP_REMOTE (the VPN IP of the client),</span></span><br><span class="line"><span class="comment"># ID (a unique numeric ID); REASON may be &quot;connect&quot; or &quot;disconnect&quot;.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># These scripts are not needed if you have setup an interface for all vpns+</span></span><br><span class="line"><span class="comment"># devices.</span></span><br><span class="line"><span class="comment">#connect-script = /usr/bin/ocserv-script</span></span><br><span class="line"><span class="comment">#disconnect-script = /usr/bin/ocserv-script</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># UTMP</span></span><br><span class="line">use-utmp = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Whether to enable support for the occtl tool (i.e., either through D-BUS,</span></span><br><span class="line"><span class="comment"># or via a unix socket).</span></span><br><span class="line">use-occtl = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># socket file used for IPC with occtl. You only need to set that,</span></span><br><span class="line"><span class="comment"># if you use more than a single servers.</span></span><br><span class="line">occtl-socket-file = /var/run/occtl.socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># PID file. It can be overriden in the command line.</span></span><br><span class="line">pid-file = /var/run/ocserv.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># The default server directory. Does not require any devices present.</span></span><br><span class="line">chroot-dir = /var/lib/ocserv</span><br><span class="line"></span><br><span class="line"><span class="comment"># socket file used for IPC, will be appended with .PID</span></span><br><span class="line"><span class="comment"># It must be accessible within the chroot environment (if any)</span></span><br><span class="line"><span class="comment">#socket-file = /var/run/ocserv-socket</span></span><br><span class="line">socket-file = ocserv-socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># The user the worker processes will be run as. It should be</span></span><br><span class="line"><span class="comment"># unique (no other services run as this user).</span></span><br><span class="line">run-as-<span class="keyword">user</span> <span class="title">= ocserv</span></span><br><span class="line">run-as-<span class="keyword">group</span> <span class="title">= ocserv</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the protocol-defined priority (SO_PRIORITY) for packets to</span></span><br><span class="line"><span class="comment"># be sent. That is a number from 0 to 6 with 0 being the lowest</span></span><br><span class="line"><span class="comment"># priority. Alternatively this can be used to set the IP Type-</span></span><br><span class="line"><span class="comment"># Of-Service, by setting it to a hexadecimal number (e.g., 0x20).</span></span><br><span class="line"><span class="comment"># This can be set per user/group or globally.</span></span><br><span class="line"><span class="comment">#net-priority = 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the VPN worker process into a specific cgroup. This is Linux</span></span><br><span class="line"><span class="comment"># specific and can be set per user/group or globally.</span></span><br><span class="line"><span class="comment">#cgroup = &quot;cpuset,cpu:test&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Network settings</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The name of the tun device</span></span><br><span class="line">device = vpns</span><br><span class="line"></span><br><span class="line"><span class="comment"># Whether the generated IPs will be predictable, i.e., IP stays the</span></span><br><span class="line"><span class="comment"># same for the same user when possible.</span></span><br><span class="line">predictable-ips = |PREDICTABLE_IPS|</span><br><span class="line"></span><br><span class="line"><span class="comment"># The default domain to be advertised</span></span><br><span class="line">|ENABLE_DEFAULT_DOMAIN|default-domain = |DEFAULT_DOMAIN|</span><br><span class="line"></span><br><span class="line"><span class="comment"># The pool of addresses that leases will be given from.</span></span><br><span class="line">ipv4-network = |IPV4ADDR|</span><br><span class="line">ipv4-netmask = |NETMASK|</span><br><span class="line"></span><br><span class="line"><span class="comment"># The advertized DNS server. Use multiple lines for</span></span><br><span class="line"><span class="comment"># multiple servers.</span></span><br><span class="line"><span class="comment"># dns = fc00::4be0</span></span><br><span class="line"><span class="comment">#dns = 192.168.1.2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The NBNS server (if any)</span></span><br><span class="line"><span class="comment">#nbns = 192.168.1.3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The IPv6 subnet that leases will be given from.</span></span><br><span class="line">|ENABLE_IPV6|ipv6-network = |IPV6ADDR|</span><br><span class="line">|ENABLE_IPV6|ipv6-prefix = |IPV6PREFIX|</span><br><span class="line"></span><br><span class="line"><span class="comment"># The domains over which the provided DNS should be used. Use</span></span><br><span class="line"><span class="comment"># multiple lines for multiple domains.</span></span><br><span class="line"><span class="comment">#split-dns = example.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Prior to leasing any IP from the pool ping it to verify that</span></span><br><span class="line"><span class="comment"># it is not in use by another (unrelated to this server) host.</span></span><br><span class="line">ping-leases = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Unset to assign the default MTU of the device</span></span><br><span class="line"><span class="comment"># mtu =</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Unset to enable bandwidth restrictions (in bytes/sec). The</span></span><br><span class="line"><span class="comment"># setting here is global, but can also be set per user or per group.</span></span><br><span class="line"><span class="comment">#rx-data-per-sec = 40000</span></span><br><span class="line"><span class="comment">#tx-data-per-sec = 40000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The number of packets (of MTU size) that are available in</span></span><br><span class="line"><span class="comment"># the output buffer. The default is low to improve latency.</span></span><br><span class="line"><span class="comment"># Setting it higher will improve throughput.</span></span><br><span class="line"><span class="comment">#output-buffer = 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Routes to be forwarded to the client. If you need the</span></span><br><span class="line"><span class="comment"># client to forward routes to the server, you may use the</span></span><br><span class="line"><span class="comment"># config-per-user/group or even connect and disconnect scripts.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># To set the server as the default gateway for the client just</span></span><br><span class="line"><span class="comment"># comment out all routes from the server.</span></span><br><span class="line"><span class="comment">#route = 192.168.1.0/255.255.255.0</span></span><br><span class="line"><span class="comment">#route = 192.168.5.0/255.255.255.0</span></span><br><span class="line"><span class="comment">#route = fef4:db8:1000:1001::/64</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Configuration files that will be applied per user connection or</span></span><br><span class="line"><span class="comment"># per group. Each file name on these directories must match the username</span></span><br><span class="line"><span class="comment"># or the groupname.</span></span><br><span class="line"><span class="comment"># The options allowed in the configuration files are dns, nbns,</span></span><br><span class="line"><span class="comment">#  ipv?-network, ipv4-netmask, ipv6-prefix, rx/tx-per-sec, iroute, route,</span></span><br><span class="line"><span class="comment">#  net-priority and cgroup.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Note that the &#x27;iroute&#x27; option allows to add routes on the server</span></span><br><span class="line"><span class="comment"># based on a user or group. The syntax depends on the input accepted</span></span><br><span class="line"><span class="comment"># by the commands route-add-cmd and route-del-cmd (see below).</span></span><br><span class="line"></span><br><span class="line">config-per-<span class="keyword">user</span> <span class="title">= /etc</span>/ocserv/config-per-user/</span><br><span class="line">config-per-<span class="keyword">group</span> <span class="title">= /etc</span>/ocserv/config-per-group/</span><br><span class="line"></span><br><span class="line"><span class="comment"># When config-per-xxx is specified and there is no group or user that</span></span><br><span class="line"><span class="comment"># matches, then utilize the following configuration.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#default-user-config = /etc/ocserv/defaults/user.conf</span></span><br><span class="line"><span class="comment">#default-group-config = /etc/ocserv/defaults/group.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Groups that a client is allowed to select from.</span></span><br><span class="line"><span class="comment"># A client may belong in multiple groups, and in certain use-cases</span></span><br><span class="line"><span class="comment"># it is needed to switch between them. For these cases the client can</span></span><br><span class="line"><span class="comment"># select prior to authentication. Add multiple entries for multiple groups.</span></span><br><span class="line"><span class="comment">#select-group = group1</span></span><br><span class="line"><span class="comment">#select-group = group2[My group 2]</span></span><br><span class="line"><span class="comment">#select-group = tost[The tost group]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The name of the group that if selected it would allow to use</span></span><br><span class="line"><span class="comment"># the assigned by default group.</span></span><br><span class="line"><span class="comment">#default-select-group = DEFAULT</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Instead of specifying manually all the allowed groups, you may instruct</span></span><br><span class="line"><span class="comment"># ocserv to scan all available groups and include the full list. That</span></span><br><span class="line"><span class="comment"># option is only functional on plain authentication.</span></span><br><span class="line"><span class="comment">#auto-select-group = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The system command to use to setup a route. %&#123;R&#125; will be replaced with the</span></span><br><span class="line"><span class="comment"># route/mask and %&#123;D&#125; with the (tun) device.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The following example is from linux systems. %&#123;R&#125; should be something</span></span><br><span class="line"><span class="comment"># like 192.168.2.0/24</span></span><br><span class="line"></span><br><span class="line">route-add-cmd = <span class="string">&quot;/sbin/route add -net %&#123;R&#125; dev %&#123;D&#125;&quot;</span></span><br><span class="line">route-del-cmd = <span class="string">&quot;/sbin/route del -net %&#123;R&#125; dev %&#123;D&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This option allows to forward a proxy. The special strings &#x27;%&#123;U&#125;&#x27;</span></span><br><span class="line"><span class="comment"># and &#x27;%&#123;G&#125;&#x27;, if present will be replaced by the username and group name.</span></span><br><span class="line"><span class="comment">#proxy-url = http://example.com/</span></span><br><span class="line"><span class="comment">#proxy-url = http://example.com/%&#123;U&#125;/%&#123;G&#125;/hello</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The following options are for (experimental) AnyConnect client</span></span><br><span class="line"><span class="comment"># compatibility.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Client profile xml. A sample file exists in doc/profile.xml.</span></span><br><span class="line"><span class="comment"># This file must be accessible from inside the worker&#x27;s chroot.</span></span><br><span class="line"><span class="comment"># It is not used by the openconnect client.</span></span><br><span class="line"><span class="comment">#user-profile = profile.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Binary files that may be downloaded by the CISCO client. Must</span></span><br><span class="line"><span class="comment"># be within any chroot environment.</span></span><br><span class="line"><span class="comment">#binary-files = /path/to/binaries</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Unless set to false it is required for clients to present their</span></span><br><span class="line"><span class="comment"># certificate even if they are authenticating via a previously granted</span></span><br><span class="line"><span class="comment"># cookie and complete their authentication in the same TCP connection.</span></span><br><span class="line"><span class="comment"># Legacy CISCO clients do not do that, and thus this option should be</span></span><br><span class="line"><span class="comment"># set for them.</span></span><br><span class="line">cisco-client-compat = |CISCO_COMPAT|</span><br><span class="line"></span><br><span class="line"><span class="comment">#Advanced options</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Option to allow sending arbitrary custom headers to the client after</span></span><br><span class="line"><span class="comment"># authentication and prior to VPN tunnel establishment.</span></span><br><span class="line"><span class="comment">#custom-header = &quot;X-My-Header: hi there&quot;</span></span><br></pre></td></tr></table></figure><p>主要的改动点：</p><ol><li>认证方式修改为 certificate</li><li>禁用 banner</li><li>打开 ca-cert</li><li>将 cert-user-oid 修改为 CN (2.5.4.3) 识别</li></ol><p>当 <code>ocserv</code> 服务启动的时候，会自动生成 <code>/var/etc/ocserv.conf</code> 文件作为最终的配置文件。</p><h3 id="设置路由表、转发规则和端口映射"><a href="#设置路由表、转发规则和端口映射" class="headerlink" title="设置路由表、转发规则和端口映射"></a>设置路由表、转发规则和端口映射</h3><p>修改完配置文件以后，我们还需要设置路由表。因为我不需要 OpenWrt 代理所有流量，仅仅需要可以访问到内网，所以我只做了一个路由表，就是我的内网网段，如下图：</p><img src="/2016/07/18/setting-up-openconnect-server-ocserv-on-openwrt/dns_and_route.png" class=""><p>接下来修改用户自定义 firewall 文件 <code>/etc/firewall.user</code>，增加如下内容：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">iptables</span> -t nat -I POSTROUTING -s <span class="number">192.168.100.0</span>/<span class="number">24</span> -j MASQUERADE</span><br><span class="line"><span class="attribute">iptables</span> -I FORWARD -i vpns+ -s <span class="number">192.168.100.0</span>/<span class="number">24</span> -j ACCEPT</span><br><span class="line"><span class="attribute">iptables</span> -I INPUT -i vpns+ -s <span class="number">192.168.100.0</span>/<span class="number">24</span> -j ACCEPT</span><br></pre></td></tr></table></figure><p>其中 <code>192.168.100.0/24</code> 是 <code>ocserv</code> 的网段，需要根据实际情况进行调整，记得添加防火墙规则后重启服务。</p><p>最后，就是做端口映射了，<code>ocserv</code> 安装后默认使用 <code>4443</code> 端口，为了兼容 AnyConnect 客户端，需要将其映射到外网的 <code>443</code> 端口上，这个就比较简单了，如图：</p><img src="/2016/07/18/setting-up-openconnect-server-ocserv-on-openwrt/port_forward.png" class=""><h3 id="启动-ocserv-服务"><a href="#启动-ocserv-服务" class="headerlink" title="启动 ocserv 服务"></a>启动 ocserv 服务</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/etc/i</span>nit.d/ocserv enable</span><br><span class="line"><span class="regexp">/etc/i</span>nit.d/ocserv start</span><br></pre></td></tr></table></figure><p>这个命令很简单，另外，也可以在 luci 中选择 <code>Enable server</code> 来打开 <code>ocserv</code> 服务。然而，在你重启后，<code>ocserv</code> 服务从来就没有自动启动过！！！所以，我们还得做些 tweaking。</p><p>在 <code>/etc/rc.local</code> 文件的 <code>exit</code> 前面增加两行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/ocserv restart</span><br><span class="line"><span class="built_in">sleep</span> 5</span><br></pre></td></tr></table></figure><p>同时创建一个 <code>/root/ocservup.sh</code> 脚本，防止 <code>ocserv</code> 进程意外被杀：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">killall -0 ocserv 2&gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ $? != 0 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">logger \&quot;<span class="variable">$0</span>: Starting ocserv ...\&quot;</span><br><span class="line">/usr/sbin/ocserv -c /var/etc/ocserv.conf</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">logger \&quot;<span class="variable">$0</span>: ocserv already running: $(pidof ocserv)\&quot;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>记得执行 <code>chmod +x /root/ocservup.sh</code> 给该脚本添加可执行属性。然后把该脚本添加到 <code>crontab</code> 中：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span>*/<span class="number">2</span> * * * /root/ocservup.sh</span><br></pre></td></tr></table></figure><p>至此，整个配置完成，可以重启试试。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ul><li><a href="http://blog.ltns.info/linux/openwrt_ocserv_vpn_client_smart_proxy/">OpenWrt路由器搭建和配置ocserv实现VPN客户端智能代理</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenWrt </tag>
            
            <tag> OpenConnect </tag>
            
            <tag> VPN </tag>
            
            <tag> AnyConnect </tag>
            
            <tag> Cisco </tag>
            
            <tag> ocserv </tag>
            
            <tag> OpenVPN </tag>
            
            <tag> Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将 Hexo 升级到 3.2.2 了</title>
      <link href="/2016/07/17/upgrade-hexo-to-3-2-2/"/>
      <url>/2016/07/17/upgrade-hexo-to-3-2-2/</url>
      
        <content type="html"><![CDATA[<p>没有什么新鲜事情，就是简单记录下，把 Hexo 从 3.1.1 升级到了 3.2.2，结果又是一轮折腾。</p><p>hexo-cli 啊，npm 啊，node 啊什么的，版本都是翻天覆地的大变化，实在无力吐槽了。还有那跟龟速一样的 npm 更新，也是让人痛不欲生。</p><p>然而，最后还是更新成功了，内容也都还在，那就这样吧。</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Yosemite 上安装 iTerm2, Oh My Zsh 和 MacVim</title>
      <link href="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/"/>
      <url>/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/</url>
      
        <content type="html"><![CDATA[<h2 id="万年不变的背景故事"><a href="#万年不变的背景故事" class="headerlink" title="万年不变的背景故事"></a>万年不变的背景故事</h2><p>最近重新用回 Macbook Air，环境什么的需要重新设置一下，所以这份本应该在几年前就写的作业就一直拖到了今天。</p><h2 id="iTerm2"><a href="#iTerm2" class="headerlink" title="iTerm2"></a>iTerm2</h2><p>所谓磨刀不误砍柴工，说的就是要有个好工具，那么 Terminal(终端) 就显得很重要了。OS X 自带的 Terminal 虽然用着也过得去，但也仅仅是过得去而已，跟好用的 <code>iTerm2</code> 比，还是弱鸡了一些。</p><span id="more"></span><p>先来看看系统自带的 Terminal 长什么样：</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/terminal.png" class=""><p>使用简单的 <code>brew cask</code> 来安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ brew cask install iterm2</span><br><span class="line">==&gt; Downloading https://iterm2.com/downloads/stable/iTerm2-2_1_1.zip</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Symlinking App <span class="string">&#x27;iTerm.app&#x27;</span> to <span class="string">&#x27;/Users/tommy/Applications/iTerm.app&#x27;</span></span><br><span class="line">🍺  iterm2 staged at <span class="string">&#x27;/opt/homebrew-cask/Caskroom/iterm2/2.1.1&#x27;</span> (185 files, 8.5M)</span><br></pre></td></tr></table></figure><p>就是辣么酸爽，安装完成。你问我 <code>brew</code> 和 <code>brew cask</code> 是什么鬼？请参考 <a href="http://brew.sh/">Brew</a> 和 <a href="https://github.com/caskroom/homebrew-cask">Homebrew-Cask</a> 的介绍。简单说，就是下面两个命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br><span class="line">$ brew install caskroom/cask/brew-cask</span><br></pre></td></tr></table></figure><p>安装完成后的运行的 iTerm2 长这个样：</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/iterm2_original.png" class=""><p>有点难看，来我们给他换个色，就用本人非常喜欢的 <a href="http://ethanschoonover.com/solarized">Solarized</a> 好了。随便找个地方 git clone 一下。当然，不喜欢用 git 的朋友，可以直接<a href="http://ethanschoonover.com/solarized/files/solarized.zip">下载官方打包的 ZIP 文件</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git://github.com/altercation/solarized.git</span><br></pre></td></tr></table></figure><p>进入 <code>Solarized</code> 目录下的 <code>iterm2-colors-solarized</code> 目录，看到如下两个货：</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/solarized_iterm2.png" class=""><p>双击 <code>Solarized Dark.itermcolors</code> 将配色导入到 <code>iTerm2</code> 中。</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/solarized_iterm2_imported.png" class=""><p>回到 <code>iTerm2</code>，打开 <code>Preferences</code> 面板（<code>Command + ,</code>)，并选中 <code>Profiles</code> 页面中的 <code>Colors</code>，点击 <code>Load Presets</code> 并选择 <code>Solarized Dark</code>。</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/iterm2_load_presets.png" class=""><p>我们再来看看效果，嗯，效果好多了（自我感觉）。</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/iterm2_solarized.png" class=""><h2 id="Oh-My-Zsh"><a href="#Oh-My-Zsh" class="headerlink" title="Oh My Zsh"></a>Oh My Zsh</h2><p>首先来安装 <code>Oh My Zash</code>，一行简单的命令搞掂。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>安装过程中会需要输入管理员密码，以便更换用户使用的 <code>shell</code>，也就是将 <code>bash</code> 换成 <code>zsh</code>，最后的输出结果如下，并且提示行已经变成 <code>zsh</code> 了。</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/oh_my_zsh.png" class=""><p>修改 <code>~/.zshrc</code> 文件，将 <code>ZSH_THEME=&quot;robbyrussell&quot;</code> 修改为 <code>ZSH_THEME=&quot;agnoster&quot;</code>，进而使用 <code>Agnoster</code> 主题，重启 <code>iTerm2</code>，显示如下：</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/oh_my_zsh_agnoster.png" class=""><p>发现有两个叉叉一样的东西，嗯，很好，这就是字体的问题了。去下载一个 Powerline 的字库就可以解决问题了，<a href="https://github.com/supermarin/powerline-fonts/blob/bfcb152306902c09b62be6e4a5eec7763e46d62d/Monaco/Monaco%20for%20Powerline.otf">字体下载传送门</a>在此。双击便可安装字体，安装后，重新打开 <code>iTerm2</code> 的参数设置面板，将默认的 <code>Monaco</code> 字体更改为 <code>Monaco for Powerline</code>，如下：</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/oh_my_zsh_powerline.png" class=""><p>设置好以后，让我们看看叉叉问题解决的如何了？</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/oh_my_zsh_agnoster_powerline.png" class=""><p>好了，妥妥的，显示正常的不能再正常了。测试一下 <code>git</code> 的基本使用，也是完全没有问题的。</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/oh_my_zsh_git.png" class=""><p>因为新的电脑还没有设置名字和邮箱地址，所以各位看官请自行忽略 git 的提示信息。</p><h2 id="MacVim"><a href="#MacVim" class="headerlink" title="MacVim"></a>MacVim</h2><p>另外一个不能少的当然是 <code>Vim</code> 了，终端的虽然好用，但是 <code>MacVim</code> 也不能少啊，装装装！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ brew cask install macvim</span><br><span class="line">==&gt; Downloading https://github.com/macvim-dev/macvim/releases/download/snapshot-77/MacVim-snapshot-77.tbz</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Symlinking App <span class="string">&#x27;MacVim.app&#x27;</span> to <span class="string">&#x27;/Users/tommy/Applications/MacVim.app&#x27;</span></span><br><span class="line">==&gt; Symlinking Binary <span class="string">&#x27;mvim&#x27;</span> to <span class="string">&#x27;/usr/local/bin/mvim&#x27;</span></span><br><span class="line">🍺  macvim staged at <span class="string">&#x27;/opt/homebrew-cask/Caskroom/macvim/7.4-77&#x27;</span> (1906 files, 35M)</span><br></pre></td></tr></table></figure><p>还是那么简单粗暴，用 <code>brew cask</code> 解决问题。看看「裸体」的 <code>MacVim</code> 长什么样。</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/macvim.png" class=""><p>很好，白花花的大白肉，看着眼睛那叫一个酸爽啊！而且，字体看起来也有点小。来，把 <code>Solarized</code> 的衣服给丫穿上！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> ~/.vim</span><br><span class="line">$ <span class="built_in">cp</span> -avP Git/solarized/vim-colors-solarized/* ~/.vim/</span><br></pre></td></tr></table></figure><p>编辑 <code>~/.vimrc</code> 文件，增加如下内容：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">colorscheme solarized</span><br><span class="line"><span class="built_in">set</span> <span class="attribute">guifont</span>=Monaco:h12</span><br></pre></td></tr></table></figure><p>再打开看看，现在字也大了，配色也好看了，妈妈再也不用担心的我眼睛了。</p><img src="/2015/08/06/install-iterm2-oh-my-zsh-and-macvim-on-yosemite/macvim_solarized.png" class=""><h2 id="啰嗦一下"><a href="#啰嗦一下" class="headerlink" title="啰嗦一下"></a>啰嗦一下</h2><p>好了，到这里基本上就可以用了。当然，还要配置 ssh 啊，private key 啊什么鬼的，但这些已经超出了本文的范畴了。按照本文配置以后就可以各种愉快的编辑文档啊，写代码啊，版本管理啊什么的啦。Terminal 君一路走好，不送~~~</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS X </tag>
            
            <tag> Brew </tag>
            
            <tag> Oh My Zsh </tag>
            
            <tag> Agnoster </tag>
            
            <tag> Font </tag>
            
            <tag> iTerm2 </tag>
            
            <tag> MacVim </tag>
            
            <tag> Powerline </tag>
            
            <tag> Solarized </tag>
            
            <tag> Terminal </tag>
            
            <tag> Yosemite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将 Hexo 从 2.8.3 更新到 3.1.1</title>
      <link href="/2015/08/05/upgrade-hexo-from-2-8-3-to-3-1-1/"/>
      <url>/2015/08/05/upgrade-hexo-from-2-8-3-to-3-1-1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近发现 Hexo 更新了，于是乎考虑也跟风更新一下 Hexo，便有了此文，记录一下更新的过程。</p><h2 id="更新-Docker-Image"><a href="#更新-Docker-Image" class="headerlink" title="更新 Docker Image"></a>更新 Docker Image</h2><p>因为我现在已经变成了一个不算狂热的 Docker 粉丝，且博主有各种强迫症，所以不想本地的 Node.js 环境被各种「污染」，于是乎可以用 Docker 封装的，都已经被我给 Docker 化了。同样的，Hexo 也未能幸免的被我给 Docker 化了。</p><span id="more"></span><p>如果大家想偷懒的话，可以直接使用我已经做好的 Hexo Docker 镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull tommylau/hexo</span><br></pre></td></tr></table></figure><p>然后配合下面的脚本来使用，就可以好像本地使用 Hexo 一样了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Please place this file in /usr/local/bin, and set the execution right.</span></span><br><span class="line">COMMAND=<span class="string">&quot;&quot;</span></span><br><span class="line">PARAMS=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> != <span class="string">&quot;bash&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> != <span class="string">&quot;npm&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">COMMAND=<span class="string">&quot;hexo&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$COMMAND</span>&quot;</span> == <span class="string">&quot;hexo&quot;</span> -a <span class="string">&quot;<span class="variable">$1</span>&quot;</span> == <span class="string">&quot;s&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">PARAMS=<span class="string">&quot;-i 0.0.0.0&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">docker run --name=hexo -ti --<span class="built_in">rm</span> -v $(<span class="built_in">pwd</span>):/hexo -v ~/.ssh/id_rsa:/root/.ssh/id_rsa -v ~/.ssh/known_hosts:/root/.ssh/known_hosts -v ~/.gitconfig:/root/.gitconfig -p 4000:4000 tommylau/hexo <span class="variable">$COMMAND</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span> <span class="variable">$PARAMS</span></span><br></pre></td></tr></table></figure><p>那么相比较原来的 Hexo Dockerfile，修改了什么呢？其实，只是将</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">RUN</span> npm install hexo@<span class="number">2</span>.<span class="number">8</span>.<span class="number">3</span> -g</span><br></pre></td></tr></table></figure><p>修改成了</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">RUN</span> npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>而已。囧rz，好吧，其实真的就是这么简单。当然，这只是说如何安装新版本的 Hexo，但是后面才是比较痛苦的。</p><h2 id="更新旧的博客目录"><a href="#更新旧的博客目录" class="headerlink" title="更新旧的博客目录"></a>更新旧的博客目录</h2><p>当我进入旧的博客目录后，发现使用 hexo 命令，已经不能正常识别了。这个时候我发现，除了重新初始化以后，似乎并没有什么更好的解决办法了。于是乎，我运行了如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>得到了如下的提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO  Copying data to /hexo</span><br><span class="line">INFO  You are almost <span class="keyword">done</span>! Don<span class="string">&#x27;t forget to run &#x27;</span>npm install<span class="string">&#x27; before you start blogging with Hexo!</span></span><br></pre></td></tr></table></figure><p>然后发现，好多文件都被修改了，比如 <code>_config.yml</code>, <code>package.json</code> 还有 themes 里面的部分样式等等。</p><p>这个时候，就只能手动的对比各种文件了。因为我使用 git 仓库管理，所以可以直接看到文件的改动。如果你没有使用类似 git 之类的版本控制软件的话，强烈建议备份后，再执行升级操作。</p><p>根据自己的需要调整好各种文件和配置，比如 <code>_config.yml</code> 里面的 <code>title</code> 啊什么的。因为初始化以后，都是默认值，需要根据自己的实际情况重新再设置一次。</p><h2 id="各种坑来了"><a href="#各种坑来了" class="headerlink" title="各种坑来了"></a>各种坑来了</h2><h3 id="GitHub-rsync-同步失效了"><a href="#GitHub-rsync-同步失效了" class="headerlink" title="GitHub, rsync 同步失效了"></a>GitHub, rsync 同步失效了</h3><p>好了，都重新设置好了以后，应该可以正常使用了吧？试验一下 <code>hexo generate</code>，嗯，妥妥的，没问题。</p><p>接着再来 <code>hexo deploy</code> 一下，what the huck?</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">% hexo deploy</span><br><span class="line"><span class="keyword">ERROR </span>Deployer not found: github</span><br><span class="line"><span class="keyword">ERROR </span>Deployer not found: rsync</span><br></pre></td></tr></table></figure><p>GitHub 和 rsync 同步博客内容到服务器的方式失效了？！搬出万能的 Google，搜索后发现 <a href="https://github.com/hexojs/hexo/issues/1040">Hexo 相关的 Issue 页面</a>，根据用户反馈，使用 <code>git</code> 方式替换原来的 <code>github</code> 方式。</p><p>然后在命令行执行如下命令，增加 Deployer：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo npm install hexo-deployer-git --save</span><br><span class="line">hexo npm install hexo-deployer-rsync --save</span><br></pre></td></tr></table></figure><p><strong>注意：我使用的是 Docker 版本，未使用 Docker 的同学，请移除命令行最开始的 <code>hexo</code> 命令。</strong></p><p>再来执行一下 <code>hexo deploy</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO  Deploy <span class="keyword">done</span>: git</span><br><span class="line">INFO  Deploy <span class="keyword">done</span>: rsync</span><br></pre></td></tr></table></figure><p>嗯，效果不错，看来可以正常使用了。</p><h3 id="链接失效了"><a href="#链接失效了" class="headerlink" title="链接失效了"></a>链接失效了</h3><p>打开自己的网站，看看更新的成果。首页没有什么问题，很正常，随便找个链接打开看看。什么？提示 404 Not Found？这怎么可能？</p><p>重新生成和部署了几次，结果依旧，各种链接不正确。再次使用 Google 大杀器，找到了如下文章：<a href="https://github.com/LouisBarranqueiro/tranquilpeak-hexo-theme/issues/45">Permalinks are generated incorrectly when relative_link&#x3D;true</a>。看来是相对路径引发的血案。将 <code>_config.yml</code> 中的 <code>relative_link</code> 修改为 <code>false</code> 后，问题解决。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实，我只是闲着无聊，才把 Hexo 从 2.8.3 版本升级到 3.1.1 版本的。就我这种入门级使用者的程度来说，并没有感觉到 2.8.3 跟 3.1.1 有什么明显的不同。也许是我用的功能都比较简单吧，不过感觉 3.1.1 版本在生成文件的时候，速度好像比 2.8.3 要快一点，当然，这也可能是我的错觉。</p><p>你所看到的这篇文章，就已经是在 Hexo 3.1.1 的基础上发布的了。喜欢追新的同学，勇敢地升级吧！</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Node.js </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修复 Crowd 无法登录的问题</title>
      <link href="/2015/04/15/fix-the-crowd-cannot-login-issue/"/>
      <url>/2015/04/15/fix-the-crowd-cannot-login-issue/</url>
      
        <content type="html"><![CDATA[<p>最近将大部分的服务都 Docker 化了，遂打算把 <a href="https://www.atlassian.com/software/crowd/overview">Crowd</a> 也给 Docker 化了。不知道 Crowd 的同学可以去官网看一下介绍，简单说，就是一个单点登录和集中身份验证的东东。因为要使用 Stash，Jira 和 Confluence 等 Atlassian 的产品，所以用个 Crowd 可以偷懒，不用每个系统设置账户。</p><span id="more"></span><p>成也 Docker，败也 Docker，正是因为使用了 Docker 结果导致无法登录 Crowd 了。因为 Crowd 是使用 Application 跟 IP 两种方式认证的，而 Docker 重启实例后 IP 就会变化，同时我又使用了 Nginx 做反向代理，结果就无法正常认证了。</p><p>网页登录的时候，显示如下类似界面，刚开始以为是用户名密码错误，最后才发现，是 IP 地址的问题。</p><img src="/2015/04/15/fix-the-crowd-cannot-login-issue/authentication-fail.png" class=""><p>在 Docker 中查看 Log 信息如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Caused by: org.codehaus.xfire.fault.XFireFault: Client with address <span class="string">&quot;172.17.0.24&quot;</span> is forbidden from making requests to the application, crowd.</span><br><span class="line">        at org.codehaus.xfire.fault.Soap11FaultSerializer.readMessage(Soap11FaultSerializer.java:<span class="number">31</span>)</span><br><span class="line">        at org.codehaus.xfire.fault.SoapFaultSerializer.readMessage(SoapFaultSerializer.java:<span class="number">28</span>)</span><br><span class="line">        at org.codehaus.xfire.soap.handler.ReadHeadersHandler.checkForFault(ReadHeadersHandler.java:<span class="number">111</span>)</span><br><span class="line">        at org.codehaus.xfire.soap.handler.ReadHeadersHandler.invoke(ReadHeadersHandler.java:<span class="number">67</span>)</span><br><span class="line">        at org.codehaus.xfire.handler.HandlerPipeline.invoke(HandlerPipeline.java:<span class="number">131</span>)</span><br><span class="line">        at org.codehaus.xfire.client.Client.onReceive(Client.java:<span class="number">406</span>)</span><br><span class="line">        at org.codehaus.xfire.transport.http.HttpChannel.sendViaClient(HttpChannel.java:<span class="number">139</span>)</span><br><span class="line">        at org.codehaus.xfire.transport.http.HttpChannel.send(HttpChannel.java:<span class="number">48</span>)</span><br><span class="line">        at org.codehaus.xfire.handler.OutMessageSender.invoke(OutMessageSender.java:<span class="number">26</span>)</span><br><span class="line">        at org.codehaus.xfire.handler.HandlerPipeline.invoke(HandlerPipeline.java:<span class="number">131</span>)</span><br><span class="line">        at org.codehaus.xfire.client.Invocation.invoke(Invocation.java:<span class="number">79</span>)</span><br><span class="line">        at org.codehaus.xfire.client.Invocation.invoke(Invocation.java:<span class="number">114</span>)</span><br><span class="line">        at org.codehaus.xfire.client.Client.invoke(Client.java:<span class="number">336</span>)</span><br><span class="line">        at org.codehaus.xfire.client.XFireProxy.handleRequest(XFireProxy.java:<span class="number">77</span>)</span><br><span class="line">        at org.codehaus.xfire.client.XFireProxy.invoke(XFireProxy.java:<span class="number">57</span>)</span><br><span class="line">        at com.sun.proxy.$Proxy379.authenticateApplication(Unknown Source)</span><br><span class="line">        at com.atlassian.crowd.service.soap.client.SecurityServerClientImpl.authenticate(SecurityServerClientImpl.java:<span class="number">235</span>)</span><br><span class="line">        ... <span class="number">97</span> more</span><br></pre></td></tr></table></figure><p>第一行就暴露了，IP <code>172.17.0.24</code> 被禁止，而这个 IP 正是 Nginx 的 Docker 实例，找到问题的根本点，那么就好解决了。登录到 PostgreSQL 的实例中，添加 IP 到数据库便可。</p><p>先进入 PostgreSQL 的实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker exec -ti postgres bash</span></span><br></pre></td></tr></table></figure><p>然后切换到数据库账号身份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># su - postgres</span></span><br><span class="line">No directory, logging <span class="keyword">in</span> with HOME=/</span><br></pre></td></tr></table></figure><p>开启 PostgreSQL 客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ psql</span><br><span class="line">psql (9.4.1)</span><br><span class="line">Type <span class="string">&quot;help&quot;</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">postgres=<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>切换到 <code>Crowd</code> 数据库，名字可能不同，请根据实际情况修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postgres=<span class="comment"># \c crowd</span></span><br><span class="line">You are now connected to database <span class="string">&quot;crowd&quot;</span> as user <span class="string">&quot;postgres&quot;</span>.</span><br></pre></td></tr></table></figure><p>查看一下现有的 IP 允许情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">rowd=<span class="comment"># SELECT * FROM cwd_application_address;</span></span><br><span class="line"> application_id | remote_address</span><br><span class="line">----------------+-----------------</span><br><span class="line">              2 | crowd.zhimou.io</span><br><span class="line">              2 | 3743b52a0e96</span><br><span class="line">              2 | 172.17.0.22</span><br><span class="line">              2 | 172.16.10.200</span><br><span class="line">              2 | 127.0.0.1</span><br><span class="line">              2 | localhost</span><br><span class="line">(6 rows)</span><br></pre></td></tr></table></figure><p>果然，没有发现被禁止的 <code>172.17.0.24</code> 这个 IP，把它添加进去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crowd=<span class="comment"># INSERT INTO cwd_application_address VALUES (2, &#x27;172.17.0.24&#x27;);</span></span><br><span class="line">INSERT 0 1</span><br></pre></td></tr></table></figure><p>再查看一下 table</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">crowd=<span class="comment"># SELECT * FROM cwd_application_address;</span></span><br><span class="line"> application_id | remote_address</span><br><span class="line">----------------+-----------------</span><br><span class="line">              2 | crowd.zhimou.io</span><br><span class="line">              2 | 3743b52a0e96</span><br><span class="line">              2 | 172.17.0.22</span><br><span class="line">              2 | 172.16.10.200</span><br><span class="line">              2 | 127.0.0.1</span><br><span class="line">              2 | localhost</span><br><span class="line">              2 | 172.17.0.24</span><br><span class="line">(7 rows)</span><br></pre></td></tr></table></figure><p>Good，有了，再访问一下网页看看</p><img src="/2015/04/15/fix-the-crowd-cannot-login-issue/authentication-ok.png" class=""><p>欧耶，好了。</p><p>参考资料：</p><ul><li><a href="https://jira.atlassian.com/browse/CWD-2315">Cannot login to Crowd when IP address is changed</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atlassian </tag>
            
            <tag> Crowd </tag>
            
            <tag> PostgreSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Atlassian 授权机制研究</title>
      <link href="/2015/03/05/study-of-atlassian-license/"/>
      <url>/2015/03/05/study-of-atlassian-license/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>其实这篇文章一年半前就应该写了，那个时候就曾经研究过 Atlassian 的授权机制。主要是那个时候发现了 <a href="https://www.atlassian.com/software/stash">Stash</a> 这个宝贝。上网遍寻了一下，也没有发现关于 Stash 的破解。但是，关于 Jira 的破解文章就有好多，仔细看了一下，无外乎也就是替换 <code>Version2LicenseDecoder.class</code> 这个文件，然后使用自己编码的，或者明文的 License 授权文件，来达到激活产品的目的。既然 Jira 已经有很多人写过了，那么我们就拿 Stash 来玩玩吧。</p><p>**声明：**撰写本文的目的，仅在于研究学习 Atlassian 授权的原理和机制，请勿将本文涉及到的任何内容用于商业用途。请大家尽可能地支持正版软件，因为这样我们才能有更多好用的软件。<a href="https://www.atlassian.com/software/stash/pricing">Stash 官方 10 用户的授权</a>仅仅为 $10 美金，也就是 60 多块钱的事儿，对于小团队来说绝对是白菜价了。</p><span id="more"></span><h2 id="License-分析"><a href="#License-分析" class="headerlink" title="License 分析"></a>License 分析</h2><p>其实 License 分析的部分早就有人已经做过了，请参考《<a href="http://blog.dayanjia.com/2012/12/atlassian-jira-license-strategy-analysis/">Atlassian JIRA 授权许可证机制分析</a>》。</p><p>不多说，先上一段 Python 代码。注意 <code>M2Crypto</code> 需要自行安装，该代码在 Python 2.7 下运行通过。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> M2Crypto</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"></span><br><span class="line"><span class="comment"># Some constants</span></span><br><span class="line">ENCODED_LICENSE_LENGTH_BASE = <span class="number">31</span></span><br><span class="line">LICENSE_PREFIX = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>, [<span class="number">13</span>, <span class="number">14</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">15</span>]))</span><br><span class="line">SEPARATOR = <span class="string">&#x27;X&#x27;</span></span><br><span class="line">ATLASSIAN_PUBLIC_KEY = <span class="string">&#x27;./atlassian_pub.pem&#x27;</span></span><br><span class="line"></span><br><span class="line">license_key = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">AAABDg0ODAoPeNptUNtKxDAQfc9XBHyOpKlttZCH2gas9LK0VRF8idlRI91akrS4f293q4iyMAPDn</span></span><br><span class="line"><span class="string">Msc5uwBtjgDhVmI6VXsRbEf4rTtMKMeQxlYZfTo9MfAb/MmeYqxmGU/ycMGpQaOQyYd8AOfLMUi9</span></span><br><span class="line"><span class="string">K6NPC+0gsGC2OqjWlSdaDZN3gr068CdmeAPvduPUMkd8LQuS9GkeVKsuFROz7AK+pV7D8YeTBgqp</span></span><br><span class="line"><span class="string">R4cDHJQID5HbfY/iXxCPcJCVJtXOWi7Hk17PY7a4Q6sW82rafcMpn65s4slJx5qwcxg8oxf06AgN</span></span><br><span class="line"><span class="string">7TzSZFEAWkuxCNqRcWXJgXzaHQZROg7+0Iv8uwUcjrUZjLqTVr4/74vnyt/nTAsAhR8v6Zm5YfvZ</span></span><br><span class="line"><span class="string">WVBnwouY7xhT+jwUgIUbRhGVaC8P9JCvDPT1MXIwnCgGqA=X02dp2</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove any white spaces and return in the key</span></span><br><span class="line">license_content = license_key.replace(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;\t&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check Version</span></span><br><span class="line">x_position = license_content.rfind(SEPARATOR)</span><br><span class="line"><span class="keyword">if</span> license_content[x_position + <span class="number">1</span>:x_position + <span class="number">3</span>] != <span class="string">&quot;02&quot;</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Invalid license version, only license version 2 is supported!&quot;</span></span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the base64 encoded license</span></span><br><span class="line">license_length = <span class="built_in">int</span>(license_content[x_position + <span class="number">3</span>:], ENCODED_LICENSE_LENGTH_BASE)</span><br><span class="line">encoded_bytes = license_content[:license_length]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Base64 decode</span></span><br><span class="line">decoded_bytes = base64.b64decode(encoded_bytes)</span><br><span class="line">text_length, = struct.unpack(<span class="string">&quot;&gt;I&quot;</span>, decoded_bytes[:<span class="number">4</span>])</span><br><span class="line">license_bytes = decoded_bytes[<span class="number">4</span>:<span class="number">4</span> + text_length]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Magic 13, 14, 12, 10, 15 for license header</span></span><br><span class="line"><span class="keyword">if</span> license_bytes[:<span class="number">5</span>] != LICENSE_PREFIX:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;Invalid license version 2 file&quot;</span></span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get license original text and signature</span></span><br><span class="line">license_text = zlib.decompress(license_bytes[<span class="number">5</span>:])</span><br><span class="line">license_hash = decoded_bytes[<span class="number">4</span> + text_length:]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> license_text</span><br><span class="line"></span><br><span class="line"><span class="comment"># Verify whether it is official key</span></span><br><span class="line">public_key = M2Crypto.DSA.load_pub_key(ATLASSIAN_PUBLIC_KEY)</span><br><span class="line">official = public_key.verify_asn1(hashlib.sha1(license_bytes).digest(), license_hash)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> official:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;This license is official signed.&quot;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;This license is not official signed.&quot;</span></span><br></pre></td></tr></table></figure><p>其中 <code>license_key</code> 就是我们从 Atlassian 官方得到的试用 License。出于隐私保护的角度出发，我这里使用了大眼夹的 License。<code>./atlassian_pub.pem</code> 是从 Atlassian 官方的授权文件中提取出来的 Public Key，其内容如下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-----<span class="keyword">BEGIN</span> PUBLIC KEY-----</span><br><span class="line">MIIBuDCCASwGByqGSM44BAEwggEfAoGBAP1/U4EddRIpUt9KnC7s5Of2EbdSPO9E</span><br><span class="line">AMMeP4C2USZpRV1AIlH7WT2NWPq<span class="regexp">/xfW6MPbLm1Vs14E7gB00b/</span>JmYLdrmVClpJ+f</span><br><span class="line"><span class="number">6</span>AR7ECLCT7up1/<span class="number">63</span>xhv4O1fnxqimFQ8E+<span class="number">4</span>P208UewwI1VBNaFpEy9nXzrith1yrv</span><br><span class="line"><span class="number">8</span>iIDGZ3RSAHHAhUAl2BQjxUjC8yykrmCouuEC/BYHPUCgYEA9+GghdabPd7LvKtc</span><br><span class="line">NrhXuXmUr7v6OuqC+VdMCz0HgmdRWVeOutRZT+ZxBxCBgLRJFnEj6EwoFhO3zwky</span><br><span class="line">jMim4TwWeotUfI0o4KOuHiuzpnWRbqN<span class="regexp">/C/</span>ohNWLx+<span class="number">2</span>J6ASQ7zKTxvqhRkImog9/h</span><br><span class="line">WuWfBpKLZl6Ae1UlZAFMO/<span class="number">7</span>PSSoDgYUAAoGBAIvfweZvmGo5otwawI3no7Udanxa</span><br><span class="line">l3hX2haw962KL/nHQrnC4FG2PvUFf34OecSK1KtHDPQoSQ+DHrfdf6vKUJphw0Kn</span><br><span class="line"><span class="number">3</span>gXm4LS8VK<span class="regexp">/LrY7on/</span>wh2iUobS2XlhuIqEc5mLAUu9Hd+<span class="number">1</span>qxsQkQ50d0lzKrnDqP</span><br><span class="line">sM0WA9htkdJJw2nS</span><br><span class="line">-----<span class="keyword">END</span> PUBLIC KEY-----</span><br></pre></td></tr></table></figure><p>如果你需要验证是否官方签名的话，可以自行创建这个文件，如果不需要的话，把 <code>print license_text</code> 之后的代码段全部删掉便可。运行上面的代码，我们得到如下的信息：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Wed Dec 26 09:17:36 CST 2012</span></span><br><span class="line"><span class="attribute">Description</span>=JIRA\: Evaluation</span><br><span class="line"><span class="attribute">CreationDate</span>=2012-12-27</span><br><span class="line">jira.<span class="attribute">LicenseEdition</span>=ENTERPRISE</span><br><span class="line"><span class="attribute">Evaluation</span>=<span class="literal">true</span></span><br><span class="line">jira.<span class="attribute">LicenseTypeName</span>=COMMERCIAL</span><br><span class="line">jira.<span class="attribute">active</span>=<span class="literal">true</span></span><br><span class="line"><span class="attribute">licenseVersion</span>=2</span><br><span class="line"><span class="attribute">MaintenanceExpiryDate</span>=2013-01-26</span><br><span class="line"><span class="attribute">Organisation</span>=Clippit Test</span><br><span class="line">jira.<span class="attribute">NumberOfUsers</span>=-1</span><br><span class="line"><span class="attribute">ServerID</span>=B05L-H0T3-LA75-R4EY</span><br><span class="line"><span class="attribute">SEN</span>=SEN-L2107857</span><br><span class="line"><span class="attribute">LicenseID</span>=LIDSEN-L2107857</span><br><span class="line"><span class="attribute">LicenseExpiryDate</span>=2013-01-26</span><br><span class="line"><span class="attribute">PurchaseDate</span>=2012-12-27</span><br><span class="line"></span><br><span class="line">This license is official signed.</span><br></pre></td></tr></table></figure><p>可以看到，这是一个经过官方签名和认证的有效 License，授权信息都已经比较清晰明了了，就不多做解释了。那么 Stash 的授权信息长什么样呢？Stash 的试用 License 大概长成这个样子（部分内容出于隐私保护已经马赛克化）：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Wed Feb 25 22:09:41 CST 2015</span></span><br><span class="line"><span class="attribute">Description</span>=Stash Unlimited<span class="built_in"> Users </span>[Legacy]\: Evaluation License</span><br><span class="line"><span class="attribute">CreationDate</span>=2015-02-26</span><br><span class="line"><span class="attribute">Evaluation</span>=<span class="literal">true</span></span><br><span class="line">stash.<span class="attribute">active</span>=<span class="literal">true</span></span><br><span class="line"><span class="attribute">licenseVersion</span>=2</span><br><span class="line"><span class="attribute">MaintenanceExpiryDate</span>=2015-03-28</span><br><span class="line"><span class="attribute">Organisation</span>=Tommy Lau</span><br><span class="line">stash.<span class="attribute">LicenseTypeName</span>=COMMERCIAL</span><br><span class="line"><span class="attribute">ServerID</span>=ABCD-1234-EFGH-5678</span><br><span class="line"><span class="attribute">SEN</span>=SEN-L1234567</span><br><span class="line"><span class="attribute">LicenseID</span>=LIDSEN-L1234567</span><br><span class="line"><span class="attribute">LicenseExpiryDate</span>=2015-03-28</span><br><span class="line">stash.<span class="attribute">NumberOfUsers</span>=-1</span><br><span class="line"><span class="attribute">PurchaseDate</span>=2015-02-26</span><br><span class="line"></span><br><span class="line">This license is official signed.</span><br></pre></td></tr></table></figure><p>可以看到大大的一个 <code>Evaluation=true</code>，其实只要把这里改成 <code>false</code>，再修改一下对应的信息，比如 <code>Description</code>, <code>MaintenanceExpiryDate</code>, <code>LicenseExpiryDate</code>, <code>Organisation</code>, <code>ServerID</code> 为自己的信息，重新编码一下，就可以生成一个新的证书了。</p><h2 id="伪造数字签名"><a href="#伪造数字签名" class="headerlink" title="伪造数字签名"></a>伪造数字签名</h2><p>与前文提到的替换公钥的方式不同，我选择了修改源代码然后重新编译的方式。这样的好处是就算是修改了原始文件，官方的授权证书依然可以正常使用。而不会出现输入正版授权反而提示授权无效的情况。</p><p>要修改的主要是名为 <code>Version2LicenseDecoder.class</code> 的 <code>com.atlassian.extras.decoder.v2.Version2LicenseDecoder</code> 类。对于我现在使用的 Stash v3.7.0 来说，主要是以下两个文件：</p><ul><li>atlassian-extras-decoder-v2-3.2.jar</li><li>atlassian-universal-plugin-manager-plugin-2.18.2.jar</li></ul><p>第一个是用于 Stash 授权的，第二个是用于 Plugin 授权的。同时第二个文件是打包在 <code>stash-bundled-plugins.zip</code> 文件中的，需要提取、修改后重新替换包内的同名文件。而对于 <code>Version2LicenseDecoder.java</code> 的修改，主要是把 127 行开始的数字签名代码屏蔽掉，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">try</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  Signature signature = Signature.getInstance(&quot;SHA1withDSA&quot;);</span></span><br><span class="line"><span class="comment">  signature.initVerify(PUBLIC_KEY);</span></span><br><span class="line"><span class="comment">  signature.update(licenseText);</span></span><br><span class="line"><span class="comment">  if (!signature.verify(hash))</span></span><br><span class="line"><span class="comment">  &#123;</span></span><br><span class="line"><span class="comment">    throw new LicenseException(&quot;Failed to verify the license.&quot;);</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">catch (InvalidKeyException e)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  throw new LicenseException(e);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">catch (SignatureException e)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  throw new LicenseException(e);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">catch (NoSuchAlgorithmException e)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">  throw new LicenseException(e);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>然后重新编译成 <code>Version2LicenseDecoder.class</code>，并替换上述提到的两个文件，<code>atlassian-extras-decoder-v2-3.2.jar</code> 和 <code>atlassian-universal-plugin-manager-plugin-2.18.2.jar</code>。这样，任意数字签名的符合 Atlassian 编码规范的 License 都可以正常的进行授权了。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>写本文的目的和初衷，都是为了研究和学习。请勿向本人索取修改好的文件，帮忙生成证书等。如果想要生成证书，请参考下面引用的博文。</p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><ul><li><a href="http://blog.dayanjia.com/2012/12/atlassian-jira-license-strategy-analysis/">Atlassian JIRA 授权许可证机制分析</a></li><li><a href="http://blog.csdn.net/joinandjoin/article/details/9052785">JIRA 6.0.1 (ZIP Archive)最新破解方法，绝对可用</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Crack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Atlassian </tag>
            
            <tag> Java </tag>
            
            <tag> Keygen </tag>
            
            <tag> License </tag>
            
            <tag> Stash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 OpenWrt 环境下使用 DnsPod 来实现动态域名解析</title>
      <link href="/2015/02/25/use-dnspod-as-ddns-on-openwrt/"/>
      <url>/2015/02/25/use-dnspod-as-ddns-on-openwrt/</url>
      
        <content type="html"><![CDATA[<p>原来一直在使用 3322.org 的动态域名解析，而且之前还写过一篇如何<a href="../../../../2014/10/14/dynamic-dns-setup-under-openwrt-with-3322-org">在 OpenWrt 上使用 3322.org 的动态域名</a>的文章。但是一段时间不用后，发现 3322.org 现在的动态域名只支持一个免费域名，而且怎么设置都无法正常工作。上网转悠了一下后，发现 <a href="https://www.dnspod.cn/">DnsPod</a> 有提供 <a href="https://support.dnspod.cn/Support/api">客户端 API</a>，其中的 <a href="https://www.dnspod.cn/docs/index.html">DNSPod用户API文档</a> 有详细的描述如何使用 DDNS 功能。于是乎就自己写了一个基于 DnsPod 客户端 API 的 Shell 脚本。</p><span id="more"></span><p>要使用这个脚本你需要具备以下条件：</p><ul><li>一个顶级域名并且在 DnsPod 进行域名解析</li><li>一个运行 OpenWrt 的路由器</li><li>会使用 SSH 客户端登陆到路由器</li><li>会传输文件到路由器</li><li>基本的 Linux 命令行操作</li></ul><p>首先登陆到你的路由器，安装 <code>wget</code>，因为 OpenWrt 默认自带的基于 busybox 的 wget 无法处理 HTTPS 请求，而 DnsPod 的 API 处于安全考虑，强制使用 HTTPS 连接。下面的例子中<br><code>192.168.1.1</code> 是路由器的 IP 地址，请根据实际情况调整。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">$ ssh root@192.168.1.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BusyBox v1.22.1 (2014-09-20 22:31:09 CEST) built-in shell (ash)</span><br><span class="line">Enter <span class="string">&#x27;help&#x27;</span> <span class="keyword">for</span> a list of built-in commands.</span><br><span class="line"></span><br><span class="line">  _______                     ________        __</span><br><span class="line"> |       |.-----.-----.-----.|  |  |  |.----.|  |_</span><br><span class="line"> |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|</span><br><span class="line"> |_______||   __|_____|__|__||________||__|  |____|</span><br><span class="line">          |__| W I R E L E S S   F R E E D O M</span><br><span class="line"> -----------------------------------------------------</span><br><span class="line"> BARRIER BREAKER (14.07, r42625)</span><br><span class="line"> -----------------------------------------------------</span><br><span class="line">  * 1/2 oz Galliano         Pour all ingredients into</span><br><span class="line">  * 4 oz cold Coffee        an irish coffee mug filled</span><br><span class="line">  * 1 1/2 oz Dark Rum       with crushed ice. Stir.</span><br><span class="line">  * 2 tsp. Creme de Cacao</span><br><span class="line"> -----------------------------------------------------</span><br><span class="line"><span class="comment"># opkg update</span></span><br><span class="line">Downloading http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/nand/packages/base/Packages.gz.</span><br><span class="line">Updated list of available packages <span class="keyword">in</span> /var/opkg-lists/barrier_breaker_base.</span><br><span class="line">Downloading http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/nand/packages/luci/Packages.gz.</span><br><span class="line">Updated list of available packages <span class="keyword">in</span> /var/opkg-lists/barrier_breaker_luci.</span><br><span class="line">Downloading http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/nand/packages/packages/Packages.gz.</span><br><span class="line">Updated list of available packages <span class="keyword">in</span> /var/opkg-lists/barrier_breaker_packages.</span><br><span class="line">Downloading http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/nand/packages/routing/Packages.gz.</span><br><span class="line">Updated list of available packages <span class="keyword">in</span> /var/opkg-lists/barrier_breaker_routing.</span><br><span class="line">Downloading http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/nand/packages/telephony/Packages.gz.</span><br><span class="line">Updated list of available packages <span class="keyword">in</span> /var/opkg-lists/barrier_breaker_telephony.</span><br><span class="line">Downloading http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/nand/packages/management/Packages.gz.</span><br><span class="line">Updated list of available packages <span class="keyword">in</span> /var/opkg-lists/barrier_breaker_management.</span><br><span class="line">Downloading http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/nand/packages/oldpackages/Packages.gz.</span><br><span class="line">Updated list of available packages <span class="keyword">in</span> /var/opkg-lists/barrier_breaker_oldpackages.</span><br><span class="line">Downloading http://openwrt-dist.sourceforge.net/releases/ar71xx/packages/Packages.gz.</span><br><span class="line">Updated list of available packages <span class="keyword">in</span> /var/opkg-lists/openwrt_dist.</span><br><span class="line">Downloading http://openwrt-dist.sourceforge.net/releases/luci/packages/Packages.gz.</span><br><span class="line">Updated list of available packages <span class="keyword">in</span> /var/opkg-lists/openwrt_dist_luci.</span><br><span class="line"><span class="comment"># opkg install wget</span></span><br><span class="line">Installing wget (1.16-1) to root...</span><br><span class="line">Downloading http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/nand/packages/packages/wget_1.16-1_ar71xx.ipk.</span><br><span class="line">Configuring wget.</span><br></pre></td></tr></table></figure><p>接着来获得我已经写好的 DDNS 脚本，你可以在 GitHub Gist 上找到最新的版本：<a href="https://gist.github.com/TommyLau/21089ac976ef5fdfc39c">https://gist.github.com/TommyLau/21089ac976ef5fdfc39c</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget --no-check-certificate &quot;https://gist.github.com/TommyLau/21089ac976ef5fdfc39c/raw/51a45400e54291ab9bbc982b087f80dc57db5982/ddns.sh&quot;</span></span><br><span class="line">--2015-02-25 10:05:07--  https://gist.github.com/TommyLau/21089ac976ef5fdfc39c/raw/51a45400e54291ab9bbc982b087f80dc57db5982/ddns.sh</span><br><span class="line">Resolving gist.github.com... 192.30.252.141</span><br><span class="line">Connecting to gist.github.com|192.30.252.141|:443... connected.</span><br><span class="line">WARNING: cannot verify gist.github.com<span class="string">&#x27;s certificate, issued by &#x27;</span>/C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert SHA2 High Assurance Server CA<span class="string">&#x27;:</span></span><br><span class="line"><span class="string">  Unable to locally verify the issuer&#x27;</span>s authority.</span><br><span class="line">HTTP request sent, awaiting response... 301 Moved Permanently</span><br><span class="line">Location: https://gist.githubusercontent.com/TommyLau/21089ac976ef5fdfc39c/raw/51a45400e54291ab9bbc982b087f80dc57db5982/ddns.sh [following]</span><br><span class="line">--2015-02-25 10:05:23--  https://gist.githubusercontent.com/TommyLau/21089ac976ef5fdfc39c/raw/51a45400e54291ab9bbc982b087f80dc57db5982/ddns.sh</span><br><span class="line">Resolving gist.githubusercontent.com... 103.245.222.133</span><br><span class="line">Connecting to gist.githubusercontent.com|103.245.222.133|:443... connected.</span><br><span class="line">WARNING: cannot verify gist.githubusercontent.com<span class="string">&#x27;s certificate, issued by &#x27;</span>/C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert High Assurance CA-3<span class="string">&#x27;:</span></span><br><span class="line"><span class="string">  Unable to locally verify the issuer&#x27;</span>s authority.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 2842 (2.8K) [text/plain]</span><br><span class="line">Saving to: <span class="string">&#x27;ddns.sh&#x27;</span></span><br><span class="line"></span><br><span class="line">ddns.sh                                            100%[================================================================================================================&gt;]   2.78K  --.-KB/s   <span class="keyword">in</span> 0.09s</span><br><span class="line"></span><br><span class="line">2015-02-25 10:05:25 (31.0 KB/s) - <span class="string">&#x27;ddns.sh&#x27;</span> saved [2842/2842]</span><br></pre></td></tr></table></figure><p>把新下载回来的文件设置为可执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod +x ddns.sh</span></span><br></pre></td></tr></table></figure><p>修改 crontab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br></pre></td></tr></table></figure><p>增加如下的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/5 * * * * /root/ddns.sh your@email.com YourPassword test.com www &gt; /dev/null</span><br></pre></td></tr></table></figure><p>上述的命令表示每 5 分钟检查一次域名更新，如果发现 IP 有变化的话，就自动更新相应的域名（<a href="http://www.test.com)./">www.test.com）。</a></p><ul><li><code>your@email.com</code>，这个请替换成你的 DnsPod 账号</li><li><code>YourPassword</code>，请替换成你自己的密码</li><li><code>test.com</code>，这个替换成你在 DnsPod 解析的域名</li><li><code>www</code>，这个是要解析的子域名</li></ul><p>PS: 如果你无法访问 GitHub Gist 的话，下面是脚本的内容，你需要自行复制到路由器里。</p><figure class="highlight bash"><figcaption><span>ddns.sh</span><a href="https://gist.githubusercontent.com/TommyLau/21089ac976ef5fdfc39c/raw/51a45400e54291ab9bbc982b087f80dc57db5982/ddns.sh">link</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Tommy DnsPod DDNS Client v0.1.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Author: Tommy Lau &lt;tommy@gen-new.com&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Created: 2015-02-23 08:52:00 UTC</span></span><br><span class="line"><span class="comment"># Updated: 2015-02-23 12:15:46 UTC</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">########################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use &#x27;json&#x27;, other option is &#x27;xml&#x27;</span></span><br><span class="line">format=<span class="string">&#x27;json&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use English for default, &#x27;cn&#x27; for Chinese</span></span><br><span class="line">language=<span class="string">&#x27;en&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># API URL</span></span><br><span class="line">api_url=<span class="string">&#x27;https://dnsapi.cn/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get current IP</span></span><br><span class="line"><span class="function"><span class="title">get_ip</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> inter=<span class="string">&quot;http://members.3322.org/dyndns/getip&quot;</span></span><br><span class="line">    wget --quiet --no-check-certificate --output-document=- <span class="variable">$inter</span></span><br><span class="line">    <span class="comment">#curl --silent $inter</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send the API request to DnsPod API</span></span><br><span class="line"><span class="comment"># @param1: The command to execute, for example, Info.Version and etc.</span></span><br><span class="line"><span class="comment"># @param2: The parameters to send to the API, for example, domain=&#x27;domain.tld&#x27;</span></span><br><span class="line"><span class="function"><span class="title">api_post</span></span>() &#123;</span><br><span class="line">    <span class="comment"># Client agent</span></span><br><span class="line">    <span class="built_in">local</span> agent=<span class="string">&quot;Tommy DnsPod Client/0.1.0 (tommy@gen-new.com)&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Stop if no API command is given</span></span><br><span class="line">    <span class="built_in">local</span> inter=<span class="string">&quot;$api_url<span class="variable">$&#123;1:?&#x27;Info.Version&#x27;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Default post content for every request</span></span><br><span class="line">    <span class="built_in">local</span> param=<span class="string">&quot;login_email=<span class="variable">$email</span>&amp;login_password=<span class="variable">$password</span>&amp;format=<span class="variable">$format</span>&amp;lang=<span class="variable">$language</span>&amp;<span class="variable">$&#123;2&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    wget --quiet --no-check-certificate --output-document=- --post-data <span class="string">&quot;<span class="variable">$param</span>&quot;</span> --user-agent=<span class="string">&quot;<span class="variable">$agent</span>&quot;</span> <span class="variable">$inter</span></span><br><span class="line">    <span class="comment">#curl --silent --request POST --data &quot;$param&quot; --user-agent &quot;$agent&quot; $inter</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Lookup current ip</span></span><br><span class="line"><span class="comment"># @param1: The domain to nslookup</span></span><br><span class="line"><span class="function"><span class="title">dns_lookup</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> server=<span class="string">&quot;114.114.114.114&quot;</span></span><br><span class="line">    nslookup <span class="variable">$&#123;1&#125;</span> <span class="variable">$server</span> | <span class="built_in">tr</span> -d <span class="string">&#x27;\n[:blank:]&#x27;</span> | sed <span class="string">&#x27;s/.\+1 \([0-9\.]\+\).*/\1/&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Update the DNS record</span></span><br><span class="line"><span class="comment"># @param1: The domain name to update, for example, &#x27;domain.tld&#x27;</span></span><br><span class="line"><span class="comment"># @param2: The subdomain, for example, &#x27;www&#x27;</span></span><br><span class="line"><span class="function"><span class="title">dns_update</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> current_ip=$(get_ip)</span><br><span class="line">    <span class="built_in">local</span> dns_ip=$(dns_lookup <span class="string">&quot;<span class="variable">$&#123;2&#125;</span>.<span class="variable">$&#123;1&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;current_ip&#125;</span> : <span class="variable">$&#123;dns_ip&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$current_ip</span>&quot;</span> == <span class="string">&quot;<span class="variable">$dns_ip</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;No need to update DDNS.&quot;</span></span><br><span class="line">        <span class="built_in">return</span> 0</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get domain id</span></span><br><span class="line">    <span class="built_in">local</span> domain_id=$(api_post <span class="string">&quot;Domain.Info&quot;</span> <span class="string">&quot;domain=<span class="variable">$&#123;1&#125;</span>&quot;</span>)</span><br><span class="line">    domain_id=$(<span class="built_in">echo</span> <span class="variable">$domain_id</span> | sed <span class="string">&#x27;s/.\+&#123;&quot;id&quot;:&quot;\([0-9]\+\)&quot;.\+/\1/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get record id of the subdomain</span></span><br><span class="line">    <span class="built_in">local</span> record_id=$(api_post <span class="string">&quot;Record.List&quot;</span> <span class="string">&quot;domain_id=<span class="variable">$&#123;domain_id&#125;</span>&amp;sub_domain=<span class="variable">$&#123;2&#125;</span>&quot;</span>)</span><br><span class="line">    record_id=$(<span class="built_in">echo</span> <span class="variable">$record_id</span> | sed <span class="string">&#x27;s/.\+\[&#123;&quot;id&quot;:&quot;\([0-9]\+\)&quot;.\+/\1/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Update the record</span></span><br><span class="line">    <span class="built_in">local</span> result=$(api_post <span class="string">&quot;Record.Ddns&quot;</span> <span class="string">&quot;domain_id=<span class="variable">$&#123;domain_id&#125;</span>&amp;record_id=<span class="variable">$&#123;record_id&#125;</span>&amp;record_line=默认&amp;sub_domain=<span class="variable">$&#123;2&#125;</span>&quot;</span>)</span><br><span class="line">    result_code=$(<span class="built_in">echo</span> <span class="variable">$result</span> | sed <span class="string">&#x27;s/.\+&#123;&quot;code&quot;:&quot;\([0-9]\+\)&quot;.\+/\1/&#x27;</span>)</span><br><span class="line">    result_message=$(<span class="built_in">echo</span> <span class="variable">$result</span> | sed <span class="string">&#x27;s/.\+,&quot;message&quot;:&quot;\([^&quot;]\+\)&quot;.\+/\1/&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Output</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Code: <span class="variable">$result_code</span>, Message: <span class="variable">$result_message</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Email for login</span></span><br><span class="line">email=<span class="string">&quot;<span class="variable">$&#123;1:?&#x27;Please input e-mail&#x27;&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Password for the account</span></span><br><span class="line">password=<span class="variable">$&#123;2:?&#x27;Please input your password&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Domain</span></span><br><span class="line">domain=<span class="variable">$&#123;3:?&#x27;Please input domain&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sub domain</span></span><br><span class="line">subdomain=<span class="variable">$&#123;4:?&#x27;Please input sub domain&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Update the DDNS</span></span><br><span class="line">dns_update <span class="string">&quot;<span class="variable">$domain</span>&quot;</span> <span class="string">&quot;<span class="variable">$subdomain</span>&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDNS </tag>
            
            <tag> OpenWrt </tag>
            
            <tag> Shell </tag>
            
            <tag> DnsPod </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Mac OS X 系统下为 Brew 开启 Zsh 补全功能</title>
      <link href="/2015/02/24/enable-zsh-completion-of-brew-under-mac-os-x/"/>
      <url>/2015/02/24/enable-zsh-completion-of-brew-under-mac-os-x/</url>
      
        <content type="html"><![CDATA[<p><a href="http://brew.sh/">Brew</a> 是一个很好用的 Mac OS X 下的一个包管理软件。里面包含了很多常用的 Linux 开源库和软件包，比如 wget 等。</p><p>而 <a href="http://www.zsh.org/">Zsh</a> 又是一个很爽的 Shell，使用 <a href="http://ohmyz.sh/">Oh My Zsh</a> 的话，就更爽了。</p><span id="more"></span><p>下面是我在 <a href="http://iterm2.com/">iTerm</a> 终端中使用 <a href="http://ethanschoonover.com/solarized">Solarized</a> 主题，同时搭配 Oh-My-Zsh 和 <a href="https://gist.github.com/agnoster/3712874">Agnoster</a> 主题的效果。</p><img src="/2015/02/24/enable-zsh-completion-of-brew-under-mac-os-x/oh_my_zsh_with_solarized.png" class=""><p>回归正题，Brew 可以安装很多很好用的工具，然而直接安装好的软件，虽然自带了了 zsh completion，却因为其搜索路径不在 Oh-My-Zsh 的默认路径中而无法使用。其实我们只需要把 Brew 的 zsh completion 路径告诉 zsh 便可。</p><p>比如我们先安装一个 <code>youtube-dl</code> 的 Python 小软件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ brew install youtube-dl</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/youtube-dl-2015.02.23.1.yosemite.bottle.tar.gz</span><br><span class="line">==&gt; Pouring youtube-dl-2015.02.23.1.yosemite.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">To use post-processing options, `brew install ffmpeg` or `brew install libav`.</span><br><span class="line"></span><br><span class="line">Bash completion has been installed to:</span><br><span class="line">  /usr/local/etc/bash_completion.d</span><br><span class="line"></span><br><span class="line">zsh completion has been installed to:</span><br><span class="line">  /usr/local/share/zsh/site-functions</span><br><span class="line">==&gt; Summary</span><br><span class="line">/usr/local/Cellar/youtube-dl/2015.02.23.1: 8 files, 968K</span><br></pre></td></tr></table></figure><p>可以看到 zsh completion 被安装到了：<code>/usr/local/share/zsh/site-functions</code>，我们只需要把这个路径添加到我们 home 目录的 <code>.zshrc</code> 文件中便可。修改 <code>~/.zhsrc</code> 文件，并在文件末尾添加如下内容：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zsh completions for brew</span></span><br><span class="line">fpath=(<span class="regexp">/usr/</span>local<span class="regexp">/share/</span>zsh/site-functions <span class="variable">$fpath</span>)</span><br><span class="line">compinit</span><br></pre></td></tr></table></figure><p>然后重启终端，或者 <code>source ~/.zshrc</code>，我们再尝试输入一下 <code>youtube-dl</code>，然后按一按 Tab 键。</p><img src="/2015/02/24/enable-zsh-completion-of-brew-under-mac-os-x/youtube_dl_completion.png" class=""><p>Hurray~~~ 搞掂，收工。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> OS X </tag>
            
            <tag> Brew </tag>
            
            <tag> Completion </tag>
            
            <tag> Oh My Zsh </tag>
            
            <tag> Shell </tag>
            
            <tag> Zsh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用 Docker 来运行和调试 PHP 网站（一）</title>
      <link href="/2015/02/13/run-and-debug-php-website-with-docker-part-1/"/>
      <url>/2015/02/13/run-and-debug-php-website-with-docker-part-1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="为什么要写这篇博文"><a href="#为什么要写这篇博文" class="headerlink" title="为什么要写这篇博文"></a>为什么要写这篇博文</h3><p>因为，作为一个<code>伪运维工程师</code>，我已经被架设各种 Web 服务器环境折磨得体无完肤了。直到我发现了 <a href="https://www.docker.com/">Docker</a> 这货，才有一种相见恨晚的赶脚！懂我的同学你们懂的，如果你不懂的话，你可以直接关闭这个页面了。</p><p>那么用 Docker 的好处是什么呢？最重要的，就是可以快速搭建统一的 PHP 开发和生产环境。你的开发环境就是你的生产环境，本地测试通过，代表着部署到服务器也可以完全正常运行。而且还可以部署多个测试环境，让一套代码同时跑在 PHP 5.2, 5.3, 5.4, 5.5, 5.6 系统上测试兼容性，而不需要把本地开发环境弄得一塌糊涂！</p><span id="more"></span><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>要想体验 Docker 的好处以及更好的理解本文，你必须要做好以下准备工作：</p><ul><li>了解 Docker 的基本原理和操作，起码知道怎么拉镜像和创建实例吧？</li><li>基本的 Linux 命令行操作能力</li><li>熟悉 PHP 开发和相关的知识</li></ul><h2 id="基本环境架设"><a href="#基本环境架设" class="headerlink" title="基本环境架设"></a>基本环境架设</h2><h3 id="运行-MySQL"><a href="#运行-MySQL" class="headerlink" title="运行 MySQL"></a>运行 MySQL</h3><p>因为要经常升级 MySQL 到最新版本，所以，我们不想每升级一次数据库，就重新导出、导入一次数据，因为这样感觉实在是太土了，不够高大上。为了达到这个目的，我们在创建 MySQL 实例之前需要先创建一个 Volume 用于保存 MySQL 的数据。我个人喜欢用 <a href="https://registry.hub.docker.com/_/busybox/">busybox</a> 作为 base image，当然，你也可以根据自己的喜好来做。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=mysql_data -v /var/lib/mysql -d busybox <span class="built_in">echo</span> MySQL Data</span><br></pre></td></tr></table></figure><p>这个命令，会创建一个包含 <code>/var/lib/mysql</code> 的 volume，以便我们后续挂载到 MySQL 实例上。运行 <code>docker ps -a</code> 可以看到我们创建的 <code>mysql_data</code> 实例。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES</span><br><span class="line">ee138116e544        busybox:latest      <span class="string">&quot;echo MySQL Data&quot;</span>   6 seconds ago       Exited (0) 5 seconds ago                       mysql_data</span><br></pre></td></tr></table></figure><p>接下来创建 MySQL 实例，这里我使用了自己制作的 MySQL 镜像 <a href="https://registry.hub.docker.com/u/tommylau/mysql/">tommylau&#x2F;mysql</a>，你可以根据自己的使用情况进行调整，更多的信息可以参考 Docker Hub 上的说明：<a href="https://registry.hub.docker.com/u/tommylau/mysql/">https://registry.hub.docker.com/u/tommylau/mysql/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=mysql_server --volumes-from mysql_data -e MYSQL_ROOT_PASSWORD=Passw0rd -d tommylau/mysql</span><br></pre></td></tr></table></figure><p><code>--volumes-from</code> 命令表示挂载名为 <code>mysql_data</code> 的 volume 到即将创建的 <code>mysql_server</code> 实例，也就是说，在 <code>mysql_server</code> 实例中对 <code>/var/lib/mysql</code> 目录进行读写操作时，实际的文件是存储在 <code>mysql_data</code> 实例中的。是不是有点儿难理解？没关系，你只要知道 MySQL 的数据都保存在 <code>mysql_data</code> 实例中就可以了。</p><p><code>-e MYSQL_ROOT_PASSWORD</code> 参数用于设置环境变量，实例初始化的时候会用这个环境变量来设置 <code>root</code> 用户的密码，我们这里使用的密码为 <code>Passw0rd</code>。如果是开发或者测试环境的话，你也可以使用 <code>-e MYSQL_ALLOW_EMPTY_PASSWORD=1</code> 参数，这样的话 <code>root</code> 密码为空。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=mysql_server --volumes-from mysql_data -e MYSQL_ALLOW_EMPTY_PASSWORD=1 -d tommylau/mysql</span><br></pre></td></tr></table></figure><p>查看一下我们刚刚创建的 MySQL 实例（<code>docker ps -a</code>）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID        IMAGE                   COMMAND                CREATED             STATUS                      PORTS               NAMES</span><br><span class="line">f0253a67d154        tommylau/mysql:latest   <span class="string">&quot;/entrypoint.sh mysq   9 seconds ago       Up 8 seconds                3306/tcp            mysql_server</span></span><br><span class="line"><span class="string">ee138116e544        busybox:latest          &quot;</span><span class="built_in">echo</span> MySQL Data<span class="string">&quot;      33 seconds ago      Exited (0) 33 seconds ago                       mysql_data</span></span><br></pre></td></tr></table></figure><p>嗯，不错，没有报任何错误，而且也是正在运行的状态。基本上 MySQL 的配置到这里就结束了。</p><h3 id="创建-wwwroot-存储"><a href="#创建-wwwroot-存储" class="headerlink" title="创建 wwwroot 存储"></a>创建 wwwroot 存储</h3><p>其实这步是可选的，如果你只运行很简单的站点的话，直接使用 Docker 自带的 <code>-v</code> 将本地路径映射到实例里面就可以了，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -v /path/to/web:/var/www/html -p 80:80 -d tommylau/apache</span><br></pre></td></tr></table></figure><p>这样你访问 <a href="http://localhost/">http://localhost</a> 的时候，访问的就是你本地磁盘的 <code>/path/to/web</code>。但是本地保存的文件位置可能会有变化，为了以后更好地维护和管理，我们新建一个 <code>wwwroot</code> 的实例，用于映射实例里面的 <code>/var/www/html</code> 路径，因为 Nginx 和 PHP 需要同时访问到这些文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=wwwroot -v /Users/tommy/www:/var/www/html -d busybox <span class="built_in">echo</span> wwwroot</span><br></pre></td></tr></table></figure><p>通过上面的命令我们就把我们的本地路径 <code>/Users/tommy/www</code> 映射到了 <code>/var/www/html</code>。**注意：**请用你本机的实际地址替换相应的路径，不要照抄例子。至此，我们就完成了 <code>wwwroot</code> 的准备工作。可以再次运行 <code>docker ps -a</code> 检查一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CONTAINER ID        IMAGE                   COMMAND                CREATED             STATUS                     PORTS               NAMES</span><br><span class="line">98b7d5a39152        busybox:latest          <span class="string">&quot;echo wwwroot&quot;</span>         3 minutes ago       Exited (0) 3 minutes ago                       wwwroot</span><br><span class="line">f0253a67d154        tommylau/mysql:latest   <span class="string">&quot;/entrypoint.sh mysq   5 minutes ago       Up 5 minutes               3306/tcp            mysql_server</span></span><br><span class="line"><span class="string">ee138116e544        busybox:latest          &quot;</span><span class="built_in">echo</span> MySQL Data<span class="string">&quot;      5 minutes ago       Exited (0) 5 minutes ago                       mysql_data</span></span><br></pre></td></tr></table></figure><h3 id="运行-PHP-FPM"><a href="#运行-PHP-FPM" class="headerlink" title="运行 PHP-FPM"></a>运行 PHP-FPM</h3><p>好像讲了这么久，终于到正题了。现在就要用到我们之前所创建的 <code>mysql_server</code> 实例和 <code>wwwroot</code> 存储了。不管三七二十一，先来个命令嗨一下再说。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=php-fpm --volumes-from wwwroot --<span class="built_in">link</span> mysql_server:mysql -d tommylau/php</span><br></pre></td></tr></table></figure><p>与 <code>mysql_server</code> 类似，这里再次使用了 <code>--volumes-from</code> 参数，这样在我们新建的 <code>php-fpm</code> 实例里面访问 <code>/var/www/html</code> 就会引用 <code>wwwroot</code> 实例，又因为 <code>wwwroot</code> 实例映射到了 <code>/Users/tommy/www</code>，所以实际访问地址是本机的 <code>/Users/tommy/www</code>。如果你还是无法理解的话，请再重温一下上述两个小节。</p><p><code>--link</code> 参数表示连接另外一个实例，这里我们连接了之前创建的 <code>mysql_server</code> 实例，并将它命名为 <code>mysql</code>。注意，这里所谓的命名，你可以理解为一个主机名或者别名，在我们新创建的这个 <code>php-fpm</code> 实例中，如果你打开 <code>/etc/hosts</code> 会发现里面有一条域名记录，指向 <code>mysql_server</code> 实例。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE                   COMMAND                CREATED              STATUS              PORTS               NAMES</span><br><span class="line">775b56aa5f5e        tommylau/php:latest     <span class="string">&quot;php-fpm&quot;</span>              About a minute ago   Up About a minute   9000/tcp            php-fpm</span><br><span class="line">f0253a67d154        tommylau/mysql:latest   <span class="string">&quot;/entrypoint.sh mysq   16 minutes ago       Up 16 minutes       3306/tcp            mysql_server</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$ docker exec -ti php-fpm cat /etc/hosts</span></span><br><span class="line"><span class="string">172.17.0.5775b56aa5f5e</span></span><br><span class="line"><span class="string">127.0.0.1localhost</span></span><br><span class="line"><span class="string">::1localhost ip6-localhost ip6-loopback</span></span><br><span class="line"><span class="string">fe00::0ip6-localnet</span></span><br><span class="line"><span class="string">ff00::0ip6-mcastprefix</span></span><br><span class="line"><span class="string">ff02::1ip6-allnodes</span></span><br><span class="line"><span class="string">ff02::2ip6-allrouters</span></span><br><span class="line"><span class="string">172.17.0.3mysql</span></span><br></pre></td></tr></table></figure><p>这次，我使用了 <code>docker ps</code> 命令，没有 <code>-a</code>，表示，只列出正在运行的实例。我们创建的 <code>mysql_data</code> 和 <code>wwwroot</code> 都是完全不需要占用 CPU 的，它们只是负责存储而已。第二条命令表示在 <code>php-fpm</code> 实例中执行 <code>cat /etc/hosts</code>。<code>-ti</code> 是 <code>-t</code>, <code>-i</code> 的合体，分别表示伪 TTY 和命令行交互，想深入了解的请参考 Docker 官方文档，或运行 <code>docker run --help</code>。</p><p>我们可以看到在 <code>hosts</code> 文件最后有一条记录 <code>172.17.0.3mysql</code>，这个就是 <code>mysql_server</code> 实例在虚拟环境中的 IP 地址，我们在 <code>php-fpm</code> 实例中，就是通过 <code>mysql</code> 这个名字与 <code>mysql_server</code> 实例进行通信的，我们可以 ping 一下看看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -ti php-fpm ping -c 3 mysql</span><br><span class="line">PING mysql (172.17.0.3): 56 data bytes</span><br><span class="line">64 bytes from 172.17.0.3: icmp_seq=0 ttl=64 time=0.066 ms</span><br><span class="line">64 bytes from 172.17.0.3: icmp_seq=1 ttl=64 time=0.093 ms</span><br><span class="line">64 bytes from 172.17.0.3: icmp_seq=2 ttl=64 time=0.142 ms</span><br><span class="line">--- mysql ping statistics ---</span><br><span class="line">3 packets transmitted, 3 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max/stddev = 0.066/0.100/0.142/0.031 ms</span><br></pre></td></tr></table></figure><p>嗯，看起来一切正常，PHP-FPM 的配置就告一段落了。如果你已经看到想睡觉了，那么休息一会儿，喝杯咖啡什么的，回来再继续。</p><h3 id="运行-Nginx"><a href="#运行-Nginx" class="headerlink" title="运行 Nginx"></a>运行 Nginx</h3><p>好了，我们的 Web 服务终于要跑起来了，把最后一个 Nginx 跑起来就算大功告成了。</p><p>运行 Nginx 可以使用 <code>Dockerfile</code> 生成一个新的镜像，也可以使用 <code>-v</code> 挂在一个配置文件映射到实例中。</p><h4 id="Nginx-配置文件"><a href="#Nginx-配置文件" class="headerlink" title="Nginx 配置文件"></a>Nginx 配置文件</h4><p>在介绍两种方式之前，我们先准备好 Nginx 的配置文件 <code>default.conf</code>。随便找一个你自己喜欢的目录，并创建该文件，但是请记下该文件的路径，比如 <code>/Users/tommy/default.conf</code>。下面是参考的配置，你也可以根据自己的喜好进行调整。</p><figure class="highlight nginx"><figcaption><span>default.conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">root</span> /var/www/html;</span><br><span class="line"><span class="attribute">index</span> index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line"><span class="attribute">server_name</span> localhost;</span><br><span class="line"></span><br><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line"><span class="comment"># First attempt to serve request as file, then</span></span><br><span class="line"><span class="comment"># as directory, then fall back to displaying a 404.</span></span><br><span class="line"><span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ =<span class="number">404</span>;</span><br><span class="line"><span class="comment"># Uncomment to enable naxsi on this location</span></span><br><span class="line"><span class="comment"># include /etc/nginx/naxsi.rules</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line"><span class="attribute">fastcgi_split_path_info</span><span class="regexp"> ^(.+\.php)(/.+)$</span>;</span><br><span class="line"><span class="attribute">fastcgi_pass</span> php:<span class="number">9000</span>;</span><br><span class="line"><span class="attribute">fastcgi_index</span> index.php;</span><br><span class="line"><span class="attribute">include</span> fastcgi_params;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有几点需要做适当调整的：</p><ul><li><code>root</code> 需要根据实际情况调整，如果你都是按照这个教程操作的话，可以不用修改</li><li><code>server_name</code> 需要根据实际情况进行调整，如果只运行一个默认网站的话，可以不用修改</li><li><code>fastcgi_pass</code> 后面的 <code>php</code> 是要连接的实例名称，稍后我们在命令行中会用到，先配置好</li></ul><h4 id="创建-Web-页面"><a href="#创建-Web-页面" class="headerlink" title="创建 Web 页面"></a>创建 Web 页面</h4><p>上面我们曾经提到过，我的本地路径是 <code>/Users/tommy/www</code>，所以我在这个目录创建2个新文件，分别是 <code>index.html</code> 和 <code>phpinfo.php</code>。用你喜欢的工具在你本地的路径创建这2个文件就好，或者是其他你想要写的内容，你可以任意发挥你的想象力。</p><figure class="highlight html"><figcaption><span>index.html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">Hello world!</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>phpinfo.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br></pre></td></tr></table></figure><h4 id="Dockerfile-方式运行-Nginx"><a href="#Dockerfile-方式运行-Nginx" class="headerlink" title="Dockerfile 方式运行 Nginx"></a>Dockerfile 方式运行 Nginx</h4><p>好消息是我们马上就可以看到我们的劳动成果了，坏消息是我们又要折腾 <code>Dockerfile</code> 了。</p><p>在刚才创建 <code>default.conf</code> 的目录内（<code>/Users/tommy</code>），创建一个文件名为 <code>Dockerfile</code> 的文件（Mac 和 Linux 下请注意首字母的大写），其内容如下：</p><figure class="highlight dockerfile"><figcaption><span>Dockerfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> tommylau/nginx</span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> default.conf /etc/nginx/conf.d/</span></span><br></pre></td></tr></table></figure><p>打开终端或者命令行并进入到 <code>Dockerfile</code> 所在目录，运行 Docker build 命令来生成一个新的镜像。**注意：**本命令必须在 <code>Dockerfile</code> 和 <code>default.conf</code> 所在目录执行，否则 Docker 会提示找不到 <code>Dockerfile</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t <span class="built_in">local</span>/nginx .</span><br><span class="line">Sending build context to Docker daemon 3.072 kB</span><br><span class="line">Sending build context to Docker daemon</span><br><span class="line">Step 0 : FROM tommylau/nginx</span><br><span class="line"> ---&gt; ee8df13c0397</span><br><span class="line">Step 1 : COPY default.conf /etc/nginx/conf.d/</span><br><span class="line"> ---&gt; 05e151de7cef</span><br><span class="line">Removing intermediate container 41eefaf73780</span><br><span class="line">Successfully built 05e151de7cef</span><br><span class="line"></span><br><span class="line">$ docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class="line"><span class="built_in">local</span>/nginx         latest              05e151de7cef        27 seconds ago      92.66 MB</span><br></pre></td></tr></table></figure><p>这个命令会生成一个新的名为 <code>local/nginx</code> 的镜像，当然你也可以按照你自己的喜好给它重新起个名字。不过你必须记住这个名字，因为稍后我们还要召唤它来提供 Web 服务。最后，整合我们之前启动的 PHP-FPM 实例 <code>php-fpm</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=nginx --volumes-from wwwroot --<span class="built_in">link</span> php-fpm:php -p 80:80 -d <span class="built_in">local</span>/nginx</span><br></pre></td></tr></table></figure><p>同样的，我们需要加载 <code>wwwroot</code> 实例，以便实例可以正确的访问 <code>/var/www/html</code> 目录。这里将实例 <code>php-fpm</code> 映射成别名 <code>php</code>，这里必须要与我们之前修改的 Nginx 配置文件 <code>default.conf</code> 中的名字相匹配（<code>fastcgi_pass</code> 后面的服务器名）。<code>-p 80:80</code> 表示将实例内的 80 端口暴露给 Host 主机。</p><p>这个时候，我们已经可以通过 <a href="http://localhost/">http://localhost</a> 来访问 Nginx 实例了。你会看到一个大大的 <code>Hello world</code>，当然我们也可以访问 <a href="http://localhost/phpinfo.php">http://localhost/phpinfo.php</a> 来查看 PHP 版本信息。</p><p>**注意：**使用 boot2docker 的用户，需要将 <code>localhost</code> 修改为 Guest 的 IP 地址。如果你的 VirtualBox 只有 boot2docker 一个虚拟机的话，则 boot2docker 默认的 IP 地址是：192.168.59.103。所以，你可以尝试一下访问：<a href="http://192.168.59.103/">http://192.168.59.103</a> 。如果不行的话，你可以运行 <code>boot2docker ip</code> 来获得 guest 的 IP 地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ boot2docker ip</span><br><span class="line">192.168.59.103</span><br></pre></td></tr></table></figure><h4 id="挂载方式运行-Nginx"><a href="#挂载方式运行-Nginx" class="headerlink" title="挂载方式运行 Nginx"></a>挂载方式运行 Nginx</h4><p>挂载配置文件方式启动 Nginx 跟使用 <code>Dockerfile</code> 方式类似，不过更简单一点，这种方式比较适合配置简单的情况。</p><p>记得我们之前保存 <code>default.conf</code> 的路径么？我的是 <code>/Users/tommy/default.conf</code>。实现同上述同样的启动效果，我们可以使用下面的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=nginx --volumes-from wwwroot --<span class="built_in">link</span> php-fpm:php -v /Users/tommy/default.conf:/etc/nginx/conf.d/default.conf -p 80:80 -d tommylau/nginx</span><br></pre></td></tr></table></figure><p>如果运行上述命令，提示如下错误，我们可以使用 <code>docker rm -f nginx</code> 命令来删除旧的实例，再重新执行该命令便可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FATA[0000] Error response from daemon: Conflict. The name <span class="string">&quot;nginx&quot;</span> is already <span class="keyword">in</span> use by container 6f021cff90ef. You have to delete (or rename) that container to be able to reuse that name.</span><br></pre></td></tr></table></figure><p>打开网页检查一下，是不是和使用 <code>Dockerfile</code> 的方式一样？：）</p><p>还有一种情况是，我们有多个配置文件，如果一一指定的话会变得相当的痛苦，这个时候我们就会使用目录映射的方式来替代文件映射。我们先来创建一个包含配置的文件夹 <code>conf.d</code> 并把 <code>default.conf</code> 移动到该目录中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /Users/tommy</span><br><span class="line">$ <span class="built_in">mkdir</span> conf.d</span><br><span class="line">$ <span class="built_in">mv</span> default.conf conf.d</span><br></pre></td></tr></table></figure><p>然后使用如下命令，就可以把整个配置文件的目录映射到实例中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name=nginx --volumes-from wwwroot --<span class="built_in">link</span> php-fpm:php -v /Users/tommy/conf.d:/etc/nginx/conf.d -p 80:80 -d tommylau/nginx</span><br></pre></td></tr></table></figure><p>再打开浏览器检查一下，依然可以正常运行。</p><h4 id="测试-MySQL-连接"><a href="#测试-MySQL-连接" class="headerlink" title="测试 MySQL 连接"></a>测试 MySQL 连接</h4><p>在我们的 <code>wwwroot</code> 目录（<code>/Users/tommy/www</code>）中新建一个 <code>mysql.php</code> 的文件：</p><figure class="highlight php"><figcaption><span>mysql.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$connect</span> = <span class="title function_ invoke__">mysql_connect</span>(<span class="string">&quot;mysql&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;Passw0rd&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Unable to connect to MySQL.&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">mysql_select_db</span>(<span class="string">&quot;mysql&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;Could not open the database.&quot;</span>);</span><br><span class="line"><span class="variable">$showtablequery</span> = <span class="string">&quot;SHOW TABLES FROM mysql;&quot;</span>;</span><br><span class="line"><span class="variable">$query_result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$showtablequery</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$row</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$query_result</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$row</span>[<span class="number">0</span>] . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问：<a href="http://localhost/mysql.php">http://localhost/mysql.php</a> ，应该会打印出类似如下的 <code>mysql</code> 数据库表名列表：</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">columns_priv</span><br><span class="line">db</span><br><span class="line">event</span><br><span class="line">func</span><br><span class="line">general_log</span><br><span class="line">help_category</span><br><span class="line">help_keyword</span><br><span class="line">help_relation</span><br><span class="line">help_topic</span><br><span class="line">innodb_index_stats</span><br><span class="line">innodb_table_stats</span><br><span class="line">ndb_binlog_index</span><br><span class="line">plugin</span><br><span class="line"><span class="keyword">proc</span><span class="title"></span></span><br><span class="line"><span class="title">procs_priv</span></span><br><span class="line">proxies_priv<span class="title"></span></span><br><span class="line"><span class="title">servers</span></span><br><span class="line">slave_master_info<span class="title"></span></span><br><span class="line"><span class="title">slave_relay_log_info</span></span><br><span class="line">slave_worker_info<span class="title"></span></span><br><span class="line"><span class="title">slow_log</span></span><br><span class="line">tables_priv<span class="title"></span></span><br><span class="line"><span class="title">time_zone</span></span><br><span class="line">time_zone_leap_second<span class="title"></span></span><br><span class="line"><span class="title">time_zone_name</span></span><br><span class="line">time_zone_transition<span class="title"></span></span><br><span class="line"><span class="title">time_zone_transition_type</span></span><br><span class="line">user</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总的来说，架设的步骤如下</p><ol><li>架设 MySQL 数据库，因为 PHP 需要连接到 MySQL</li><li>架设 PHP 服务器，同时连接到 MySQL Server</li><li>架设 Nginx 服务器，连接 PHP 服务器</li></ol><p>因为 PHP 访问数据库，所以 Nginx 是不需要连接 MySQL 的，Nginx 只需要做代理服务器，当有 PHP 请求的时候转发给 PHP 服务器处理就好了。</p><p>这里的架设范例都是基于单个主机进行的，实例之间会自动存在于一个虚拟的 <code>docker0</code> 的交换机内。所以实例之间就好像在同一个局域网一样，如果你要跨主机进行数据的访问，那么你可能需要暴露部分服务的端口。比如 <code>MySQL</code> 的 <code>3306</code> 端口，<code>PHP</code> 的 <code>9000</code> 端口等。更多的网络设置可以参考 Docker 官方的 <a href="https://docs.docker.com/articles/networking/">Network Configuration</a>。</p><p>至此，PHP 服务器的架设就告一段落了，稍后会更新如何搭建基于 Apache 和 Xdebug 的 PHP 调试环境。</p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Docker </tag>
            
            <tag> Internet </tag>
            
            <tag> MySQL </tag>
            
            <tag> PHP </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过 Docker 部署 OpenConnect 服务器</title>
      <link href="/2015/02/12/deploy-openconnect-server-with-docker/"/>
      <url>/2015/02/12/deploy-openconnect-server-with-docker/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-OpenConnect-Server"><a href="#什么是-OpenConnect-Server" class="headerlink" title="什么是 OpenConnect Server"></a>什么是 OpenConnect Server</h2><p><a href="http://www.infradead.org/ocserv/">OpenConnect server (ocserv)</a> 是一个基于 SSL 的 VPN 服务器。它是基于 OpenConnect SSL VPN 协议实现的，同时（实验性质）兼容使用 <a href="http://www.cisco.com/c/en/us/support/security/anyconnect-vpn-client/tsd-products-support-series-home.html">Cisco AnyConnect SSL VPN</a> 协议的客户端。</p><span id="more"></span><h2 id="如何部署服务器"><a href="#如何部署服务器" class="headerlink" title="如何部署服务器"></a>如何部署服务器</h2><p>考虑到架设 OpenConnect Server 对于大多数用户来说比较困难，所以我制作了一个 Docker 镜像。以下所有教程都是基于该 Docker 镜像的。如果你不知道什么是 Docker，请先访问 Docker 的网站了解相关信息。如果你对镜像文件不放心，可以在以下地址找到该镜像的原始 Dockerfile 和相关信息：<a href="https://registry.hub.docker.com/u/tommylau/ocserv/">Docker Hub</a>，<a href="https://github.com/TommyLau/docker-ocserv">GitHub</a></p><h3 id="开始前的准备工作"><a href="#开始前的准备工作" class="headerlink" title="开始前的准备工作"></a>开始前的准备工作</h3><ul><li>知道并了解 <a href="https://www.docker.com/">Docker</a> 的运行原理和机制</li><li>掌握基本的服务器架设能力，熟悉 Linux 命令，并且在服务器上成功部署了 Docker</li><li>如果你使用的是 VPS 的话，请联系 ISP 确认是否支持 TUN 设备</li></ul><h3 id="OpenConnect-Server-的安装"><a href="#OpenConnect-Server-的安装" class="headerlink" title="OpenConnect Server 的安装"></a>OpenConnect Server 的安装</h3><p>一条如此简单的命令，就可以把 OpenConnect Server (ocserv) 安装到你的服务器了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull tommylau/ocserv</span><br></pre></td></tr></table></figure><p>使用下面的命令，就可以马上运行 ocserv 来体验了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name ocserv --privileged -p 443:443 -p 443:443/udp -d tommylau/ocserv</span><br></pre></td></tr></table></figure><p>上述命令会创建并运行一个新的 container，同时会添加一个用户名和密码均为 <code>test</code> 的用户。如果你只需要临时使用一下，不关心安全问题的话，那么看到这里就可以结束了。如果你需要更多的设置，请继续阅读。</p><h2 id="用户操作"><a href="#用户操作" class="headerlink" title="用户操作"></a>用户操作</h2><p>所有的用户操作必须在实例运行的时候才可以进行。如果你的 Docker 实例名不是 <code>ocserv</code> 的话，请根据实际情况自行调整。</p><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><p>假如说，你想创建一个名为 <code>tommy</code> 的用户，使用如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -ti ocserv ocpasswd -c /etc/ocserv/ocpasswd tommy</span><br><span class="line">Enter password:</span><br><span class="line">Re-enter password:</span><br></pre></td></tr></table></figure><p>当提示输入密码的时候，输入两次密码，便可创建该用户。</p><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><p>删除用户与添加用户类似，唯一的区别就是在用户名前面增加 <code>-d</code> 参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -ti ocserv ocpasswd -c /etc/ocserv/ocpasswd -d <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>如果你在创建实例的时候，没有使用环境变量 <code>NO_TEST_USER</code>，那么上述命令将帮你删除默认的 <code>test</code> 用户。</p><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><p>修改密码与添加用户的操作是完全一致的，请参考上面添加用户的章节。</p><h2 id="高级使用"><a href="#高级使用" class="headerlink" title="高级使用"></a>高级使用</h2><p>这个部分会介绍一些高级的使用方法，包括通过环境变量的设置来配置不同的 CA 名称等。</p><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>对于 <code>tommylau/ocserv</code> 这个 Docker 镜像来说，所有的环境变量都是可选的，也就意味着你拥有一个开箱即用的产品，而不用输入任何参数。当然，如果你是一个定制狂或者有强迫症，那么下面就是为你准备的。</p><p><code>CA_CN</code>，这是用于生成 CA(Certificate Authority) 证书的名称 (common name)。</p><p><code>CA_ORG</code>，这是用于生成 CA 证书的组织名称 (organization name)。</p><p><code>CA_DAYS</code>，这是用于生成 CA 证书的有效期。</p><p><code>SRV_CN</code>，这是用于生成服务器证书的名称 (common name)。</p><p><code>SRV_ORG</code>，这是用于生成服务器证书的组织名称 (organization name)。</p><p><code>SRV_DAYS</code>，这是用于生成服务器证书的有效期。</p><p><code>NO_TEST_USER</code>，当这个变量设置为非空时，将不会创建 <code>test</code> 用户。你必须要手动添加你自己的用户，并设置密码。默认情况下，系统会自动创建用户名为 <code>test</code>，密码也为 <code>test</code> 的用户。</p><p>上述变量的默认值：</p><table><thead><tr><th align="center">变量</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center"><strong>CA_CN</strong></td><td align="center">VPN CA</td></tr><tr><td align="center"><strong>CA_ORG</strong></td><td align="center">Big Corp</td></tr><tr><td align="center"><strong>CA_DAYS</strong></td><td align="center">9999</td></tr><tr><td align="center"><strong>SRV_CN</strong></td><td align="center"><a href="http://www.example.com/">www.example.com</a></td></tr><tr><td align="center"><strong>SRV_ORG</strong></td><td align="center">My Company</td></tr><tr><td align="center"><strong>SRV_DAYS</strong></td><td align="center">9999</td></tr></tbody></table><h3 id="一些运行范例"><a href="#一些运行范例" class="headerlink" title="一些运行范例"></a>一些运行范例</h3><p>使用开箱即用的方式，用户名和密码均为 <code>test</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name ocserv --privileged -p 443:443 -p 443:443/udp -d tommylau/ocserv</span><br></pre></td></tr></table></figure><p>创建服务器名为 <code>my.test.com</code>，组织为 <code>My Test</code>，有效期为 <code>365</code> 天的实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name ocserv --privileged -p 443:443 -p 443:443/udp -e SRV_CN=my.test.com -e SRV_ORG=<span class="string">&quot;My Test&quot;</span> -e SRV_DAYS=365 -d tommylau/ocserv</span><br></pre></td></tr></table></figure><p>创建一个签发机构为 <code>My CA</code>，签发组织为 <code>My Corp</code>，有效期为 <code>3650</code> 天的实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name ocserv --privileged -p 443:443 -p 443:443/udp -e CA_CN=<span class="string">&quot;My CA&quot;</span> -e CA_ORG=<span class="string">&quot;My Corp&quot;</span> -e CA_DAYS=3650 -d tommylau/ocserv</span><br></pre></td></tr></table></figure><p>一个包含 CA 和服务器证书的，完全定制化的实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name ocserv --privileged -p 443:443 -p 443:443/udp -e CA_CN=<span class="string">&quot;My CA&quot;</span> -e CA_ORG=<span class="string">&quot;My Corp&quot;</span> -e CA_DAYS=3650 -e SRV_CN=my.test.com -e SRV_ORG=<span class="string">&quot;My Test&quot;</span> -e SRV_DAYS=365 -d tommylau/ocserv</span><br></pre></td></tr></table></figure><p>如上述的完全定制化的实例，但是不创建 <code>test</code> 用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name ocserv --privileged -p 443:443 -p 443:443/udp -e CA_CN=<span class="string">&quot;My CA&quot;</span> -e CA_ORG=<span class="string">&quot;My Corp&quot;</span> -e CA_DAYS=3650 -e SRV_CN=my.test.com -e SRV_ORG=<span class="string">&quot;My Test&quot;</span> -e SRV_DAYS=365 -e NO_TEST_USER=1 -v /some/path/to/ocpasswd:/etc/ocserv/ocpasswd -d tommylau/ocserv</span><br></pre></td></tr></table></figure><p>**警告：**ocserv 在启动的时候需要 ocpasswd 文件，如果你设置了 <code>NO_TEST_USER=1</code>，ocpasswd 文件将不会被创建，进而导致到服务器启动后立即停止。你必须要像上面示例中那样，使用 Docker 的 <code>-v</code> 挂在参数，指定一个 ocpasswd 文件到 <code>/etc/ocserv/ocpasswd</code>。</p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Network </tag>
            
            <tag> OpenConnect </tag>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用 Privoxy 将 SOCKS5 转换成 HTTP 代理</title>
      <link href="/2015/02/05/use-http-proxy-through-socks5-by-using-privoxy/"/>
      <url>/2015/02/05/use-http-proxy-through-socks5-by-using-privoxy/</url>
      
        <content type="html"><![CDATA[<p>作为一个屌丝工程师，科学上网是必须的。比如在使用 <a href="http://developer.android.com/tools/studio/index.html">Android Studio</a> 进行开发的时候，如果不会科学上网的话，你会发现连 Android SDK 都无法正常下载！</p><p>Android Studio 本身是基于 <a href="https://www.jetbrains.com/">IntelliJ IDE</a> 的，所以它可以通过设置菜单里面的 Proxy 设置使用 SOCKS 方式代理，这样的话正常使用就没有问题，而 Android SDK 里面的 <code>SDK Manager</code> 只支持 HTTP Proxy，所以我们就需要使用 <a href="http://www.privoxy.org/">Privoxy</a> 把 SOCKS 代理转成 HTTP 代理。</p><span id="more"></span><p>因为我使用的是 Mac，所以我们用 <a href="http://brew.sh/">Homebrew</a> 来安装 <code>Privoxy</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install privoxy</span><br></pre></td></tr></table></figure><p>就这样一句就安装好了，如果你没有安装过 <code>Homebrew</code> 可以使用下面的命令来安装 <code>Homebrew</code>，安装过程中需要输入管理员密码。更多信息可以参考 <code>Homebrew</code> 的官网（<a href="http://brew.sh/%EF%BC%89%EF%BC%9A">http://brew.sh/）：</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure><p><code>Provixy</code> 安装完成后，编辑其配置文件 <code>/usr/local/etc/privoxy/config</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/local/etc/privoxy/config</span><br></pre></td></tr></table></figure><p>在文件末尾增加 SOCKS 代理的配置信息，注意不要丢失了最后的点，假设 SOCKS 服务器监听在本地的 1080 端口，其配置如下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">forward</span>-socks5 / <span class="number">127.0.0.1:1080</span> .</span><br></pre></td></tr></table></figure><p>请根据你的实际使用情况进行修改，保存好文件后运行如下命令启动 <code>Privoxy</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ privoxy /usr/local/etc/privoxy/config</span><br></pre></td></tr></table></figure><p><code>Privoxy</code> 默认的监听端口是 <code>8118</code>。最后，修改 <code>SDK Manager</code> 里面的代理设置部分，服务器地址为：<code>127.0.0.1</code>，端口为：<code>8118</code>。从此以后又可以愉快地玩耍和更新 Android SDK 啦！</p>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Brew </tag>
            
            <tag> HTTP </tag>
            
            <tag> Privoxy </tag>
            
            <tag> Proxy </tag>
            
            <tag> SOCKS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>禁止 Vim 生成临时文件</title>
      <link href="/2015/02/05/prevent-vim-from-creating-temporary-files/"/>
      <url>/2015/02/05/prevent-vim-from-creating-temporary-files/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.vim.org/">Vim</a> 是一个神器，但是神器整天生成一些临时文件，而且大部分的文件我都是用 Git 管理的，所以这些出于安全考虑而生成的备份反而成了一种负担。尤其是 Git 管理的时候，会出现很多 <code>.ext.swp</code> <code>.ext~</code> <code>.ext.un~</code> 未被管理的提示，也很是恼人。</p><span id="more"></span><p>其实修改方式也很简单，在 <code>~/.vimrc</code> 内增加如下内容便可：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> nobackup       <span class="comment">&quot; no backup files</span></span><br><span class="line"><span class="keyword">set</span> noswapfile     <span class="comment">&quot; no swap files</span></span><br><span class="line"><span class="keyword">set</span> nowritebackup  <span class="comment">&quot; only in case you don&#x27;t want a backup file while editing</span></span><br><span class="line"><span class="keyword">set</span> noundofile     <span class="comment">&quot; no undo files</span></span><br></pre></td></tr></table></figure><ul><li><code>set nobackup</code> 表示不需要备份文件</li><li><code>set noswapfile</code> 表示不创建临时交换文件</li><li><code>set nowritebackup</code> 表示编辑的时候不需要备份文件</li><li><code>set noundofile</code> 表示不创建撤销文件</li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Docker 中配置时区</title>
      <link href="/2015/02/05/config-timezone-in-docker/"/>
      <url>/2015/02/05/config-timezone-in-docker/</url>
      
        <content type="html"><![CDATA[<p>最近玩 <a href="https://www.docker.com/">Docker</a> 玩儿的非常的嗨皮，并且把公司的生产环境全部变成 Docker 部署的啦。因为 Base Image 使用的基本上都是 Docker 官方的，所以里面的时间设置大多是 <code>Etc/UTC</code>，也就是标准的 UTC 时间，所以要简单的调整一下，变成中国标准时间。</p><span id="more"></span><p>如果已经创建了 container 的话，可以直接接入到 container 里面，用命令行实现时区的更改：</p><p>首先通过下面的命令进入对应的 container:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker exec -ti container bash</span></span><br></pre></td></tr></table></figure><p>然后在 container 里面执行如下的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone</span></span><br><span class="line"><span class="comment"># dpkg-reconfigure -f noninteractive tzdata</span></span><br></pre></td></tr></table></figure><p>可以看到屏幕上有类似的输出：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Current</span> default time zone: &#x27;Asia/Shanghai&#x27;</span><br><span class="line"><span class="attribute">Local</span> time is now:      Thu Feb  <span class="number">5</span> <span class="number">10</span>:<span class="number">55</span>:<span class="number">04</span> CST <span class="number">2015</span>.</span><br><span class="line"><span class="attribute">Universal</span> Time is now:  Thu Feb  <span class="number">5</span> <span class="number">02</span>:<span class="number">55</span>:<span class="number">04</span> UTC <span class="number">2015</span>.</span><br></pre></td></tr></table></figure><p>我们可以看到，local time 已经变成了 <code>CST</code>，也就是 <code>CST – China Standard Time</code>，这样我们的时区修改就已经完成了，之所以要用 <code>noninteractive</code> 的方式，是为了方便我们整合到 <code>Dockerfile</code> 中使用，比如：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;Asia/Shanghai&quot;</span> &gt; /etc/timezone</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> dpkg-reconfigure -f noninteractive tzdata</span></span><br></pre></td></tr></table></figure><p>这样的话，我们可以把时区设置做到自己的 Image 中，就不需要每个 container 运行一次时区设置了。</p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Timezone </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Visual Studio 2013 编译 Windows XP 的可执行程序</title>
      <link href="/2014/10/21/targeting-windows-xp-with-visual-studio-2013/"/>
      <url>/2014/10/21/targeting-windows-xp-with-visual-studio-2013/</url>
      
        <content type="html"><![CDATA[<p>最近在开发一个小工具，需要支持 OS X 和 Windows 两个平台。于是乎使用了 <a href="http://www.cmake.org/">CMake</a> 和 <a href="https://www.jetbrains.com/clion/">CLion</a> 来开发，其实也就是觉得好玩。</p><p>其中 Windows 的开发环境为 Windows 7 SP1 + Visual Studio 2013，编译出来的程序使用都很正常，然而同样的可执行文件放到 Windows XP 会提示无效的 Win32 应用程序。经过搜索发现，是因为 Windows XP 使用比较旧的 Windows 7.1 SDK，而 Vista 以后默认都不再支持。要支持的话，网上有几种方法，一个就是使用工程文件，指定 Toolchain 为 <code>v120_xp</code>。这种方式网上广为流传，很可惜的是，我用的不是工程文件，而是 CMake 生成的 Makefile 文件，这种方式不适用。</p><span id="more"></span><p>后来仔细搜索了很多资料后发现，其实对于我的项目，只需要修改链接参数便可：</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">if</span> <span class="params">(MSVC)</span></span></span><br><span class="line"><span class="function">    <span class="title">set_target_properties</span><span class="params">(ProjectName PROPERTIES LINK_FLAGS_RELEASE <span class="string">&quot;/SUBSYSTEM:CONSOLE,5.01&quot;</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">endif</span> <span class="params">(MSVC)</span></span></span><br></pre></td></tr></table></figure><p>增加了上述设置到 CMake 后，编译出来的程序可以正常在 Windows XP 下运行。其中的 <code>5.01</code> 对应的应该是 Windows 2000 &#x2F; XP 的 32 位系统。</p><p>部分参考文献：</p><ul><li>SUBSYSTEM 参数的参考：<a href="http://msdn.microsoft.com/en-us/library/fcc1zstk.aspx">http://msdn.microsoft.com/en-us/library/fcc1zstk.aspx</a></li><li>Microsoft 操作系统内部版本号参考：<a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms724832(v=vs.85).aspx">http://msdn.microsoft.com/en-us/library/windows/desktop/ms724832(v=vs.85).aspx</a></li><li>CMake 的 Qt 参考：<a href="http://www.cmake.org/Wiki/CMake/Tutorials/Qt">http://www.cmake.org/Wiki/CMake/Tutorials/Qt</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows XP </tag>
            
            <tag> Visual Studio </tag>
            
            <tag> Visual C++ </tag>
            
            <tag> VS2013 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 OpenWrt 上使用 3322.org 的动态域名</title>
      <link href="/2014/10/14/dynamic-dns-setup-under-openwrt-with-3322-org/"/>
      <url>/2014/10/14/dynamic-dns-setup-under-openwrt-with-3322-org/</url>
      
        <content type="html"><![CDATA[<p>由于 IP 资源紧张，国内大部分的家庭用户，无论是使用 ADSL 的，还是使用光纤接入的，大部分都是动态 IP。有的时候为了管理家里的网络，或者传输一些数据就需要知道家里 IP 的变化。大部分情况下，大家都是使用<a href="http://hsk.oray.com/">花生壳</a>等类似服务商提供的服务。但是这些大多需要安装客户端软件，而且大多对 Linux 类的系统支持不是很完善。而因为需要远程唤醒主机，就要求，动态 DNS 必须由路由器完成，用客户端的方式就显得不大现实。</p><span id="more"></span><p>之前用过 <a href="http://3322.org/">3322.org</a> 提供的服务，有一个好处，就是可以直接通过 HTTP GET 方式来更新 IP：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -q -O- <span class="string">&#x27;http://username:password@members.3322.org/dyndns/update?system=dyndns&amp;hostname=domainname.3322.org&#x27;</span></span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>username: 你在 3322 注册的用户名</li><li>password: 你在 3322 的密码</li><li>domainname.3322.org: 你在 3322 申请的动态域名</li></ul><p>这三项需要对应的替换成你自己的设置。</p><p>为了能自动更新 IP 变化，我们还需要设置一个 crontab 来定期执行。在这之前，我们先编写一个脚本以方便调用。SSH 到 OpenWrt 服务器，在默认的 <strong>&#x2F;root</strong> 路径下生成 <strong>ddns.sh</strong> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">wget -q -O- <span class="string">&#x27;http://username:password@members.3322.org/dyndns/update?system=dyndns&amp;hostname=domainname.3322.org&#x27;</span></span><br></pre></td></tr></table></figure><p>给脚本增加可执行属性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x ddns.sh</span><br></pre></td></tr></table></figure><p>使用 <strong>crontab -e</strong> 修改计划任务，并增加如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/5 * * * * /root/ddns.sh</span><br></pre></td></tr></table></figure><p>这样的话，每隔 5 分钟，系统就会检查一次 IP，如果觉得太频繁，可以改成 10 分钟或 15 分钟等。</p>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDNS </tag>
            
            <tag> 3322.org </tag>
            
            <tag> OpenWrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Mac OS X 系统下交叉编译 C++11 程序</title>
      <link href="/2014/10/07/cross-compiling-c-11-under-mac-os-x/"/>
      <url>/2014/10/07/cross-compiling-c-11-under-mac-os-x/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-MacPorts"><a href="#安装-MacPorts" class="headerlink" title="安装 MacPorts"></a>安装 MacPorts</h2><p>首先我们需要安装 MacPorts，按照<a href="https://www.macports.org/install.php">官方的指引</a>，下载不同版本的包，比如我下载的是 Mavericks 的。</p><p>同时，我们还需要安装 Xcode 和 Xcode Command Line Tools。Xcode 可以从 AppStore 获得，Command Line Tools 在 Xcode 安装后，从 Xcode 中安装。</p><p>启动 Xcode 并接受协议，或者在终端中接受协议：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xcodebuild -license</span><br></pre></td></tr></table></figure><span id="more"></span><p>安装后，便可以在命令行中使用 port 命令了。</p><p>我使用的是订制过的 zsh，而不是系统默认的 bash，所以会提示找不到 port。这种情况下修改一下 .zshrc 配置文件便可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure><p>将 export PATH 部分修改为如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$HOME</span>/bin:/usr/local/bin:<span class="variable">$PATH</span>:/opt/local/bin</span><br></pre></td></tr></table></figure><p>主要是增加了最后的：<strong>:&#x2F;opt&#x2F;local&#x2F;bin</strong></p><p>最后我们运行一下更新命令，以确保我们用的是最新版的 MacPorts：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo port selfupdate</span><br></pre></td></tr></table></figure><h2 id="安装-MXE-依赖库"><a href="#安装-MXE-依赖库" class="headerlink" title="安装 MXE 依赖库"></a>安装 MXE 依赖库</h2><p>为了能在 OS X 下交叉编译 Windows 下的应用，我们需要 <a href="http://mxe.cc/">MXE</a> 的支持。而 MXE 需要依赖一些 MacPorts 的开源库。</p><p>官方给出的 OS X 下的安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo port install autoconf automake bison cmake coreutils \</span><br><span class="line">                  flex gettext git-core glib2 gsed intltool libffi \</span><br><span class="line">                  libtool openssl p5-xml-parser pkgconfig scons \</span><br><span class="line">                  wget xz</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：官方推荐的安装方式里面包含 git-core，但是新版本已经用 git 来管理了，如果按照上述命令安装会报错。</p><p>我们可以使用如下命令来检查 repo 管理所使用的是 git-core 还是 git：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">port info repo</span><br></pre></td></tr></table></figure><p>如果显示如下所示使用 git 作为 repo 管理的话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">repo @1.19_1 (python)</span><br><span class="line"></span><br><span class="line">Description:          Repo is a tool that we built on top of Git. Repo helps us manage the many Git repositories, does the uploads to our revision control system , and automates parts of the Android</span><br><span class="line">                      development workflow. Repo is not meant to replace Git, only to make it easier to work with Git <span class="keyword">in</span> the context of Android.</span><br><span class="line">Homepage:             http://source.android.com/source/git-repo.html</span><br><span class="line"></span><br><span class="line">Runtime Dependencies: git</span><br><span class="line">Platforms:            darwin</span><br><span class="line">License:              Apache-2</span><br><span class="line">Maintainers:          nomaintainer@macports.org</span><br></pre></td></tr></table></figure><p>请使用下面的命令来进行安装（去除了 git-core）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo port install autoconf automake bison cmake coreutils \</span><br><span class="line">                  flex gettext glib2 gsed intltool libffi \</span><br><span class="line">                  libtool openssl p5-xml-parser pkgconfig scons \</span><br><span class="line">                  wget xz</span><br></pre></td></tr></table></figure><p>如果以前安装过 MacPorts，有些包过期了，可以使用下面的命令来更新升级：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo port upgrade outdated</span><br></pre></td></tr></table></figure><h2 id="安装-MXE"><a href="#安装-MXE" class="headerlink" title="安装 MXE"></a>安装 MXE</h2><p>首先是获得 MXE，很简单 git clone 一下就好了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/mxe/mxe.git</span><br></pre></td></tr></table></figure><p>MXE 默认编译的 gcc 版本是 4.8.1，最新的 4.8 版本是 4.8.3，所以，我们修改一下 <strong>src&#x2F;gcc.mk</strong> 文件，讲版本号和校验修改为如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(PKG)_VERSION  := 4.8.3</span><br><span class="line">$(PKG)_CHECKSUM := da0a2b9ec074f2bf624a34f3507f812ebb6e4dce</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 4.9 以后的版本编译会报错，且 4.8 系列已经支持 C++11 标准，因为 4.8.3 对我已经够用了，所以本文并不适用 4.9 系列。4.8.3 版本的编译打包时间为：5&#x2F;22&#x2F;14 11:22:00 AM</p><p>设置好以后，我们就开始编译 32 位版本的交叉编译环境（i686-w64-mingw32），如果需要 64 位环境的，请使用 <strong>x86_64-w64-mingw32</strong> 来替换 <strong>i686-w64-mingw32</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make MXE_TARGETS=<span class="string">&#x27;i686-w64-mingw32&#x27;</span> gcc gmp mpfr winpthreads -j4 JOBS=4</span><br></pre></td></tr></table></figure><p>默认情况下，gcc 是使用 win32 线程的。这样的话，我们就没有办法使用 pthreads 和其他一些 C++11 的新特性，所以我们还需要再第一次编译完成后，再进行一次编译。</p><p>还是修改 <strong>src&#x2F;gcc.mk</strong> 文件，在包依赖的部分增加 winpthreads，同时打开 posix：</p><p>首先是 12 行的部分，增加 winpthreads 支持，修改后类似如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(PKG)_DEPS := mingwrt w32api mingw-w64 binutils gcc-gmp gcc-mpc gcc-mpfr winpthreads</span><br></pre></td></tr></table></figure><p>然后是 49 行，修改 threads 方式为 posix。修改前：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--enable-threads=win32</span><br></pre></td></tr></table></figure><p>修改后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--enable-threads=posix</span><br></pre></td></tr></table></figure><p>接着修改 <strong>src&#x2F;binutils.mk</strong>，增加 <strong>–with-sysroot</strong> 来开启 sysroot 支持。</p><p>在 38 行左右，增加如下代码作为编译的参数，注意后面可能需要连接符号 “&quot;：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--with-sysroot</span><br></pre></td></tr></table></figure><p>再次编译 gcc：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make MXE_TARGETS=<span class="string">&#x27;i686-w64-mingw32&#x27;</span> winpthreads gcc -j4 JOBS=4</span><br></pre></td></tr></table></figure><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>编译成功后，在 MXE 的目录内，会出现一个 usr 目录，那里面就保存着编译好的交叉环境，你可以直接调用 <strong>usr&#x2F;bin&#x2F;i686-w64-mingw32-gcc</strong> 来启动 gcc。其他的命令也都在 <strong>usr&#x2F;bin</strong> 目录内，由前缀 <strong>i686-w64-mingw32-</strong> 开头。修改你的项目的 Makefile，调用交叉编译的 gcc 便可以直接生成 Windows 平台下的可执行程序了。</p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Development </tag>
            
            <tag> Mac </tag>
            
            <tag> OS X </tag>
            
            <tag> C++11 </tag>
            
            <tag> Cross-compile </tag>
            
            <tag> Windows </tag>
            
            <tag> MXE </tag>
            
            <tag> GCC </tag>
            
            <tag> MacPorts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Nginx 中配置使用 GeoTrust 的 SSL 证书</title>
      <link href="/2014/09/22/use-geotrust-ssl-certificate-with-nginx/"/>
      <url>/2014/09/22/use-geotrust-ssl-certificate-with-nginx/</url>
      
        <content type="html"><![CDATA[<p>最近因为 <a href="http://oauth.net/2/">OAuth 2.0</a> 项目的需要，需要配置 SSL。经过多加对比之后，选择了 <a href="http://www.geotrust.com/">GeoTrust</a> 的 <a href="http://www.geotrust.com/ssl/wildcard-ssl-certificates/">True BusinessID Wildcard</a> 证书。经过各种乱七八糟的认证手续（最扯淡的是，你的公司必须要在本地 114 电话上注册，靠！）之后，<a href="http://www.geotrust.com/geocenter/customer-login/">登录 GeoTrust 用户中心</a>，选择你要配置的服务类型，比如 Nginx 的证书文件为 <a href="http://zh.wikipedia.org/wiki/X.509">X.509</a> 格式。</p><span id="more"></span><p>按照系统提示操作，会让你下载一个 ZIP 压缩包，解压缩后将得到两个文件：</p><ul><li>IntermediateCA.crt</li><li>ssl_certificate.crt</li></ul><p>其中 <strong>IntermediateCA.crt</strong> 是 <strong>GeoTrust</strong> 的， <strong>ssl_certificate.crt</strong> 是 <strong>GeoTrust</strong> 颁发给我们的域名使用的。</p><p>第一个要做的事情，就是按照 <a href="https://knowledge.geotrust.com/support/knowledge-base/index?page=content&id=SO17483">GeoTrust 官方的指引</a>，把两个文件合并成一个，就是将 IntermediateCA 添加到我们自己证书后面<br>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> IntermediateCA.crt &gt;&gt; ssl_certificate.crt</span><br></pre></td></tr></table></figure><p>修改 Nginx 的配置文件，增加 crt 和 key 的引用，其中 key 为申请 GeoTrust 证书之前，本地生成的私钥。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># HTTPS server</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">443</span>;</span><br><span class="line"><span class="attribute">server_name</span> www.test.com;</span><br><span class="line"></span><br><span class="line"><span class="attribute">root</span> /var/www;</span><br><span class="line"><span class="attribute">index</span> index.html index.htm;</span><br><span class="line"></span><br><span class="line"><span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">ssl_certificate</span> /etc/ssl/certs/www.test.com.crt;</span><br><span class="line"><span class="attribute">ssl_certificate_key</span> /etc/ssl/private/www.test.com.key;</span><br><span class="line"></span><br><span class="line"><span class="attribute">ssl_session_timeout</span> <span class="number">5m</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">ssl_protocols</span> SSLv3 TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line"><span class="attribute">ssl_ciphers</span> <span class="string">&quot;HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES&quot;</span>;</span><br><span class="line"><span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line"><span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ =<span class="number">404</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后访问网站，验证 SSL 的设置成功，比如：</p><p><a href="https://www.test.com/">https://www.test.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Certificate </tag>
            
            <tag> SSL </tag>
            
            <tag> GeoTrust </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 在 Mac OS X 系统下使用 UCL 库</title>
      <link href="/2014/09/19/use-ucl-with-python-under-mac-os-x/"/>
      <url>/2014/09/19/use-ucl-with-python-under-mac-os-x/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近 QQ 上突然冒出了一个很久没有联系的网友，跟我说 ShiningLore (天使) 有一个新的韩国私服，突然一下又热血沸腾了，毕竟这是我人生中的第一个网游。到处 Google 了一下，也没有发现太多的介绍和说明，最后在 17173 的某个角落找到了这个游戏的<a href="http://sl.17173.com/guide/guide.htm">新手入门</a>。</p><span id="more"></span><p>好了，话题扯远了。今天要说的是 UCL，为什么扯到游戏上了。因为这个游戏的资源打包文件中，使用 UCL 的库进行压缩。<a href="http://www.oberhumer.com/opensource/ucl/">UCL</a> 是 <a href="http://www.oberhumer.com/">Markus F.X.J. Oberhumer</a> 开发的基于 GPL 协议的一个开源库。要想要把游戏里面的资源文件解压缩出来，就非得要用这个 UCL 库不可。</p><p>在网上到处搜索了一下，并没有发现有 Python 下的 UCL 实现。毕竟，这个库的版本已经比较旧了，到现在都已经有 10 年的历史了。其官网显示的最后更新日期为 2014 年 7 月 20 号。不过好在，这货是用标准的 ANSI C 编写的，外加 Python 这一胶水语言，一定会有解决办法的。</p><p>再次搜索，发现了几个 Python 和 C 语言对接的方法，最后选择了 <a href="https://cffi.readthedocs.org/">CFFI (C Foreign Function Interface for Python)</a>。不过要使用 CFFI，还需要准备好编译器。在 OS X 系统下自然是 Xcode 了，建议同时安装上 Command line tools。而 Windows 平台下自然是 Microsoft Visual Studio 了。</p><h2 id="编译-UCL"><a href="#编译-UCL" class="headerlink" title="编译 UCL"></a>编译 UCL</h2><p>我们要做的第一件事情，自然是编译 UCL 了。首先先获得 UCL 的<a href="http://www.oberhumer.com/opensource/ucl/download/ucl-1.03.tar.gz">源代码</a>，在写这篇文章的时候，UCL 的最新版本是 1.03，不过我估计它也不会再更新了，毕竟已经过去 10 年之久了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -OL http://www.oberhumer.com/opensource/ucl/download/ucl-1.03.tar.gz</span><br></pre></td></tr></table></figure><p>然后解压缩下载回来的压缩包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar zxvf ucl-1.03.tar.gz</span><br></pre></td></tr></table></figure><p>编译并生成 UCL 的链接库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ucl-1.03</span><br><span class="line">$ ./configure</span><br><span class="line">$ make</span><br></pre></td></tr></table></figure><p>最终生成的链接库文件保存在：<strong>ucl-1.03&#x2F;src&#x2F;.libs&#x2F;libucl.a</strong></p><h2 id="安装-pip"><a href="#安装-pip" class="headerlink" title="安装 pip"></a>安装 pip</h2><p><a href="http://en.wikipedia.org/wiki/Pip_%28package_manager%29">pip</a> 是 Python 的一个包管理软件，要想安装 CFFI，我们需要先安装 pip。如果系统中已经安装有 pip，可以直接跳过这个步骤，直接开始安装 CFFI。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo easy_install pip</span><br></pre></td></tr></table></figure><h2 id="安装-CFFI"><a href="#安装-CFFI" class="headerlink" title="安装 CFFI"></a>安装 CFFI</h2><p>前面已经介绍过了，CFFI 是 Python 下的 C 语言对接的一个 interface，通过 CFFI，我们可以在 Python 中直接调用 C 中的函数。</p><p>只需要一条命令就可以轻松的安装 CFFI。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pip install cffi</span><br></pre></td></tr></table></figure><h2 id="Python-中调用-UCL"><a href="#Python-中调用-UCL" class="headerlink" title="Python 中调用 UCL"></a>Python 中调用 UCL</h2><p>大部分的工作我们都已经搞掂了，接下来我们还需要一个 wrapper。感谢伟大的互联网，已经有好心人做好了 <a href="https://github.com/jap/pyucl">pyucl</a>，我们直接拿来主意就可以了。</p><p>这里我只用了 <strong>src&#x2F;pyucl</strong> 目录下的 <strong>ucl.py</strong> 文件，并没有使用模块安装的方法。</p><p>将 <strong>ucl.py</strong> 放在与 <strong>ucl-1.03.tar.gz</strong> 同级的目录，并修改 <strong>ucl.py</strong>，增加 <strong>include_dirs</strong> 和 <strong>library_dirs</strong> 为相对应的路径。</p><p>修改部分的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C = ffi.verify(<span class="string">&quot;#include &lt;ucl/ucl.h&gt;&quot;</span>,</span><br><span class="line">                libraries=[<span class="string">&#x27;ucl&#x27;</span>], include_dirs=[<span class="string">&#x27;ucl-1.03/include&#x27;</span>], library_dirs=[<span class="string">&#x27;ucl-1.03/src/.libs&#x27;</span>])</span><br></pre></td></tr></table></figure><p>更多的配置参数、编译参数和链接参数，如 sources, include_dirs, define_macros, undef_macros, libraries, library_dirs, extra_objects, extra_compile_args, extra_link_args 等，可以参考 CFFI 官方文档：<a href="http://cffi.readthedocs.org/">http://cffi.readthedocs.org/</a></p><p>最后，启动 Python 解析器，验证一下效果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> ucl</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>@ucl.callback</span><br><span class="line"><span class="meta">... </span><span class="keyword">def</span> <span class="title function_">a_callback</span>(<span class="params">n0, n1, n, v</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span> <span class="string">&quot;CALLBACK GOT CALLED: %d %d %d&quot;</span> % (n0, n1, n)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string_in = <span class="string">&quot;henkitsminehenkhenkhenkitsmine&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string_out = ucl.nrv2d_99_compress(string_in, level=<span class="number">10</span>, callback=a_callback)</span><br><span class="line">CALLBACK GOT CALLED: <span class="number">0</span> <span class="number">0</span> -<span class="number">1</span></span><br><span class="line">CALLBACK GOT CALLED: <span class="number">1</span> <span class="number">0</span> <span class="number">3</span></span><br><span class="line">CALLBACK GOT CALLED: <span class="number">30</span> <span class="number">24</span> <span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span> <span class="built_in">len</span>(string_in), <span class="built_in">len</span>(string_out)</span><br><span class="line"><span class="number">30</span> <span class="number">24</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string_dec = ucl.nrv2d_decompress(string_out, <span class="built_in">len</span>(string_in))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span> string_dec == string_in</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>string_dec = ucl.nrv2d_decompress(string_out, <span class="built_in">len</span>(string_in) - <span class="number">10</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;ucl.py&quot;</span>, line <span class="number">144</span>, <span class="keyword">in</span> nrv2d_decompress</span><br><span class="line">    <span class="keyword">return</span> _ucl_decompress(C.ucl_nrv2d_decompress_safe_8, data, outsize)</span><br><span class="line">  File <span class="string">&quot;ucl.py&quot;</span>, line <span class="number">138</span>, <span class="keyword">in</span> _ucl_decompress</span><br><span class="line">    ucl_errors[retval]))</span><br><span class="line">RuntimeError: Decompression failed: -<span class="number">202</span> (UCL_E_OUTPUT_OVERRUN)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>ucl.nrv2b_decompress(string_out, <span class="number">2</span>*<span class="built_in">len</span>(string_in))</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;ucl.py&quot;</span>, line <span class="number">142</span>, <span class="keyword">in</span> nrv2b_decompress</span><br><span class="line">    <span class="keyword">return</span> _ucl_decompress(C.ucl_nrv2b_decompress_safe_8, data, outsize)</span><br><span class="line">  File <span class="string">&quot;ucl.py&quot;</span>, line <span class="number">138</span>, <span class="keyword">in</span> _ucl_decompress</span><br><span class="line">    ucl_errors[retval]))</span><br><span class="line">RuntimeError: Decompression failed: -<span class="number">203</span> (UCL_E_LOOKBEHIND_OVERRUN)</span><br></pre></td></tr></table></figure><p>一切正常，搞掂，收工！</p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Mac </tag>
            
            <tag> OS X </tag>
            
            <tag> UCL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 iOS 6.1.6 设备上编译 Lua 5.1.5</title>
      <link href="/2014/09/13/compile-lua-515-on-ios-616/"/>
      <url>/2014/09/13/compile-lua-515-on-ios-616/</url>
      
        <content type="html"><![CDATA[<h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><ul><li>一台越狱了的 iOS 设备（我这里使用的是 iPod touch 4th Gen）</li><li>已经在 iOS 设备上安装了 apt-get 等常用的命令行工具</li><li>越狱设备可以通过 Wifi 或 usbmuxd 进行 SSH 连接</li><li>具备入门级的开发经验，熟悉命令行操作环境</li><li>耐心、细心和不怕折腾的决心</li><li>部分资源的访问可能受网络环境影响，无法正常访问，请自行解决</li><li>以下所有操作，均为 root 帐号 SSH 到 iOS 设备上远程进行的</li></ul><span id="more"></span><h2 id="准备编译环境"><a href="#准备编译环境" class="headerlink" title="准备编译环境"></a>准备编译环境</h2><p>安装 wget，从网上抓东西，就全靠它了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install wget</span><br></pre></td></tr></table></figure><p>安装 unzip，后面需要安装 gcc lib 需要用到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install unzip</span><br></pre></td></tr></table></figure><p>Cydia 的系统依赖里面缺少了 libgcc 库，所以，我们需要下载一个伪装的 libgcc 库。这里给出的下载地址为 Google Code 的，如果同学们无法访问，请自行搜索下载地址。如果连接的是 https 服务器，请务必确认有 <strong>–no-check-certificate</strong> 参数，如果是 http 则无需添加。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -c <span class="string">&quot;https://optimazationandcombinationcode.googlecode.com/files/fake-libgcc_1.0_iphoneos-arm.deb&quot;</span> --no-check-certificate</span><br></pre></td></tr></table></figure><p>使用 Cydia 自带的包管理软件安装之：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ dpkg -i fake-libgcc_1.0_iphoneos-arm.deb</span><br></pre></td></tr></table></figure><p>安装 BigBoss 源中所带的 Toolchain，它会顺便安装 gcc，make，ldid 等常用的开发工具：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install com.bigboss.20toolchain</span><br></pre></td></tr></table></figure><p>下载系统中缺少的 gcc libs 并解压缩：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget -c <span class="string">&quot;https://optimazationandcombinationcode.googlecode.com/files/lib.zip&quot;</span> --no-check-certificate</span><br><span class="line">$ unzip lib.zip</span><br></pre></td></tr></table></figure><p>需要将编译 Lua 所需要的几个 gcc lib 文件复制到 <strong>&#x2F;usr&#x2F;lib</strong> 目录下，否则在链接的时候会报错：</p><ul><li>libm.dylib</li><li>libgcc_s.10.5.dylib</li><li>libSystem.dylib</li></ul><h2 id="编译-Lua-5-1-5"><a href="#编译-Lua-5-1-5" class="headerlink" title="编译 Lua 5.1.5"></a>编译 Lua 5.1.5</h2><p>第一要做的，当然是先得把 <a href="http://www.lua.org/ftp/lua-5.1.5.tar.gz">Lua 5.1.5 源代码</a> 弄回来啦：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -c <span class="string">&quot;http://www.lua.org/ftp/lua-5.1.5.tar.gz&quot;</span></span><br></pre></td></tr></table></figure><p>解压缩之：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar zxvf lua-5.1.5.tar.gz</span><br></pre></td></tr></table></figure><p>编译走起！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> lua-5.1.5</span><br><span class="line">$ make macosx <span class="built_in">test</span></span><br><span class="line"><span class="built_in">cd</span> src &amp;&amp; make macosx <span class="built_in">test</span></span><br><span class="line">make[1]: Entering directory `/private/var/root/lua-5.1.5/src<span class="string">&#x27;</span></span><br><span class="line"><span class="string">make all MYCFLAGS=-DLUA_USE_LINUX MYLIBS=&quot;-lreadline&quot;</span></span><br><span class="line"><span class="string">make[2]: Entering directory `/private/var/root/lua-5.1.5/src&#x27;</span></span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lapi.o lapi.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lcode.o lcode.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o ldebug.o ldebug.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o ldo.o ldo.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o ldump.o ldump.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lfunc.o lfunc.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lgc.o lgc.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o llex.o llex.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lmem.o lmem.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lobject.o lobject.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lopcodes.o lopcodes.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lparser.o lparser.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lstate.o lstate.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lstring.o lstring.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o ltable.o ltable.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o ltm.o ltm.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lundump.o lundump.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lvm.o lvm.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lzio.o lzio.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lauxlib.o lauxlib.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lbaselib.o lbaselib.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o ldblib.o ldblib.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o liolib.o liolib.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lmathlib.o lmathlib.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o loslib.o loslib.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o ltablib.o ltablib.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lstrlib.o lstrlib.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o loadlib.o loadlib.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o linit.o linit.c</span><br><span class="line">ar rcu liblua.a lapi.o lcode.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o lmem.o lobject.o lopcodes.o lparser.o lstate.o lstring.o ltable.o ltm.o lundump.o lvm.o lzio.o lauxlib.o lbaselib.o ldblib.o liolib.o lmathlib.o loslib.o ltablib.o lstrlib.o loadlib.o linit.o     <span class="comment"># DLL needs all object files</span></span><br><span class="line">ranlib liblua.a</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o lua.o lua.c</span><br><span class="line">gcc -o lua  lua.o liblua.a -lm -lreadline</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o luac.o luac.c</span><br><span class="line">gcc -O2 -Wall -DLUA_USE_LINUX   -c -o print.o print.c</span><br><span class="line">gcc -o luac  luac.o print.o liblua.a -lm -lreadline</span><br><span class="line">make[2]: Leaving directory `/private/var/root/lua-5.1.5/src<span class="string">&#x27;</span></span><br><span class="line"><span class="string">make[1]: Leaving directory `/private/var/root/lua-5.1.5/src’</span></span><br><span class="line"><span class="string">src/lua test/hello.lua</span></span><br><span class="line"><span class="string">Hello world, from Lua 5.1!</span></span><br></pre></td></tr></table></figure><p>完工！测试一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ src/lua</span><br><span class="line">Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio</span><br><span class="line">&gt;</span><br><span class="line"></span><br><span class="line">$ src/luac</span><br><span class="line">src/luac: no input files given</span><br><span class="line">usage: src/luac [options] [filenames].</span><br><span class="line">Available options are:</span><br><span class="line">  -        process stdin</span><br><span class="line">  -l       list</span><br><span class="line">  -o name  output to file <span class="string">&#x27;name&#x27;</span> (default is <span class="string">&quot;luac.out&quot;</span>)</span><br><span class="line">  -p       parse only</span><br><span class="line">  -s       strip debug information</span><br><span class="line">  -v       show version information</span><br><span class="line">  --       stop handling options</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> Lua </tag>
            
            <tag> Development </tag>
            
            <tag> Compile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 USB Multiplex Daemon (usbmuxd) 连接 iOS 设备</title>
      <link href="/2014/09/13/use-usb-multiplex-daemon-to-connect-ios-device/"/>
      <url>/2014/09/13/use-usb-multiplex-daemon-to-connect-ios-device/</url>
      
        <content type="html"><![CDATA[<p>最近跟几个朋友一起玩儿「<a href="http://d.longtugame.com/">刀塔传奇</a>」，然后老毛病又烦了，想了解一下游戏的构成，于是乎又要反汇编和反编译了。为了达到这个目的，一个越狱的 iOS 设备是必须的啦。另外，每次都要通过 Wifi 来连接，也让人很不爽，毕竟 iOS 设备过一会儿就会自动锁屏。虽然可以通过手动设置不锁屏，但是又非常的耗电，于是乎就找了之前用开的 usbmuxd，也便有了此文。</p><span id="more"></span><p>usbmuxd 原来由 <a href="https://marcan.st/blog/iphonelinux/usbmuxd/">Hector Martin</a> 负责维护，不过现在已经变更为 Nikias Bassen 在维护了。其官方地址为：<a href="http://cgit.sukimashita.com/usbmuxd.git/">http://cgit.sukimashita.com/usbmuxd.git/</a>。</p><p>通过使用如下 Git 命令，可以获得最新的开发版源码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> http://git.sukimashita.com/usbmuxd.git</span><br></pre></td></tr></table></figure><p>不过这货好像还要编译神马的，太麻烦了。到处翻看了一下，还有一个 <a href="http://cgit.sukimashita.com/libusbmuxd.git/">libusbmuxd</a>，好了就是你了！在 Mac 系统下直接调用 Python 客户端方式使用。</p><p>先用 Git 从代码仓库把 libusbmuxd 扒下来先：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> http://cgit.sukimashita.com/libusbmuxd.git</span><br></pre></td></tr></table></figure><p>进入 Python 客户端目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> libusbmuxd/python-client</span><br></pre></td></tr></table></figure><p>运行 Python 客户端，并将 SSH 端口映射到 2222：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python tcprelay.py -t 22:2222</span><br><span class="line">Forwarding <span class="built_in">local</span> port 2222 to remote port 22</span><br></pre></td></tr></table></figure><p>最后，愉快地通过 USB 连接我们的 iOS 设备吧！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -p 2222 root@localhost</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> SSH </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>囚徒健身训练记录</title>
      <link href="/2014/09/04/convict-conditioning-exercises/"/>
      <url>/2014/09/04/convict-conditioning-exercises/</url>
      
        <content type="html"><![CDATA[<p><span style="float: right"><img src="/2014/09/04/convict-conditioning-exercises/convict-conditioning-cover-zh.jpg" class=""></span></p><p>前段时间由于加班时间过多，导致到身体严重不适，终于某天意识到自己在这样下去，终有一天会暴毙的。于是乎开始上网寻找循序渐进的健身方法，进而发现了囚徒健身。为了更好的将健身进行下去，并监督自己，便有了这篇博文。</p><p>想了解「囚徒健身」 (Convict Conditioning) 的同学，可以参考一下<a href="http://book.douban.com/subject/25717097/">豆瓣读书上面的用户评价</a>。</p><p>如果已经了解，想要直接开始的，可以<a href="http://www.amazon.cn/dp/B00ESZ081E/">猛击这里去亚马逊购买中文版</a>。建议英文好的同学可以<a href="http://www.amazon.com/dp/B004XIZN5M/">去 Amazon 购买英文 Kindle 版</a>的，感觉有部分的翻译还是有点奇怪。</p><p>好的身体才是革命的本钱，好好改造，积极锻炼，争取早日「出狱」。</p><span id="more"></span><table><thead><tr><th align="left">日期</th><th align="left">事件</th></tr></thead><tbody><tr><td align="left">2014-09-14</td><td align="left">Pushups 升级到 Incline pushups 了。</td></tr><tr><td align="left">2014-09-12</td><td align="left">Pullups 升级到 Horizontal pulls 了。原以为很简单，结果做了 3 个就趴了，囧rz</td></tr><tr><td align="left">2014-09-10</td><td align="left">将每天锻炼 2 个项目，调整为每天锻炼 1 个项目</td></tr><tr><td align="left">2014-09-01</td><td align="left">将训练调整为每周 6 次，每次进行 2 项训练，直到将基础的 4 式练到 Level 6</td></tr><tr><td align="left">2014-08-26</td><td align="left">开始进行囚徒健身训练</td></tr></tbody></table><p>正在进行的项目的晋级表（将根据完成情况逐步更新，高亮显示的为所处的训练阶段）：</p><table><thead><tr><th align="center">Exercise</th><th align="center">Level 1</th><th align="center">Level 2</th><th align="center">Level 3</th><th align="center">Level 4</th><th align="center">Level 5</th><th align="center">Level 6</th><th align="center">Level 7</th><th align="center">Level 8</th><th align="center">Level 9</th><th align="center">Level 10</th></tr></thead><tbody><tr><td align="center">Pushups</td><td align="center">Wall pushups</td><td align="center"><span style="background: #EEE">Incline pushups</span></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">1 x 10<br />2 x 25<br />3 x 50</td><td align="center">1 x 10<br />2 x 20<br />3 x 40</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">Squats</td><td align="center"><span style="background: #EEE">Shoulderstand squats</span></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">1 x 10<br />2 x 25<br />3 x 50</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">Pullups</td><td align="center">Vertical pulls</td><td align="center"><span style="background: #EEE">Horizontal pulls</span></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">1 x 10<br />2 x 20<br />3 x 40</td><td align="center">1 x 10<br />2 x 20<br />3 x 30</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">Leg raises</td><td align="center"><span style="background: #EEE">Kee tucks</span></td><td align="center">Flat Knee Raises</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">1 x 10<br />2 x 25<br />3 x 40</td><td align="center">1 x 10<br />2 x 20<br />3 x 35</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">Bridges</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">Handstand pushups</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Fitness </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fitness </tag>
            
            <tag> Convict Conditioning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Hexo 替换 WordPress</title>
      <link href="/2014/09/03/use-hexo-instead-of-wordpress/"/>
      <url>/2014/09/03/use-hexo-instead-of-wordpress/</url>
      
        <content type="html"><![CDATA[<p>很久没有更新博客了，原因是多方面的，懒惰是其中不可或缺的重要的一部分。这几天看见 <a href="http://jasonbq.github.io/">Jason 同学</a> 在折腾 <a href="http://octopress.org/">Octopress</a>，然后心血来潮，又想起了我那可怜的万年没有更新过的 WordPress 博客，遂决定更新一下博客。结果发现，因为多次迁移服务商，已经导致大部分的数据都丢失了，最新可以运行的博客上面，也只有一个 Hello world 而已。因此在想有没有什么方法，可以类似像 Evernote 一样，本地也可以保存，又可以快速切换不同的服务器的。</p><span id="more"></span><p>结果就是找到了 <a href="https://pages.github.com/">GitHub Pages</a> 上面推荐的 <a href="http://jekyllrb.com/">Jekyll</a>，这货是用 Ruby 写的，在 Mac 下原生自带 Ruby，理论上来讲应该是不错的选择，更何况是 GitHub 官方推荐的。但是 Google 了一下发现，这货好像比较慢，而且在经过了长时间的使用之后，会变得异常缓慢，同时配置各方面貌似也不是很方便，PASS 掉了。接下来发现了 Jason 同学玩儿的 Octopress，也有不少人反应生成网站的速度非常的慢。虽然我估计我也写不了多少的东西，不过看到这么多人「投诉」，那就也 PASS 掉吧。</p><p>最后发现了 <a href="http://hexo.io/">Hexo</a> 这个东西，用 <a href="http://nodejs.org/">Node.js</a> 开发的一个类 Jekyll 的东东，简单看了一下，貌似还不错的样子，于是乎，就有了这篇博文。配置的过程中发生了点小插曲，就是 <a href="https://disqus.com/">Disqus</a> 的评论功能一直无法开启，折腾了很久，最后的原因竟然是因为使用了旧的 Light 模板。看来不是你想要什么模板，就能用什么模板的，还是切换成系统默认的 Landscape 模板吧。</p><p>生活中还是有很多值得记录的，有了这个「本地」的博客系统，不需要数据库，甚至都不需要服务器，希望能更多的记录生活中的点点滴滴吧，无论是生活感悟，还是技术上的，都留下点东西吧。：）</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> WordPress </tag>
            
            <tag> Node.js </tag>
            
            <tag> Octopress </tag>
            
            <tag> Jekyll </tag>
            
            <tag> GitHub </tag>
            
            <tag> Ruby </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
