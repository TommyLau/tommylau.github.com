<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tommy 的自留地</title>
  <icon>https://www.gravatar.com/avatar/6077bf36dffecae0f0cbcd4036924e1b</icon>
  <subtitle>不以物喜，不以己悲</subtitle>
  <link href="https://tommy.net.cn/atom.xml" rel="self"/>
  
  <link href="https://tommy.net.cn/"/>
  <updated>2025-02-19T05:44:18.000Z</updated>
  <id>https://tommy.net.cn/</id>
  
  <author>
    <name>Tommy Lau</name>
    <email>tommy@gen-new.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>给带 QMK 功能的 Keychron 键盘增加 Apple 的 Globe 键</title>
    <link href="https://tommy.net.cn/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/"/>
    <id>https://tommy.net.cn/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/</id>
    <published>2025-02-19T04:15:56.000Z</published>
    <updated>2025-02-19T05:44:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/apple_globe_key.jpg" alt="Apple Globe Key"></p><h2 id="为什么又发神经？"><a href="#为什么又发神经？" class="headerlink" title="为什么又发神经？"></a>为什么又发神经？</h2><h3 id="一个全屏快捷键引发的故事"><a href="#一个全屏快捷键引发的故事" class="headerlink" title="一个全屏快捷键引发的故事"></a>一个全屏快捷键引发的故事</h3><p>事情是这样的，某天我在用倒霉的 Microsoft Teams 开会的时候，我习惯性地使用 <code>^ + ⌘ + F</code> 快捷键尝试全屏显示。</p><p>结果反复按了几次快捷键都没有反应，我就奇了怪了，为什么不行呢？以前都可以的。</p><p>结果发现 Teams 的快捷键变了，跟原来的不一样了。如下图：</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/teams_fullscreen_shortcut.png"></p><p>是不是只有 Teams 在作妖，其它的应用呢？是不是快捷键也变了？</p><p>于是我打开了万年不用的 Safari 和 Chrome，hmm……</p><span id="more"></span><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/safari_fullscreen_shortcut.png"></p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/chrome_fullscreen_shortcut.png"></p><p>buer，苹果你这么玩儿是吧？！没事儿就瞎改快捷键是吧？！</p><p>行行行～～～你赢了，我改习惯还不行吗？不就是 <code>🌐︎ + F</code> 吗？</p><p>盐鹅，一顿操作猛如虎，发现我这「高级」的 Keychron 货，并不是尊贵的苹果键盘，根本没有 <code>🌐︎</code> 键啊……</p><h3 id="自信满满的-QMK-VIA-之旅"><a href="#自信满满的-QMK-VIA-之旅" class="headerlink" title="自信满满的 QMK + VIA 之旅"></a>自信满满的 QMK + VIA 之旅</h3><p>那怎么办？简单，咱这可是带 QMK 固件，支持 VIA 的高级货。</p><p>理论上来说，简单地修改一下配置，就可以实现 <code>🌐︎</code> 键的映射。</p><p>又天真了不是？！人家苹果的 <code>🌐︎</code> 键，那可是仅属于苹果的存在，「杂牌货」的 Keychron 不配。</p><p>就算在 Keychron 里面配置了 <code>fn</code> 键，也无法在 macOS 上成功激活 <code>🌐︎</code> 键。</p><h2 id="探索之旅"><a href="#探索之旅" class="headerlink" title="探索之旅"></a>探索之旅</h2><p>不信邪的我，开始了漫长的寻找解决方案之路……</p><h3 id="历代的苹果-Magic-Keyboard"><a href="#历代的苹果-Magic-Keyboard" class="headerlink" title="历代的苹果 Magic Keyboard"></a>历代的苹果 Magic Keyboard</h3><p>寻找的过程中，发现了一些苹果键盘变化的蛛丝马迹。</p><p>比如说，第一代的苹果 Magic Keyboard 是没有 <code>🌐︎</code> 键的，只有 <code>fn</code> 键。如下图：</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/magic_keyboard_1st_gen.png" alt="第一代的苹果 Magic Keyboard"></p><p>然后到了第二代的时候，苹果在键盘的右上角增加了一个 <code>🌐︎</code> 键和 <code>fn</code> 键共用的按键。如下图：</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/magic_keyboard_2nd_gen.png" alt="第二代的苹果 Magic Keyboard"></p><p>到了最新的第三代嘛，你懂的，苹果直接把 <code>🌐︎</code> 和 <code>fn</code> 键布置到了键盘的左下角，成为了新的「修饰键」（Modifier Keys）。如下图：</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/magic_keyboard_3rd_gen.png" alt="第三代的苹果 Magic Keyboard"></p><p>至此，恭喜 <code>fn</code> 键成功晋级为 <code>🌐︎</code> 键，并成为了 macOS 中的「修饰键」（Modifier Keys）。</p><p>从此在 macOS 中，和 <code>Control</code>、<code>Option</code>、<code>Command</code> 一样，拥有了「一席之地」。</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/modifier_keys.png" alt="macOS 中的「修饰键」（Modifier Keys）"></p><h3 id="开始找解题思路"><a href="#开始找解题思路" class="headerlink" title="开始找解题思路"></a>开始找解题思路</h3><p>看一下 QMK 官方的 Issue 里面就有一个 <a href="https://github.com/qmk/qmk_firmware/issues/16651">Add support for globe key (🌐︎︎) for macOS&#x2F;iPadOS&#x2F;iOS</a> 的讨论。</p><p>发现并没有什么好的解决方案，然后就顺藤摸瓜，找到了 <a href="https://gist.github.com/fauxpark/010dcf5d6377c3a71ac98ce37414c6c4">QMK Apple Fn Key</a> 这篇文章。</p><p>文中提到的方法，需要修改 USB 设备的 VID 和 PID，伪装成苹果的键盘，才能在 macOS 中正常使用。</p><p>个人使用来看似乎没什么问题，但是 VID 和 PID 也是要通过 USB 联盟认证的，直接修改 VID 和 PID 似乎有点不太优雅。</p><p>不过在搜索的过程中，发现了一个苹果的 <a href="https://developer.apple.com/accessories/Accessory-Design-Guidelines.pdf">Accessory Design Guidelines</a> 文档，里面提到了苹果的 <code>🌐︎</code> 键。哎嗨，这不就是我想要的吗？</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/hid_consumer_globe_key.png" alt="Hid Consumer Globe Key"></p><h2 id="又到了快乐编程时间"><a href="#又到了快乐编程时间" class="headerlink" title="又到了快乐编程时间"></a>又到了快乐编程时间</h2><p>经过了 N 个小时漫长的代码阅读，终于掌握了 Keychron QMK 实现的精髓。</p><p>这里省略一万字的心酸历程，直接上干货。</p><h3 id="增加相对应的-Keycode"><a href="#增加相对应的-Keycode" class="headerlink" title="增加相对应的 Keycode"></a>增加相对应的 Keycode</h3><h4 id="data-constants-keycodes-keycodes-0-0-2-basic-hjson"><a href="#data-constants-keycodes-keycodes-0-0-2-basic-hjson" class="headerlink" title="data/constants/keycodes/keycodes_0.0.2_basic.hjson"></a><code>data/constants/keycodes/keycodes_0.0.2_basic.hjson</code></h4><p>原始的 QMK 中，并没有 <code>KC_GLOBE</code> 这个 Keycode，所以需要我们自己增加。</p><p>先修改 <code>data/constants/keycodes/keycodes_0.0.2_basic.hjson</code> 文件，增加相对应的 Keycode。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;0x00C3&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;media&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;KC_GLOBE&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Apple Globe/FN Key&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;aliases&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;KC_GLOB&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>在原文件中，<code>0x00C2</code> 是 <code>KC_LAUNCHPAD</code> 的 Keycode，所以这里我们使用 <code>0x00C3</code> 作为 <code>KC_GLOBE</code> 的 Keycode。</p><p>并把 <code>KC_GLOB</code> 作为 <code>KC_GLOBE</code> 的别名。</p><h4 id="quantum-keycodes-h"><a href="#quantum-keycodes-h" class="headerlink" title="quantum/keycodes.h"></a><code>quantum/keycodes.h</code></h4><p>接下来修改 <code>quantum/keycodes.h</code> 文件，在 <code>enum qk_keycode_defines</code> 中增加相对应的 Keycode。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">qk_keycode_defines</span> &#123;</span></span><br><span class="line">    ...</span><br><span class="line">    KC_GLOBE = <span class="number">0x00C3</span>, <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">    ...</span><br><span class="line">    KC_GLOB    = KC_GLOBE, <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>还记得苹果的 <a href="https://developer.apple.com/accessories/Accessory-Design-Guidelines.pdf">Accessory Design Guidelines</a> 文档吗？</p><p>其中 <code>KC_GLOBE</code> 键对应的 Usage ID 是 <code>0x029D</code>，名称是 <code>AC Keyboard Layout Select</code>，属于 <code>HID Consumer Page</code>。</p><p>所以我们还需要对应的修改 <code>IS_CONSUMER_KEYCODE</code> 和 <code>CONSUMER_KEYCODE_RANGE</code> 的宏定义。</p><p>把原来的 <code>KC_LAUNCHPAD</code>(0x00C2) 宏定义替换为数值更高的 <code>KC_GLOBE</code>(0x00C3)。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> IS_CONSUMER_KEYCODE(code) ((code) &gt;= KC_AUDIO_MUTE &amp;&amp; (code) &lt;= KC_GLOBE) <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CONSUMER_KEYCODE_RANGE              KC_AUDIO_MUTE ... KC_GLOBE <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span></span><br></pre></td></tr></table></figure><h4 id="tests-test-common-keycode-table-cpp"><a href="#tests-test-common-keycode-table-cpp" class="headerlink" title="tests/test_common/keycode_table.cpp"></a><code>tests/test_common/keycode_table.cpp</code></h4><p>修改 <code>tests/test_common/keycode_table.cpp</code> 文件，增加相对应的 Keycode。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">std::map&lt;<span class="type">uint16_t</span>, std::string&gt; KEYCODE_ID_TABLE = &#123;</span><br><span class="line">    ...</span><br><span class="line">    &#123;KC_GLOBE, <span class="string">&quot;KC_GLOBE&quot;</span>&#125;, <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>至此，Keycode 部分的添加就算修改完成了。</p><h3 id="修改按键触发逻辑"><a href="#修改按键触发逻辑" class="headerlink" title="修改按键触发逻辑"></a>修改按键触发逻辑</h3><p>按键 Keycode 的定义有了，接下来就是修改按键触发逻辑了。</p><h4 id="HID-Consumer-上报"><a href="#HID-Consumer-上报" class="headerlink" title="HID Consumer 上报"></a>HID Consumer 上报</h4><p>文件：<code>tmk_core/protocol/report.h</code></p><p>要使得新增的 Keycode 可用，我们需要修改 HID Consumer 相关的代码。</p><p>本来我还想根据苹果的规范，自己添加映射的，但是发现已经有<a href="https://github.com/qmk/qmk_firmware/pull/22256">好心人做好了映射</a>，如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">consumer_usages</span> &#123;</span></span><br><span class="line">    <span class="comment">// 15.16 Generic GUI Application Controls</span></span><br><span class="line">    AC_NEXT_KEYBOARD_LAYOUT_SELECT = <span class="number">0x29D</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>那我们就直接使用这个映射，来修改 <code>KEYCODE2CONSUMER</code> 函数，增加对 <code>KC_GLOBE</code> 按键的支持。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">uint16_t</span> <span class="title function_">KEYCODE2CONSUMER</span><span class="params">(<span class="type">uint8_t</span> key)</span> &#123;</span><br><span class="line">    <span class="keyword">case</span> KC_GLOBE: <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">        <span class="keyword">return</span> AC_NEXT_KEYBOARD_LAYOUT_SELECT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Keychron-部分的实现"><a href="#Keychron-部分的实现" class="headerlink" title="Keychron 部分的实现"></a>Keychron 部分的实现</h4><p>因为我使用的是 Keychron 的键盘，所以修改的方式跟直接用 QMK 的不大一样。</p><p>需要修改 <code>keychron_common.h</code> 和 <code>keychron_common.c</code> 这两个文件，来增加对 <code>KC_GLOBE</code> 按键的支持。</p><p>文件：<code>keyboards/keychron/common/keychron_common.h</code></p><p>这个很简单，只需要在 <code>enum</code> 的 <code>NEW_SAFE_RANGE</code> 之前增加一个新的按键定义即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    ...</span><br><span class="line">    KC_APFN, <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">    NEW_SAFE_RANGE,</span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure><p>需要注意的是 <code>KC_APFN</code> 是我根据 Keychron 的固件代码，自己定义的一个按键。</p><p>这个名字不能与之前定义的 <code>KC_GLOBE</code> 相同，因为 <code>KC_GLOBE</code> 是 QMK 的 Keycode，而 <code>KC_APFN</code> 是 Keychron 的 Keycode。</p><p>这里一定要区分清楚，不要混淆了，后面在配置键盘 Keymap 的时候，还会用到这个定义。</p><p>文件：<code>keyboards/keychron/common/keychron_common.c</code></p><p>这个文件的修改也很简单，只需要在 <code>process_record_user</code> 函数中，增加对 <code>KC_APFN</code> 按键的判断即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">process_record_keychron_common</span><span class="params">(<span class="type">uint16_t</span> keycode, <span class="type">keyrecord_t</span> *record)</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> (keycode) &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">case</span> KC_APFN: <span class="comment">// Added by Tommy for Apple&#x27;s Globe Key, 2025-02-18</span></span><br><span class="line">            <span class="keyword">if</span> (record-&gt;event.pressed) &#123;</span><br><span class="line">                register_code(KC_GLOBE);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                unregister_code(KC_GLOBE);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// Skip all further processing of this key</span></span><br><span class="line">         <span class="keyword">default</span>:</span><br><span class="line">             <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// Process all other keycodes normally</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里就是把 Keychron 的 <code>KC_APFN</code> 转换为 QMK 的 <code>KC_GLOBE</code> 并通过 HID Consumer 协议发给系统。</p><p>当按键按下的时候，通过 <code>register_code(KC_GLOBE);</code> 注册 <code>KC_GLOBE</code> 按键。</p><p>当按键释放的时候，通过 <code>unregister_code(KC_GLOBE);</code> 注销 <code>KC_GLOBE</code> 按键。</p><h3 id="特定键盘的配置"><a href="#特定键盘的配置" class="headerlink" title="特定键盘的配置"></a>特定键盘的配置</h3><p>经过上面的修改，Keychron 的键盘就可以正常使用 <code>KC_GLOBE</code> 按键了。</p><p>但是对于特定的键盘，比如我现在正在使用的 K7 Max，我们还需要修改 Keymap 才能正常使用。</p><h4 id="Keymap-配置"><a href="#Keymap-配置" class="headerlink" title="Keymap 配置"></a>Keymap 配置</h4><p>Keymap 的配置，根据不同的键盘是不一样的。</p><p>我这里以我自己修改的 K7 Max 为例，只需把你想作为 <code>🌐︎</code> 的按键定义为 <code>KC_APFN</code> 即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">uint16_t</span> PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = &#123;</span><br><span class="line">    [MAC] = LAYOUT_ansi_68(</span><br><span class="line">        QK_GESC,          KC_1,     KC_2,     KC_3,     KC_4,     KC_5,     KC_6,     KC_7,     KC_8,     KC_9,     KC_0,     KC_MINS,  KC_EQL,   KC_BSPC,           KC_DEL,</span><br><span class="line">        KC_TAB,           KC_Q,     KC_W,     KC_E,     KC_R,     KC_T,     KC_Y,     KC_U,     KC_I,     KC_O,     KC_P,     KC_LBRC,  KC_RBRC,  KC_BSLS,           KC_HOME,</span><br><span class="line">        LT(FN1, KC_BSPC), KC_A,     KC_S,     KC_D,     KC_F,     KC_G,     KC_H,     KC_J,     KC_K,     KC_L,     KC_SCLN,  KC_QUOT,            KC_ENT,            KC_PGUP,</span><br><span class="line">        KC_LSFT,          KC_Z,     KC_X,     KC_C,     KC_V,     KC_B,     KC_N,     KC_M,     KC_COMM,  KC_DOT,   KC_SLSH,                      KC_RSFT,  KC_UP,   KC_PGDN,</span><br><span class="line">        KC_LCTL,          KC_LOPTN, KC_LCMMD,                               KC_SPC,                                 KC_RCMMD, KC_APFN,  MO(KCF),  KC_LEFT,  KC_DOWN, KC_RGHT),</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>像上面这样，在 <code>KC_RCMMD</code> 后面增加一个 <code>KC_APFN</code> 按键。</p><p>在键盘上的位置，就是空格右边 <code>⌘</code> 键再右边的 <code>fn1</code> 键，按下去就相当于按下了 <code>🌐︎</code> 键。</p><p>对于只使用 <code>🌐︎</code> 键切换输入法的朋友，看到这里就可以结束了。</p><p>但是对于想要使用 <code>🌐︎</code> 键作为修饰键的朋友，请继续往下看。</p><h4 id="Makefile-配置"><a href="#Makefile-配置" class="headerlink" title="Makefile 配置"></a>Makefile 配置</h4><p>文件：<code>keyboards/keychron/k7_max/ansi/rgb/keymaps/tommy/rules.mk</code></p><p>默认情况下，经过上述的修改，我们就可以正常使用 <code>🌐︎</code> 键了。</p><p>但这里有一个小问题，就是 QMK 默认情况下会使用不同的 USB Endpoint 来发送数据。</p><p>而苹果会把不同 Endpoint 的数据认为是独立的键盘输入，从而导致 <code>🌐︎ + 其他按键</code> 无法正常工作。</p><p>比如说，单独按 <code>🌐︎</code> 键，可以正常切换输入法。</p><p>但是当我按下 <code>🌐︎ + F</code> 键的时候，系统会认为我分别按下了 <code>🌐︎</code> 键和 <code>F</code> 键，而不是 <code>🌐︎ + F</code> 键。</p><p>所以，我们需要增加 <code>KEYBOARD_SHARED_EP = yes</code> 这个配置，让设备以 Shared Endpoint 的方式来发送数据。</p><p>这样，苹果会把不同 Endpoint 的数据认为是同一个键盘输入，从而使得 <code>🌐︎ + 其他按键</code> 可以正常工作。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KEYBOARD_SHARED_EP = yes</span><br></pre></td></tr></table></figure><p>如果不使用 VIA 功能的话，到这里就可以结束了。</p><p>但是要想临时改个按键什么的，也不能每次都编译固件吧？</p><p>既然来都来了，那么……</p><h4 id="VIA-支持"><a href="#VIA-支持" class="headerlink" title="VIA 支持"></a>VIA 支持</h4><p>文件：<code>keyboards/keychron/k7_max/via_json/k7_max_ansi_rgb_v1.0.json</code></p><p>其实也很简单，只需要在上述文件的 <code>customKeycodes</code> 字段中，增加 <code>APFn</code> 的定义即可。如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;customKeycodes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Globe Key&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Apple Globe/FN Key&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;shortName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;APFn&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>这样我们就可以在 VIA 中看到我们自定义的 <code>APFn</code>，也就是 <code>🌐︎</code> 按键了。</p><p>需要特别注意的是，我们之前编辑过的 Makefile 文件中，必须要有 <code>VIA_ENABLE = yes</code> 这个配置，否则 VIA 功能无法正常工作。</p><p>不过一般默认情况下，新的 Keychron 键盘都是默认开启 VIA 功能的。</p><p>综合上面的配置，Makefile 文件内容类似如下：</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">VIA_ENABLE = yes</span><br><span class="line">KEYBOARD_SHARED_EP = yes</span><br></pre></td></tr></table></figure><h3 id="编译固件"><a href="#编译固件" class="headerlink" title="编译固件"></a>编译固件</h3><p>我这里选择编译和烧录固件同时进行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make keychron/k7_max/ansi/rgb:tommy:flash</span><br></pre></td></tr></table></figure><p>编译成功后，会输出类似如下的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Linking: .build/keychron_k7_max_ansi_rgb_tommy.elf                                                  [OK]</span><br><span class="line">Creating binary load file <span class="keyword">for</span> flashing: .build/keychron_k7_max_ansi_rgb_tommy.bin                   [OK]</span><br><span class="line">Creating load file <span class="keyword">for</span> flashing: .build/keychron_k7_max_ansi_rgb_tommy.hex                          [OK]</span><br><span class="line"></span><br><span class="line">Size after:</span><br><span class="line">   text   data    bss    dec    hexfilename</span><br><span class="line">      0  61450      0  61450   f00akeychron_k7_max_ansi_rgb_tommy.bin</span><br><span class="line"></span><br><span class="line">Copying keychron_k7_max_ansi_rgb_tommy.bin to qmk_firmware folder                                   [OK]</span><br></pre></td></tr></table></figure><p>表示成功生成了可烧录的二进制文件 <code>keychron_k7_max_ansi_rgb_tommy.bin</code>。</p><p>接下来程序会进入刷机模式，并出现类似的提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Flashing <span class="keyword">for</span> bootloader: stm32-dfu</span><br><span class="line">Bootloader not found. Make sure the board is <span class="keyword">in</span> bootloader mode. See https://docs.qmk.fm/<span class="comment">#/newbs_flashing</span></span><br><span class="line"> Trying again every 0.5s (Ctrl+C to cancel)...</span><br></pre></td></tr></table></figure><p>这个时候我们需要把键盘上的开关调整到 <code>Cable</code> 模式，然后按住 <code>Esc</code> 键不放，再重新插入 USB 数据线。</p><p>找到 <code>DFU</code> 模式的设备后，程序会自动进入烧录阶段，出现类似如下的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">dfu-util 0.11</span><br><span class="line"></span><br><span class="line">Copyright 2005-2009 Weston Schmidt, Harald Welte and OpenMoko Inc.</span><br><span class="line">Copyright 2010-2021 Tormod Volden and Stefan Schmidt</span><br><span class="line">This program is Free Software and has ABSOLUTELY NO WARRANTY</span><br><span class="line">Please report bugs to http://sourceforge.net/p/dfu-util/tickets/</span><br><span class="line"></span><br><span class="line">Opening DFU capable USB device...</span><br><span class="line">Device ID 0483:df11</span><br><span class="line">Device DFU version 011a</span><br><span class="line">Claiming USB DFU Interface...</span><br><span class="line">Setting Alternate Interface <span class="comment">#0 ...</span></span><br><span class="line">Determining device status...</span><br><span class="line">DFU state(10) = dfuERROR, status(10) = Device<span class="string">&#x27;s firmware is corrupt. It cannot return to run-time (non-DFU) operations</span></span><br><span class="line"><span class="string">Clearing status</span></span><br><span class="line"><span class="string">Determining device status...</span></span><br><span class="line"><span class="string">DFU state(2) = dfuIDLE, status(0) = No error condition is present</span></span><br><span class="line"><span class="string">DFU mode device DFU version 011a</span></span><br><span class="line"><span class="string">Device returned transfer size 2048</span></span><br><span class="line"><span class="string">DfuSe interface name: &quot;Internal Flash  &quot;</span></span><br><span class="line"><span class="string">Downloading element to address = 0x08000000, size = 93740</span></span><br><span class="line"><span class="string">Erase   [=========================] 100%        93740 bytes</span></span><br><span class="line"><span class="string">Erase    done.</span></span><br><span class="line"><span class="string">Download[=========================] 100%        93740 bytes</span></span><br><span class="line"><span class="string">Download done.</span></span><br><span class="line"><span class="string">File downloaded successfully</span></span><br><span class="line"><span class="string">Submitting leave request...</span></span><br><span class="line"><span class="string">Transitioning to dfuMANIFEST state</span></span><br></pre></td></tr></table></figure><p>当 <code>Erase</code> 和 <code>Download</code> 都完成后，程序会自动退出烧录模式，并提示固件烧录成功。</p><p>键盘会自动重启，并进入正常工作模式。</p><h2 id="验证-VIA-模式"><a href="#验证-VIA-模式" class="headerlink" title="验证 VIA 模式"></a>验证 VIA 模式</h2><p>使用 USB 数据线连接键盘和电脑，并把键盘开关调整到 <code>Cable</code> 模式。</p><p>打开 <code>Chrome</code> 浏览器，访问 <code>https://usevia.app/</code>，会看到类似如下的界面：</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/usevia.png" alt="VIA Authorize"></p><p>点击 <code>Authorize</code> 按钮，选择 <code>Keychron K7 Max</code> 键盘并 <code>Connect</code>。</p><p>对于第一次使用的用户，我们需要开启 <code>Show Design tab</code> 选项，否则无法看到键盘的配置界面。</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/usevia_design.png" alt="VIA Design"></p><p>不管以前是否有加载过配置的 json 文件，我们都需要重新加载一次，因为我们刚才修改了 json 配置文件。</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/usevia_load.png"></p><p>点击 <code>Load</code> 按钮，选择我们刚才修改的 <code>keyboards/keychron/k7_max/via_json/k7_max_ansi_rgb_v1.0.json</code> 文件。</p><blockquote><p>注意：第一次使用的用户，需要重新 <code>Authorize</code> 并 <code>Connect</code> 一次键盘才能正常使用。</p></blockquote><p>然后我们切换到首页，就可以看到我们刚才定义的 <code>APFn</code> 按键，并可以正常配置键位了。</p><p><img src="/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/usevia_globe_key.png" alt="VIA Globe Key"></p><h2 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h2><p>最后，给大家分享一个 <code>🌐︎</code> 键的小彩蛋。</p><p>实际上，虽然 <code>🌐︎</code> 键与 <code>fn</code> 键共用一个按键，但是它与 <code>fn</code> 键并不相同。</p><p><code>🌐︎</code> 键仅用于系统快捷键，以下是目前我在新版 macOS 系统上会用到的一些快捷方式：</p><ul><li><code>🌐︎ + A</code>：把焦点转移到 Dock 栏，然后按应用的首字母，并输入 <code>↩︎</code> 可以快速切换到该应用。</li><li><code>🌐︎ + ⇧ + A</code>：打开应用程序库（Launchpad），按字母可以快速启动应用。</li><li><code>🌐︎ + D</code>：启动听写</li><li><code>🌐︎ + E</code>：选择 Emoji 表情</li><li><code>🌐︎ + H</code>：显示桌面</li><li><code>🌐︎ + C</code>：显示控制中心</li><li><code>🌐︎ + N</code>：显示通知中心</li><li><code>🌐︎ + Q</code>：启动快速笔记</li><li><code>🌐︎︎ + F</code>：进入全屏模式</li></ul><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><p>不会吧，不会吧，不会吧，真的有人能坚持看到这里？</p><p>好吧，既然你都看到这里了，那么……</p><p>你不会真的以为我会跟你分享源代码吧？</p><p>恭喜你，答对了！</p><p>相关源代码已上传到 GitHub 仓库，感兴趣的朋友可以参考下面的 Commit：</p><p><a href="https://github.com/TommyLau/qmk_firmware/commit/f403c031640d618dceeeb73d140ab4bf085ac251">https://github.com/TommyLau/qmk_firmware/commit/f403c031640d618dceeeb73d140ab4bf085ac251</a></p><p>Changelog 如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">feat: Add support for Apple Globe/FN key (KC<span class="emphasis">_GLOBE)</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">- Add new keycode KC_</span>GLOBE (0x00C3) for Apple&#x27;s Globe/FN key</span><br><span class="line"><span class="bullet">-</span> Implement KC<span class="emphasis">_APFN custom keycode in Keychron common code</span></span><br><span class="line"><span class="emphasis">- Update keycode tables and ranges to include the new Globe key</span></span><br><span class="line"><span class="emphasis">- Add Globe key to VIA JSON configuration</span></span><br><span class="line"><span class="emphasis">- Modify Tommy K7 Max keymap to use the Globe key</span></span><br><span class="line"><span class="emphasis">- Map Globe key to AC_</span>NEXT<span class="emphasis">_KEYBOARD_</span>LAYOUT<span class="emphasis">_SELECT in USB HID report</span></span><br><span class="line"><span class="emphasis">- Enable shared endpoint for better macOS compatibility</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">This change implements proper support for the Apple Globe/FN key,</span></span><br><span class="line"><span class="emphasis">allowing for better integration with macOS keyboard layout switching.</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://developer.apple.com/accessories/Accessory-Design-Guidelines.pdf">Accessory Design Guidelines for Apple Devices</a></li><li><a href="https://github.com/qmk/qmk_firmware/issues/16651">Add support for globe key (🌐︎︎) for macOS&#x2F;iPadOS&#x2F;iOS</a></li><li><a href="https://gist.github.com/fauxpark/010dcf5d6377c3a71ac98ce37414c6c4">QMK Apple Fn Key</a></li><li><a href="https://skip.house/blog/qmk-globe-key">Adding Globe Key (🌐︎) to QMK</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/apple_globe_key.jpg&quot; alt=&quot;Apple Globe Key&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;为什么又发神经？&quot;&gt;&lt;a href=&quot;#为什么又发神经？&quot; class=&quot;headerlink&quot; title=&quot;为什么又发神经？&quot;&gt;&lt;/a&gt;为什么又发神经？&lt;/h2&gt;&lt;h3 id=&quot;一个全屏快捷键引发的故事&quot;&gt;&lt;a href=&quot;#一个全屏快捷键引发的故事&quot; class=&quot;headerlink&quot; title=&quot;一个全屏快捷键引发的故事&quot;&gt;&lt;/a&gt;一个全屏快捷键引发的故事&lt;/h3&gt;&lt;p&gt;事情是这样的，某天我在用倒霉的 Microsoft Teams 开会的时候，我习惯性地使用 &lt;code&gt;^ + ⌘ + F&lt;/code&gt; 快捷键尝试全屏显示。&lt;/p&gt;
&lt;p&gt;结果反复按了几次快捷键都没有反应，我就奇了怪了，为什么不行呢？以前都可以的。&lt;/p&gt;
&lt;p&gt;结果发现 Teams 的快捷键变了，跟原来的不一样了。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2025/02/19/adding-apple-globe-key-to-keychron-qmk-based-keyboard/teams_fullscreen_shortcut.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;是不是只有 Teams 在作妖，其它的应用呢？是不是快捷键也变了？&lt;/p&gt;
&lt;p&gt;于是我打开了万年不用的 Safari 和 Chrome，hmm……&lt;/p&gt;</summary>
    
    
    
    <category term="Hardware" scheme="https://tommy.net.cn/categories/hardware/"/>
    
    
    <category term="Software" scheme="https://tommy.net.cn/tags/software/"/>
    
    <category term="Apple" scheme="https://tommy.net.cn/tags/apple/"/>
    
    <category term="Microsoft" scheme="https://tommy.net.cn/tags/microsoft/"/>
    
    <category term="macOS" scheme="https://tommy.net.cn/tags/macos/"/>
    
    <category term="Firmware" scheme="https://tommy.net.cn/tags/firmware/"/>
    
    <category term="Hardware" scheme="https://tommy.net.cn/tags/hardware/"/>
    
    <category term="Keyboard" scheme="https://tommy.net.cn/tags/keyboard/"/>
    
    <category term="Keychron" scheme="https://tommy.net.cn/tags/keychron/"/>
    
    <category term="QMK" scheme="https://tommy.net.cn/tags/qmk/"/>
    
    <category term="Teams" scheme="https://tommy.net.cn/tags/teams/"/>
    
    <category term="Keycode" scheme="https://tommy.net.cn/tags/keycode/"/>
    
  </entry>
  
  <entry>
    <title>AI 行业的浮躁与长期主义的迷失</title>
    <link href="https://tommy.net.cn/2025/02/13/ai-industry-hype-vs-longtermism/"/>
    <id>https://tommy.net.cn/2025/02/13/ai-industry-hype-vs-longtermism/</id>
    <published>2025-02-13T06:40:28.000Z</published>
    <updated>2025-02-13T09:17:01.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/02/13/ai-industry-hype-vs-longtermism/deepseek.jpg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>人工智能行业正处于一个空前的变革时期，然而，在这一波新的热潮中，我们不仅看到了技术的突破，也目睹了市场的浮躁、短视与急功近利的现象。DeepSeek-R1 的横空出世，本应成为行业技术进步的<strong>催化剂</strong>，然而各大企业的盲目跟风、行业内的过度营销，以及资本市场的短期逐利，正让 AI 行业陷入一场表面繁荣、实则暗藏危机的狂欢。</p><span id="more"></span><h2 id="车企的盲目跟风：技术升级还是营销噱头？"><a href="#车企的盲目跟风：技术升级还是营销噱头？" class="headerlink" title="车企的盲目跟风：技术升级还是营销噱头？"></a>车企的盲目跟风：技术升级还是营销噱头？</h2><p>在 DeepSeek-R1 发布后，各大车企争相宣布「AI 上车」。感觉 2025 过的不是春节，而是「AI 盛宴」。在春节前后，铺天盖地的都是某某车企实现 DeepSeek 上车，某某运营商全面整合 DeepSeek。但仔细分析不难发现，这些所谓的「智能升级」几乎都是营销噱头，对于业务本身没有任何实质性的技术变革。</p><p>甚至某些车企不过是换了一个语音助手，界面稍作调整，就宣称其车载系统进入了「AI 时代」。但真正的智能驾驶、深度学习优化的驾驶体验、基于大模型的驾驶决策等技术，却仍然处于停滞状态。</p><p>更讽刺的是，车企宣传的 DeepSeek 语音助手功能，更多是伪命题和假场景。试想在驾驶过程中，用户真的需要与 AI 进行深度对话吗？导航、音乐播放、车内温度调节，这些本来就已经通过简单的语音指令实现，而基于大模型的「对话能力」在行车场景中反而显得冗余且危险。</p><p>例如，一个驾驶员如果在高速行驶中与 DeepSeek 进行深度闲聊，反而会影响注意力，增加驾驶风险。而对于乘客而言，在狭小的车内空间用语音聊天的方式操作 AI，不仅缺乏隐私，实际体验也远不如直接使用手机。</p><p>此外，许多车企强调 DeepSeek 能够提供「智能陪伴」，但这不过是对用户需求的误判。真正的智能化体验应当是无感化、自动化，而不是让用户主动发出冗长的语音指令，等待 AI 理解、回应甚至纠正错误输入。</p><p>相较之下，直接使用手机上的 AI 助手或触控操作更加便捷高效。这些所谓的「车载 AI 语音交互」更多是一种宣传话术，而非实际刚需。</p><h2 id="AI-平台的价格战：低价竞争是进步还是自残？"><a href="#AI-平台的价格战：低价竞争是进步还是自残？" class="headerlink" title="AI 平台的价格战：低价竞争是进步还是自残？"></a>AI 平台的价格战：低价竞争是进步还是自残？</h2><p>在 AI 大模型市场上，另一种不健康的趋势也在加剧——<strong>「价格战」</strong>。</p><p>某些平台为了快速获取用户，推出「免费试用」、「超低价订阅」等策略，短期内看似带来了用户增长，但实质上削弱了企业自身的技术投入能力。</p><p>开发高效、可靠的大模型需要长期的资金、人力和算力投入，而低价竞争无疑会挤压研发预算，迫使技术团队削减创新投入，进而导致产品质量下降。</p><p>对于高度依赖算力和数据的 AI 行业而言，价格战不仅削弱企业自身的技术积累，还可能引发资金枯竭、算力受限、研发停滞等连锁反应，最终阻碍技术的长期发展。</p><p>这种短视行为在互联网行业早有先例：视频网站的低价会员战让整个行业陷入亏损泥潭；外卖平台的补贴大战短暂吸引了用户，却最终导致行业生态恶化。AI 行业若继续沿袭这种路径，等待它的将是技术倒退和信任崩塌。</p><h3 id="低价竞争的三大致命危害："><a href="#低价竞争的三大致命危害：" class="headerlink" title="低价竞争的三大致命危害："></a>低价竞争的三大致命危害：</h3><ol><li><strong>劣币驱逐良币，行业整体退化</strong>：当价格成为竞争的核心要素，企业会优先考虑降低成本，而非提升技术。结果就是，真正投入研发的公司被市场边缘化，而投机取巧、依赖低成本方案的企业反而占据主导。最终，整个行业进入恶性循环，用户被迫接受低质量的 AI 服务，而真正的技术创新被压制甚至消亡。</li><li><strong>数据与隐私安全隐患加剧</strong>：低价甚至「免费」的 AI 服务背后，真正的商业模式往往是「数据换取收益」。一些平台为了维持低成本运营，会选择牺牲用户数据的安全性，将隐私数据用于商业用途，甚至出售给第三方。长期来看，这不仅破坏了用户对 AI 的信任，也可能引发一系列法律与伦理问题。</li><li><strong>短期盈利导向，AI 研发进入死胡同</strong>：资本市场本质上是逐利的，当 AI 企业的收入模式围绕低价甚至免费展开，投资者的耐心也会被快速消耗。研发周期长、见效慢的创新项目将难以获得持续的资金支持，而短期见效快但缺乏技术突破的项目则会大行其道。长此以往，AI 行业的发展方向将偏离技术升级，最终进入创新停滞的死胡同。</li></ol><h2 id="本地模型的迷思：宣传噱头还是技术倒退？"><a href="#本地模型的迷思：宣传噱头还是技术倒退？" class="headerlink" title="本地模型的迷思：宣传噱头还是技术倒退？"></a>本地模型的迷思：宣传噱头还是技术倒退？</h2><h3 id="本地模型：性能与宣传的巨大落差"><a href="#本地模型：性能与宣传的巨大落差" class="headerlink" title="本地模型：性能与宣传的巨大落差"></a>本地模型：性能与宣传的巨大落差</h3><p>随着 DeepSeek 的大火，最近一股新的潮流正在悄然兴起——本地部署 AI 模型。各大博主大肆宣扬以「小而美」为卖点的本地 AI 部署方案，号称人人都可以拥有自己的 DeepSeek-R1 模型。</p><p>而实际上使用的都是经过蒸馏处理后的产物。这种模型虽然体积较小、资源占用低，但其能力却远远无法与云端的大规模模型相媲美。以 DeepSeek-R1 的 671B 参数量为例，它在推理能力、理解能力和上下文记忆方面都远超本地小模型。</p><p>更关键的是，本地小模型的反馈准确性存在严重问题。经过测试发现，在一些专业领域中（如医学诊断），同样的输入文本可能会得到完全不同的输出结果。</p><p>例如：某肿瘤诊断报告被 671B 模型判断为「0.8 cm」，而某些本地 7B 模型却给出「0.1 cm」的结论——这种误差会对用户造成严重误导，甚至可能导致严重的医疗误判，危及患者生命。</p><p>这不仅仅是计算能力的差距，而是 AI 认知能力、数据训练规模和算法优化层面的全方位落后。</p><h3 id="被夸大的-AI-焦虑：谁在赚吆喝？"><a href="#被夸大的-AI-焦虑：谁在赚吆喝？" class="headerlink" title="被夸大的 AI 焦虑：谁在赚吆喝？"></a>被夸大的 AI 焦虑：谁在赚吆喝？</h3><p>有人认为，本地部署是一种技术进步。但在我看来，这可能是 AI 行业短暂的的一种「技术倒车」现象。</p><p>当前社会中，关于 AI 的讨论往往陷入两个极端：一边是过度鼓吹 AI 将取代人类工作的恐慌论调，另一边则是夸大 AI 能力的神话叙事。很多人声称「不会使用 AI 就会失业」、「AI 就是新的生产力工具」、「用 AI 就能日入斗金」等等。这些言论的本质是一种焦虑营销术。</p><p>试问：如果 AI 真的能够如此轻易地创造财富，为什么那些鼓吹者还要急于贩卖「致富秘籍」，而不是自己「闷声赚大钱」？吃饱了撑的，闲的没事儿干，为了早日实现共产主义？！</p><p>事实是，现阶段 AI 的变现能力依然非常有限。与其说他们是在传播技术，不如说他们是在贩卖焦虑、兜售课程。这才是他们真正的「致富秘籍」。</p><p>更荒诞的是，某些所谓的 AI 教练或顾问，将自己的成功归功于 AI 工具的使用，并声称普通人只要学会这些工具就能轻松实现财富自由。这种宣传不仅夸大了 AI 的能力，更是对用户心智的一种误导。它让人们误以为技术门槛已经降低到零，从而忽略了真正需要培养的专业技能和行业经验。</p><p>而现实是，<strong>AI 工具只能降低部分重复性工作的门槛</strong>，但真正能创造价值的，仍然是<strong>人的深度思考和专业知识</strong>。</p><h2 id="Tommy-怎么看？"><a href="#Tommy-怎么看？" class="headerlink" title="Tommy 怎么看？"></a>Tommy 怎么看？</h2><p>一句话，现在就是：「全民狂欢下的技术降级」。</p><h3 id="出路：回归理性与长期主义"><a href="#出路：回归理性与长期主义" class="headerlink" title="出路：回归理性与长期主义"></a>出路：回归理性与长期主义</h3><ol><li><strong>企业应摒弃短视，专注技术积累</strong>：AI 行业的健康发展，必须依靠长期的技术投入，而不是短期的市场炒作。企业应将更多资源投入到基础研究、数据优化、模型训练等关键环节，而不是一味迎合市场热点。</li><li><strong>车企与应用企业应理性选择合作伙伴</strong>：对于汽车、智能家居等下游应用企业来说，在选择 AI 合作伙伴时，不能仅凭市场热度做决定，而应真正考察技术能力、产品落地效果和长期可持续性。</li><li><strong>行业监管与用户教育的必要性</strong>：监管机构应加强对 AI 行业的审查，避免市场被低质量产品和虚假宣传占据。同时，加强对用户的科普，让公众能够更好地理解 AI 技术，形成健康的市场环境。</li><li><strong>AI 从业者应坚持长期主义</strong>：对于真正的 AI 从业者而言，最重要的是保持理性，坚持长期主义，专注于技术创新，而不是被市场的短期波动所左右。</li></ol><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>当前的 AI 行业正处于关键的发展节点，DeepSeek-R1 的成功不仅是一个行业标杆，也是一面镜子，映照出市场的浮躁与短视。</p><p>AI 不是万能的，它不是神话，也不是洪水猛兽。只有理性地理解其能力边界，并将其真正应用于生活、工作和社会发展的实际需求中，才能释放技术的价值并实现可持续发展。</p><p>与其沉醉于 AI 的未来想象，不如聚焦它已经带来的改变；与其追求所谓的「颠覆性创新」，不如脚踏实地解决实际问题。这才是技术发展的真正意义所在。</p><p>好了，我要用 DeepSeek 去「日入斗金」了，你信吗？🐶</p><blockquote><p>PS: 这个时候，我是不是该顺势留个联系方式，再来一句「评论 666 送你价值 3,999 元的 DeepSeek 百宝书，手把手教你在家躺赚 100 万，轻松实现财富自由」？😏</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/02/13/ai-industry-hype-vs-longtermism/deepseek.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;人工智能行业正处于一个空前的变革时期，然而，在这一波新的热潮中，我们不仅看到了技术的突破，也目睹了市场的浮躁、短视与急功近利的现象。DeepSeek-R1 的横空出世，本应成为行业技术进步的&lt;strong&gt;催化剂&lt;/strong&gt;，然而各大企业的盲目跟风、行业内的过度营销，以及资本市场的短期逐利，正让 AI 行业陷入一场表面繁荣、实则暗藏危机的狂欢。&lt;/p&gt;</summary>
    
    
    
    <category term="Opinion" scheme="https://tommy.net.cn/categories/opinion/"/>
    
    
    <category term="Opinion" scheme="https://tommy.net.cn/tags/opinion/"/>
    
    <category term="Industry" scheme="https://tommy.net.cn/tags/industry/"/>
    
    <category term="AI" scheme="https://tommy.net.cn/tags/ai/"/>
    
    <category term="DeepSeek" scheme="https://tommy.net.cn/tags/deepseek/"/>
    
  </entry>
  
  <entry>
    <title>M1 MacBook Pro 系统恢复指南</title>
    <link href="https://tommy.net.cn/2025/02/10/restore-m1-macbook-pro/"/>
    <id>https://tommy.net.cn/2025/02/10/restore-m1-macbook-pro/</id>
    <published>2025-02-10T12:07:16.000Z</published>
    <updated>2025-02-19T05:47:01.220Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/02/10/restore-m1-macbook-pro/macbook-pro-16-inch.jpg" alt="MacBook Pro"></p><h2 id="背景描述"><a href="#背景描述" class="headerlink" title="背景描述"></a>背景描述</h2><p>之前为了研究如何在 Linux Shell 下运行 Unreal Engine，给 MacBook Pro 安装了原生的 Ubuntu，并在安装系统时创建了一个 ext4 分区。</p><p>最近想恢复 macOS，于是按照以往使用 Intel 处理器 MacBook Pro 的陈年经验，不加思索地进入 Recovery，尝试删除整个磁盘并重新分区。结果毫无意外的，悲剧发生了……</p><p>因为 Apple 自带的磁盘处理工具无法删除 ext4 分区，于是用命令行删除了 ext4 和 APFS 分区，想着反正都是要重装，最后删掉其它分区一起重装就好了。结果发现有 2 个分区无法删除！</p><span id="more"></span><p>只要尝试抹除整个磁盘，就会报如下错误：</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The volume <span class="keyword">on</span> disk0 couldn<span class="symbol">&#x27;t</span> be unmounted because it <span class="keyword">is</span> <span class="keyword">in</span> <span class="keyword">use</span> by <span class="keyword">process</span> <span class="number">0</span> (kernel)</span><br></pre></td></tr></table></figure><p>通过命令行查看磁盘状况如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-bash-3.2<span class="comment"># diskutil list disk0</span></span><br><span class="line">/dev/disk0 (internal, physical):</span><br><span class="line">  <span class="comment">#:                       TYPE NAME                     SIZE       IDENTIFIER</span></span><br><span class="line">  0:      GUID_partition_scheme                         *500.3 GB   disk0</span><br><span class="line">  1:             Apple_APFS_ISC Container disk1          524.3 MB   disk0s1</span><br><span class="line">                   (free space)                          494.4 GB   -</span><br><span class="line">  2:        Apple_APFS_Recovery Container disk2          5.4 GB     disk0s2</span><br></pre></td></tr></table></figure><p>查了一圈资料发现，Apple Silicon 处理器的启动代码和 Firmware 也是存储在 NVMe 里面的！而不是像 Intel 处理器那样有 UEFI，也就是说要想正常启动，就无法删除这 2 个分区，否则系统就启动不起来，Recovery 也无法进入。</p><p>既然删不掉，那我们就换个思路，尝试从 U 盘引导系统（Intel 时代也是可以的）然后再重新分区。结果因为安全限制，Apple 完全不允许从外部设备引导，也就是说无法使用 U 盘重装系统。整一个大无语……🤦‍♂️</p><p>最后找到了 <a href="https://support.apple.com/en-us/108900">How to revive or restore Mac firmware</a> 这篇文章，才终于解决了系统的问题，不然就得亲自跑一趟苹果商店了。</p><p>而本文就是基于 Apple 官方支持文档，对如何恢复 M1 MacBook Pro 固件和操作系统所做的一个详细记录，方便跟我一样搞坏了系统的小伙伴恢复 macOS。</p><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在开始恢复操作之前，我们需要确保有以下设备和工具：</p><h3 id="设备要求"><a href="#设备要求" class="headerlink" title="设备要求"></a>设备要求</h3><ol><li><strong>需要恢复的 Mac（受影响的 Mac）</strong>：<ul><li>适用于搭载 <a href="https://support.apple.com/en-us/116943"><strong>Apple Silicon（M1、M2、M3 等芯片）</strong></a> 或 <a href="https://support.apple.com/en-us/103265"><strong>Apple T2 安全芯片</strong></a> 的 Mac。</li><li>我这里需要恢复的是一台搭载了 M1 处理器的 13 寸 MacBook Pro。</li></ul></li><li><strong>另一台 Mac（辅助 Mac）</strong>：<ul><li>需要运行 <strong>macOS Sonoma 14 或更新版本</strong>。</li><li>该 Mac 用于执行恢复或复活操作。</li><li>可通过 <strong>“关于本机”</strong>（ 菜单 &gt; 关于本机）查看当前 macOS 版本。</li><li>我这里使用的是 M3 处理器的 14 寸 MacBook Pro，系统版本是 Sequoia 15.3。</li></ul></li></ol><h3 id="连接线"><a href="#连接线" class="headerlink" title="连接线"></a>连接线</h3><ul><li>需要一根 <strong>USB-C to USB-C 数据线</strong>，必须同时支持 <strong>数据传输和充电</strong>。</li><li><strong>推荐使用</strong> Apple 附带的 <strong>USB-C 充电线</strong>（如部分 Mac 和 iPad 包装内的线）。</li><li><strong>请勿使用</strong> Thunderbolt 3 线缆，因其可能导致连接失败。</li></ul><hr><h2 id="DFU-模式"><a href="#DFU-模式" class="headerlink" title="DFU 模式"></a>DFU 模式</h2><h3 id="USB-C-连接"><a href="#USB-C-连接" class="headerlink" title="USB-C 连接"></a>USB-C 连接</h3><ol><li><strong>确保两台 Mac 都连接到电源</strong>。<ul><li>我这里只给辅助 Mac 连接了电源，辅助 Mac 可以通过 USB-C 线直接给受影响的 Mac 供电。</li></ul></li><li><strong>在受影响的 Mac 上</strong>：<ul><li>将 <strong>USB-C 数据线</strong>插入 <strong>DFU 端口</strong>（请参考<a href="https://support.apple.com/en-us/120694">DFU 端口识别指南</a>）。</li><li>根据官方说明，我的 Mac 需要使用左侧最靠近屏幕的 USB-C 接口作为 DFU 端口。</li></ul></li><li><strong>在另一台 Mac 上</strong>：<ul><li>将 USB-C 数据线的另一端插入<strong>任何一个</strong> USB-C 端口。</li><li>确保该 Mac 已开机并连接到互联网。</li></ul></li></ol><h3 id="进入-DFU-模式"><a href="#进入-DFU-模式" class="headerlink" title="进入 DFU 模式"></a>进入 DFU 模式</h3><ol><li><strong>按住电源键（Touch ID）</strong> 最多 <strong>10 秒钟</strong>，直到 Mac 关闭。如果 Mac 开机了，请重试此步骤。</li><li><strong>按下并释放电源键</strong>，然后立即按住以下四个键 <strong>（ 必须用内置键盘）</strong>：<ul><li><strong>Control（⌃）</strong> 键（左侧）</li><li><strong>Option（⌥）</strong> 键（左侧）</li><li><strong>Shift（⇧）</strong> 键（右侧）</li><li><strong>电源键</strong><br><img src="/2025/02/10/restore-m1-macbook-pro/macbook-pro-keyboard-dfu-mode-startup-keyboard-combination-diagram.png" alt="MacBook Pro 键盘"></li></ul></li><li><strong>Apple Silicon 设备</strong>（例如 M1、M2 芯片的 Mac）：<ul><li>持续按住这四个键 <strong>约 10 秒钟</strong>，然后释放所有按键，除了电源键。</li><li>继续按住电源键，最长 <strong>10 秒钟</strong>，直到另一台 Mac 在 Finder 中显示 DFU 窗口。如果出现提示要求允许连接配件，释放电源键并点击 <strong>“允许”</strong>。</li></ul></li><li><strong>带 T2 芯片的 Mac</strong>（例如某些 Intel 设备）：<ul><li>持续按住这四个键 <strong>约 3 秒钟</strong>，直到另一台 Mac 在 Finder 中显示 DFU 窗口。如果出现提示要求允许连接配件，释放所有按键并点击 <strong>“允许”</strong>。</li></ul></li></ol><h3 id="进入-DFU-模式后的状态"><a href="#进入-DFU-模式后的状态" class="headerlink" title="进入 DFU 模式后的状态"></a>进入 DFU 模式后的状态</h3><p>受影响的 Mac 此时应显示一个空白屏幕，表示已成功进入 DFU 模式。接下来，按照后续步骤进行恢复或复活操作。</p><hr><h2 id="复活或恢复操作"><a href="#复活或恢复操作" class="headerlink" title="复活或恢复操作"></a>复活或恢复操作</h2><p>在按照上述步骤准备好两台 Mac 后，另一台 Mac 的 Finder 中应该会显示 DFU 窗口，左侧边栏选中 <strong>Mac</strong>，右侧会显示 <strong>“Mac DFU Mode”</strong>。如果看不到此窗口，请检查连接是否正确。</p><p><img src="/2025/02/10/restore-m1-macbook-pro/macos-sonoma-finder-mac-dfu-mode-revive-restore-firmware.png" alt="Mac DFU Mode"></p><h3 id="复活（Revive）与恢复（Restore）的区别"><a href="#复活（Revive）与恢复（Restore）的区别" class="headerlink" title="复活（Revive）与恢复（Restore）的区别"></a>复活（Revive）与恢复（Restore）的区别</h3><p>在 Mac 设备维修过程中，<strong>Revive</strong> 和 <strong>Restore</strong> 是两种不同的操作方式：</p><ul><li><strong>Revive（复活）</strong>：刷新设备的固件（Firmware），不会影响磁盘数据。如果 macOS 出现问题但磁盘仍然完整，可以尝试此方法。</li><li><strong>Restore（恢复）</strong>：除了刷新固件外，还会<strong>完全擦除</strong>内置存储设备，并重新安装最新版本的 macOS。因此，<strong>此操作会删除所有数据</strong>，请确保提前备份重要信息。</li></ul><p>当磁盘结构损坏、macOS 无法安装或 Mac 无法正常启动时，<strong>Restore（恢复）</strong> 是最直接且可靠的解决方案。</p><p>而我现在的情况正是如此，因此 <strong>Restore</strong> 是唯一的选择。</p><h3 id="复活（Revive）操作"><a href="#复活（Revive）操作" class="headerlink" title="复活（Revive）操作"></a>复活（Revive）操作</h3><p>建议首先尝试<strong>复活</strong>，因为这比恢复（Restore）速度快，且不会擦除 Mac 上的数据。</p><ol><li>在 Finder 中的 DFU 窗口中，点击 <strong>复活 Mac（Revive Mac）</strong>，然后点击 <strong>继续（Continue）</strong> 确认操作。</li><li>进度条会显示复活过程。当复活完成后，受影响的 Mac 会自动重启。如果自动关机，请按下电源键重新开机。</li><li>选择要恢复的卷（例如 <strong>Macintosh HD</strong>），然后点击 <strong>下一步（Next）</strong>。</li><li>选择用户，并输入登录密码，点击 <strong>下一步（Next）</strong>，然后点击 <strong>重启（Restart）</strong>。</li><li>如果是带 <strong>Apple Silicon（M1、M2 芯片）</strong> 的 Mac，复活后的 Mac 可能会加载启动选项，显示你的启动磁盘（例如 <strong>Macintosh HD</strong>）以及带齿轮图标的 <strong>选项（Options）</strong>。选择你的启动磁盘，然后点击下方出现的 <strong>继续（Continue）</strong> 按钮。</li><li>复活完成后，Mac 将完成启动，整个过程结束。</li></ol><h3 id="恢复（Restore）操作"><a href="#恢复（Restore）操作" class="headerlink" title="恢复（Restore）操作"></a>恢复（Restore）操作</h3><p>如果复活操作无法修复你的 Mac，请按照以下步骤进行恢复。恢复操作将擦除所有数据并将 Mac 恢复到出厂设置。</p><ol><li>在 Finder 中的 DFU 窗口中，点击 <strong>恢复 Mac（Restore Mac）</strong>，然后点击 <strong>恢复并更新（Restore and Update）</strong> 确认操作。<br><img src="/2025/02/10/restore-m1-macbook-pro/macos-restore-and-update.png" alt="Restore and Update"></li><li>进度条会显示恢复过程。当恢复完成后，受影响的 Mac 会自动重启。如果它关机了，请按下电源键重新开机。<br><img src="/2025/02/10/restore-m1-macbook-pro/macos-preparing-mac-for-restore.png" alt="Preparing Mac for restore ..."><br><img src="/2025/02/10/restore-m1-macbook-pro/macos-mac-has-been-restored.png" alt="Mac has been restored"></li><li>适用于 Apple Silicon 的 Mac：<br>a. 登录你之前用于此 Mac 的 <strong>Apple ID</strong>。<br>b. 设置助手启动后，按照提示完成设置。  </li><li>适用于带 T2 芯片的 Mac：<br>a. 恢复后的 Mac 启动时会显示旋转的地球图标，表示它通过互联网进入 <strong>macOS 恢复模式</strong>。选择语言后点击 <strong>下一步</strong>。<br>b. 登录你之前用于此 Mac 的 <strong>Apple ID</strong>，然后点击 <strong>退出到恢复（Exit to Recovery）</strong>。<br>c. 在恢复模式中选择安装或重新安装 macOS。<br>d. 安装完成后，Mac 会重启并启动设置助手。使用设置助手完成 Mac 的初始化配置。</li></ol><blockquote><p>注意：恢复操作需要从网上下载 macOS 固件，请确保辅助 Mac 可以联网。</p></blockquote><hr><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>恢复（Restore）是修复 M1 MacBook Pro 重大系统故障的最可靠方法。</p><p>当你电脑坏到完全不能用的时候，可以本着「死马当活马医」的精神，参考本文，说不定就能恢复如初。</p><p>如果尝试后，问题仍然无法解决，那么还是建议联系 Apple 支持或前往 Apple Store 进行维修。</p><p>最后，没事儿不要手欠研究新东西，因为凡事都有代价……不作死就不会死，🐶</p><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://support.apple.com/guide/apple-configurator-mac/revive-or-restore-a-mac-with-apple-silicon-apdd5f3c75ad/mac">Revive or restore a Mac with Apple silicon using Apple Configurator</a></li><li><a href="https://support.apple.com/en-us/108900">How to revive or restore Mac firmware</a></li><li><a href="https://support.apple.com/en-us/120694">How to identify the DFU port on Mac</a></li><li><a href="https://support.apple.com/en-us/HT211683">How to download and install macOS</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/02/10/restore-m1-macbook-pro/macbook-pro-16-inch.jpg&quot; alt=&quot;MacBook Pro&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;背景描述&quot;&gt;&lt;a href=&quot;#背景描述&quot; class=&quot;headerlink&quot; title=&quot;背景描述&quot;&gt;&lt;/a&gt;背景描述&lt;/h2&gt;&lt;p&gt;之前为了研究如何在 Linux Shell 下运行 Unreal Engine，给 MacBook Pro 安装了原生的 Ubuntu，并在安装系统时创建了一个 ext4 分区。&lt;/p&gt;
&lt;p&gt;最近想恢复 macOS，于是按照以往使用 Intel 处理器 MacBook Pro 的陈年经验，不加思索地进入 Recovery，尝试删除整个磁盘并重新分区。结果毫无意外的，悲剧发生了……&lt;/p&gt;
&lt;p&gt;因为 Apple 自带的磁盘处理工具无法删除 ext4 分区，于是用命令行删除了 ext4 和 APFS 分区，想着反正都是要重装，最后删掉其它分区一起重装就好了。结果发现有 2 个分区无法删除！&lt;/p&gt;</summary>
    
    
    
    <category term="Hardware" scheme="https://tommy.net.cn/categories/hardware/"/>
    
    
    <category term="macOS" scheme="https://tommy.net.cn/tags/macos/"/>
    
    <category term="Hardware" scheme="https://tommy.net.cn/tags/hardware/"/>
    
    <category term="MacBook" scheme="https://tommy.net.cn/tags/macbook/"/>
    
    <category term="System" scheme="https://tommy.net.cn/tags/system/"/>
    
    <category term="Restore" scheme="https://tommy.net.cn/tags/restore/"/>
    
    <category term="M1" scheme="https://tommy.net.cn/tags/m1/"/>
    
  </entry>
  
  <entry>
    <title>为什么身边越来越多「伪单身」？</title>
    <link href="https://tommy.net.cn/2023/08/28/the-rise-of-pseudo-singledom/"/>
    <id>https://tommy.net.cn/2023/08/28/the-rise-of-pseudo-singledom/</id>
    <published>2023-08-28T14:50:00.000Z</published>
    <updated>2025-02-19T05:47:01.220Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2023/08/28/the-rise-of-pseudo-singledom/romance.jpg"></p><h2 id="伪单身们"><a href="#伪单身们" class="headerlink" title="伪单身们"></a>伪单身们</h2><p>我是一个非常讨厌秀恩爱的人，但是比起秀恩爱，我更讨厌「伪单身」的行为。而比「伪单身」更让我厌恶的，是那些你无情戳穿他们「伪单身」假象时，依然「矢口否认」的人。</p><p>有的人认为「伪单身」是那些明明非单身，却对外宣称自己「单身」的人。可我认为这种不能称之为「伪单身」，而应该称之为「渣」！可以直接拉黑，把它们归类为「伪单身」是对「伪单身」人士极大的侮辱。</p><p>不同于表面上的宣称，伪单身指的是那些既不宣称自己单身，也不表露自己非单身，但却给人造成一种单身假象的错觉。</p><span id="more"></span><h2 id="为什么伪单身这么「香」"><a href="#为什么伪单身这么「香」" class="headerlink" title="为什么伪单身这么「香」"></a>为什么伪单身这么「香」</h2><p>在现在这个社交致死的年代，人们的个人生活已完全的网络化，但尚伴随着一层薄薄的隐私膜。</p><p>那些不宣称单身，也不故意示爱的人，似乎在保持自己的状态模糊性的同时，也给予了自己某种社交自由。</p><p>这种微妙的状态可以让人们更加自由地在社交圈中游走，不受单身与非单身的拘束。</p><p>现代人越来越多地强调个人的自由和多样性，将任性解读为个性和自我。</p><p>而伪单身者正是在个体选择与社会期待之间寻求着一种平衡，以一种更加隐晦的方式展现自己，从而获得更多的空间去追求自己所期望的生活（或者是想要别人看到的样子）。</p><p>男生伪单身，秀房子，秀票子，秀车子，秀肌肉，秀事业，是为了广撒网，向更多潜在的对象表白，争取更多的交配机会。</p><p>因为对于男人来说，其生物本能就是传宗接代，延续血脉。</p><p>女生伪单身，大概是对眼前人觉得不够满意，也许下一个更好呢？</p><p>女人的本能，就是找到靠谱的男人，一起抚养后代，并且要有足够的资源保障。</p><p>既然下一个「接盘侠」还没有出现，眼前的人还能提供「资源」，何不骑驴找马，慢慢寻觅？</p><p>还有人伪单身，也许是因为感情不确定，又或者纯粹的只是因为人有我有的心态，必须有个对象。</p><p>但两个人的爱情不咸不淡，食之无味弃之可惜，宛若鸡肋。</p><p>说是在一起吧，也就是有个人陪着看看电影，逛逛街，吃吃饭，唠唠嗑，也没什么更深入的交流。</p><p>但是你说分手吧，又觉得有个长期饭票，也总比「单身狗」感觉好点。</p><p>说白了，还是大家的「贪欲」在作怪，试问谁不想当《泰坦尼克》的主角，谈一场轰轰烈烈的爱情呢？</p><p>就算最后悲剧收场，那又如何，不也是「不在乎天长地久，只在乎曾经拥有了」吗？</p><p>而现实是，我们都只是普普通通的小人物，活在普普通通的小世界，过着普普通通的小生活，这种轰轰烈烈的爱情本就不属于你我。</p><p>而物质极大丰富的现代人，从小就饱受浪漫影视作品的「毒害」，岂能接受「柴米油盐酱醋茶」，这种中规中矩，毫无波澜的爱情？</p><p>所以伪单身男女们，内心一直在期望用一段完美的恋情，给自己的生命点缀上绚烂的色彩。</p><p>不伪单身，怎么有可能认识更多的人？又怎么可能产生新的机会？</p><p>只有广撒网才能钓到大鱼，似乎是小朋友都能理解的事情。</p><p>就算最后觅不到真命天子，男生也可以后宫佳丽三千，女生也可以花团锦簇，舔狗无数。岂不乐哉？</p><p>如此这般，睡梦中也会笑醒吧……「伪单身」真香！</p><h2 id="伪单身真的香吗？"><a href="#伪单身真的香吗？" class="headerlink" title="伪单身真的香吗？"></a>伪单身真的香吗？</h2><p>先说观点：</p><p>伪单身这种行为不仅影响个人心理，还可能伤害他人情感。</p><p>不单止影响恋人之间的感情，也有可能影响朋友之间的相处。</p><h3 id="内心"><a href="#内心" class="headerlink" title="内心"></a>内心</h3><p>伪单身者在维护他人对自己单身状态错觉的同时，往往也会面临内心的焦虑与矛盾。</p><p>他们需要时刻在自己的言行中保持一种微妙的平衡，以防止被人识破。</p><p>而被人识破以后，承认也不是，不承认也不是的尴尬状态，也会让某些人产生强烈地愤怒感。</p><p>这种不真实的生活状态会导致内心的紧张和不安，整日提心吊胆，又如何寻得内心平静？</p><h3 id="朋友"><a href="#朋友" class="headerlink" title="朋友"></a>朋友</h3><p>而说到朋友，当周遭的亲朋好友发现被伪单身者欺骗时，会产生严重的信任缺失。</p><p>进而导致到人际关系的疏远，甚至可能让别人产生被欺骗的感觉，从而伤害彼此之间的情感。</p><p>朋友之间本就不涉及情感问题，却都无法如实相告，我又如何相信你其他事情所言属实呢？</p><p>没有了「信任」的基础，朋友还做得下去吗？就算勉强还能做朋友，还能走得远吗？</p><h3 id="情感"><a href="#情感" class="headerlink" title="情感"></a>情感</h3><p>俗话说得好：「舔狗，舔狗，舔到最后一无所有」，这一切真的全是「舔狗」的错吗？被舔的人就没有错吗？还是说被舔的人一直在享受被舔的感觉？</p><p>因为大量伪单身人士的存在，让那些对伪单身者有好感的人，无法有效地判断伪单身者们的真实情感状态，进而产生错误地判断。</p><p>我相信除了少部分人，没有人那么热衷于「挖墙脚」这件事儿。毕竟，再喜欢，也会有道德层面的压力。</p><p>而那些伪单身者，很容易让「舔狗」们产生「被爱妄想症」，从而产生误导性的想法，进而导致感情的升温。</p><p>然而，一旦真相大白，会给别人造成深深的伤害和失望，影响到双方的情感和心理健康。</p><p>你真的不怕对方「宁为玉碎不为瓦全」，跟你来个「玉石俱焚」？这种新闻现在也屡见不鲜吧？</p><p>反而是让对方清楚地知道了自己的感情状态，让别人断了念想，说不定还能做个好朋友。</p><h2 id="胡言乱语"><a href="#胡言乱语" class="headerlink" title="胡言乱语"></a>胡言乱语</h2><p>伪单身现象的背后，我思考的是如何在社交互动中保持真实和尊重。</p><p>不仅为了个人的身心健康，也是为了维护良好的人际关系和情感健康。</p><p>我们可以选择不秀恩爱，但我们绝不能假装「伪单身」。</p><p>诚实和尊重是构建健康社会关系的基石，只有通过真实的表达，我们才能更加坦诚地面对自己和他人，进而创造出更加真实和美好的人际互动。</p><p>为何会选择伪单身，其背后的动机也许来源于对真爱的渴望。</p><p>然而这一行为本就充满了迷惑，犹如寻宝者长年累月地寻找宝石，却不断地拾起石块。</p><p>终于有一天，他发现了真正的钻石，却在毫无意识的情况下，将其随手丢弃了。</p><p>我们不应该爱自己想象的人，而应该爱具体的人，所谓的真爱是经过时间的洗礼沉淀下来的亲情，而不是感情冲动，荷尔蒙爆发后的一时激情。</p><p>与其担忧无法觅得真爱，不如担心当真爱降临之时，我们是否还有辨别真爱的能力？</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2023/08/28/the-rise-of-pseudo-singledom/romance.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;伪单身们&quot;&gt;&lt;a href=&quot;#伪单身们&quot; class=&quot;headerlink&quot; title=&quot;伪单身们&quot;&gt;&lt;/a&gt;伪单身们&lt;/h2&gt;&lt;p&gt;我是一个非常讨厌秀恩爱的人，但是比起秀恩爱，我更讨厌「伪单身」的行为。而比「伪单身」更让我厌恶的，是那些你无情戳穿他们「伪单身」假象时，依然「矢口否认」的人。&lt;/p&gt;
&lt;p&gt;有的人认为「伪单身」是那些明明非单身，却对外宣称自己「单身」的人。可我认为这种不能称之为「伪单身」，而应该称之为「渣」！可以直接拉黑，把它们归类为「伪单身」是对「伪单身」人士极大的侮辱。&lt;/p&gt;
&lt;p&gt;不同于表面上的宣称，伪单身指的是那些既不宣称自己单身，也不表露自己非单身，但却给人造成一种单身假象的错觉。&lt;/p&gt;</summary>
    
    
    
    <category term="Opinion" scheme="https://tommy.net.cn/categories/opinion/"/>
    
    
    <category term="Society" scheme="https://tommy.net.cn/tags/society/"/>
    
    <category term="Love" scheme="https://tommy.net.cn/tags/love/"/>
    
    <category term="Authenticity" scheme="https://tommy.net.cn/tags/authenticity/"/>
    
    <category term="Man" scheme="https://tommy.net.cn/tags/man/"/>
    
    <category term="Pseudo" scheme="https://tommy.net.cn/tags/pseudo/"/>
    
    <category term="Relationship" scheme="https://tommy.net.cn/tags/relationship/"/>
    
    <category term="Singledom" scheme="https://tommy.net.cn/tags/singledom/"/>
    
    <category term="Social" scheme="https://tommy.net.cn/tags/social/"/>
    
    <category term="Woman" scheme="https://tommy.net.cn/tags/woman/"/>
    
  </entry>
  
  <entry>
    <title>ChatGPT 真的比人类更聪明吗？</title>
    <link href="https://tommy.net.cn/2023/04/02/is-chatgpt-really-smarter-than-humans/"/>
    <id>https://tommy.net.cn/2023/04/02/is-chatgpt-really-smarter-than-humans/</id>
    <published>2023-04-02T14:11:25.000Z</published>
    <updated>2023-04-02T14:36:23.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2023/04/02/is-chatgpt-really-smarter-than-humans/ai.jpg"></p><p>随着 GPT-4 的发布，ChatGPT 最近又双叒叕成了热门话题。</p><p>有鉴于 ChatGPT 火得出圈的程度，我就不再解释什么是 ChatGPT 了，我相信相关的报道已经烂大街了。</p><p>作为一种通用人工智能，它在很多方面都展现出了强大的能力，引发了人们对未来社会和职业发展的思考。</p><p>ChatGPT 是不是真的比人类聪明？它到底能做什么？我们将面临怎样的挑战？又有哪些机会？</p><p>带着这些问题，我做了一些不成熟地思考，而这篇文章就是我最近关于 ChatGPT 思考的结果……</p><span id="more"></span><h2 id="ChatGPT-的现状"><a href="#ChatGPT-的现状" class="headerlink" title="ChatGPT 的现状"></a>ChatGPT 的现状</h2><h3 id="基层工作者-Game-Over"><a href="#基层工作者-Game-Over" class="headerlink" title="基层工作者 Game Over"></a>基层工作者 Game Over</h3><p>ChatGPT 的崛起可以说，革了很多基层工作者的命。</p><p>这里的基层工作者首当其冲的就是坐办公室的白领，尤其是做执行相关的文员，其杀伤力绝对是毁灭性的。</p><p>除了部分生活不能自理的老板需要秘书之外，我们可以大胆预测一下，未来所有的文员将不复存在。</p><p>而秘书的存在，可能只有一些「懂得都懂」的原因，而非工作的不可或缺性。</p><p>甚至底层的码农也将无法幸免，虽然很多的程序是他们写出来的，最后他们也将被程序（AI）干掉，听起来多少有些讽刺。</p><h3 id="ChatGPT-是否比人聪明"><a href="#ChatGPT-是否比人聪明" class="headerlink" title="ChatGPT 是否比人聪明"></a>ChatGPT 是否比人聪明</h3><p>直接说我认为的结论：ChatGPT 还远不如人类聪明，只不过是知识储备丰富罢了。</p><p>对于 ChatGPT 是否具备人工智能的问题，有很多不同的看法。</p><p>虽然很多人认为 ChatGPT 已经具备了人工智能，甚至在 GPT-4 的时代已经超越了人类。</p><p>但在我看来，ChatGPT 只是刚刚达到了通用人工智能的水平。</p><p>虽然相较于以前的「人工智障」有了很大的进步，但距离真正的人工智能仍有不少的差距。</p><h3 id="ChatGPT-是否有创造力"><a href="#ChatGPT-是否有创造力" class="headerlink" title="ChatGPT 是否有创造力"></a>ChatGPT 是否有创造力</h3><p>同样是：没有！</p><p>有些人认为 ChatGPT 具有创造力，可以完成作画、写文章等任务。</p><p>然而，事实上 ChatGPT 只能利用已有的知识进行拓展和衍生，并无法创造出真正「新」的东西。</p><p>这意味着它在创意产业上的应用仍存在局限。</p><p>之所以我们会误以为它有创造性，那是因为它的知识库非常的庞大。</p><p>它通过引用和组合的方式，可以「创造」出我们以为的新东西，但实际上只是一种模仿而已。</p><p>比如我上一遍<a href="../../../../2023/03/31/future-development-of-the-automotive-industry/">关于汽车产业未来发展</a>的文章，为了验证我自己的观点，我曾经尝试让 ChatGPT 给出一些新的观点。</p><p>但无论我用何种 Prompt（提示词）去引导，它给出的结论始终都是网上到处都能找得到的「专家」的「陈词滥调」，并没有自己独创和原创思考的东西。</p><p>用它来「洗稿」什么的是不错的，但是用它来「原创」那是铁定不行的，至少现在不行。</p><h3 id="用-ChatGPT-完成非自己专业领域的工作"><a href="#用-ChatGPT-完成非自己专业领域的工作" class="headerlink" title="用 ChatGPT 完成非自己专业领域的工作"></a>用 ChatGPT 完成非自己专业领域的工作</h3><p>有不少朋友被 ChatGPT 洗了脑，觉得只要会「聊天」就可以把原来很多需要专业人士才能做的事情，自己动动嘴皮子就完成了，比如：编程。</p><p>我可以很负责任的说，这种想法就是不切实际的「幻想」。</p><p>虽然现阶段 GPT-4 在代码的输出能力上确实出现了长足的进步，但本质上只是它学习人类开源代码后所做的重新组合，它并不没有创造出新的逻辑和编程方式。</p><p>说人话就是，它干的更多的就是 copy &amp; paste，只不过把搜索查找的过程给简化了，同时可以按照你的上下文，把函数名和变量名给你改好了而已。</p><p>如果你自身不会编程的话，便无法理解代码的逻辑，也就根本无法完善程序。</p><p>网上很多把 GPT-4 编程吹上天的，大多就是：「帮我写个计数器」、「帮我写个贪食蛇」这些完全没有现实工程意义的东西。</p><p>对于那些期望通过 ChatGPT 实现编程自由或某个专业自由的人来说，我劝您还是早点死了这条心吧。</p><p>要想真正用好 ChatGPT 这本「葵花宝典」，根本还是要自己对于自身领域业务的深入洞察和理解，以及相关专业知识和技能的掌握。</p><h2 id="我的-ChatGPT-应用场景"><a href="#我的-ChatGPT-应用场景" class="headerlink" title="我的 ChatGPT 应用场景"></a>我的 ChatGPT 应用场景</h2><p>下面是我现在使用 ChatGPT 的一些场景，大家可以根据自身的需求，举一反三，找到适合自己的应用方式。</p><h3 id="私人助理"><a href="#私人助理" class="headerlink" title="私人助理"></a>私人助理</h3><p>不得不说，有了 ChatGPT 以后，对于我这种有强迫症又要求过高的屌丝来说，再也不用纠结请不请助理这件事儿了。</p><p>ChatGPT 作为私人助理，其投入产出比远超雇佣一名高薪助手。</p><p>日常事务性的工作如邮件、文书、表格处理等繁琐工作完全不在话下，极大地提高了生产效率。</p><p>甚至还可以让它学习个人的文书写作风格，写出好像出自本人手笔的资料。</p><p>虽然我已经开通了 ChatGPT Plus 的会员，但是考虑到将来工作的便利性，很有可能在不久的将来我还会开通 Office 365 的会员。</p><p>毕竟整合了 Copilot 的 Office 可以让我们更关注于业务本身，而不是深陷于冗长的「繁文缛节」和虚情假意「嘘寒问暖」的泥潭中无法自拔。</p><blockquote><p>PS: 这里绝对没有卖广告的意思，主要是没有 Office 365 也用不了 Copilot 啊，😮‍💨</p></blockquote><h3 id="个性化外语私教"><a href="#个性化外语私教" class="headerlink" title="个性化外语私教"></a>个性化外语私教</h3><p>由于我最近在学习德语和日语，所以 ChatGPT 成了我最好的外语老师，没有之一！</p><p>如果有学外语的小伙伴，我强烈推荐 ChatGPT，因为它本身就是最先进的自然语言处理技术。</p><p>它可以准确地理解各种语言问题，无论是语法、词汇还是发音等方面的问题，ChatGPT 都能提供相应的解答。</p><p>此外，更重要的一点是我们可以通过互动的方式结合上下文来提问，这比自己搜索网站一个一个问题地查询要来的方便快捷的多。</p><p>虽然 ChatGPT 在学外语的时候用起来是真的香。但是，可是，但可是，有很多次它睁眼说瞎话，一本正经地胡说，比如日语里面助词的使用，还有形容词否定句的变形等都有问题。</p><p>所以严肃的学习，还是要去伪求真。正式的教材，懂外语的朋友，善用搜索引擎还是必不可少的。</p><h3 id="快速了解未知行业的相关知识"><a href="#快速了解未知行业的相关知识" class="headerlink" title="快速了解未知行业的相关知识"></a>快速了解未知行业的相关知识</h3><p>最近无聊，在看各种行业机会，这个时候 ChatGPT 就派上了大大的用场。</p><p>有了 ChatGPT 的加持，我可以在很短的时间内对所关心的行业有一个相对全面的了解。</p><p>无论是涉及行业背景、技术细节还是市场趋势等问题，ChatGPT 都可以给出合适的解答，帮助我迅速了解所需的行业知识。</p><p>此外，ChatGPT 还可以提供所涉及领域的深入分析和专业见解。</p><p>当然，前面我也说了，这种「见解」也都是基于网上公开数据，来源于各种「专家」的。</p><p>不过，因为是为了快速了解行业和相关知识，所以这种「分析」和「见解」对我来说也已经很足够了。</p><h3 id="辅助代码编程"><a href="#辅助代码编程" class="headerlink" title="辅助代码编程"></a>辅助代码编程</h3><p>我现在使用 ChatGPT 辅助编程还比较简单，主要都是通过 ChatGPT 获得一些代码片段，和进行一些编程相关问题的提问。</p><p>虽然使用强度不大，但是感觉已经可以抛弃 Google 和 Stackoverflow 了。</p><p>随着 GitHub 最新 <a href="https://github.com/features/preview/copilot-x">GitHub Copilot X</a> 的发布，现在从代码的编写、测试，到 Pull Request，绝大多数的工作都已经 GPT 化了。</p><p>保守估计编程效率将最少提高 50% 以上，甚至架构师完全可以在没有初级工程师的支持下，开发出复杂的系统也不是没有可能。</p><p>如此看来，未来绝大多数的程序员真的要失业了，全栈工程师可能是唯一的出路了。</p><p>不过因为最近都在卷外语，没怎么写代码，所以这块还没有深入研究。</p><p>等有时间的时候开个 Copilot 会员，好好体验一下……</p><blockquote><p>为什么现在没有开？主要还是因为贫穷，说多了都是泪……😭</p></blockquote><h2 id="关于未来的思考"><a href="#关于未来的思考" class="headerlink" title="关于未来的思考"></a>关于未来的思考</h2><p>该说的前面基本上都已经覆盖到了，那么简单说一下我对 ChatGPT 未来发展的判断。</p><h3 id="人工智能的发展趋势"><a href="#人工智能的发展趋势" class="headerlink" title="人工智能的发展趋势"></a>人工智能的发展趋势</h3><p>虽然我认为现阶段的 GPT-4 无法超越人类，但随着 GPT-5、GPT-6 等后续版本的推出，人工智能的发展趋势将变得扑朔迷离。</p><p>尤其是随着算力的进一步增强，也许在某一个时刻，会再次发生涌现（Emerge）的现象。</p><p>又或者是某天 AI 可以理解超过人类认知的三维空间，在四维甚至更高的纬度上有了全面超越人类的理解。</p><p>到了那个时候，可能就是人类的至暗时刻了。</p><p>当然还有另外一种可能，就是某一天程序可以自己写程序迭代了，机器人可以自己造机器人了。</p><p>那样的话，我真的想不到在 AI 的眼中，人类存在的价值是什么……</p><p>也许真的是黑客帝国（Matrix）中，人肉电池一样的存在？</p><p>当然，我觉得在我有生之年，不大可能看到 AI 超越人类智慧的那一天。</p><p>而且就现在的技术路线发展来看，我也不大相信所谓的 AI 能产生真正的自主意识。</p><h3 id="人工智能与就业"><a href="#人工智能与就业" class="headerlink" title="人工智能与就业"></a>人工智能与就业</h3><p>既然 AI 不可能「消灭」人类，但是又会让人类失业，那么我们就得思考如何不被社会淘汰，以及如何与 AI 共存，并让 AI 更好的为人类服务。</p><p>就好像前文说过的，我认为在未来，大约有 80% 至 90% 的工作将被 AI 取代，而且这是不可避免的趋势。</p><p>以我现在有限的认知，如果让我做选择，我会看以下几个机会：</p><ul><li>**从事 AI 研发工作：**很简单，搞 AI 好过被 AI 搞。别人都被 AI 弄失业了，但是搞 AI 的在未来很长一段时间内不单止不会失业，还会收入节节高升。</li><li>**从事创造性的工作：**比如艺术家、音乐家、创业设计师等。因为 AI 强大的是模仿（抄袭）以及衍生能力，真正全新的创造性的能力，暂时还是不具备的。</li><li>**人文类的工作：**比如国学、厨师等。国学好理解，属于文化类的。为什么还有厨师？因为我觉得未来绝大多数人每天都只能吃「工业垃圾」生产出来的食物，也就是从生产加工到制造全部是由机器完成的（包括炒菜）。而有锅气的人炒出来的菜将变得稀缺，没准以后不是谁都能吃得起厨师炒的菜。</li><li>**能提供垂直领域个性化服务的工作：**在垂直领域深入发展以及提供个性化服务的工作，很可能不会被工业化和规模化经济所摧毁。尽管难以成为大企业，但可以保证温饱，甚至实现小康。因为没有人喜欢工业批量化生产的东西，未来的人会更追求自我，因此对定制化的需求会持续走高。</li></ul><p>不得不说，那些没有核心竞争力的小作坊，将在未来遭受毁灭性打击。</p><p>也许我们现在所熟悉的街头小巷的那些大排档、便利店、小商铺会在某一天我们不经意之间消失殆尽。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>最近大家热议的关于各方大佬叫停 GPT 一事儿，其实我个人觉得大可不必上升到人类威胁论这一高度。说白了，其实还是各方利益的问题。</p><p>因为 OpenAI 实在走得太快了，已经甩开竞争对手几条街了，其他人不想看到 OpenAI 一家独大而已。</p><p>更何况，现在 GPT 技术应用到商业上最溜的就是微软了，你让别的公司怎么混？</p><p>如果非要说，为什么希望 GPT 能停一停，缓一缓？</p><p>那大概就是不暂停一下的话，会有更多无所事事的所谓管理者和底层苦力要失业了吧。</p><p>虽然说从生产力就是第一发展力的角度来看没有问题，但是从社会层面看，在短期内会造成非常多的社会问题和不稳定因素，这可能才是某些领导者真正担心的事情。</p><p>但我觉得 Elon Musk 显然不是关心社会福祉的人，他着急叫停 GPT 的主要原因还是因为 OpenAI 不在他手上，如果在他手上，他还会叫停吗？</p><p>那么，各位看官老爷，您又是如何看待这一问题的呢？</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2023/04/02/is-chatgpt-really-smarter-than-humans/ai.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;随着 GPT-4 的发布，ChatGPT 最近又双叒叕成了热门话题。&lt;/p&gt;
&lt;p&gt;有鉴于 ChatGPT 火得出圈的程度，我就不再解释什么是 ChatGPT 了，我相信相关的报道已经烂大街了。&lt;/p&gt;
&lt;p&gt;作为一种通用人工智能，它在很多方面都展现出了强大的能力，引发了人们对未来社会和职业发展的思考。&lt;/p&gt;
&lt;p&gt;ChatGPT 是不是真的比人类聪明？它到底能做什么？我们将面临怎样的挑战？又有哪些机会？&lt;/p&gt;
&lt;p&gt;带着这些问题，我做了一些不成熟地思考，而这篇文章就是我最近关于 ChatGPT 思考的结果……&lt;/p&gt;</summary>
    
    
    
    <category term="Opinion" scheme="https://tommy.net.cn/categories/opinion/"/>
    
    
    <category term="GPT" scheme="https://tommy.net.cn/tags/gpt/"/>
    
    <category term="ChatGPT" scheme="https://tommy.net.cn/tags/chatgpt/"/>
    
    <category term="AI" scheme="https://tommy.net.cn/tags/ai/"/>
    
  </entry>
  
  <entry>
    <title>汽车行业未来发展展望：电动化、智能化与产业链机遇</title>
    <link href="https://tommy.net.cn/2023/03/31/future-development-of-the-automotive-industry/"/>
    <id>https://tommy.net.cn/2023/03/31/future-development-of-the-automotive-industry/</id>
    <published>2023-03-31T10:37:38.000Z</published>
    <updated>2025-02-19T05:47:01.216Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2023/03/31/future-development-of-the-automotive-industry/ev_development.jpg"></p><p>最近，我一直在思考汽车行业的一些变化。随着电动汽车逐渐成为主流，自动驾驶技术的普及，以及智能网联汽车的迅猛发展，我们的出行方式正在发生翻天覆地的变化。有时候，我不禁问自己：「这些变化究竟意味着什么？我们将如何适应这个瞬息万变的世界？」</p><p>那些曾经引领潮流的汽车制造商是否还能保持竞争力？还是说新兴的电动汽车品牌将主导未来的市场？这场变革中，供应链上的其他参与者，如 Tier 1 供应商，又将何去何从？</p><p>汽车行业的未来充满了无尽的可能性，而未来的挑战和机遇究竟在哪里呢？到底是主机厂更值得加入还是 Tier 1 更值得考虑？</p><span id="more"></span><h2 id="电动汽车行业的现状"><a href="#电动汽车行业的现状" class="headerlink" title="电动汽车行业的现状"></a>电动汽车行业的现状</h2><p>在开始前，我们先简单聊聊汽车产业的现状。</p><h3 id="市场趋势"><a href="#市场趋势" class="headerlink" title="市场趋势"></a>市场趋势</h3><p>随着全球对环保的重视和新能源政策的推动，电动汽车市场正迎来快速发展。各国政府纷纷制定了严格的排放标准和补贴政策，以推动新能源汽车的普及。根据国际能源署（IEA）的数据，2020年全球电动汽车销量超过300万辆，同比增长43%。预计到2030年，全球电动汽车销量将达到1.25亿辆，占总汽车销量的比重将超过30%。</p><h3 id="技术创新"><a href="#技术创新" class="headerlink" title="技术创新"></a>技术创新</h3><p>市场需求和技术创新推动了电池、电机、电子控制等核心零部件的不断进步。例如，电池能量密度的提高和成本的降低使得电动汽车的续航里程得到显著提升，同时降低了消费者购车的成本负担。此外，充电基础设施的建设和智能充电技术的发展，也为电动汽车的普及创造了有利条件。</p><h3 id="品牌竞争"><a href="#品牌竞争" class="headerlink" title="品牌竞争"></a>品牌竞争</h3><p>在这个大背景下，新兴电动汽车品牌如蔚来、理想和小鹏等迅速崛起，与传统车企展开激烈竞争。一方面，这些新兴品牌凭借创新的商业模式、独特的产品设计和领先的技术实力，在市场上取得了显著的成绩。另一方面，传统车企也在积极进行技术创新和市场布局，以应对新能源汽车带来的挑战。例如，大众集团推出了其全新的电动汽车平台MEB，并计划在未来几年内投放多款电动汽车产品；特斯拉则凭借其在电动汽车和自动驾驶技术方面的领先地位，稳居市场份额的前列。</p><h2 id="主机厂的机会"><a href="#主机厂的机会" class="headerlink" title="主机厂的机会"></a>主机厂的机会</h2><h3 id="技术积累与品牌优势"><a href="#技术积累与品牌优势" class="headerlink" title="技术积累与品牌优势"></a>技术积累与品牌优势</h3><p>传统主机厂在汽车制造领域拥有深厚的技术积累和品牌影响力。这使得它们在面临新能源汽车、智能驾驶等新技术战时，仍具有一定的生存空间。通过加大研发投入、与领先技术供应商合作或收购创新企业等途径，传统车企可以实现在智能化、网联化市场的转型。例如，宝马在电动汽车和自动驾驶技术方面进行了大量的研发投入，与英特尔、Mobileye 等合作开发自动驾驶系统，以提升自身技术实力。</p><h3 id="产业链体系与资本实力"><a href="#产业链体系与资本实力" class="headerlink" title="产业链体系与资本实力"></a>产业链体系与资本实力</h3><p>传统车企具有完善的产业链体系、资本实力和全球布局等优势。这有助于它们在新能源汽车市场中快速扩张，实现规模化生产和市场渗透。例如，大众集团在全球范围内建立了多个生产基地，确保了其电动汽车产品的快速推广和供应。同时，大众还计划在未来几年内投资约300亿欧元，用于电动汽车和数字化技术的研发。</p><h3 id="合作与创新"><a href="#合作与创新" class="headerlink" title="合作与创新"></a>合作与创新</h3><p>新兴电动汽车品牌如蔚来、理想等通过创新商业模式和技术优势，为汽车行业注入了新的活力和竞争力。这也为传统车企提供了合作与创新的机会。比如，原来被誉为抄袭王的比亚迪，就成功的实现了翻身上位。当年学习借鉴的丰田车，现在反过来采购比亚迪的整车和电池技术。而很多新造车势力也是比亚迪这种传统车企的大客户。</p><h2 id="Tier-1-的机会"><a href="#Tier-1-的机会" class="headerlink" title="Tier 1 的机会"></a>Tier 1 的机会</h2><h3 id="技术创新与市场需求"><a href="#技术创新与市场需求" class="headerlink" title="技术创新与市场需求"></a>技术创新与市场需求</h3><p>随着新能源汽车、智能网联汽车和自动驾驶等技术的普及， Tier 1 供应商的市场需求将持续增长。具有技术创新能力和前瞻性的 Tier 1 供应商将在汽车行业中脱颖而出，为主机厂提供先进的技术和产品。例如，德国博世公司在自动驾驶、车载传感器和电子控制等领域拥有领先的技术，为全球多家主机厂提供了高质量的零部件和系统解决方案。</p><h3 id="合作关系与产业链整合"><a href="#合作关系与产业链整合" class="headerlink" title="合作关系与产业链整合"></a>合作关系与产业链整合</h3><p>主机厂与 Tier 1 供应商之间的紧密合作将推动整个汽车产业链的升级和发展。通过建立长期稳定的合作关系，双方可以实现资源共享、技术创新和市场拓展，从而提升整体竞争力。例如，丹麦的智能音频解决方案提供商 GN 集团与特斯拉建立了战略合作关系，为其提供高质量的音频系统和降噪技术，进一步提升特斯拉汽车的用户体验。</p><h3 id="产业生态与创新驱动"><a href="#产业生态与创新驱动" class="headerlink" title="产业生态与创新驱动"></a>产业生态与创新驱动</h3><p>Tier 1 供应商需要不断提升自身的技术水平和服务能力，为整个汽车产业链带来更高的价值。在新能源汽车、智能网联汽车和自动驾驶等领域，产业生态的建设和创新驱动对于整个行业的发展至关重要。例如，美国 NVIDIA 公司在图形处理器、人工智能和自动驾驶领域具有领先优势，通过与各大车企合作，为汽车行业的智能化发展提供了强大动力。</p><h2 id="个人拙见"><a href="#个人拙见" class="headerlink" title="个人拙见"></a>个人拙见</h2><p>虽然看起来传统主机厂和 Tier 1 在未来都有新的机会，但是我更看好有技术创新能力和前瞻性的 Tier 1 供应商，而不看好传统车企。这主要是因为企业的 DNA 决定了它们在面对未来的挑战时是否能够取得成功。传统车企往往在技术创新、市场预判和新产品开发方面相对保守，这使得它们在新能源汽车、自动驾驶和智能网联汽车等领域的发展上相对滞后。</p><p>相比之下，具有创新实力和前瞻性的 Tier 1 供应商，如博世、康明斯和 NVIDIA 等，凭借其在技术研发和产业链整合方面的优势，更有可能在未来汽车行业中取得成功。它们能够为客户提供先进的技术和产品，进而推动整个行业的发展。</p><p>在主机厂领域，就现在看，只有「理想」和「蔚来」机会大些。这两家公司凭借其在电动汽车、自动驾驶和智能网联汽车方面的技术优势，以及对市场的敏锐洞察力，成功吸引了众多消费者的关注。与「理想」和「蔚来」相比，「小鹏」除了在智能化和自动驾驶方面有一定的特色，其总体技术实力和品牌影响力相对较弱。可谓产品打不过「理想」，品牌干不过「蔚来」，几年过去了依然要靠 P7 打天下，使得它在激烈的市场竞争中逐渐失去优势。不得不说，留给「小鹏」的时间不多了……</p><p>总之，在未来的汽车行业中，技术创新和前瞻性将成为关键的竞争要素。只有具备这些条件的企业，无论是主机厂还是 Tier 1 供应商，才有可能在这个充满变革和挑战的行业中立于不败之地。</p><p>最后，尽管智能座舱在近年来得到了广泛关注和发展，但可以预见它的潜力已经接近极限。相反，在未来几年里，值得我们关注和投入的领域是人机共驾。人机共驾作为一种新兴的出行模式，将人类驾驶员的经验和自动驾驶技术相结合，实现了驾驶安全、舒适和效率的最佳平衡。</p><p>未来几年的汽车行业将不再局限于智能座舱的改进，而是转向更具前瞻性和实用性的人机共驾技术。这将为汽车制造商和 Tier 1 供应商带来新的市场机遇，同时为消费者提供更加安全、便捷和愉悦的驾驶体验。</p><p>所以，汽车行业的小伙伴们，知道接下来该干什么了吗？😏</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2023/03/31/future-development-of-the-automotive-industry/ev_development.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近，我一直在思考汽车行业的一些变化。随着电动汽车逐渐成为主流，自动驾驶技术的普及，以及智能网联汽车的迅猛发展，我们的出行方式正在发生翻天覆地的变化。有时候，我不禁问自己：「这些变化究竟意味着什么？我们将如何适应这个瞬息万变的世界？」&lt;/p&gt;
&lt;p&gt;那些曾经引领潮流的汽车制造商是否还能保持竞争力？还是说新兴的电动汽车品牌将主导未来的市场？这场变革中，供应链上的其他参与者，如 Tier 1 供应商，又将何去何从？&lt;/p&gt;
&lt;p&gt;汽车行业的未来充满了无尽的可能性，而未来的挑战和机遇究竟在哪里呢？到底是主机厂更值得加入还是 Tier 1 更值得考虑？&lt;/p&gt;</summary>
    
    
    
    <category term="Opinion" scheme="https://tommy.net.cn/categories/opinion/"/>
    
    
    <category term="Car" scheme="https://tommy.net.cn/tags/car/"/>
    
    <category term="EV" scheme="https://tommy.net.cn/tags/ev/"/>
    
    <category term="Automotive" scheme="https://tommy.net.cn/tags/automotive/"/>
    
    <category term="Industry" scheme="https://tommy.net.cn/tags/industry/"/>
    
  </entry>
  
  <entry>
    <title>「元宇宙」短期内可能是个伪命题</title>
    <link href="https://tommy.net.cn/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/"/>
    <id>https://tommy.net.cn/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/</id>
    <published>2021-12-17T09:07:41.000Z</published>
    <updated>2025-02-19T05:47:01.212Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/metaverse.png"></p><p>最近很火的一个词，想必大家都已经耳熟能详了，那就是「元宇宙」。</p><p>这个词有多火，看它出圈的程度就知道了。</p><p>自从 Mark Zuckerberg 同学宣布将「Facebook」改名为「Meta」开始，「元宇宙」一夜之间从科技圈，传遍大街小巷。</p><span id="more"></span><h2 id="元宇宙是什么？"><a href="#元宇宙是什么？" class="headerlink" title="元宇宙是什么？"></a>元宇宙是什么？</h2><p>大家想象中的元宇宙，应该是一个虚拟现实的环境，就好像我们看过的《头号玩家》  (Ready Player One) 里面所表现的那样。</p><p>或者像 Minecraft 或者扎克伯格展示的 Facebook Demo 那样。</p><p>但，如果我们都错了呢？如果「元宇宙」并不是一个空间的维度而是时间维度呢？</p><p>就好比在人工智能领域我们经常说的一个词，叫做「奇点」 (The Singularity)。</p><p>引用 Wikipedia 上的原文如下：</p><blockquote><p>The technological singularity - or simply the singularity - is <strong>a hypothetical point in time at which technological growth becomes uncontrollable and irreversible</strong>, resulting in unforeseeable changes to human civilization.</p></blockquote><p>简单说，就是在某个假定的时间节点，科技的发展将变得不可控和不可逆，同时对人类文明造成不可预知的影响。</p><p>其实这种说法已经比较委婉了，很多悲观主义者认为，人类最终将会被 AI 统治，终有一天「黑客帝国」 (Matrix) 将会来临。</p><p>当然，聊这个有点跑题了，回归我们讨论的内容。</p><p>29 年前，也就是 1992 年，美国科幻作家<strong>尼尔·斯蒂芬森 (Neal Stephenson)</strong> 出版了一本名为**《雪崩 (Snow Crash) 》**的科幻小说。</p><p>并在书中首次提出了「Metaverse」（元宇宙）这一个概念。</p><p>就好比罗马不是一天建成的，元宇宙也不是喊个口号就来了的。</p><p>事实上「元宇宙」一直存在于我们身边，而且可能已经发展了超过 20 年。</p><p>真正元宇宙的到来，就好像「奇点」的到来一样。</p><p>当某一天，我们在「元宇宙」中的存在比在现实世界中更重要的时候，我们就真正的步入了「黑客帝国」或「头号玩家」的时代。</p><p>想想也有点可怕……</p><h2 id="每个人都被数字化-ing"><a href="#每个人都被数字化-ing" class="headerlink" title="每个人都被数字化 ing"></a>每个人都被数字化 ing</h2><p><img src="/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/digital.jpg"></p><p>其实，比起「元宇宙」的到来，我们现在的生活也被不断的数字化了。</p><p>想想我们的日常生活，息息相关的，哪个没有被数字化？</p><ul><li>工作：从工厂到台式电脑，再到笔记本和 Pad；从面对面会议，到网络会议（尤其疫情后）</li><li>学习：上课除了听讲外，很重要的一个环节是同学之间的思想交流，然而这种交流也越来越多地被网课所抹杀了</li><li>生活：很多人的购物问题也是网上解决了，作为移动互联网世界第一的中国，只需要微信和支付宝就能解决所有的支付问题，出门根本不需要带现金</li><li>交友：从街坊邻居变成了网络上的「关注」与「一键三连」，连找男女朋友都得上网🐶</li><li>游戏：越来越多的小朋友沉溺于虚拟游戏，而不是选择足球、篮球等运动</li><li>身份：看看朋友圈，不难发现「美图秀秀」已经成了新的「化妆」了，大家在网上是不是「活」得更精彩？</li></ul><p>当网络上的人越来越多，当大家使用网络的时间越来越长，当你身边的好友都长时间在网的情况下，请问，我们该如何选择？</p><p>无可奈何的我们也许只能向「恶势力」低头，「随波逐流」地投入数字化浪潮的洪流之中……</p><p>以前我们的精力都是放在现实世界中的，而现在我们都成了自己手机的牵线木偶。</p><p>如果将时间快进 10 到 20 年，说不定我们就已经身处「元宇宙」的时代了。</p><h2 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h2><p>「元宇宙」的爆火，离不开三种人：<strong>「教主」</strong>、<strong>「骗子」<strong>和</strong>「傻子」</strong>。</p><p><img src="/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/fasnet.jpg"></p><h3 id="教主"><a href="#教主" class="headerlink" title="教主"></a>教主</h3><p>教主，怎么说呢，也可以叫他们为神棍、巫师或者是疯子吧。在我的观点里乔布斯、马斯克还有扎克伯格都属于这个范畴的。</p><p>我觉得他们都有一种叫做「现实力场扭曲」的能力，虽然这一词来自乔帮主，但是另外两位教主也适用。</p><p>他们往往笃定一件事情，就大刀破斧地宣传推广，哪怕这是一个不靠谱，不接地气的事情。</p><p>但他们总能找到合适的人，忽悠别人相信他们的观点，并最终把这个事情给促成了。</p><p>更可怕的是，他们还有一众疯狂的信徒，所以我管他们叫「教主」一点都不为过。</p><p>教主们的行为已经不能用商业、科技和产品来定义了，再加上「信徒」对他们的迷信和盲从，这跟宗教又有什么区别呢？</p><h3 id="骗子"><a href="#骗子" class="headerlink" title="骗子"></a>骗子</h3><p>另外一类是骗子，这个就很好理解了，明知道「元宇宙」是一个假大空的概念，还要用这个概念忽悠别人来骗钱，自己赚得盆满钵满的那种人。</p><p>这么说比较容易得罪人，或者被某些人的粉丝攻击。</p><p>但是，那些着急宣布自己进军元宇宙的，贩卖元宇宙课程的，推荐元宇宙概念股的，等等这一类，都是骗子无疑。</p><p>比如说罗老师，前段时间不就大大声地说，自己要重回科技圈，并进军元宇宙产业吗？🐶</p><h3 id="傻子"><a href="#傻子" class="headerlink" title="傻子"></a>傻子</h3><p>傻子，也可以叫韭菜，冤大头，属于绝大多数不知道发生了什么事情的普通群众。</p><p>因为经济环境的整体下行，大家都急于进行资产保值（你还想增值？）。</p><p>一听说有个新名词，就蠢蠢欲动，感觉赚钱的机会来了？</p><p>可是大家想想，赚钱的机会这么容易，就你能嗅到，别人都是傻子？</p><p>这样说，有人可能会觉得被冒犯到，但是喝醉酒的人说的最多的一句话是什么？</p><p>是不是：「我没醉，我还能喝」？</p><p>那又有哪个傻子觉得自己傻子呢？傻子只会觉得别人是傻子而已……</p><p>比特币红利你没赶上，区块链技术似懂非懂，股票市场玩的一塌糊涂。</p><p>又是谁给你的勇气，让你觉得你可以把「元宇宙」玩得风生水起呢？梁静茹吗？</p><h3 id="都是利益"><a href="#都是利益" class="headerlink" title="都是利益"></a>都是利益</h3><p>说到底，无论是「教主」、「骗子」还是「傻子」，其背后的根本诉求都是殊途同归的：钱！</p><p>真的，就是这么朴实无华的诉求，无它，为了追求「钞」能力而已。</p><p>只不过，教主们是真的有「钞」能力，只要忽悠到位，那他们的公司就是印钞机。</p><p>骗子们虽然达不到印钞机的级别，但是割韭菜还是妥妥的。炒股的有几个觉得自己赚钱的？卖炒股软件的有哪个不赚钱的？</p><p>最惨的还是傻子们，由于自身的认知和判断力不够，最终的结果还是会沦为韭菜。归根结底，还是因为傻子们难以抵挡自己内心的贪婪。其实只要不贪，又怎么会成为傻子呢？</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p><img src="/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/matrix.jpg"></p><p>为了继承本人文章的一贯传统，最后还是要来个不是总结的「总结」。</p><p>第一、对于 Facebook 改名 Meta 这事儿，大家看看就行了，扎克老师就是来赚钱的。一个是为了巩固自己在社交领域的统治地位，另外为了自家 VR 产品打开销路，大家真的无需过度解读。扎克老师真的不是一个什么胸怀大志的伟人，一个纯纯粹粹的商人罢了。</p><p>第二、少看些没有用的大 V 博客、视频什么的，因为往往乱带节奏的就是这些人。有这个时间还不如看几本科幻小说，看看正儿八经的技术文章，关心一下前沿科技领域。</p><p>第三、别老想着赚快钱，你只看到别人赚快钱，没看到别人后面积累了多少年。所以，想要赚钱还是要在自己擅长的领域持续投入。当然，不断的跨领域学习，也许某天就可以跨行业投资了，参考「奇点」概念，但那也是需要厚积薄发，量变到质变的。</p><p>最后，谈谈个人的一些看法。</p><p>「元宇宙」是好事还是坏事？我不知道。</p><p>就好像世间所有的事情一样，也许它不是好事，也不是坏事，就只是一个事而已。</p><p>一个完全不一样的事……</p><p>我个人是很反对这个所谓「元宇宙」的东西的。</p><p>生活这么美好，值得我们每个人好好珍惜，用心体会。</p><p>I just wanna live alive, but not just live.</p><p>当然，不管我如何不喜欢，甚至抗拒「元宇宙」的到来，但冥冥之中我总觉得那一天终究会到来。</p><p>未来也许除了「吃喝拉撒」，我们都能在「元宇宙」中完成了，谁又知道呢？</p><p>蜜汁微笑……😊</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/12/17/metaverse-might-be-a-false-proposition-in-short-term/metaverse.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近很火的一个词，想必大家都已经耳熟能详了，那就是「元宇宙」。&lt;/p&gt;
&lt;p&gt;这个词有多火，看它出圈的程度就知道了。&lt;/p&gt;
&lt;p&gt;自从 Mark Zuckerberg 同学宣布将「Facebook」改名为「Meta」开始，「元宇宙」一夜之间从科技圈，传遍大街小巷。&lt;/p&gt;</summary>
    
    
    
    <category term="Opinion" scheme="https://tommy.net.cn/categories/opinion/"/>
    
    
    <category term="Metaverse" scheme="https://tommy.net.cn/tags/metaverse/"/>
    
  </entry>
  
  <entry>
    <title>学日语的意义……</title>
    <link href="https://tommy.net.cn/2021/10/25/why-japanese/"/>
    <id>https://tommy.net.cn/2021/10/25/why-japanese/</id>
    <published>2021-10-25T13:30:17.000Z</published>
    <updated>2025-02-19T05:47:01.212Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/10/25/why-japanese/stones.jpg" alt="Stones"></p><blockquote><p>免责声明：此为杂文，本人定义为杂七杂八、无逻辑、无条理的感悟（吐槽）文，不喜勿喷。</p></blockquote><p>最近，因为生活无聊（其实也并不无聊），莫名其妙地脑抽，又双叒叕想学日语了。</p><p>有不少朋友知道后，都表示「资瓷」。</p><p>虽然我也不知道为什么他们支持，但鼓励的言语还是很受用的。😏</p><p>当然也有为数不少看热闹的吃瓜群众，嘴上不说，心里却是笃定我学不会的。</p><p>再有，就是那种觉得我学日语，完全就是浪费时间没有意义的同学。</p><p>但不管是支持的，吃瓜的，还是觉得没意义的，大家都不约而同的问了我同一个问题。</p><p>那就是：「<strong>你学日语来干嘛？</strong>」</p><span id="more"></span><p>不得不说，这个问题虽然算不上灵魂拷问，却也成功地引起了我的思考。</p><p>因担心那灵光一现的想法转瞬即逝，是以为记。</p><hr><p>人到中年，感觉各种问题层出不穷，仿佛每个人都有挥之不尽的问题与困扰。</p><p>「从前<strong>车马</strong>很<strong>慢</strong>，<strong>书信</strong>很<strong>远</strong>，一生只够爱一个人」。</p><p>而现在呢？</p><p>千里姻缘一线牵，只需一部小小的手机，人们就可以轻松地触达到世界的每一个角落。</p><p>但是我们却失去了「<strong>慢</strong>」所赋予的生命的意义，迷失在信息的汪洋之中。</p><p>什么都是立刻、现在、马上，now or never……</p><p>游戏也是，生活也是，感情也是，一切的一切都变成了快消品。</p><p>各种制造焦虑的媒体，各种贩卖焦虑的公号，各种通过焦虑敛财的大 V。</p><p>在这个信息爆炸的时代，我们扪心自问，自己是不是活得过于功利了？</p><p>曾几何时，那个简简单单的自己，朴素地想要做什么东西的自己，是不是已经消失不见了？</p><hr><p>小的时候，我们可能因为感兴趣，而爱上阅读。</p><p>小的时候，我们可能因为热爱，而爱上运动。</p><p>小的时候，我们可能不需要做任何事，原地发呆也能沉浸在天马行空的想象中。</p><p>现在呢？</p><p>考研为了找更好的工作，而不是学习自己感兴趣的内容。</p><p>学礼仪为了在大场合能更好的装一下，而不是真的修心养性。</p><p>甚至连玩游戏，都必须要带上社交属性。</p><p>毕竟，没有社交属性的游戏，玩了别人也不知道啊。</p><p>好像不能 PK，不能一较高下，不跟大家一起玩，就没有了圈子，没有了谈资。</p><p>看看地铁上行色匆匆的人们，只有中小学生在看书。</p><p>而其他人一个个都如同被「手机」控制了的鞠瘘蚂蚁……</p><hr><p>反观现在的成年人，不管做什么事情都<strong>只</strong>用利益来衡量。</p><p>所有的事情都被量化，所有的投入和产出也被反复计算。</p><p>无论是否金融管理专业，似乎大家都能非常精通 ROI（投入产出比）的理念。</p><p>婚姻计算、亲情计算、友谊计算、商业计算、学习计算，还有什么我们不计算的吗？</p><p>我们真的已经沦落到，什么事情都要计算清楚利益得失，才去做吗？</p><p>当人类无限内卷下去，收益为负的时候，我们是不是就可以无所事事，坐吃等死了？</p><p>你也许会说，那是不可能的。</p><p>但当 AI 极度发达的时候，人类已经不需要劳作，便可以衣食无忧的时候。</p><p>我们还有什么优势，还有什么投入产出比呢？机器永远完胜。</p><hr><p>回归日语学习这件事，正经的朋友会跟我分析学习日语的利弊，以及工作中可能用到的场景。</p><p>而大多数朋友则认为学日语的主要目的，是为了将来能看日漫，看日剧，刷生肉。</p><p>「不靠谱」的损友们，则认为最大的收益是能听懂动作片的台词，或者找个日本女朋友。</p><p>这里我吐槽下「损友」们，谁看动作片关心台词啊？你是一句一句暂停复读，还是用心了解语法结构、时态以及遣词造句啊？！</p><p>再说了，现实点，学日语找日本女友？找个日本女友学日语不香吗？我差的是日语吗？我差的是女友啊！有女朋友哪还有时间学日语？</p><hr><p>吐槽完毕，公布答案：我就是纯粹地想学日语了，哪怕以后永远也用不上。</p><p>当然想学的原因，也是多方面的：</p><ol><li>上中学的时候就想学，但半途而废了（想要圆梦）</li><li>去日本滑雪的时候，跟日本人英文沟通困难</li><li>想要通过语言学习与交流，去结识更多有趣的灵魂</li></ol><p>一直以来我都希望自己可以立长志，而不是常立志。</p><p>但我却总是在「想要努力」、「自我放纵」，和「无限懊悔」中周而复始。</p><p>那些说我面子大的童鞋，我那都是自己长年累月「啪啪啪」打脸的结果啊。😮‍💨</p><hr><p>在经历过许许多多波折，和人生的跌宕起伏以后。</p><p>我只想简简单单地学点什么，做点什么，并没有什么明确的目的性。</p><p>也许我最后依旧是学无所成，亦或者是半途而废。</p><p>但至少在这让人窒息到无法呼吸的钢筋混凝土囚笼中，我曾尝试过去追随自己的内心。</p><p>不为什么利益与结果，只为一个过程，不需要什么理由。</p><p>愿你出走半生，归来仍是少年……</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/10/25/why-japanese/stones.jpg&quot; alt=&quot;Stones&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;免责声明：此为杂文，本人定义为杂七杂八、无逻辑、无条理的感悟（吐槽）文，不喜勿喷。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近，因为生活无聊（其实也并不无聊），莫名其妙地脑抽，又双叒叕想学日语了。&lt;/p&gt;
&lt;p&gt;有不少朋友知道后，都表示「资瓷」。&lt;/p&gt;
&lt;p&gt;虽然我也不知道为什么他们支持，但鼓励的言语还是很受用的。😏&lt;/p&gt;
&lt;p&gt;当然也有为数不少看热闹的吃瓜群众，嘴上不说，心里却是笃定我学不会的。&lt;/p&gt;
&lt;p&gt;再有，就是那种觉得我学日语，完全就是浪费时间没有意义的同学。&lt;/p&gt;
&lt;p&gt;但不管是支持的，吃瓜的，还是觉得没意义的，大家都不约而同的问了我同一个问题。&lt;/p&gt;
&lt;p&gt;那就是：「&lt;strong&gt;你学日语来干嘛？&lt;/strong&gt;」&lt;/p&gt;</summary>
    
    
    
    <category term="Life" scheme="https://tommy.net.cn/categories/life/"/>
    
    
    <category term="Life" scheme="https://tommy.net.cn/tags/life/"/>
    
    <category term="Japanese" scheme="https://tommy.net.cn/tags/japanese/"/>
    
    <category term="Language" scheme="https://tommy.net.cn/tags/language/"/>
    
    <category term="Misc" scheme="https://tommy.net.cn/tags/misc/"/>
    
    <category term="Thought" scheme="https://tommy.net.cn/tags/thought/"/>
    
  </entry>
  
  <entry>
    <title>用 Nebula 创建私人局域网</title>
    <link href="https://tommy.net.cn/2021/09/12/build-your-own-sd-lan-by-nebula/"/>
    <id>https://tommy.net.cn/2021/09/12/build-your-own-sd-lan-by-nebula/</id>
    <published>2021-09-11T18:11:28.000Z</published>
    <updated>2021-09-11T19:24:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/09/12/build-your-own-sd-lan-by-nebula/nebula.jpg"></p><h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>作为一个 IT 苦力的我，由于常年受<del>白嫖怪</del>朋友们的厚(qi)爱(fu)，时常需要帮友人重装系统，配置网络，设置路由器，组装 NAS 什么的。毕竟学通信工程的人，不就是修电脑、修手机和修网络的吗？😂</p><p>理论上来讲，很多东西装好，配置好，应该就不会有任何问题了。一开始，我也是这样以为的，然而很多时候往往事与愿违。今天不是张三的电脑出问题了，就是明天李四的 <a href="https://en.wikipedia.org/wiki/Network-attached_storage">NAS</a> 挂了。</p><p>作为一个懒人，现场支持什么的，那是肯定不可能的，毕竟咱这工时费也不低不是（可惜从来没收过）。再者说来，朋友们碰到的大多数问题其实都不大需要现场支持这么严重，除非是系统级别的灾难。</p><span id="more"></span><p>然而，我又一次天真了。同一个问题，我自己可能几分钟就解决了，而跟好友打电话、视频、语音等各种沟通，可能要花上数小时。别问我为什么不用<a href="https://en.wikipedia.org/wiki/Remote_Desktop_Protocol">远程桌面（RDP）</a>、<a href="https://www.teamviewer.cn/">TeamViewer</a>、QQ 远程协助类的工具。绝大多数人的网络都在 <a href="https://en.wikipedia.org/wiki/Network_address_translation">NAT</a> 后面，很多还是好几级的 NAT，根本就连不上。在 macOS 系统下，是无法使用 QQ 远程协助的，因为根本没有这个功能。TeamViewer 要付费，这个也就没什么好聊的啦，参考第一段第一句话。🤦‍♂️</p><p>比较稳定能用的网络连接工具也就是 ZeroTier 了，但是要跟对方讲怎么安装，怎么加入网络也是个吃力不讨好的事儿。而且可能就一个小问题，还要安装一个额外的软件，也是得不偿失。再者，ZeroTier 中继的速度非常慢，而且就算连上了，还是得用屏幕共享的方式解决问题，也并不怎么优雅。更不要说像 NAS 这类的 Linux 系统了，我该如何跟小白解释 SSH，证书还有 Terminal 了 。</p><p>如果在路由器级别就能实现互联互通，解决掉<a href="https://en.wikipedia.org/wiki/Dynamic_DNS">动态域名</a>和 <a href="https://en.wikipedia.org/wiki/NAT_traversal">NAT 打洞</a>的问题，那么就可以把远程协助的工作变成一个局域网内的远程管理，这样就非常美好了。起码不用让对方去查看自己的公网 IP，不用做 <a href="https://en.wikipedia.org/wiki/Universal_Plug_and_Play">UPnP 映射</a>，下载工具什么的。其实这种方式也非常适合有多个办公地点的小伙伴，或者是那种多 sites 办公的群体。还有一个应用场景，就是有自己 NAS 的小伙伴，可以在外面安全地访问家里存放的私人数据。</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>在思考过可能的使用场景后，整理需求如下：</p><ol><li>能实现多个地点的局域网化（<a href="https://en.wikipedia.org/wiki/Software-defined_networking">SD-LAN</a>），比如北京、上海、广州和深圳办公室的互联</li><li>在外可以实现远程访问公司或者家里 NAS 上存储的数据</li><li>客户端支持主流操作系统 macOS、Windows、Linux 以及手机 iOS、Android 应用</li><li>实现端对端加密，且支持现代加密技术，以保证数据传输的安全性</li><li>可以运行在路由器上，实现不同路由器下子网间的互联互通</li><li>新加入网络的设备不改变现有网络拓扑结构，无需修改现有配置</li></ol><p>可选需求：</p><ol><li>配置简单、方便，有图形化界面，或者类似工具</li><li>去中心节点化，尽可能多的容灾方案</li><li>最好是开源代码，而非商业代码，以便于代码审查</li></ol><h2 id="工具对比"><a href="#工具对比" class="headerlink" title="工具对比"></a>工具对比</h2><p>在做了一大轮的功课以后，我分别尝试了以下这些工具：</p><ul><li><a href="https://www.cisco.com/c/en/us/support/security/anyconnect-secure-mobility-client-v4-x/model.html">Cisco AnyConnect</a></li><li><a href="https://www.defined.net/">Nebula</a></li><li><a href="https://www.wireguard.com/">WireGuard</a></li><li><a href="https://www.zerotier.com/">ZeroTier</a></li><li><a href="https://github.com/fatedier/frp">frp</a></li><li><a href="https://github.com/ntop/n2n">n2n</a></li><li><a href="https://ngrok.com/">ngrok</a></li></ul><p>总体来讲，ZeroTier 的体验是最好的，虽然中继服务器经常连不上，或者很慢，但是可以通过自建 <a href="https://docs.zerotier.com/zerotier/manual/">moon</a> 的方式进行中转。基本上所有类型的 NAT 都可以打通，对于不能打通的可以使用中继服务器进行中转。但使用中继的时候，带宽受限于中转服务器的带宽。相对来说，新手上手难度比较低，但是商业公司，中心服务器，数据安全可能是个问题。</p><p>WireGuard 是一个已经加入到 <a href="https://www.kernel.org/">Linux 内核</a>里面的协议，配置也不复杂，实测传输速度也很不错。默认不支持在 NAT 网络下打洞，不过网上已经有人通过 <a href="https://coredns.io/">CoreDNS</a> 的 Plugin <a href="https://www.jordanwhited.com/posts/wireguard-endpoint-discovery-nat-traversal/">实现了 WireGuard 的打洞</a>，但还要编译代码什么的比较啰嗦。同时，配置起来也比较麻烦，每个节点（Node）需要单独配置公私钥，多个节点之间必须每两两进行配置。也就是说如果 2 个服务器就要配置 2 个节点信息，3 个需要配置 6 个，如果站点多的话，自己算吧……</p><p>Cisco AnyConnect 属于商用软件，Server &#x2F; Client 模式，同时还需要占用 443&#x2F;TCP 端口，属于比较传统的产品。虽然有 <a href="https://ocserv.gitlab.io/www/">ocserv</a>，但是配置也很麻烦，客户端强依赖于 Cisco，并不适用于现有需求，直接劝退吧。</p><p>frp，也需要服务器中转，受限于服务器带宽。有朋友说现在有 <code>xtcp</code> 模式可以支持直连打洞，但本人并没有试验过。n2n，ngrok 什么的在 Linux 服务器上配置过，对于终端用户来说，还是不那么理想。</p><p>而 Nebula，从 2020 年开始关注以来，一直没有真正部署过。主要是文档太少，官方开发速度缓慢，一些该有的核心功能还不完善。比如刚开始的时候，他们没有 iOS 和 Android 的客户端。再有就是必须要自己有一个公网 IP 的服务器做 Lighthouse，同时还不支持数据中转。一些复杂的 NAT 网络无法穿透，不支持 IPv6 等等。</p><p>但是他们最近发布了 1.4.0 的版本，突然之间就变得真香了。对于我来说，最重要的一点，就是支持 IPv6 了。也就是说，在有 IPv6 支持的情况下，完全不需要关心 NAT 类型了，可以直接建立连接。再有就是手机客户端官方也开源了，同时 iOS 上也可以正常使用了。这就意味着只用一个软件，我就可以把已知的网络通过路由器全部连通的同时，还可以用手机直接访问内网 NAS 上的数据。</p><h2 id="Nebula"><a href="#Nebula" class="headerlink" title="Nebula"></a>Nebula</h2><p>首先说说，什么是 Nebula？其官方介绍如下：</p><blockquote><p>Nebula is a scalable overlay networking tool with a focus on performance, simplicity and security. It lets you seamlessly connect computers anywhere in the world. Nebula is portable, and runs on Linux, OSX, Windows, iOS, and Android. It can be used to connect a small number of computers, but is also able to connect tens of thousands of computers.</p></blockquote><p>简单来说，<a href="https://github.com/slackhq/nebula/">Nebula</a> 是由 <a href="https://slack.com/">slack</a> 开源的一款专注于性能、易用性和安全性的 P2P 网络通信工具。可以运行在 Linux、macOS、Windows、iOS 和 Android 等设备上，使得用户可以无缝连接任何一台网络设备。</p><p>Nebula 的底层使用了 <a href="https://noiseprotocol.org/">Noise Protocol Framework</a> 协议以实现<a href="https://en.wikipedia.org/wiki/Software-defined_networking">SDN（Software Defined Network）</a> 双向认证的 P2P 网络。可以使用 AES 或者 CHACHAPOLY 加密算法，以保证数据传输的安全性。</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>首先去 Nebula 的 GitHub Release 页面下载最新的 Nebula：</p><p><a href="https://github.com/slackhq/nebula/releases">https://github.com/slackhq/nebula/releases</a></p><p>当前最新的版本为 Nebula 1.4.0，已经支持 IPv6 了，针不戳。</p><p>下载自己对应平台的版本就可以了，因为我要跑在 MTK 的路由器上（红米 AC2100，Newifi-D2 等），官方没有 mipsle-softfloat 的架构，所以就自己编译了一个版本，可以在下面的地址下载：</p><p><a href="https://github.com/TommyLau/nebula/releases">https://github.com/TommyLau/nebula/releases</a></p><p>同时，因为朋友需要在 Windows 32 位系统下面使用，所以顺便也编译了一个 x86 的版本。有需要的小伙伴，同样可以在上面的链接里面找到对应的下载。</p><p>下面是 iOS 和 Android 的版本：</p><p><a href="https://apps.apple.com/us/app/mobile-nebula/id1509587936">https://apps.apple.com/us/app/mobile-nebula/id1509587936</a><br><a href="https://play.google.com/store/apps/details?id=net.defined.mobile_nebula">https://play.google.com/store/apps/details?id=net.defined.mobile_nebula</a></p><p>需要注意的是，iOS 版本在中国区是没有上架的，Android 版本好像也只有 Google Play 上才有，这个大家自己想办法解决吧。</p><p>解包 Nebula 以后主要有 2 个文件，<code>nebula</code> 和 <code>nebula-cert</code>。</p><h2 id="创建-CA-证书"><a href="#创建-CA-证书" class="headerlink" title="创建 CA 证书"></a>创建 CA 证书</h2><p>创建证书，好比使用其他工具一样，一如既往的简单。只需要输入如下的内容便可以生成我们需要的 CA 证书了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nebula-cert ca -name &quot;Myorganization, Inc&quot;</span><br></pre></td></tr></table></figure><p>其中 <code>&quot;Myorganization, Inc&quot;</code> 为这个 Nebula 网络的证书名，可以改成任意方便记忆的名字。</p><p>程序执行完毕后，会在当前目录下生成 <code>ca.key</code>（私钥）和 <code>ca.crt</code>（证书）两个文件。</p><blockquote><p> <code>ca.key</code> 用于签名所有的 Nebula 节点，因此格外重要，请务必妥善保管。又因为其重要性，建议仅在签名时使用，并作单独存放，不要放到 Lighthouse 或者任何一个 Nebula 节点上。</p></blockquote><h2 id="创建密钥与证书"><a href="#创建密钥与证书" class="headerlink" title="创建密钥与证书"></a>创建密钥与证书</h2><p>假设我们现在要配置 3 个主机，分别是 <code>lighthouse</code>、<code>router</code> 和 <code>laptop</code>。我们可以直接使用刚才说的 3 个名字，也可以用域名的方式来命名，都是可以的。</p><p>同时我们需要提前规划好网络定义，比如：<code>192.168.100.0/24</code>。这个网络要跟我们现在已有的网络地址区分开，比如 <code>192.168.1.0/24</code> 等。因为 Nebula 是 Overlay Network，它必须基于现有网络的基础之上，如果 IP 地址冲突的话，就无法正常工作了。</p><p>我们可以通过下面的命令，来生成不同的证书：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./nebula-cert sign -name &quot;lighthouse&quot; -ip &quot;192.168.100.1/24&quot;</span><br><span class="line">./nebula-cert sign -name &quot;router&quot; -ip &quot;192.168.100.11/24&quot; -subnets &quot;172.16.1.0/24&quot; -groups &quot;router,servers&quot;</span><br><span class="line">./nebula-cert sign -name &quot;laptop&quot; -ip &quot;192.168.100.100/24&quot; -groups &quot;laptop,ssh&quot;</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>-name，就是这个节点的名字，可以任意填写，也可以用域名的方式填写</li><li>-ip，指定 Nebula 分配给该节点的 IP 地址，需要手动指定，且不能与已分配的 IP 地址冲突</li><li>-subnets，指定当前节点的非 Nebula 路由，以便其它节点能访问当前节点的子网  </li><li>-group，指定该节点所在的组，方便 Nebula 进行防火墙规则配置</li></ul><p>在上面的例子中，我们创建了 3 个不同的节点。<code>lighthouse</code> 需要部署在有公网 IP 的服务器上，用于连通各个不同的节点。<code>router</code> 部署在家里的路由器上，以方便访问 NAS 或者智能家居等设备。<code>laptop</code> 相当于一个笔记本，用于在任何地方接入这个私有网络。类似的，我们也可以增加 <code>phone</code>、<code>pad</code> 等设备，其它证书的生成方式与 <code>laptop</code> 类似，使用不同的名称就可以了。</p><h2 id="配置-Nebula"><a href="#配置-Nebula" class="headerlink" title="配置 Nebula"></a>配置 Nebula</h2><p>对于 Nebula 来说，每一个节点都需要一个单独的配置文件。我们可以下载官方的配置文件作为参考模板：</p><p><a href="https://github.com/slackhq/nebula/blob/master/examples/config.yml">https://github.com/slackhq/nebula/blob/master/examples/config.yml</a></p><p>我们把这个文件复制成两份，分别是 <code>config-lh.yaml</code> 和 <code>config.yaml</code>，分别对应 <code>lighthouse</code> 和其它主机。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp config.yml config-lh.yaml</span><br><span class="line">cp config.yml config.yaml</span><br></pre></td></tr></table></figure><h3 id="配置-Lighthouse"><a href="#配置-Lighthouse" class="headerlink" title="配置 Lighthouse"></a>配置 Lighthouse</h3><p>在 Lighthouse 节点上，最重要的是要确认 <code>am_lighthouse: true</code> 为开启状态。</p><p>一般来说，Lighthouse 节点不需要指定静态路由 <code>static_host_map</code>，因为所有的节点都会跟 Lighthouse 进行通信。就算我个人使用了多 Lighthouse 的配置，其实也不需要设置静态路由，除非是需要在 Lighthouse 之间进行通信。</p><p>另外，为了更好的组网，IPv6 当然是必不可少的啦！在官方的配置文件中，默认使用 IPv4 方式：<code>host: 0.0.0.0</code>，这里我们需要手动修改为：<code>host: &quot;[::]&quot;</code> 来同时监听 IPv4 和 IPv6 的数据。</p><p>修改过的参数配置如下：</p><figure class="highlight yaml"><figcaption><span>config-lh.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">static_host_map:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">lighthouse:</span></span><br><span class="line">  <span class="attr">am_lighthouse:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">listen:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;[::]&quot;</span></span><br></pre></td></tr></table></figure><p>除此之外，配置文件里面还有子网相关的配置，因为我使用了与官方参考配置相同的子网： <code>192.168.100.0/24</code>，所以不需要做额外地修改。如果你配置了不同的子网和 IP 的话，请相应地做出调整。</p><h3 id="配置节点"><a href="#配置节点" class="headerlink" title="配置节点"></a>配置节点</h3><p>配置节点与配置 Lighthouse 类似，唯一不同的是，需要在 <code>static_host_map</code> 中指定 Lighthouse 的公网 IP 和端口。这里使用 IP 或者域名的方式都可以，个人建议使用域名，这样可以减少更换 Lighthouse 服务器以后，需要逐个节点修改配置的麻烦。</p><p><code>static_host_map</code> 前面的部分是 Lighthouse 在 Nebula 网络中的 IP 地址（参考本文证书部分），后面是公网服务器的域名或者 IP，以及其对应的端口。</p><p> <code>am_lighthouse</code> 必须要设置为 <code>false</code>，同时 <code>hosts</code>  里面必须要指定 Lighthouse 的 Nebula IP。</p><p> 同样的，为了打开 IPv6，host -&gt; listen 还是要调整下。同时这里有个坑，就是在 NAT 后面的网络，一定要把 <code>port</code> 设置为 0，以使用动态端口，不然各种连不上。其实我觉得除了 Lighthouse 以外，其它的节点都应该将端口设置为 0，以减少不必要的麻烦。</p><figure class="highlight yaml"><figcaption><span>config.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">static_host_map:</span></span><br><span class="line">  <span class="attr">&quot;192.168.100.1&quot;:</span> [<span class="string">&quot;your.domain.tld:4242&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">lighthouse:</span></span><br><span class="line">  <span class="attr">am_lighthouse:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">60</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;192.168.100.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">listen:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;[::]&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>配置到这里，基本上就算是完成了。但是我们之前有一个 <code>router</code> 节点，为的就是能远程访问局域网的内容，所以这个时候我们还需要多配置一个 <code>unsafe_routes</code>。需要注意的是，如果要访问 <code>router</code> 节点背后的网络，我们需要在每个需要访问该网络的节点上，增加如下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tun:</span></span><br><span class="line">  <span class="attr">unsafe_routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">route:</span> <span class="number">172.16</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24</span></span><br><span class="line">      <span class="attr">via:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.11</span></span><br></pre></td></tr></table></figure><p>这里的 <code>172.16.1.0/24</code> 就是路由器对应的局域网（LAN）的网段，而 <code>192.168.100.11</code> 就是我们之前配置的 <code>router</code> 节点所对应的 Nebula 网络中的 IP。我们只需要把这个配置文件复制到 <code>laptop</code> 节点中，并配合相应的证书，就可以实现远程访问家庭网络的目的。</p><blockquote><p>需要注意的是，对于 <code>router</code> 节点本身，不能添加这条路由规则，否额会导致路由冲突而组网失败。</p></blockquote><h3 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h3><p>官方默认的防火墙配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">firewall:</span></span><br><span class="line">  <span class="attr">outbound:</span></span><br><span class="line">    <span class="comment"># Allow all outbound traffic from this node</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">inbound:</span></span><br><span class="line">    <span class="comment"># Allow icmp between any nebula hosts</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">icmp</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Allow tcp/443 from any host with BOTH laptop and home group</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">tcp</span></span><br><span class="line">      <span class="attr">groups:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">laptop</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">home</span></span><br></pre></td></tr></table></figure><p>大概就是，使用这个配置的节点，对外访问 Nebula 网络无任何限制。Nebula 网络中的其它节点，只能通过 ICMP 协议 PING 当前节点。属于 <code>laptop</code> 和 <code>home</code> 组的其它节点，可以访问当前节点的 443&#x2F;TCP 端口。</p><p>大家刚开始配置的时候，我个人建议先不要设置防火墙规则，先让服务跑起来然后再说。毕竟绝大多数情况下，大家一开始的时候，网络都是各种不通，别说防火墙了。所以我们可以修改成如下的样子：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">firewall:</span></span><br><span class="line">  <span class="attr">outbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">inbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br></pre></td></tr></table></figure><p>允许各个节点之间自由通信。</p><h3 id="其它配置"><a href="#其它配置" class="headerlink" title="其它配置"></a>其它配置</h3><p>因为要在路由器上使用，且对于安全没有过度的痴迷，这里我将加密算法指定为 <code>chachapoly</code>。毕竟 <code>aes</code> 算法虽好，但是如果没有硬件指令集支持的话，还是很难过的。尤其是路由器这种嵌入式处理器，老旧一点的大多没有 AES 指令集，实测很多连带宽都无法跑满。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cipher:</span> <span class="string">chachapoly</span></span><br></pre></td></tr></table></figure><blockquote><p>需要注意的是，各个节点之间必须使用相同的加密方式，也就是说要么全部用 <code>aes</code>，要么全部用 <code>chachapoly</code>，并不能混合使用。</p></blockquote><h2 id="运行-Nebula"><a href="#运行-Nebula" class="headerlink" title="运行 Nebula"></a>运行 Nebula</h2><h3 id="运行-Lighthouse"><a href="#运行-Lighthouse" class="headerlink" title="运行 Lighthouse"></a>运行 Lighthouse</h3><p>下载服务器对应的 Nebula 二进制可执行文件，然后把 <code>ca.crt</code>、<code>lighthouse.key</code>、<code>lighthouse.crt</code> 还有 <code>config-lh.yaml</code> 上传到服务器。</p><p>创建 <code>/etc/nebula</code> 目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/nebula</span><br></pre></td></tr></table></figure><p>将配置文件移动到指定目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mv config-lh.yaml /etc/nebula/config.yaml</span><br><span class="line">mv ca.crt /etc/nebula/ca.crt</span><br><span class="line">mv lighthouse.crt /etc/nebula/host.crt</span><br><span class="line">mv lighthouse.key /etc/nebula/host.key</span><br></pre></td></tr></table></figure><p>运行 Nebula</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nebula -config /etc/nebula/config.yaml</span><br></pre></td></tr></table></figure><h3 id="运行节点"><a href="#运行节点" class="headerlink" title="运行节点"></a>运行节点</h3><p>类似 Lighthouse，同样的把相关的文件复制到需要运行的主机上，主要是 <code>ca.crt</code>、<code>config.yaml</code> 和对应节点的两个证书文件，比如：<code>router.key</code>、<code>router.crt</code>。</p><p>同样的，创建 <code>/etc/nebula</code> 目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/nebula</span><br></pre></td></tr></table></figure><p>将配置文件移动到指定目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mv config.yaml /etc/nebula/config.yaml</span><br><span class="line">mv ca.crt /etc/nebula/ca.crt</span><br><span class="line">mv router.crt /etc/nebula/host.crt</span><br><span class="line">mv router.key /etc/nebula/host.key</span><br></pre></td></tr></table></figure><p>运行 Nebula</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nebula -config /etc/nebula/config.yaml</span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>在任何一个非 Lighthouse 的节点上，应该可以 ping 通 Lighthouse：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 192.168.100.1</span><br></pre></td></tr></table></figure><p>如果能 ping 通则表示 Nebula 网络建立成功。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>不同于其它的组网程序，Nebula 的 Lighthouse 是不负责数据的中转的，也就是说所有的数据都是 P2P 的，如果能连上就能连上，连不上就……连不上。😅</p><p>所以如果大家能 ping 通 Lighthouse，但是两个节点之间无法互通的话，大概率就是 NAT 穿透的问题。</p><p>这也是为什么我觉得 IPv6 很重要的原因，因为只要双方有 IPv6，除非防火墙配置有问题，否则就不可能出现连不上的情况。哪怕是在手机热点的辣鸡 Symmetric NAT 下，也能有效连通。</p><p>用 Nebula 的好处就是，只要网络规划合理，添加新的节点非常容易。只需要用 CA 签名一个新的证书就可以了，现存的节点都不需要修改。而且节点跟节点之间都是直连，如果 CPU 够用的话，基本上都可以在任意两个节点之间跑满带宽。</p><p>除了「真香」，我还能说什么呢？😊</p><h2 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h2><p>最后，提供 <code>lighthouse</code> 和 <code>laptop</code> 的完整配置文件，供大家参考。</p><h3 id="config-lh-yaml"><a href="#config-lh-yaml" class="headerlink" title="config-lh.yaml"></a>config-lh.yaml</h3><figure class="highlight yaml"><figcaption><span>config-lh.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pki:</span></span><br><span class="line">  <span class="attr">ca:</span> <span class="string">/etc/nebula/ca.crt</span></span><br><span class="line">  <span class="attr">cert:</span> <span class="string">/etc/nebula/host.crt</span></span><br><span class="line">  <span class="attr">key:</span> <span class="string">/etc/nebula/host.key</span></span><br><span class="line"></span><br><span class="line"><span class="attr">static_host_map:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">lighthouse:</span></span><br><span class="line">  <span class="attr">am_lighthouse:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">60</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;192.168.100.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">listen:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;[::]&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">4242</span></span><br><span class="line"></span><br><span class="line"><span class="attr">punchy:</span></span><br><span class="line">  <span class="attr">punch:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cipher:</span> <span class="string">chachapoly</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tun:</span></span><br><span class="line">  <span class="attr">disabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">dev:</span> <span class="string">nebula1</span></span><br><span class="line">  <span class="attr">drop_local_broadcast:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">drop_multicast:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tx_queue:</span> <span class="number">500</span></span><br><span class="line">  <span class="attr">mtu:</span> <span class="number">1300</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span> <span class="string">info</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">text</span></span><br><span class="line"></span><br><span class="line"><span class="attr">firewall:</span></span><br><span class="line">  <span class="attr">conntrack:</span></span><br><span class="line">    <span class="attr">tcp_timeout:</span> <span class="string">12m</span></span><br><span class="line">    <span class="attr">udp_timeout:</span> <span class="string">3m</span></span><br><span class="line">    <span class="attr">default_timeout:</span> <span class="string">10m</span></span><br><span class="line">    <span class="attr">max_connections:</span> <span class="number">100000</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">outbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">inbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br></pre></td></tr></table></figure><h3 id="config-yaml"><a href="#config-yaml" class="headerlink" title="config.yaml"></a>config.yaml</h3><figure class="highlight yaml"><figcaption><span>config.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pki:</span></span><br><span class="line">  <span class="attr">ca:</span> <span class="string">/etc/nebula/ca.crt</span></span><br><span class="line">  <span class="attr">cert:</span> <span class="string">/etc/nebula/host.crt</span></span><br><span class="line">  <span class="attr">key:</span> <span class="string">/etc/nebula/host.key</span></span><br><span class="line"></span><br><span class="line"><span class="attr">static_host_map:</span></span><br><span class="line">  <span class="attr">&quot;192.168.100.1&quot;:</span> [<span class="string">&quot;your.domain.tld:4242&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">lighthouse:</span></span><br><span class="line">  <span class="attr">am_lighthouse:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">interval:</span> <span class="number">60</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;192.168.100.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">listen:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;[::]&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">punchy:</span></span><br><span class="line">  <span class="attr">punch:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cipher:</span> <span class="string">chachapoly</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tun:</span></span><br><span class="line">  <span class="attr">disabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">dev:</span> <span class="string">nebula1</span></span><br><span class="line">  <span class="attr">drop_local_broadcast:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">drop_multicast:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tx_queue:</span> <span class="number">500</span></span><br><span class="line">  <span class="attr">mtu:</span> <span class="number">1300</span></span><br><span class="line">  <span class="attr">unsafe_routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">route:</span> <span class="number">172.16</span><span class="number">.1</span><span class="number">.0</span><span class="string">/24</span></span><br><span class="line">      <span class="attr">via:</span> <span class="number">192.168</span><span class="number">.100</span><span class="number">.11</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span> <span class="string">info</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">text</span></span><br><span class="line"></span><br><span class="line"><span class="attr">firewall:</span></span><br><span class="line">  <span class="attr">conntrack:</span></span><br><span class="line">    <span class="attr">tcp_timeout:</span> <span class="string">12m</span></span><br><span class="line">    <span class="attr">udp_timeout:</span> <span class="string">3m</span></span><br><span class="line">    <span class="attr">default_timeout:</span> <span class="string">10m</span></span><br><span class="line">    <span class="attr">max_connections:</span> <span class="number">100000</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">outbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">inbound:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">proto:</span> <span class="string">any</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">any</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/09/12/build-your-own-sd-lan-by-nebula/nebula.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;缘起&quot;&gt;&lt;a href=&quot;#缘起&quot; class=&quot;headerlink&quot; title=&quot;缘起&quot;&gt;&lt;/a&gt;缘起&lt;/h2&gt;&lt;p&gt;作为一个 IT 苦力的我，由于常年受&lt;del&gt;白嫖怪&lt;/del&gt;朋友们的厚(qi)爱(fu)，时常需要帮友人重装系统，配置网络，设置路由器，组装 NAS 什么的。毕竟学通信工程的人，不就是修电脑、修手机和修网络的吗？😂&lt;/p&gt;
&lt;p&gt;理论上来讲，很多东西装好，配置好，应该就不会有任何问题了。一开始，我也是这样以为的，然而很多时候往往事与愿违。今天不是张三的电脑出问题了，就是明天李四的 &lt;a href=&quot;https://en.wikipedia.org/wiki/Network-attached_storage&quot;&gt;NAS&lt;/a&gt; 挂了。&lt;/p&gt;
&lt;p&gt;作为一个懒人，现场支持什么的，那是肯定不可能的，毕竟咱这工时费也不低不是（可惜从来没收过）。再者说来，朋友们碰到的大多数问题其实都不大需要现场支持这么严重，除非是系统级别的灾难。&lt;/p&gt;</summary>
    
    
    
    <category term="Network" scheme="https://tommy.net.cn/categories/network/"/>
    
    
    <category term="Network" scheme="https://tommy.net.cn/tags/network/"/>
    
    <category term="VPN" scheme="https://tommy.net.cn/tags/vpn/"/>
    
    <category term="NAS" scheme="https://tommy.net.cn/tags/nas/"/>
    
    <category term="Router" scheme="https://tommy.net.cn/tags/router/"/>
    
    <category term="IP" scheme="https://tommy.net.cn/tags/ip/"/>
    
    <category term="IPv4" scheme="https://tommy.net.cn/tags/ipv4/"/>
    
    <category term="IPv6" scheme="https://tommy.net.cn/tags/ipv6/"/>
    
    <category term="LAN" scheme="https://tommy.net.cn/tags/lan/"/>
    
    <category term="Mesh" scheme="https://tommy.net.cn/tags/mesh/"/>
    
    <category term="NAT" scheme="https://tommy.net.cn/tags/nat/"/>
    
    <category term="Nebula" scheme="https://tommy.net.cn/tags/nebula/"/>
    
    <category term="SD-LAN" scheme="https://tommy.net.cn/tags/sd-lan/"/>
    
    <category term="SDN" scheme="https://tommy.net.cn/tags/sdn/"/>
    
    <category term="UDP" scheme="https://tommy.net.cn/tags/udp/"/>
    
  </entry>
  
  <entry>
    <title>断舍离</title>
    <link href="https://tommy.net.cn/2021/05/15/danshari/"/>
    <id>https://tommy.net.cn/2021/05/15/danshari/</id>
    <published>2021-05-14T17:20:44.000Z</published>
    <updated>2021-05-14T18:15:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/05/15/danshari/danshari.png" alt="Dan Sha Ri"></p><p>最早接触到《断舍离》这本书是在 2017 年左右，但真正入手这本书已经是 2018 年 8 月了。</p><p>当时看到「断舍离」这几个字，就被深深地吸引了。</p><p>无它，只因自己当时事业与爱情双双滑铁卢，急着要跟过去的自己 say goodbye。</p><p>而从断舍离物品开始，慢慢地整理思绪，着实是一个不错的选择。</p><p>恰逢最近「沉迷」于读书无法自拔（实际上是在疯狂地买书，😓），发现了据说是整合了之前 3 本书、集大成之作的 <a href="https://u.jd.com/qzfqZqo">2019 新版《断舍离》</a>。</p><p>凑巧最近又刚好在搬家，家里乱到一塌糊涂。</p><p>遂想着重新拜读一下，来治疗一下自己的「懒癌」。</p><p>以便好好整理一下自己的「杂物」，「净化」一下自己的心灵……</p><span id="more"></span><h2 id="断舍离"><a href="#断舍离" class="headerlink" title="断舍离"></a>断舍离</h2><p><img src="/2021/05/15/danshari/book.jpg" alt="断舍离"></p><p>对于《断舍离》这本书，我个人认为它其实是一本关于生活态度的哲学书，而不是一本关于居家整理的工具书。</p><p>大多数人选择「断舍离」的初衷，应该跟我的情况相类似。</p><p>就是觉得家里的杂物太多了，但是又不知道该如何整理（清理），因此想要学习如何「断舍离」。</p><p>但我想说的是，居家整理只是手段，而不是目的，最终的根本还是要通过「断舍离」找到自己内心的平静与平和。</p><p>这一点与欧美所提倡的「Minimalism（极简主义）」非常相像，但二者之间还是有些不同。</p><p>「极简主义」有点追求极端的「简」，对于现阶段的我来说有点难。而相比之下的「断舍离」，则更加适合我。</p><p>说了这么久，到底什么是「断舍离」？书中的解释为：</p><ul><li>斩**「断」**物欲</li><li>**「舍」**弃废物</li><li>脱**「离」**执念</li></ul><p>私以为，「断舍离」，要断的从来不是物品，而是自己的执念。</p><p>全书中最喜欢的一段话：</p><blockquote><p><strong>「每个人都会在某一天失去自己最宝贵的东西。几乎没有人能在最关键的时刻做到释怀。只有在日常生活中不断地练习如何放手， 才能坦然地接受烦恼，甚至衰老、病患和死亡。」</strong></p></blockquote><h2 id="认清现状"><a href="#认清现状" class="headerlink" title="认清现状"></a>认清现状</h2><p>为什么我们家里的杂物越来越多？为什么我们无法过简单快乐的生活？</p><p>其实，还是因为我们没有认清现状，没有做出想要改变的决心。</p><p>当然，想要「断舍离」便是一个不错的开始。</p><p>但开始之前，我们还是要先问一下自己，为何我们无法做到「断舍离」？</p><h3 id="逃避现实型"><a href="#逃避现实型" class="headerlink" title="逃避现实型"></a>逃避现实型</h3><p>这类人，往往因为工作繁忙的原因，极少有时间待在家里。就算在家，也不愿意做家务，只想埋头工作。</p><p>比如我，就是经常这样给自己找借口的：工作忙啊，毕竟一年 365 天有 280 多天都在加班，哪有时间搞卫生啊？</p><p>但是，恰恰是因为不愿意搞卫生，家里才会乱七八糟，进而导致心情不好。</p><p>而心情不好，人就更不想待在家里，由此陷入了一个永无休止的恶性循环。</p><p>比如我最近就经常出门在外做氛围组，在咖啡厅等地方看书、写文章。</p><p>不过这类人一旦开始收拾，倒是可以收拾得干净利落，一点也不拖沓，对很多物品也没有太多的执念。</p><p>也就是说问题不是收拾本身，而是不愿意开始收拾。</p><p><img src="/2021/05/15/danshari/1.jpg" alt="逃避现实型"></p><h3 id="执着过往型"><a href="#执着过往型" class="headerlink" title="执着过往型"></a>执着过往型</h3><p>执着过往的人，往往会保留和珍藏很多现在用不着的旧物。</p><p>比如以前的相册、奖杯、奖状。以前和亲人、朋友、情人的信件、礼物等。</p><p>他们往往喜欢回忆过去，想当年如何如何，而不愿意面对现在。</p><p>用现在的说法就是没有「活在当下」，这种类型的人跟<strong>逃避现实型</strong>也有着一定的关系。</p><p>在某种程度上，我也算得上半个执着过往的人。</p><p>倒不是整天忆当年如何那种，而是以前的很多东西都留着，舍不得扔。</p><p>比如马拉松的纪念奖牌，各种荣誉证书，乱七八糟的信件和礼物等。</p><p><img src="/2021/05/15/danshari/2.jpg" alt="执着过往型"></p><h3 id="忧虑未来型"><a href="#忧虑未来型" class="headerlink" title="忧虑未来型"></a>忧虑未来型</h3><p>忧虑未来的人，说好听点是未雨绸缪，说难听点是杞人忧天。</p><p>我觉得国人多多少少会有点这方面的强迫症，毕竟我们从小到大受到的教育，都是要「考虑未来」，要「深谋远虑」。</p><p>因此，大多数人往往会囤积很多没有用的东西，比如卷纸，沐浴露，洗发水等。</p><p>甚至看到商场、超市有打折产品出售的时候，就会莫名其妙地入了一大堆眼前并不需要的东西。</p><p>理由就是，将来说不定哪一天就用上了。</p><p>然而讽刺的是，往往囤货还没用完，自己已经开始了下一轮囤货……</p><p>比较幸运的是，经过了好几年的「进化」，我现在对于不可预知的未来，并没有那么焦虑了。</p><p><img src="/2021/05/15/danshari/3.jpg" alt="忧虑未来型"></p><h3 id="物品现状"><a href="#物品现状" class="headerlink" title="物品现状"></a>物品现状</h3><p>除了从思想上认知自己的「现状」外，我们同样需要确认物品的现状。</p><p>要清楚地了解自己的物品，到底是处于「凌乱」、「过剩」还是「堆积」的状态。</p><p>**「凌乱」**指的是东西用过后，随手散落在各处，但是只要简单整理一下，就能快速恢复干净整洁的状态。</p><p>**「过剩」**则属于东西使用过后，想要整理放入收纳箱，却因物品数量过多，而发生无法收纳的情况。</p><p>**「堆积」**就已经是很严重的状况了，这是长期物品「过剩」状态的延续。东西往往是一层上面又一层，只有最上层的物品被使用，底层的物品则长期处于吃灰的状态。</p><p>对于我个人而言，现在应该是处于「凌乱」和「过剩」中间的状态，应该还有得救……😅</p><p>但很多常年不用的物品，却已经处于「堆积」状态了，这个有必要赶紧清理下。</p><p>如果同样已经是「堆积」状态的小伙伴，那就赶紧行动起来吧！</p><h2 id="选择取舍"><a href="#选择取舍" class="headerlink" title="选择取舍"></a>选择取舍</h2><p><strong>第一步，就是扔掉怎么看都是垃圾、废品的东西。</strong></p><p>这个很好理解，过期的食物，破烂的衣服，不能使用的工具等等。</p><p>只要你认为是垃圾或者是废品的，直接处理掉就是了，不要犹豫！</p><hr><p><strong>第二步，从「自我轴」和「时间轴」两个纬度来取舍</strong></p><p>这部分实际上是「断舍离」最核心的思想。</p><p>看起来好像非常的高大上，晦涩难懂，但解释起来其实非常的直白。</p><p>所谓**「自我轴」**，就是以自己的喜好作为唯一的判断标准。</p><p>在进行物品的取舍时，只需要考虑「这个东西我想不想用」，只要是不想用的，就果断处理掉。</p><p>而**「时间轴」**就是指「活在当下」，如果现在用不到的，就处理掉。</p><p>不要管以前这个东西如何如何，也不需要考虑以后用不用得到。</p><p><img src="/2021/05/15/danshari/4.jpg"></p><hr><p><strong>第三步，从自己觉得「必要」、「合适」、「愉快」的角度来审视物品</strong></p><p>在处理完前两步的物品后，我们还可以从下面三个角度，进一步处理家中的物品：</p><p><strong>不需要的东西</strong>：东西可以正常使用，很便利也没有损坏，但是丢了也不发愁，可有可无的东西。</p><p><strong>不合适的东西</strong>：以前对自己很重要，但是现在不合适的东西。</p><p><strong>不愉快的东西</strong>：东西本身没有任何问题，但是用起来就是不开心、不喜欢的东西。</p><p><img src="/2021/05/15/danshari/5.jpg"></p><h2 id="收纳整理"><a href="#收纳整理" class="headerlink" title="收纳整理"></a>收纳整理</h2><p>原书中列出了 5 种收纳指南，结合自己的情况，我觉得下面两个最重要。</p><p>一个是**「7·5·1 法」<strong>，一个是</strong>「1 out 1 in 法」**。</p><h3 id="7·5·1-法"><a href="#7·5·1-法" class="headerlink" title="7·5·1 法"></a>7·5·1 法</h3><p>所谓 7·5·1 法，就是「看不见的收纳空间」占 7 成，「看得见的收纳空间」占 5 成，「展示性的收纳空间」占 1 成。</p><p>这里所说的占多少成，指的是整理后的物品占所储藏空间的比例。</p><p>像衣柜、壁橱、抽屉等关上门就「看不见的收纳空间」，所放物品的比例，应保持在整体空间的 7 成左右。如果放置得太满，则又会变成永远都不愿意再整理的垃圾堆。</p><p>而像带玻璃门的冰箱、橱柜、洗碗机等关上门后，依然能「看得见的收纳空间」，所放物品的比例，应该保持在整体空间的 5 成。这样显得既整齐，又不会太拥挤。</p><p>最后，像玄关、餐边柜、书桌等「展示性的收纳空间」，则不应放置太多东西，占整体空间的 1 成就好。这些地方更适合摆放一些装饰性的东西，比如插花，艺术品什么的。</p><h3 id="1-out-1-in-法"><a href="#1-out-1-in-法" class="headerlink" title="1 out 1 in 法"></a>1 out 1 in 法</h3><p>懂英文的小伙伴，非常容易理解**「1 out 1 in」**这个概念，就是：<strong>先出后进，不出不进！</strong></p><p>以往我们买东西，总是喜欢<strong>先进后出</strong>，而不是<strong>先出后进</strong>。</p><p>理由大多是新的还没买，旧的就出了，不就没得用了吗？</p><p>这其实都是掩耳盗铃、自欺欺人，真实的情况往往是新的买了，旧的也没有出。</p><p>这个时候，我们更需要有意识地坚持**「先出后进」**的原则，逼着自己置死地而后生。</p><p>而且这样做还有一种好处，我们出的肯定是我们不喜欢的东西。</p><p>而我们进的，肯定是我们喜欢，或者功能性更好的东西。</p><p>长此以往，我们东西的数量并没有增加，但是东西的品质却在不断上升。</p><p>不知不觉中，我们生活的品味和品质都得到了极大的提升，听起来是不是很赞？😊</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>看《断舍离》使我明白，精神和肉体与居住的空间其实是紧密相连的。</p><p>如果长时间生活在一个杂乱无章的空间内，烦恼也一定会与日俱增。</p><p>我们所拥有的东西，是物质和精神的集合体，往往带有与我们自身相关的「故事」。</p><p>而这些东西，也是我们本身「具象化形态」和「抽象化情感」的一种体现。</p><p>清理居住空间，断舍离不需要的各种物品。从表面上看，是清理杂物。</p><p>其深层次的内涵，实际上是清理我们内心看不见的「多余的执念」。</p><p>舍得，舍得，有舍才有得，不舍哪来得？</p><p>也许「断舍离」便是获得「快乐」的一种方法，谁又能说不是呢？</p><p>毕竟搞完卫生的我，总是觉得说不出来的舒爽……😂</p><blockquote><p>「人类最大的罪是不快活。」<br>—— 德国诗人、哲学家：歌德</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/05/15/danshari/danshari.png&quot; alt=&quot;Dan Sha Ri&quot;&gt;&lt;/p&gt;
&lt;p&gt;最早接触到《断舍离》这本书是在 2017 年左右，但真正入手这本书已经是 2018 年 8 月了。&lt;/p&gt;
&lt;p&gt;当时看到「断舍离」这几个字，就被深深地吸引了。&lt;/p&gt;
&lt;p&gt;无它，只因自己当时事业与爱情双双滑铁卢，急着要跟过去的自己 say goodbye。&lt;/p&gt;
&lt;p&gt;而从断舍离物品开始，慢慢地整理思绪，着实是一个不错的选择。&lt;/p&gt;
&lt;p&gt;恰逢最近「沉迷」于读书无法自拔（实际上是在疯狂地买书，😓），发现了据说是整合了之前 3 本书、集大成之作的 &lt;a href=&quot;https://u.jd.com/qzfqZqo&quot;&gt;2019 新版《断舍离》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;凑巧最近又刚好在搬家，家里乱到一塌糊涂。&lt;/p&gt;
&lt;p&gt;遂想着重新拜读一下，来治疗一下自己的「懒癌」。&lt;/p&gt;
&lt;p&gt;以便好好整理一下自己的「杂物」，「净化」一下自己的心灵……&lt;/p&gt;</summary>
    
    
    
    <category term="Reading" scheme="https://tommy.net.cn/categories/reading/"/>
    
    
    <category term="Life" scheme="https://tommy.net.cn/tags/life/"/>
    
    <category term="Book" scheme="https://tommy.net.cn/tags/book/"/>
    
    <category term="Reading" scheme="https://tommy.net.cn/tags/reading/"/>
    
    <category term="Sentiment" scheme="https://tommy.net.cn/tags/sentiment/"/>
    
    <category term="Clean" scheme="https://tommy.net.cn/tags/clean/"/>
    
    <category term="Danshari" scheme="https://tommy.net.cn/tags/danshari/"/>
    
  </entry>
  
  <entry>
    <title>学习费曼学习法</title>
    <link href="https://tommy.net.cn/2021/05/11/learning-from-the-feynman-technique/"/>
    <id>https://tommy.net.cn/2021/05/11/learning-from-the-feynman-technique/</id>
    <published>2021-05-11T02:18:56.000Z</published>
    <updated>2025-02-19T05:47:01.204Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/05/11/learning-from-the-feynman-technique/feynman_technique.png" alt="Feynman Technique"></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近看了一本亚马逊排名很火的工具书：<a href="https://u.jd.com/qTn0CQS">《费曼学习法》</a>。</p><p>个人认为这是一个很不错的学习方法，非常值得推荐。</p><p>然而让人非常不爽的是，明明两三千字就能说明白的东西，为什么硬生生地被水成了一本书？！</p><p>全书的精髓就是第二章**「何为费曼学习法」<strong>中的</strong>「费曼学习五部曲」**，其余部分基本上都是在重复和举例而已。</p><p>本着现学现卖的精神，今天就尝试一下用费曼学习法来学习费曼学习法吧！（好像很拗口的样子）</p><span id="more"></span><h2 id="费曼学习法"><a href="#费曼学习法" class="headerlink" title="费曼学习法"></a>费曼学习法</h2><p>书中介绍的费曼学习五部曲之我的理解：</p><ol><li><strong>目标</strong>：这个很简单，顾名思义，就是选择要学习的对象。</li><li><strong>理解</strong>：这个步骤就是学习我们想要学习的知识。</li><li><strong>输出</strong>：尽可能用小孩都能听得懂的语言，去把我们学到的知识传授给他人。</li><li><strong>回顾</strong>：深入学习和了解「传授」过程中遇到的问题，比如不懂的或者不清晰的。</li><li><strong>简化</strong>：在完成以上步骤的基础上，看看能不能继续简化，使知识变得更简单理解。</li></ol><p>原书中关于这块的介绍，其实并没有做到「简化」，而是这样的：</p><ul><li>第一步：目标 -&gt; 确立学习对象 -&gt; 产生专注力</li><li>第二步：理解 -&gt; 理解要学习的知识 -&gt; 系统化地存优去劣</li><li>第三步：输出 -&gt; 向别人输出学到的知识 -&gt; 以教代学</li><li>第四步：回顾 -&gt; 回顾和反思学到的知识 -&gt; 深度分析</li><li>第五步：简化 -&gt; 通过简化吸收形成自己的知识体系 -&gt; 内化知识</li></ul><p>什么叫「产生专注力」？理解知识，还要系统化，新的知识怎么可能一开始就有系统？什么叫深度分析，直接说理解不懂和不清楚的知识点不就完了？而且我看了英文的，人家也只是说尽可能的简化，也没说什么知识体系和内化啊？</p><p>虽然书中后面的部分有分别解释我上面提出的这些疑问，但是简简单单不好吗？非要搞这么多多余的东西，又是专注，又是深度，又是内化的，说好的让不懂的人也能快速理解呢？</p><p>反正，个人感觉就是简单问题复杂化，明明是一个简单高效学习的方法，愣是给说得高大上无比，晦涩难懂，本末倒置！</p><h2 id="Feynman-Technique"><a href="#Feynman-Technique" class="headerlink" title="Feynman Technique"></a>Feynman Technique</h2><p>为什么这个小节我用了英文标题？因为，这部分跟我看的书无关，而是自己另外找的资料学习的内容。</p><p>还记得我们文章开始的题图吗？</p><p>其实真正的「费曼学习法」，只要 4 个步骤就好了：</p><ol><li><strong>Choose a concept to learn</strong>，选择一个想要学习的内容，<strong>重点是要自己感兴趣的</strong>，这样才有可能学好。不要贪多嚼不烂，要跟现有的知识体系有关联，或者工作中用得上，不然学了也是白学。当然工具类的知识除外，比如高等数学，计算机编程知识等。这部分相当于原书中的**「理解」**。</li><li><strong>Teach it to yourself or someone else</strong>，尝试自己给自己上课，或者「传授」给别人。在教的过程中尽可能做到简单明了，最好是能让非专业的人士也能快速地理解相关的概念。这部分相当于原书中的**「输出」**。</li><li><strong>Return to the source material if you get stuck</strong>，如果传授的过程中卡壳了，比如说忘记了，没弄懂，或者似懂非懂，这个时候我们就需要重新学习和补充相关的知识了。这里知识的来源可以是教科书，笔记，甚至是网上找到的各种资料，关键是要让我们把知识缺失的部分补齐。这部分相当于原书中的**「回顾」**。</li><li><strong>Simplify your explanations and create analogies</strong>，这个过程实际上是让自己的解释更加的简单流畅，对于阐述的主题能让别人快速地理解。同时，还要让自己学会举一反三的能力，以便能解决类似的问题，而不是只能解决单一问题。这也就是原书中说的内化知识，「简化」的部分。</li></ol><p>回过头来看，原书中的「目标」，存在的意义到底是什么呢？是作者想要「有所建树」吗？还是想形成自己的理论体系？不得而知，无法理解……</p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>所谓尽信书不如无书，看书还是得带着脑子看，不然很容易人云亦云。</p><p>书所介绍的内容的好坏，与书本身没有必然的联系。</p><p>比如**「费曼学习法」<strong>是个好东西，但</strong>《费曼学习法》**未必是本好书。</p><p>回过头来看，介绍这个学习法可能大几百字就够用了。</p><p>结果我也跟原书作者一样，水了一篇文章。</p><p>不不不，人家可是水了一本书呢，水平还是远在我们之上的！</p><p>看了下，好像 1500 来字，连 2000 字都不到的样子，那是不是说这篇文章也不算太水？</p><p>偷笑😏</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/05/11/learning-from-the-feynman-technique/feynman_technique.png&quot; alt=&quot;Feynman Technique&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近看了一本亚马逊排名很火的工具书：&lt;a href=&quot;https://u.jd.com/qTn0CQS&quot;&gt;《费曼学习法》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;个人认为这是一个很不错的学习方法，非常值得推荐。&lt;/p&gt;
&lt;p&gt;然而让人非常不爽的是，明明两三千字就能说明白的东西，为什么硬生生地被水成了一本书？！&lt;/p&gt;
&lt;p&gt;全书的精髓就是第二章**「何为费曼学习法」&lt;strong&gt;中的&lt;/strong&gt;「费曼学习五部曲」**，其余部分基本上都是在重复和举例而已。&lt;/p&gt;
&lt;p&gt;本着现学现卖的精神，今天就尝试一下用费曼学习法来学习费曼学习法吧！（好像很拗口的样子）&lt;/p&gt;</summary>
    
    
    
    <category term="Reading" scheme="https://tommy.net.cn/categories/reading/"/>
    
    
    <category term="Study" scheme="https://tommy.net.cn/tags/study/"/>
    
    <category term="Book" scheme="https://tommy.net.cn/tags/book/"/>
    
    <category term="Reading" scheme="https://tommy.net.cn/tags/reading/"/>
    
    <category term="Feynman" scheme="https://tommy.net.cn/tags/feynman/"/>
    
    <category term="Richard" scheme="https://tommy.net.cn/tags/richard/"/>
    
    <category term="Technique" scheme="https://tommy.net.cn/tags/technique/"/>
    
  </entry>
  
  <entry>
    <title>中年大叔的感悟</title>
    <link href="https://tommy.net.cn/2021/04/30/middle-age-sentiments/"/>
    <id>https://tommy.net.cn/2021/04/30/middle-age-sentiments/</id>
    <published>2021-04-30T06:54:45.000Z</published>
    <updated>2025-02-19T05:47:01.196Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/04/30/middle-age-sentiments/lake.jpg" alt="Lake"></p><p>人到中年，什么最重要？是房子、车子、票子、还是马子？</p><p>不好意思，俗气了。再来一次：是物业、事业、家庭还是爱情？</p><p>我觉得都不是，中年人最重要的能力应该是情绪稳定，临危不惧，能从容地面对一切问题，且内心平静。</p><span id="more"></span><h2 id="离群者"><a href="#离群者" class="headerlink" title="离群者"></a>离群者</h2><p><img src="/2021/04/30/middle-age-sentiments/wolf.jpg" alt="Wolf"></p><p>我认为自己从小就是一个离群者，也就是大众口中那种不合群的小朋友。从小到大，基本上都是自己一个人在玩，这也是为什么后来很喜欢计算机，因为不需要跟人打交道。</p><p>虽然之前做了很长一段时间商务的工作，做的也算尚可，我始终认为自己是一个<a href="https://zh.wikipedia.org/zh-cn/%E7%A4%BE%E4%BA%A4%E6%81%90%E6%87%BC%E7%97%87">社恐（社交恐惧）</a>的人。</p><p>虽然我现在玩<strong>赛车</strong>、<strong>滑雪</strong>、<strong>潜水</strong>什么的，但是一个圈子都混不进去，或者说哪个圈子也融不进去。包括所谓的留学生交流圈活动，我也一次没有参加过。惭愧的说，MBA 毕业快 10 年了，春茗活动也从来没参加过。前几天传闻说以后岭南的 MBA 要取消了，看来以后想参加都没机会了。</p><p>不夸张的说，我觉得自己没多少朋友，真正的好友用手指都能数得过来。不像很多人朋友满天下，开口闭口都是我这个朋友那个朋友，这个高官，那个高管，还有哪个大富大贵商业巨头之类的。毕竟在我心中，朋友的级别还是很高的，不是随便认识一个人，吃顿饭就是朋友了。</p><p>然而大家却总误以为我朋友很多，妹纸也很多，我也不知道是怎么给大家造成这种错觉的。而且很多不熟的人，还会觉得我特别的拽，假扮清高。其实是因为我社恐的属性，实在不知道该如何破冰。当然，我也学会了跟自己妥协，不再为他人而活。随着年龄的增长，现在已经到了中年油腻大叔的年纪，交起友来就更是挑剔谨慎，各种怕麻烦，也难怪遭人嫌弃。</p><h2 id="不堪回首"><a href="#不堪回首" class="headerlink" title="不堪回首"></a>不堪回首</h2><p><img src="/2021/04/30/middle-age-sentiments/road.jpg" alt="Road"></p><p>年轻的时候总觉得人生的路还很漫长，怎么会想到未来的人生会如此跌宕起伏：每天早上 7 点出门上班，11 点多回到家，找车位有的时候还要 1 个小时！3～4 个小时在路上通勤，回到家还要做作业到凌晨 2～3 点。在美国出差的时候，永远是昼夜颠倒，每天工作 16 个小时，没有周末，没有节假日。各种被家人催婚、催生、催买房的无奈。创业的失败，前半生积蓄的化为乌有，众叛亲离到妻离子散，家破人亡。人到中年，才开始面对仿佛永远看不到尽头的失业……</p><p>我这起起落落落落落落落的前半生，真的可以拍一部狗血连续剧了。当你经历过以上的这一切，回归平静，重新审视自己的人生，也许只有认认真真地为自己活一次，才是对自己最负责任的做法了。我不奢求别人的施舍，也不想给别人添乱。当然你也不要对我的人生指指点点，毕竟你对我一无所知。试问我都已经经历过那么多，还有什么好害怕的呢？</p><p>最近很多小伙伴关心我，觉得我活得很洒脱，不少人甚至还以为我财务自由了。天真了，肤浅了是不是？熟悉我的朋友都知道，财富自由从来不是我所追求的，时间自由才是。而，这二者我都尚未拥有。我还在努力寻找内心平静的路上，那种既不是功成名就后的返璞归真，也不是一事无成的百般辩解，而是发自内心地接受并享受现在自己所拥有的一切。</p><p>人到中年，早已明白这世界上的热闹大多与我无关，大可不必太把自己当回事儿。从我最近搬家的事情来看，我更加确信，在绝大多数人的世界里我都是无足轻重的，甚至是朋友的眼中。但这不重要，因为我并没有什么怨恨的感觉。搬家也只不过是人生中，另外普普通通的几天而已。别人帮你是情分，不帮你也是正常，谁也没有对谁负责的义务。</p><p>Inner Peace，说起来容易，做起来难。人到中年，最大的收获是波澜不惊，从容面对，无论任何事情。</p><h2 id="人生"><a href="#人生" class="headerlink" title="人生"></a>人生</h2><p><img src="/2021/04/30/middle-age-sentiments/success.jpg" alt="Success"></p><ol><li>持续做个好人，而不是持续讨好别人。</li><li>身体健康不能偷懒，运动、健身不能停，就算偷工减料的做了，也比不做要好得多。</li><li>不要被各种 App 占据了自己宝贵的碎片时间。</li><li>不要放弃学习和进步。</li><li>不要盲目从众，要有自己的节奏，否则很容易迷失自我。</li><li>不要跟别人比，只需要跟自己比就行了。</li><li>不必勉强自己做不喜欢的事情，人生苦短，做自己喜欢的事情不好吗？</li><li>不知道自己想要什么，起码要知道自己不想要什么。</li><li>作为一个社恐分子，没必要浪费时间和精力去做无效的社交。</li><li>学会拒绝，没有必要人云亦云，那是别人的生活不是你的。</li><li>学会做更多延迟满足的事情，而不是做一个<a href="https://zh.wikipedia.org/zh/%E5%A5%B6%E5%A4%B4%E4%B9%90">奶头乐（Tittytainment）</a>，什么都要马上 high 的人。</li><li>学会对抗懒惰，从立 flag 开始，不然也不会有这篇文章了。</li><li>学会与孤独相处，是一个成年人最基本的必修课。</li><li>美貌是容易获得的，而良好的教养是难觅的，所以要不断提高自身修养。</li><li>生活的品质不是你身上的奢饰品，而是你内心的富足程度。</li><li>人赚钱是为了更好的活着，而活着不只是为了赚钱！</li><li>学会花钱跟学会赚钱一样重要，需要的东西一定要买，不需要的坚决不买。</li><li>人到中年还不知道自己的兴趣爱好，是一种莫大的悲哀。</li><li>做任何事情都要心存敬畏，但同时要敢于尝试。</li><li>一个人的生活可以懒散，但是不能放纵。用学习新的东西来代替自怨自哀，是一种更好的休闲放松。</li><li>人生得意须尽欢，没落之时勿沉沦。</li><li>在自己力所能及的范围内，用适合自己最好的产品，不要花钱买垃圾，时间成本消耗不起，还会把好心情搭进去，多少钱都换不回来。</li></ol><h2 id="朋友"><a href="#朋友" class="headerlink" title="朋友"></a>朋友</h2><p><img src="/2021/04/30/middle-age-sentiments/friends.jpg" alt="Friends"></p><ol start="23"><li>圈子这个东西，没有必要混。自己能力到了，你就是圈子的核心。</li><li>你认识什么人不重要，什么人认识你才比较重要。</li><li>内心强大，活的通透，就不会装逼。</li><li>不要把自己当回事儿，但是不能没有傲骨！</li><li>不要轻易相信别人说的，但是要观察他们所做的，毕竟身体很诚实。</li><li>不要为别人的过错来惩罚自己，你的情绪是你的事情，请不要说我冷漠。</li><li>要听别人的意见，但是要自己做决定。自己做错了，失败了，不要埋怨别人，没有人逼着你做决定。成年人了，自己要对自己负责，别人叫你吃屎你怎么不去呢？</li><li>不要把「朋友」的门槛设置的太低，友情需要对等的兴趣和见识。当所有人都是「朋友」的时候，其实你没有朋友。</li><li>有些事情不需要解释太多，懂的都懂，不懂的说了也无法理解。</li></ol><h2 id="事业"><a href="#事业" class="headerlink" title="事业"></a>事业</h2><p><img src="/2021/04/30/middle-age-sentiments/career.jpg" alt="Career"></p><ol start="32"><li>拿人钱财替人消灾，工作必须要做到出色，不为别人也为自己。</li><li>不要纠结公司内的抬头和收入，想知道自己几斤几两去用工市场走一圈就清楚了。</li><li>越是没本事越是觉得自己无所不能，越是有料越是觉得自己无法胜任。</li><li>别人的成功是别人的，跟自己没什么关系，大可不必标榜自己认识某某名人，有这时间还不如努力让自己成功。</li><li>办公室政治要懂，不是为了坑害别人，而是为了把工作更优质高效地做好。</li><li>不要等老板来催，把工作提前做好。</li><li>老板永远是对的，因为做决策的是他，背锅的也是他。如果你觉得老板傻逼，请不要吐槽，自己用脚投票就好了。</li><li>绝大多数人的收入和付出是成比例的，<strong>除了创业的人</strong>。所以挣钱多的别喊累，上班摸鱼的别哭穷。</li><li>职场上，但凡不随波逐流，稍微努力一点，你就已经秒杀了 80% 的职场人了。</li><li>美貌只能让你破冰，但并不能真正给你带来能力上的提升和资源上的增加，硬实力永远是你职业发展的核心。</li><li>岁月静好是留给有能力的人的，没有能力的人只有「静」和消失不见的「岁月」，没有「好」。</li><li>很多人工作了 10 年，只是把第 1 年学到的东西重复了 9 年而已，那就不要抱怨别人晋升比你快了。</li><li>能清楚的知道自己的优势和劣势，知道自己能做什么，不能做什么。不狂妄自大，也不妄自菲薄。</li><li>他人怎么评价自己，根本无需关心，很多时候别人看你不爽就是不爽，不需要任何理由。</li><li>不要揣测别人的想法，能沟通就沟通，不能沟通就算。你再怎么揣测也只是猜测，而猜测大概率是错的。</li></ol><h2 id="爱情"><a href="#爱情" class="headerlink" title="爱情"></a>爱情</h2><p><img src="/2021/04/30/middle-age-sentiments/love.jpg" alt="Love"></p><ol start="47"><li>你的气质中藏着你走过的路，看过的书，交往过的人，这些是装不出来的。</li><li>如果被人伤害了，转身离场，避免二次伤害。</li><li>情侣需要的是 Soul Mate，而不是舔狗，男女都适用。</li><li>秀恩爱死的早，这不是诅咒，而是事实，因为真正的恩爱不需要「演」给别人看。</li><li>年纪大了还能撩骚，那是实力的体现！没颜值、没身材、没脑子、没财富、没体力、没精力，你骚一个给我看看？</li><li>要想爱别人，先要学会爱自己。</li><li>情侣还是要从朋友做起，不要急功近利，来的容易去得快。除非，你们是纯约的，当我没说。当然，约也请好好约，好聚好散，不要给对方造成不必要的麻烦和负担。</li><li>前任们都活得比你好，不用你瞎操心，有这个时间还不如关心下现任和下一位。</li><li>男女交往请从平等出发，没有谁是你爹妈，有天生宠溺你的义务。</li><li>不要死缠烂打做舔狗，真正的爱情来到的时候，不需要死缠烂打。</li><li>两个人的游戏，一个人离场后，连 NPC 都没了，你还在这里干嘛呢？</li><li>精力有限，说话不要拐弯抹角，有话直说，但要注意态度，现实又不是琼瑶剧。</li><li>难得糊涂，有些事不用打破沙锅问到底，自己知道就行了，留一步他日好相见。</li><li>不要怕受伤而不开始一段感情，也不要怕受伤而不结束一段感情。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/04/30/middle-age-sentiments/lake.jpg&quot; alt=&quot;Lake&quot;&gt;&lt;/p&gt;
&lt;p&gt;人到中年，什么最重要？是房子、车子、票子、还是马子？&lt;/p&gt;
&lt;p&gt;不好意思，俗气了。再来一次：是物业、事业、家庭还是爱情？&lt;/p&gt;
&lt;p&gt;我觉得都不是，中年人最重要的能力应该是情绪稳定，临危不惧，能从容地面对一切问题，且内心平静。&lt;/p&gt;</summary>
    
    
    
    <category term="Life" scheme="https://tommy.net.cn/categories/life/"/>
    
    
    <category term="Life" scheme="https://tommy.net.cn/tags/life/"/>
    
    <category term="Career" scheme="https://tommy.net.cn/tags/career/"/>
    
    <category term="Friend" scheme="https://tommy.net.cn/tags/friend/"/>
    
    <category term="Love" scheme="https://tommy.net.cn/tags/love/"/>
    
    <category term="Midlife" scheme="https://tommy.net.cn/tags/midlife/"/>
    
    <category term="Sentiment" scheme="https://tommy.net.cn/tags/sentiment/"/>
    
  </entry>
  
  <entry>
    <title>找工作就像谈恋爱</title>
    <link href="https://tommy.net.cn/2021/04/29/looking-for-a-new-job/"/>
    <id>https://tommy.net.cn/2021/04/29/looking-for-a-new-job/</id>
    <published>2021-04-29T06:43:50.000Z</published>
    <updated>2025-02-19T05:47:01.196Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/04/29/looking-for-a-new-job/job_opportunity.jpg" alt="Job Opportunity"></p><p>找工作就像谈恋爱，找个你爱的，还是找个爱你的？</p><p>这个问题，真的是太难回答了。</p><p>对于现在的我来说，可能还是想找一个自己爱的吧。</p><p>不过也同样跟恋爱一样，我爱的人不爱我，爱我的人我不爱，无解。</p><p>因为最近在看工作机会，所以有点感触……</p><span id="more"></span><h2 id="只勾搭"><a href="#只勾搭" class="headerlink" title="只勾搭"></a>只勾搭</h2><p>最近找工作过程中，遇到最多的情况，是只勾搭不落地。</p><p>当然这中间也包括我自己觉得无法胜任，而没有继续沟通的。</p><p>很多时候，感觉大家并不是真的求贤若渴，而是为了「勾搭」而「勾搭」。</p><p>如果这样的话，何必要浪费大家的时间和青春去做无谓的社交呢？</p><p>而且我觉得买卖不成仁义在，做人何必要这么功利？</p><p>勾搭之前，各种积极热情，勾搭之后，连个回复也没有，更不要说下文了。</p><p>出于礼貌，给个回复也不算过分的要求吧？毕竟恋人分手还有 Goodbye Kiss 呢。</p><p>这种情况像极了各大相亲网站的男男女女，大家都只顾自说自话。</p><p>永远都是我要什么什么样的，根本不关心对方在说什么。</p><p>这个什么都讲求「速度」的年代，工作也变成了「速食面」的样子。</p><h2 id="猎头无用论"><a href="#猎头无用论" class="headerlink" title="猎头无用论"></a>猎头无用论</h2><p>说实在的，我工作 10 多年，就没有被猎头成功推荐过。</p><p>心里着实「羡慕」那些被「猎头」的人，毕竟人家那才是高级人才。</p><p>我们这种屌丝只有仰望的份儿……（酸）</p><p>但是经过这段时间，我愈发地觉得猎头的不靠谱。</p><p>基本上的套路就是上来要简历，然后就没有然后了……</p><p>要么就是推荐一大堆完全专业不对口的工作，浪费三方的时间。</p><p>再者就是语焉不详，有个什么多牛多牛的公司，但什么公司我不告诉你。</p><p>公司不知道就算了，有的甚至连岗位描述都没有，这又是什么鬼？</p><p>感觉到了我这把大叔的年纪，朋友和同事的推荐比猎头靠谱多了。</p><p>本应该是专业提供服务的猎头，却如此的不专业。</p><p>是我命不好呢，能力不行呢，还是现在猎头水平就这样了呢？</p><p>我不清楚……🤷‍♂️</p><h2 id="超人拧螺丝"><a href="#超人拧螺丝" class="headerlink" title="超人拧螺丝"></a>超人拧螺丝</h2><p>看看各个公司招聘的职位描述，我真的觉得自己是井底之蛙。</p><p>随随便便都是各种大神一样的要求，吓得我连简历都不敢投。</p><p>咱都不敢说妄自菲薄，只敢说相形见拙了。</p><p>但是通过各种渠道了解到，在公司里面工作的，其实都是在拧螺丝而已。</p><p>再有就是，很多用工单位只看背景，学历和经历，不看能力。</p><p>我觉得这个无可厚非，毕竟你的学历和经验是你以前努力的结果，但是一定代表未来吗？</p><p>在大厂呆过的我，看过了太多坐吃等死，浑水摸鱼，但办公室政治玩的风生水起的人。</p><p>与其苦苦寻觅所谓的「超人」，何不踏踏实实按需招聘？</p><p>有自知之明的人，看到这样的 JD（Job Description）直接劝退，但是并不会劝退学历造假和吹牛拍马的人。</p><h2 id="没人用-vs-不用人"><a href="#没人用-vs-不用人" class="headerlink" title="没人用 vs 不用人"></a>没人用 vs 不用人</h2><p>找工作的同时，也跟不少朋友聊过天，公司的负责人，1，2 号位的永远觉得招不到人。</p><p>而求职者又永远觉得找不到工作，这就很有趣了。</p><p>最后我才发现，招聘的时候，招聘方都想要找复合型人才。</p><p>而其实，只是自己在骗自己，真正有这样的人才的时候，他们又会觉得想法多，不好管理，成本高。</p><p>乔布斯早就说过了，优秀的人不是靠管理的，而是被赋予使命感，一起奋斗事业的。</p><p>还有一个方面就是高端人才并不少，而是你钱没给到位。</p><p>我不是说一定要花天价请「大神」，而是结合公司的实际业务，在合理的范围内，想清楚自己愿意为高端人才付出多少的成本。</p><p>同样也要确认，是不是能把大牛的能力都用上，不然人走楼空也是迟早的事儿。</p><p>不要说别人贪财，只认钱。如果别人的市场价值 200 万，为什么要 20 万跟你干？</p><p>招聘者也同样问问自己的核心价值在哪里？</p><p>不要老想着员工能为你做什么，想想将来你能为员工带来什么？</p><p>你跟我讲感情，我跟你讲感情。你只跟我讲钱，却反过来让我跟你谈感情？</p><h2 id="用工歧视"><a href="#用工歧视" class="headerlink" title="用工歧视"></a>用工歧视</h2><p>以前，少不经事，对于用工歧视没什么感觉。现在倒是有点体会了……</p><p>随便打开个什么招聘软件，随便看看岗位描述。</p><p>到处可见 35 岁以下，33 岁以下，30 岁以下。</p><p>我见过最有趣的是要求 35 岁以下，硕士以上学历，大型公司工作 10 年以上。</p><p>我掐指一算，正常人 23 岁本科毕业，3 年研究生，26 岁毕业。</p><p>工作 10 年，36 岁，呵呵……妙啊……</p><p>这里我们就更不要说大公司出来的人，自带的那种大公司病了。</p><p>我就好奇，就算他们找到了这样的「天之骄子」，假如一年后贵司的 CTO 年满 36 岁了，是不是就无法胜任 CTO 这一职位了呢？</p><p>而且工作能力跟年龄有什么关系？</p><p>我们反过来看，30 岁可以做 CTO，40 岁也可以做 CTO。</p><p>我只能说能写出这样 JD 的公司，根本不需要考虑，直接拉黑。</p><p>就算你真的要歧视，你大可不必写出来啊。</p><p>自己知道，默默地找个其他不合适的理由拒绝掉就好了啊。</p><p>这种行为真的是太傻了……</p><p>可见公司的领导层或者人力资源的水平和格局也就那样了。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>还是自己好好做好自己的本职工作，不断地给自己充电才是王道。</p><p>这里要感谢很多的好友和同事，一直都很关心我工作的问题。</p><p>要特别感谢 <strong>Connor</strong>、<strong>Hebe</strong>、<strong>Ivory</strong>、<strong>局长</strong>、<strong>Kelly</strong>、<strong>叁国</strong>等同学（排名不分先后）。</p><p>谢谢你们的理解和信任，以及对我能力的肯定和认可，铭记于心。</p><p>对于事业，有的时候你需要的只是一个机会，和一点点运气。</p><p>毕竟公司的成功，跟个人没有必然的联系。</p><p>很多人的成功，只是刚好赶上了公司的成功，其实换了是谁都一样。</p><p>当然，我也一直告诫自己不用酸，因为运气也是成功的必备能力之一。</p><p>自己继续修炼内功就好了……</p><p>结论就是，工作易找，事业难觅，随缘……</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/04/29/looking-for-a-new-job/job_opportunity.jpg&quot; alt=&quot;Job Opportunity&quot;&gt;&lt;/p&gt;
&lt;p&gt;找工作就像谈恋爱，找个你爱的，还是找个爱你的？&lt;/p&gt;
&lt;p&gt;这个问题，真的是太难回答了。&lt;/p&gt;
&lt;p&gt;对于现在的我来说，可能还是想找一个自己爱的吧。&lt;/p&gt;
&lt;p&gt;不过也同样跟恋爱一样，我爱的人不爱我，爱我的人我不爱，无解。&lt;/p&gt;
&lt;p&gt;因为最近在看工作机会，所以有点感触……&lt;/p&gt;</summary>
    
    
    
    <category term="Misc" scheme="https://tommy.net.cn/categories/misc/"/>
    
    
    <category term="Career" scheme="https://tommy.net.cn/tags/career/"/>
    
    <category term="Job" scheme="https://tommy.net.cn/tags/job/"/>
    
    <category term="Opportunity" scheme="https://tommy.net.cn/tags/opportunity/"/>
    
  </entry>
  
  <entry>
    <title>一个不正经的车评</title>
    <link href="https://tommy.net.cn/2021/03/30/a-not-serious-car-review/"/>
    <id>https://tommy.net.cn/2021/03/30/a-not-serious-car-review/</id>
    <published>2021-03-30T13:43:46.000Z</published>
    <updated>2021-03-30T14:25:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/03/30/a-not-serious-car-review/toyota_86.jpg" alt="Toyota 86"></p><p>最近好朋友想要换车，于是乎花了不少时间，陪朋友看了不少车，是以为记。</p><p>首先我先列一下朋友买车的要求，因为是日常买菜车，所以要求也不多：</p><ul><li>有品牌</li><li>颜值高</li><li>动力好</li><li>操控好</li><li>双门轿跑</li><li>价格便宜（注意是便宜，不是性价比高！）</li></ul><p>看了以上的要求，是不是发现毫无难度？</p><p>我们先说结论，朋友最后买了 <code>丰田86</code>。</p><p>好了，故事讲完了，八卦的小伙伴们可以退下了……</p><span id="more"></span><h2 id="选车"><a href="#选车" class="headerlink" title="选车"></a>选车</h2><p>因为没有固定的品牌和车型，所以我们把中国市场上可能有的双门轿跑都过了一遍。</p><p>最后筛选剩下了以下几个车型：</p><ul><li>BMW 4 Series</li><li>Ford Mustang</li><li>Audi A5 Coupe</li><li>Subaru BRZ &#x2F; Toyota 86</li><li>Mazda MX-5</li><li>BMW 2 Series Convertible</li><li>BMW 3 Series Coupe</li><li>Porsche 718</li></ul><p>马自达 MX-5 因为离谱的高价，外加停售，可谓一车难求。</p><p>明明是北美市场便宜的买菜小车，硬是卖出了豪华品牌的价格，直接 PASS。</p><p>宝马 2 系敞篷，我觉得是性价比不错，且好玩的一款车，但是车主觉得样子太傻（平庸），被 PASS 掉了。</p><p>宝马 3 系，我觉得操控，整体舒适性，各方面都很均衡的一辆车，同样是被车主嫌弃长得大众脸，也被 PASS 掉了。</p><p>保时捷 718 是我推荐的，我说很适合车主的气质。车主本人表示，对不起，我不配。只因二手车的售价都已经去到了 60 万+，看看就好了。</p><p>所以，最后就只剩下了 4 款车型：4 系，野马，A5，BRZ&#x2F;86。</p><p>下面就说说我试驾的体验。</p><h2 id="BMW-新-4-系"><a href="#BMW-新-4-系" class="headerlink" title="BMW 新 4 系"></a>BMW 新 4 系</h2><p><img src="/2021/03/30/a-not-serious-car-review/bmw_4.jpg" alt="BMW 4"></p><p>宝马 4 系 Coupe 是在 4S 店试驾的，只有一台 425i 的高配车型供试驾。</p><p>对于宝马新 4 系的外观来说，我只能说尚可，毕竟这东西见仁见智，青菜萝卜各有所爱。</p><p>车主本人却表示，非常喜欢这个竖着的大鼻孔（猪鼻子？），本人表示无法理解。</p><p>虽然是高配的 425i，但是在 2.0T 引擎的加持下，输出马力却只有 180 匹！</p><p>有没有搞错？这是什么概念？自然吸气的飞度 1.5 的动力输出是 131 匹，自然吸气的 BRZ 2.0 是 200 匹。</p><p>你这带涡轮的高功率版才 180 匹？你是跟我搞笑呢吗？！</p><p>让我深深地怀疑，这是一辆主打老年代步车的产品，而不是主打运动的。</p><p>正式上车试驾，嗯，好吧，果然期望越大失望越大……</p><p>操控没有想象中好，甚至感觉还不如国产的 3 系，整体就是一种开船的感觉。</p><p>侧向支撑就更没什么好说的了，各种 hold 不住的感觉，对不起宝马操控这一卖点。</p><p>然后变速箱的逻辑也是非常的愚笨，油门响应延时惊为天人，在 Sport 模式下有所改善，但依旧表现平平。</p><p>试驾后的体验就是，毫无运动性可言，舒适型甚至不及日系 B 级轿车。</p><p>再一问价格，非常的不美丽不单止，还要加价 5 万。</p><p>价格贵，加价也就算了，问什么时候可以提车，答复说预定已经到了今年年底和明年年中！</p><p>我只想说：中国，果然是一个人傻钱多，只认面子不认车的美好国度。只买贵的，不买对的！</p><h2 id="福特野马"><a href="#福特野马" class="headerlink" title="福特野马"></a>福特野马</h2><p><img src="/2021/03/30/a-not-serious-car-review/ford_mustang.jpg" alt="Ford Mustang"></p><p>福特野马这车呢，说好也一般，说不好，这价位也还行。</p><p>这款车主要都在看二手车，因为感觉也不是很保值，没必要买新车。</p><p>又不是不能开，何必要买新车，对不对？！</p><p>然而，前前后后看了 3-4 辆野马，基本上都是改到乱七八糟，发廊范那种。</p><p>贴膜改色就不说了，非要改个扰民的排气，然后贴上假的仿碳纤维纸。</p><p>把车里面的座椅弄的红不拉几的，毫无审美可言。</p><p>看车的时候还刚好碰到隔壁改装店老板，不懂装懂，说什么这车买回来都这么改云云……</p><p>行，恶心就算了，试试车吧……</p><h3 id="新款-10-AT"><a href="#新款-10-AT" class="headerlink" title="新款 10 AT"></a>新款 10 AT</h3><p>看了下车，有新款和老款两种，主要的区别是变速箱不一样。</p><p>新款据说使用了自己家研发的 10AT 变速箱，老款是 6AT。</p><p>按照一般的认知，大家都会觉得 10AT 肯定更加平顺，然后更加省油，对吧？</p><p>不好意思，天真了啊～～～</p><p>这变速箱顿挫的啊！我都怀疑人生了……</p><p>有种农田地里开拖拉机的感觉！！！</p><p>涡轮没有介入之前，感觉肉的要死，涡轮一介入，稀里哗啦地往前蹿。</p><p>低速行驶的时候那叫一个难受。</p><p>不过底盘调教倒是比我想象中好，当然也不可能比 4 系更垃圾了。</p><h3 id="老款-6-AT"><a href="#老款-6-AT" class="headerlink" title="老款 6 AT"></a>老款 6 AT</h3><p>试了新款不行，就试试老款呗。</p><p>嘿！这 6AT 怎么感觉开起来比 10AT 顺畅这么多？！</p><p>一问，说是 6AT 用的是 ZF 的变速箱，10AT 是福特自己弄的不知道啥玩意。</p><p>然后为了改款而改款，没有东西改了，就动了变速箱。</p><p>呵呵……你这做法跟大众上 DSG（大傻瓜）有异曲同工之妙啊！</p><p>虽然 6AT 的整体顿挫感比 10AT 好了很多，但是油门的响应依然延迟很大。</p><p>变速箱逻辑也并不很聪明，反正总体体验也不是特别好。</p><p>外加看的每一台野马，都不同程度地改的各种发廊范，实在无力吐槽。</p><h2 id="奥迪-A5"><a href="#奥迪-A5" class="headerlink" title="奥迪 A5"></a>奥迪 A5</h2><p><img src="/2021/03/30/a-not-serious-car-review/audi_a5_coupe.jpg" alt="Audi A5 Coupe"></p><p>A5 我个人觉得颜值也就中规中矩吧，但是车主觉得 OK。</p><p>主要是我觉得这个车，4 门跟 2 门根本看不出来区别。</p><p>而且大家都知道的，奥迪（大众）不烧机油，那是不可能的。</p><p>有人说谁谁谁不烧机油，你确定你有人家那么好彩？</p><p>除非你有每 1000km 加 1L 机油的觉悟，否则我是不建议买奥迪的。</p><p>除了 EA888 和 EA211 烧机油的问题，还有 DSG 变速箱故障的问题，感兴趣的小伙伴自己搜一下吧。</p><h3 id="四驱版"><a href="#四驱版" class="headerlink" title="四驱版"></a>四驱版</h3><p>A5 主要试驾了 2 个版本，这第一个版本是 4S 店提供的四驱顶配版。</p><p>试驾完了以后的感觉就一个字：爽！</p><p>试驾之前我是毫无期待的，但是结果让人振奋。</p><p>首先感觉动力充足，想要就有，而且油门出奇的线性，就算在 Comfort 模式下，几乎也感觉不到涡轮介入带来的顿挫感。</p><p>换做 Sport 模式，引擎保持在高转速，响应非常的迅速。</p><p>在高速过弯的时候，侧向支撑非常的好，但又没有丢失太多的舒适性。</p><p>路感反馈很清晰，但又不是赛车那种硬邦邦的感觉。</p><p>感觉各方面都恰到好处，不多不少，动力、变速箱、底盘、配置、运动、舒适找到了一个很好的平衡。</p><p>感觉就是每一项都优秀，又没有哪一项特别突出。</p><p>除了价格之外，是我认为非常值得推荐的一款车。</p><h3 id="前驱版"><a href="#前驱版" class="headerlink" title="前驱版"></a>前驱版</h3><p>本来以为 A5 就不错了，考虑价格问题，车主又去看了低配的前驱版本。</p><p>呵呵，问题出现了……车主觉得动力很好，但是我觉得动力不足。</p><p>第一个感觉就是加速变肉了，起步费劲。</p><p>再者就是感觉变速箱的响应没有那么灵敏了，也可能是因为动力不足，所以得深踩油门。</p><p>后面一查资料，果不其然，两者差了 50 匹马力。</p><p>果断劝退，毕竟奥迪引以为傲的 Quattro 还是爽的，前驱版本确实没啥灵魂。</p><p>无论动力还是操控，都不能跟四驱版本的 A5 比。</p><p>这也告诉我们一分钱一分货，去 4S 试驾，最好试驾自己想买的车型。</p><p>否则很容易追悔莫及……</p><h2 id="BRZ-86"><a href="#BRZ-86" class="headerlink" title="BRZ &#x2F; 86"></a>BRZ &#x2F; 86</h2><p>看车的过程中，BRZ &#x2F; 86 也一直在看，前前后后看了应该能有 5 - 6 台，试驾的也有 3 台了。</p><p>我只能说，这车因为国 6 限制，真成了理财产品了，但凡品质好一点的车，价格合理的，都是秒没！</p><p>2017 款 BRZ，官方指导价 27.38 万，二手卖 29 万，还没来得及看车，就被秒了……</p><p>看的车都是改过的，一辆素车都没有！没有看真车那些，有的改得更恶心，直接都不想看。</p><p>说实在的，全都是瞎改，原厂的各种平衡全都给打乱了。</p><p>更搞笑的是什么，看车商发出来的信息，全都是美女一手车主。</p><p>Excuse me？！我问了一圈身边的各种开 BRZ &#x2F; 86 的朋友，地球人表示就没有见过一个活的开这车的女车主……</p><p>后来我朋友说，二手车市场美女一手车就跟拼多多不卖假货一样，是个梗。</p><p>最后说说试驾的 3 台车吧：</p><ul><li>2014 款 86，低配，保养差，里程数多，开价 24 万，呵呵……</li><li>2015 款 BRZ，过度改装，上山寨 18 寸轮毂，改避震，改倾角，改了三表，内饰乱贴红色和假碳纤维贴纸，杂牌刹车喷成红色，无语……</li><li>2019 款 86，改了个带阀门的排气，除了嗓门大外，一无是处还影响低扭。弄了个恶心吧啦的鸭嘴尾翼，原厂好好的金属标，换成了黑色淘宝山寨 20 块的垃圾货，唉……</li></ul><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>最后，选了 2019 款的丰田 86，也只能矮子里面拔大个了……实在没有太多选择……</p><p>随着电车时代的到来，好玩的车是越来越少了，真的是买一台少一台。</p><p>所谓千金难买心头好，该出手时就出手！</p><p>早买早享受，后买也不一定能享折扣……</p><p>在看车的这段时间，走哪儿都有人问我，卖不卖车？</p><p>你猜我的答案是什么？😊</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/03/30/a-not-serious-car-review/toyota_86.jpg&quot; alt=&quot;Toyota 86&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近好朋友想要换车，于是乎花了不少时间，陪朋友看了不少车，是以为记。&lt;/p&gt;
&lt;p&gt;首先我先列一下朋友买车的要求，因为是日常买菜车，所以要求也不多：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有品牌&lt;/li&gt;
&lt;li&gt;颜值高&lt;/li&gt;
&lt;li&gt;动力好&lt;/li&gt;
&lt;li&gt;操控好&lt;/li&gt;
&lt;li&gt;双门轿跑&lt;/li&gt;
&lt;li&gt;价格便宜（注意是便宜，不是性价比高！）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看了以上的要求，是不是发现毫无难度？&lt;/p&gt;
&lt;p&gt;我们先说结论，朋友最后买了 &lt;code&gt;丰田86&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;好了，故事讲完了，八卦的小伙伴们可以退下了……&lt;/p&gt;</summary>
    
    
    
    <category term="Car" scheme="https://tommy.net.cn/categories/car/"/>
    
    
    <category term="Car" scheme="https://tommy.net.cn/tags/car/"/>
    
    <category term="BRZ" scheme="https://tommy.net.cn/tags/brz/"/>
    
    <category term="Subaru" scheme="https://tommy.net.cn/tags/subaru/"/>
    
    <category term="86" scheme="https://tommy.net.cn/tags/86/"/>
    
    <category term="GT86" scheme="https://tommy.net.cn/tags/gt86/"/>
    
    <category term="Toyota" scheme="https://tommy.net.cn/tags/toyota/"/>
    
    <category term="A5" scheme="https://tommy.net.cn/tags/a5/"/>
    
    <category term="Audi" scheme="https://tommy.net.cn/tags/audi/"/>
    
    <category term="BMW" scheme="https://tommy.net.cn/tags/bmw/"/>
    
    <category term="BMW 4" scheme="https://tommy.net.cn/tags/bmw-4/"/>
    
    <category term="Ford" scheme="https://tommy.net.cn/tags/ford/"/>
    
    <category term="Mustang" scheme="https://tommy.net.cn/tags/mustang/"/>
    
  </entry>
  
  <entry>
    <title>调整后的囚徒健身</title>
    <link href="https://tommy.net.cn/2021/03/13/modified-convict-conditioning/"/>
    <id>https://tommy.net.cn/2021/03/13/modified-convict-conditioning/</id>
    <published>2021-03-13T10:24:16.000Z</published>
    <updated>2025-02-19T05:47:01.192Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/03/13/modified-convict-conditioning/convict_conditioning_routine.jpg" alt="Convict Conditioning"></p><p>俗话说的好啊，七年之痒……</p><p>7 年前，写了篇关于<a href="../../../../2014/09/04/convict-conditioning-exercises/">《囚徒健身》的博客</a>，想着自己能好好健身，然后一转眼，7 年就过去了。</p><p>今年又双叒叕把健身这个事情给提到议程上了，于是做了些功课，准备再次上路……</p><span id="more"></span><h2 id="为什么要调整？"><a href="#为什么要调整？" class="headerlink" title="为什么要调整？"></a>为什么要调整？</h2><p><a href="https://u.jd.com/usk1Acr">囚徒健身（特指系列中的第一本）</a>原有的动作中，有的难度比较大，有的又比较低。</p><p>其中部分动作几乎是不可能完成的任务，甚至还会造成一定程度的运动损伤。</p><p>在参考了 B 站<a href="https://space.bilibili.com/69002004"><code>本X</code></a>关于囚徒健身的<a href="https://www.bilibili.com/video/BV1z541157M2?t=559">视频</a>后，自己做了一些简单地梳理。</p><h2 id="怎么调整？"><a href="#怎么调整？" class="headerlink" title="怎么调整？"></a>怎么调整？</h2><h3 id="俯卧撑"><a href="#俯卧撑" class="headerlink" title="俯卧撑"></a>俯卧撑</h3><p>囚徒中的俯卧撑第一式，是撑墙俯卧撑。对于正常人来说，这个难度太低了，可以直接去掉。但是对于伤后恢复中的人来说，也是一个不错的恢复性动作。</p><p>第二个，就是去掉跪姿（膝盖）俯卧撑。因为在做这个动作的时候，改变了整个身体的姿态。身体并不是从头到脚，而是变成了从头到腰，这样破坏了整个系列健身的连续性。我是通过不断调整高度来增加难度，并取消了跪姿俯卧撑。</p><p>单臂俯卧撑，看了很多视频感觉很多做的都不标准，我觉得这个可以慢慢练。同时可能还得参考一些其它的健身书籍，绝对不能死撑。</p><p>除此以外的其它动作，照着书本练习就好了。</p><h3 id="深蹲"><a href="#深蹲" class="headerlink" title="深蹲"></a>深蹲</h3><p>深蹲中的第一式 Shoulder Stand Squat 其实是瑜伽中的中高阶动作，做的不好很容易扭伤脖子，是非常不建议的。对于中国人来说，完全可以直接去掉，从第二式开始练就好了。</p><p>当年自己傻傻地跟着练过，感觉非常难，还好没有受伤。不过做好了，脖颈儿倒是很舒服，😂</p><p>当能做到标准深蹲之后，适当的在健身房增加杠铃练习配合，效果会更好。</p><blockquote><p>PS: 不要盲目迷信，不用器械也能练成施瓦辛格那样。健身是为了强身健体，书中的一些器械无用论看看就好。</p></blockquote><h3 id="引体向上"><a href="#引体向上" class="headerlink" title="引体向上"></a>引体向上</h3><p>这个没什么问题，照着练就行了。</p><p>后期快进阶到单臂引体向上的时候，需要多找些其它的书籍和资料配合，才能有效地提高训练效果。</p><h3 id="举腿"><a href="#举腿" class="headerlink" title="举腿"></a>举腿</h3><p>这个完全没问题，照着书本练就行了。</p><p>而且腹肌这东西很神奇，可以天天练……</p><p>最后一式有个说法，如果身体完全悬空的话，后背没有了支撑力，动作可能会走样，进而使得健身效果大打折扣。</p><p>所以练最后一式的时候，背后靠墙，效果可能会更好。</p><h3 id="桥（下腰）"><a href="#桥（下腰）" class="headerlink" title="桥（下腰）"></a>桥（下腰）</h3><p>这个的话，在健身界有一些不同意见。有的人认为很好，可以锻炼柔韧性。但也有人觉得这违反了人类正常的生物属性，因为人的脊椎本身就应该是微微前曲的。</p><p>这里我不是很确定，所以就多练短桥、直桥缓解肌肉压力，并把这个作为其它训练的补充。</p><p>另外如果真的要练腰的话，可能得去健身房找专业人士再请教请教。</p><h3 id="倒立撑"><a href="#倒立撑" class="headerlink" title="倒立撑"></a>倒立撑</h3><p>书里面的单臂倒立撑，好像已经是一个神技了，感觉没有人做到过？</p><p>就算是书本里面的照片，据说也是摆拍。</p><p>所以，我这里给自己定的目标是能做到自由倒立撑就差不多了。</p><p>完全没必要纠结单臂倒立撑。</p><h2 id="如何晋级"><a href="#如何晋级" class="headerlink" title="如何晋级"></a>如何晋级</h2><p>囚徒健身中，一直强调的是 6 艺 10 式，每一式里面又分 3 个小级。</p><p>比如说某个动作的晋级分别是：1 x 10, 2 x 25, 3 x 50</p><p>也就是做 1 组，每组 10 个；做 2 组，每组 25 个；做 3 组，每组 50 个。</p><p>怎么做呢？举个例子：</p><p>首先，先努力完成入门难度，也就是 1 组 10 个。</p><p>然后，努力做到 1 组 25 个，也就是中级要求的数量 25。</p><p>在上面的基础上，增加 1 组 10 个（初级难度的数量），也就是 1 x 25 + 1 x 10</p><p>然后慢慢做到 2 x 25，也就是 2 组 25 个。</p><p>接着再增加一组 10 个（初级难度的数量），也就是 2 x 25 + 1 x 10</p><p>最后慢慢做到 3 x 50，进入下一式。</p><p>这个过程中很难一下就达标，反正我是做到力竭为止，反正慢慢坚持，最后总能升级的。</p><h2 id="如何做热身"><a href="#如何做热身" class="headerlink" title="如何做热身"></a>如何做热身</h2><p>比如说我刚开始囚徒健身，还在第一式，那么我会做 2 组第一式初级的要求作为热身，比如 1 x 10，做 2 次，然后再开始正式的练习。</p><p>如果已经进阶到第二式，那么还是第一式的初级要求做 2 次作为热身，然后开始训练。</p><p>当进入到第三式的时候，做第一式的初级 1 组，第二式的初级 1 组作为热身，然后开始训练。</p><p>更高级别的时候，用前两式的初级各做一组，作为热身。比如第五式的时候，做 1 组第三式的初级，做 1 组第四式的初级，依此类推。</p><h2 id="时间间隔"><a href="#时间间隔" class="headerlink" title="时间间隔"></a>时间间隔</h2><p>训练时间我现在计划的是一周 3 次，但是经常可以一周 6 次。</p><p>因为每天最多也就 30～45 分钟，并不会占用太多时间，关键还是练。</p><p>我每次练习 2 个动作，这样没锻炼的部位可以休息一天。</p><p>不同动作之间的休息间隔是 3 分钟，而同一动作每组之间的休息间隔是 1 分钟。</p><p>当然，动作之间的间隔也可以 4～5 分钟，每组也可以 1～2 分钟，但是不建议间隔太久。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>以上，就是我最近锻炼时的一些思考。</p><p>相当于自己现阶段健身的一个小笔记吧，不一定正确，但暂时有效。</p><p>也许某天会有新的感悟，到时候再做一些调整也有可能。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/03/13/modified-convict-conditioning/convict_conditioning_routine.jpg&quot; alt=&quot;Convict Conditioning&quot;&gt;&lt;/p&gt;
&lt;p&gt;俗话说的好啊，七年之痒……&lt;/p&gt;
&lt;p&gt;7 年前，写了篇关于&lt;a href=&quot;../../../../2014/09/04/convict-conditioning-exercises/&quot;&gt;《囚徒健身》的博客&lt;/a&gt;，想着自己能好好健身，然后一转眼，7 年就过去了。&lt;/p&gt;
&lt;p&gt;今年又双叒叕把健身这个事情给提到议程上了，于是做了些功课，准备再次上路……&lt;/p&gt;</summary>
    
    
    
    <category term="Fitness" scheme="https://tommy.net.cn/categories/fitness/"/>
    
    
    <category term="Fitness" scheme="https://tommy.net.cn/tags/fitness/"/>
    
    <category term="Convict_Conditioning" scheme="https://tommy.net.cn/tags/convict-conditioning/"/>
    
    <category term="Gym" scheme="https://tommy.net.cn/tags/gym/"/>
    
  </entry>
  
  <entry>
    <title>2021 打脸大计</title>
    <link href="https://tommy.net.cn/2021/02/05/2021-annual-plan/"/>
    <id>https://tommy.net.cn/2021/02/05/2021-annual-plan/</id>
    <published>2021-02-05T02:24:21.000Z</published>
    <updated>2025-02-19T05:47:01.192Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/02/05/2021-annual-plan/2021.jpg" alt="2021"></p><p>时光荏苒，岁月如梭……</p><p>又到了一年一度花样立 flag，做年度打脸大计的时候了。</p><p>还是原来的包装，还是原来的味道，新瓶盛老酒，换汤不换药！</p><p>因为各种<code>不可抗拒力</code>因素，2020 年浑浑噩噩就度过了。</p><p>从哪儿丢失的，就从哪儿找回来。所以，2021 年的计划必须走起！</p> <span id="more"></span><p> 按照以往的「套路」，仍然是分类别来做计划。</p><h2 id="健康"><a href="#健康" class="headerlink" title="健康"></a>健康</h2><p>排在第一位的还是「健康」，然而这个 flag 立了应该有 3、4 年之久了。</p><p>除了跑步做到了以外，早睡早起就从来没有做到过！所以今年心不死，继续挑战早睡早起！</p><p>再者就是年纪大了，容易油腻。光跑步是不行的，还得配合适当的无氧运动。</p><p>考虑现在越来越消费不起的健身房，和各种各样奇怪的健身方法，最终还是决定坚持<a href="https://baike.baidu.com/item/%E5%9B%9A%E5%BE%92%E5%81%A5%E8%BA%AB">「囚徒健身」</a>。</p><p>最后总结出以下 3 点：</p><ol><li>一年之中做到 180 天凌晨 12 点前睡觉</li><li>保持每周最少 3 次囚徒健身</li><li>每个月 50km 跑量，有可能的话，年内参加一次半程马拉松</li></ol><h2 id="兴趣"><a href="#兴趣" class="headerlink" title="兴趣"></a>兴趣</h2><h3 id="滑雪"><a href="#滑雪" class="headerlink" title="滑雪"></a>滑雪</h3><p>去年考了 <a href="https://casi-acms.com/">CASI</a> (Canadian Association of Snowboard Instructors) 的 Level 1 滑雪教练，然后就荒废至今，所以滑雪今年得安排上！</p><p>为了督促自己滑雪，毅然而然地败家了融创雪世界的全年通滑票（内心在滴血），结果现在都已经 2 月份了，还一次都没去过……😅</p><p>因为疫情和场地的原因，今年滑雪主要的目标是入门<code>平花</code>。</p><p>主要参考油管上<a href="https://www.youtube.com/watch?v=ehTYoW4iFWg&list=PL9DFWhvwJBoS0pLGQY8LqbWTtHT2Bduj2"><code>グラトリ 初心者向け</code></a>的视频，计划学会以下动作：</p><ol><li>Ollie</li><li>Nollie</li><li>Ollie Front 180</li><li>Ollie Front 360</li><li>Nollie Front 180</li><li>Nollie Front 360</li><li>Back Compass 360</li></ol><p>然而我想说，这真的是<code>初心者</code>（新手）入门水平吗？怎么感觉这么难？！😭</p><h3 id="漂移"><a href="#漂移" class="headerlink" title="漂移"></a>漂移</h3><p>另外一个今年想要达成的目标就是学会漂移。</p><p>这个想了好久了，从 2000 年左右就梦想着有一天能学会，然而那个时候连车都买不起。</p><p>2017 年考了赛车执照以后，就更想学了，但是同样没有车。</p><p>2019 年终于有车了，可是又没有时间学……</p><p>今年不想再找理由和借口了，只有一个想法：学会漂移！</p><p>引用《头文字D》里面的台词，解释一下为啥一定要学会漂移：</p><blockquote><p>好簡單嘅啫，即漂移咁，點漂啊？一入彎，拉拉手製，架車飆一飆咁。<br>咁又點啊？<br>型咯……</p></blockquote><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h3 id="日语"><a href="#日语" class="headerlink" title="日语"></a>日语</h3><p>日语这个就很有趣了，从小（初中）就想学日语，为了看<a href="https://baike.baidu.com/item/%E7%94%9F%E8%82%89/13388633">生肉</a>动漫。</p><p>然而到了如今，连看动漫的时间都少了。</p><p>就算是看动漫，都要写到 TODO List 上面，然后「逼」自己看，不然是铁定不会看的。</p><p>虽然感觉平常也没什么机会用到日语，但就是心心念念地想要学会它。</p><p>既然如此，那就尝试下吧，说不定过了 10 几 20 年以后，就<del>学会</del>学废了呢？</p><p>目标是年内自学完成<a href="https://www.jlpt.jp/">日本语能力测试（JLPT）</a>，并取得 <code>N4</code> 证书！</p><h3 id="Python-教程"><a href="#Python-教程" class="headerlink" title="Python 教程"></a>Python 教程</h3><p>关于教朋友学 Python 这个事情，也说了好几年了。</p><p>在 B 站上注册了个账号，并且也更新了 1、2 章的视频，但离完成还有点遥远。</p><p>主要是写大纲，想代码，录视频，后期，再加上配字幕什么的，实在非常耗时。</p><p>但不管如何，希望今年能克服重重困难，完成<a href="https://www.bilibili.com/video/BV11V41167VH">《Python 入门教程》</a>。</p><h3 id="理财"><a href="#理财" class="headerlink" title="理财"></a>理财</h3><p>说实在的，对于这个，还是不大提得起兴趣，不知为何。</p><p>虽然读 MBA 的时候，Financial Accounting 和 Corporate Finance 啥的考得都很高分，但对于金融和理财相关的东西，就是提不起兴趣。</p><p>仔细想想，应该还是自己智力水平不够，搞不明白，所以玩不转。</p><p>毕竟那些玩金融衍生品的人的脑子都很好使，总能想到一些奇离古怪的赚钱方法。</p><p>也许这就是我这种 IQ 不足的韭菜，迟迟不敢涉足这项高智商活动的原因吧。</p><p>可是转念一想，吃不到猪肉，也得见过猪跑吧？不然就更显的愚笨了。</p><p>所以，佛系地了解和学习一下理财的相关知识，至于如何开始，怎么开始，暂时还没想法，走步看步。</p><p>感觉这个 flag 大概率要悲剧，毕竟没有明确的产出，那就把这项列为<code>可选</code>吧！</p><h2 id="阅读和写作"><a href="#阅读和写作" class="headerlink" title="阅读和写作"></a>阅读和写作</h2><p>最近这段时间，思考很多，产出很少，其中一个原因是觉得总写技术类的文章，没什么意思。</p><p>之前曾说过尽量少写技术类的文章，多写一些人文思考类的。2019 年还提出了尝试写英文 Blog 的想法。</p><p>但是到了今天，想法又有些不一样了。对于写文章而言，不一定要限定写什么内容和范围，只要能写就很好了。</p><p>就算想写的全部都是技术类文章也没有问题，因为总有想要发表感慨的时候。随着时间的推移，慢慢地就会发现自己特别擅长的领域。</p><p>另外一个写得少的原因，是各种各样奇怪的瓜层出不穷，没有任何想吃的欲望。</p><p>对于热点，我觉得可以关注，但是没必要为了吃瓜而吃瓜。</p><p>而且热点这东西，来得快去得快，大家都是本着<code>娱乐至死</code>的精神在消费他人，大可不必浪费过多精力。</p><p>最后，本着「人丑就要多读书」的精神，今年的目标就这样定吧：</p><ol><li>年内完成 50 本书（类别不限）的阅读</li><li>博客今年的目标是<code>半月更</code>，每个月最少更新 2 次</li><li>练字，每天 30 分钟，每周 5 次</li></ol><p>毕竟，人丑，字也丑，只能多读书，勤练字，修心养性了……</p><p>PS：说实在的，50 本书，我不是很有信心，毕竟看书看得慢，一直没学会所谓的「快速阅读」。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>最近在尝试早上 5 点起床跑步，那酸爽……不知道能否坚持下来……</p><p>此外，开始尝试 <a href="https://zettelkasten.de/">Zettelkasten</a> 笔记方法，并使用了 <a href="https://obsidian.md/">Obsidian</a> 来做网状知识管理，看看一年后效果如何。</p><p>最后列一下开了还没有填的坑：</p><ol><li>吉他</li><li>钢琴</li><li>尤克里里</li><li>赛车模拟器</li><li>尾波冲浪</li><li>摩托车</li></ol><p>还有那不知何时才能实现的 <code>Sky Dive（高空跳伞）</code>以及<code>考游艇执照</code>。</p><p>2021，应该是触底反弹的一年了吧？</p><p>希望未来能像 Beyond 的《海阔天空》里面的歌词一样：</p><blockquote><p>仍然自由自我<br>永遠高唱我歌<br>走遍千里<br>原諒我這一生不羈放縱愛自由……</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/02/05/2021-annual-plan/2021.jpg&quot; alt=&quot;2021&quot;&gt;&lt;/p&gt;
&lt;p&gt;时光荏苒，岁月如梭……&lt;/p&gt;
&lt;p&gt;又到了一年一度花样立 flag，做年度打脸大计的时候了。&lt;/p&gt;
&lt;p&gt;还是原来的包装，还是原来的味道，新瓶盛老酒，换汤不换药！&lt;/p&gt;
&lt;p&gt;因为各种&lt;code&gt;不可抗拒力&lt;/code&gt;因素，2020 年浑浑噩噩就度过了。&lt;/p&gt;
&lt;p&gt;从哪儿丢失的，就从哪儿找回来。所以，2021 年的计划必须走起！&lt;/p&gt;</summary>
    
    
    
    <category term="Life" scheme="https://tommy.net.cn/categories/life/"/>
    
    
    <category term="Life" scheme="https://tommy.net.cn/tags/life/"/>
    
    <category term="Annual" scheme="https://tommy.net.cn/tags/annual/"/>
    
    <category term="Plan" scheme="https://tommy.net.cn/tags/plan/"/>
    
  </entry>
  
  <entry>
    <title>修改安卓上的 Kindle 字体</title>
    <link href="https://tommy.net.cn/2021/02/04/change-kindle-fonts-on-android/"/>
    <id>https://tommy.net.cn/2021/02/04/change-kindle-fonts-on-android/</id>
    <published>2021-02-04T02:29:23.000Z</published>
    <updated>2025-02-19T05:47:01.184Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/02/04/change-kindle-fonts-on-android/kindle_app.png" alt="Kindle"></p><p>之前为了读书（其实就是想买电子产品），买了一台<a href="https://u.jd.com/ILQ6q2w">海信 A5 Pro</a>电子墨水屏手机。</p><p>对于原机自带的刷卡双待，拍照什么的，对于我来说都没有什么意义，最主要的还是奔着墨水屏去的。</p><p>买过 Kindle 的小伙伴应该都知道，只要是购买的正版书籍，都可以使用自定义字体进行阅读。</p><p>而 Android 版本的 Kindle 却只能使用系统和内置的字体（而且还需要单独下载），没有办法任意选择自己喜欢的字体。</p><span id="more"></span><p>这个时候，我们就需要自己手动，丰衣足食，来进行字体的替换了。</p><p>首先我们通过各大应用市场，下载最新版本的 Kindle 应用。</p><p>接着随便下载并打开一本书，打开上方 A 形的字体设置菜单，下载额外的字体。</p><p>当所有字体下载完成以后，我们可以在手机的 <code>/sdcard/Android/data/com.amazon.kindlefc/files/appexpan</code> 目录下，看到类似如下的目录：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">17</span>:<span class="number">39</span> STHeitiSC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">21</span>:<span class="number">09</span> STHeitiTC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">17</span>:<span class="number">39</span> STKaitiSC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">21</span>:<span class="number">09</span> STKaitiTC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">17</span>:<span class="number">38</span> STSongSC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">21</span>:<span class="number">09</span> STSongTC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">17</span>:<span class="number">40</span> STYuanSC</span><br><span class="line"><span class="attribute">drwxrwx</span>--x  <span class="number">3</span> u0_a175 sdcard_rw <span class="number">3</span>.<span class="number">4</span>K <span class="number">2021</span>-<span class="number">02</span>-<span class="number">01</span> <span class="number">21</span>:<span class="number">09</span> STYuanTC</span><br></pre></td></tr></table></figure><p>以上目录分别对应为：</p><ul><li>黑体简体（STHeitiSC）</li><li>黑体繁体（STHeitiTC）</li><li>楷体简体（STKaitiSC）</li><li>楷体繁体（STKaitiTC）</li><li>宋体简体（STSongSC）</li><li>宋体繁体（STSongTC）</li><li>圆体简体（STYuanSC）</li><li>圆体繁体（STYuanTC）</li></ul><p>其实也很简单，中间的拼音就是字体的名称，而 <code>SC</code> 表示 <code>Simplified Chinese</code> 也就是简体，<code>TC</code> 表示 <code>Traditional Chinese</code> 也就是繁体。</p><p>因为<strong>楷体</strong>和<strong>黑体</strong>等字体也经常会被使用，所以这里我决定替换<strong>圆体</strong>，也就是 <code>/sdcard/Android/data/com.amazon.kindlefc/files/appexpan/STYuanSC/1/STZhongyuan.ttf</code> 文件。</p><p>这里我使用的是<a href="https://www.foundertype.com/index.php/FontInfo/index/id/198.html">方正宋刻本秀楷</a>的繁体版本。</p><p>不得不说，用繁体字来看金庸的武侠小说，实在是种惬意。</p><p>一不小心又暴露了自己不学无术，沉迷武侠小说的罪行。</p><blockquote><p>注意：对于默认是简体字的书籍，如果想要用繁体字来看的话，必须要替换 SC 结尾的字体，替换 TC 的字体没有效果（主要是在字体菜单中无法选择）。</p></blockquote><p>下面是更换字体前的效果：</p><p><img src="/2021/02/04/change-kindle-fonts-on-android/font1.jpg"><br><img src="/2021/02/04/change-kindle-fonts-on-android/font2.jpg"></p><p>下面是更换字体后的效果：</p><p><img src="/2021/02/04/change-kindle-fonts-on-android/font3.jpg"><br><img src="/2021/02/04/change-kindle-fonts-on-android/font4.jpg"></p><p>可以看到，虽然设置里面显示的字体是<code>圆体</code>，但实际显示的效果已经是楷体繁体了。</p><p>这样就可以在手机和 Kindle 之间无缝阅读，并保持体验的一致性了。😄</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/02/04/change-kindle-fonts-on-android/kindle_app.png&quot; alt=&quot;Kindle&quot;&gt;&lt;/p&gt;
&lt;p&gt;之前为了读书（其实就是想买电子产品），买了一台&lt;a href=&quot;https://u.jd.com/ILQ6q2w&quot;&gt;海信 A5 Pro&lt;/a&gt;电子墨水屏手机。&lt;/p&gt;
&lt;p&gt;对于原机自带的刷卡双待，拍照什么的，对于我来说都没有什么意义，最主要的还是奔着墨水屏去的。&lt;/p&gt;
&lt;p&gt;买过 Kindle 的小伙伴应该都知道，只要是购买的正版书籍，都可以使用自定义字体进行阅读。&lt;/p&gt;
&lt;p&gt;而 Android 版本的 Kindle 却只能使用系统和内置的字体（而且还需要单独下载），没有办法任意选择自己喜欢的字体。&lt;/p&gt;</summary>
    
    
    
    <category term="Software" scheme="https://tommy.net.cn/categories/software/"/>
    
    
    <category term="Font" scheme="https://tommy.net.cn/tags/font/"/>
    
    <category term="Mobile" scheme="https://tommy.net.cn/tags/mobile/"/>
    
    <category term="Reading" scheme="https://tommy.net.cn/tags/reading/"/>
    
    <category term="Kindle" scheme="https://tommy.net.cn/tags/kindle/"/>
    
    <category term="Android" scheme="https://tommy.net.cn/tags/android/"/>
    
    <category term="App" scheme="https://tommy.net.cn/tags/app/"/>
    
  </entry>
  
  <entry>
    <title>升级 2020 款斯巴鲁 BRZ 中控</title>
    <link href="https://tommy.net.cn/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/"/>
    <id>https://tommy.net.cn/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/</id>
    <published>2020-09-01T09:05:02.000Z</published>
    <updated>2025-02-19T05:47:01.160Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/brz.jpg" class=""><p>因为用惯了 CarPlay，外加 BRZ 原厂的中控，真的是……太……销魂了。</p><p>你要知道一个整车红色系灯光的车子，竟然配置了一个丰田绿色的中控，那真的是惨不忍睹啊！</p><p>心心念念了很久，终于还是出手，把车子的中控给换了。</p><p>本篇文章主要以图片为主，简单记录了一下更换过程，多图预警……</p><span id="more"></span><p>首先看看原厂的中控，是长这样的，只有一个简单的 CD，晚上就会亮起幽幽的绿光…… 囧rz</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/01.jpg" class=""><p>二话不说，开始拆，网上找不到 2020 款的拆解教程，自己摸索……</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/02.jpg" class=""><p>从图上面这个位置下手，只要一用力，就能把前面板弄开了。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/03.jpg" class=""><p>看着像皮质的材料，实际上就是塑料而已……算了，买这车，谁在乎内饰做工啊？！对不对？</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/04.jpg" class=""><p>上下左右，总共有 4 颗螺丝。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/05.jpg" class=""><p>这里要一个 10 号的套筒扳手来拆螺丝，我用的是套筒加棘轮扳手的组合（如上图所示）。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/06.jpg" class=""><p>毫无技术含量的拆拆拆……</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/07.jpg" class=""><p>拆完螺丝以后，慢慢地拿出中控，因为后面还有很多连接线。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/08.jpg" class=""><p>原厂后面连接的线。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/09.jpg" class=""><p>大家操作的时候，最好垫一个这样的毛巾，以免中控金属部分把原车的中控面板给刮花了。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/10.jpg" class=""><p>拿出新买的中控，拍个照，感觉灰很大的样子……</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/11.jpg" class=""><p>屁股也来一张，跟原厂的比，还是很小巧的。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/12.jpg" class=""><p>这个中控本身是个 Android 的系统，支持 4G 和倒车影像，因为我主要用 CarPlay，所以就不安装 GPS 天线了。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/13.jpg" class=""><p>为了使用原厂的 USB 口，还专门找老板要了不同的 USB 转接线，因为原厂的 USB 不是标准接口的，也不确定用的是丰田（Toyota）标准还是斯巴鲁（Subaru）标准，最后拿了 3 条 USB 转接线。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/14.jpg" class=""><p>接好原车中控面板 USB 的转接线。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/15.jpg" class=""><p>把装 SIM 卡的盒子，穿过车架，放到副驾驶的手套箱里。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/16.jpg" class=""><p>新的中控配了无损转接线，可以不用自己做 Wiring 了，很好。都是带防呆设计的，一一对应插好就行了。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/17.jpg" class=""><p>把主机端的线也接好之后的样子。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/18.jpg" class=""><p>试着开机，确认线路连接没有问题。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/19.jpg" class=""><p>这个车机，不是硬件 CarPlay，而是用一个叫「ZLINK」的软件实现的 CarPlay。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/20.jpg" class=""><p>确认原厂 USB 位可以使用，之前看很多国外的改装视频，都是因为没有 USB 转接线而单独拉了一条 USB 线。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/21.jpg" class=""><p>安装新车机的固定支架，需要复用原厂的支架和螺丝，简单拆装一下就好。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/22.jpg" class=""><p>本以为马上就可以开始愉快地使用了，结果没想到孔位不契合，差了半个螺丝位！</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/23.jpg" class=""><p>又找了个钻机，把螺丝孔位拓宽了半个螺丝位。</p><img src="/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/24.jpg" class=""><p>盖上盖板，最终效果，红色的灯光跟整车的氛围更搭调，比原厂的视觉效果好多了。</p><p>打完收工，谢谢各位老板的观赏。</p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/2020/09/01/upgrade-the-head-unit-of-my-2020-subaru-brz/brz.jpg&quot; class=&quot;&quot;&gt;

&lt;p&gt;因为用惯了 CarPlay，外加 BRZ 原厂的中控，真的是……太……销魂了。&lt;/p&gt;
&lt;p&gt;你要知道一个整车红色系灯光的车子，竟然配置了一个丰田绿色的中控，那真的是惨不忍睹啊！&lt;/p&gt;
&lt;p&gt;心心念念了很久，终于还是出手，把车子的中控给换了。&lt;/p&gt;
&lt;p&gt;本篇文章主要以图片为主，简单记录了一下更换过程，多图预警……&lt;/p&gt;</summary>
    
    
    
    <category term="Car" scheme="https://tommy.net.cn/categories/car/"/>
    
    
    <category term="Car" scheme="https://tommy.net.cn/tags/car/"/>
    
    <category term="Tune" scheme="https://tommy.net.cn/tags/tune/"/>
    
    <category term="BRZ" scheme="https://tommy.net.cn/tags/brz/"/>
    
    <category term="Subaru" scheme="https://tommy.net.cn/tags/subaru/"/>
    
    <category term="86" scheme="https://tommy.net.cn/tags/86/"/>
    
    <category term="FT86" scheme="https://tommy.net.cn/tags/ft86/"/>
    
    <category term="GT86" scheme="https://tommy.net.cn/tags/gt86/"/>
    
    <category term="Head Unit" scheme="https://tommy.net.cn/tags/head-unit/"/>
    
    <category term="Subaru BRZ" scheme="https://tommy.net.cn/tags/subaru-brz/"/>
    
    <category term="Toyota" scheme="https://tommy.net.cn/tags/toyota/"/>
    
    <category term="Toyota 86" scheme="https://tommy.net.cn/tags/toyota-86/"/>
    
  </entry>
  
  <entry>
    <title>解包和打包中兴光猫配置文件</title>
    <link href="https://tommy.net.cn/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/"/>
    <id>https://tommy.net.cn/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/</id>
    <published>2020-08-10T10:24:09.000Z</published>
    <updated>2020-12-02T07:24:38.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/f663n.jpg" class=""><p>自从中国移动推出了高端套餐送宽带这项活动以来，我身边的朋友基本上都从<code>中国信不过</code>叛逃到了<code>中国移不动</code>。</p><p>这本无可厚非，毕竟市场竞争，最终还是价格决定一切吗。</p><p>但是在日常使用过程中，却由于由于光猫的各种问题，导致上网体验非常不好。</p><p>为了改善这种情况，就必须得修改光猫的配置，而我用的 <code>F663N</code> 的配置文件又不是明文的。</p><p>于是在研究的过程中，就顺手写了个小工具，今天就花点时间跟大家黄婆卖瓜自卖自夸一下……</p><span id="more"></span><h2 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h2><p>正式开始之前，先来个吐槽大会，数数运营商光猫的几宗罪。</p><p>现在移动配备的都是各个厂家出品的光猫、路由、Wi-Fi 一体机，其性能可想而知。</p><p>在 100M 带宽的情况下，用支持 802.11ac 的手机测带宽，就从来没有达到过 100M 的时候。</p><p>为什么呢？因为人家只有 2.4GHz 的无线网络，而且也只能支持到 802.11n。</p><p>也就是说就算你是 200M，300M，甚至是 1000M 的带宽都好，理论上也只能用到 50M 左右的带宽。</p><p>我就问你坑爹不坑爹？所以小伙伴们，我再说一次，好的路由器很重要，好的无线 AP 也很重要！</p><p>还有就是，这个光猫只有一个口是千兆口，其余的都是百兆口，如果你没有接 LAN1 的话，就算你是 200M 以上的宽带，理论上也最多只能当 100M 宽带用。</p><p>同时也意味着我的 NAS 在局域网内也只能以 100M 的带宽传输文件，也就是大概每秒 10MB 的样子。囧rz</p><p>如果是 NAS 跟手机之间传输，也就是每秒 5M 的样子，真的是好开心呢，9102 年都过去了，网速咋还这么慢呢？</p><p>如果是千兆交换机的话，局域网内轻轻松松跑个 130MB+ 每秒，一点问题都没有，节约 10 几倍的时间啊！</p><p>更开心的是，只要连接终端数超过 4 个，很多设备就上不了网了。</p><p>那我们把光猫一体机就只做光猫，然后用自己的路由器吧。嗯，少年，想法很好，但是……</p><p>人家运营商是强制光猫路由模式的，也就是说不给你上网的账号和密码，想改？没门儿。</p><p>为了能好好上网学习，只好自己研究下如何修改光猫配置了……</p><h2 id="获得配置文件"><a href="#获得配置文件" class="headerlink" title="获得配置文件"></a>获得配置文件</h2><p>首先访问光猫的管理界面，一般都是：<a href="http://192.168.1.1/">http://192.168.1.1/</a></p><p>输入从网上找到的登录用户名：<code>CMCCAdmin</code>，和密码：<code>aDm8H%MdA</code>。</p><p>找一个 FAT32 分区的 U 盘插到光猫背面的 USB 接口上。</p><p>然后在管理界面选择「<strong>管理</strong>」-&gt;「<strong>设备管理</strong>」-&gt;「<strong>USB备份配置</strong>」，应该会看到类似下面的界面，点击「<strong>开始备份</strong>」</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/backup.png" class=""><p>备份好了以后，拔下 U 盘放到电脑上，会看到一个名为 <code>e8_Config_Backup</code> 的目录，里面有一个叫 <code>ctce8_F663N.cfg</code> 的配置文件。</p><p>这个就是我们要处理的文件了。</p><h2 id="解包"><a href="#解包" class="headerlink" title="解包"></a>解包</h2><p>经过几个昼夜地研究与分析，终于搞明白了这个 cfg 文件的结构。</p><p>这里省略一万字，感兴趣的可以直接<a href="https://github.com/TommyLau/ztecfg">去 GitHub 看源代码</a>，不感兴趣的直接看怎么操作就行了。</p><p>首先去下载最新的可执行版本：<a href="https://github.com/TommyLau/ztecfg/releases">https://github.com/TommyLau/ztecfg/releases</a></p><p>写这篇文章的时候只有 <code>v0.1.0</code> 版本，选择对应平台的可执行文件就行了。</p><p>如果你的电脑有装 Python 3 的话，直接下载 <code>ztecfg.py</code> 这个文件就可以了。</p><p>把刚才得到的配置文件复制到 ztecfg 所在的目录，打开终端或命令行，运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ ./ztecfg -u ctce8_F663N.cfg</span><br><span class="line"></span><br><span class="line">Device name: F663N</span><br><span class="line"></span><br><span class="line">Block 1: size=65536, compressed=5724, offset=5796</span><br><span class="line">Block 2: size=65536, compressed=7018, offset=12826</span><br><span class="line">Block 3: size=65536, compressed=1828, offset=14666</span><br><span class="line">Block 4: size=65536, compressed=2551, offset=17229</span><br><span class="line">Block 5: size=65536, compressed=7136, offset=24377</span><br><span class="line">Block 6: size=65536, compressed=5343, offset=29732</span><br><span class="line">Block 7: size=12717, compressed=1305, offset=0</span><br><span class="line"></span><br><span class="line">Write XML output to file <span class="string">&quot;ctce8_F663N.xml&quot;</span></span><br></pre></td></tr></table></figure><p>于是乎我们就得到了一个名为 <code>ctce8_F663N.xml</code> 的文件，就是解包出来的配置文件。</p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>既然你都找到这里，说明你知道自己要修改什么了。</p><p>如果不清楚的话，可以参考一下<a href="https://www.codenong.com/js0919042f29ed/">《上海电信光猫F460开启telnet》</a>这篇文章。</p><p>简单说，你可以修改用户权限，获得 root 密码，打开 telnet、ftp 等功能。</p><p>我这里主要是将<code>路由模式</code>修改成了<code>桥接模式</code>，顺便查了一下我的上网账号和密码。😊</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/pppoe.png" class=""><p>终于知道了为什么超过 4 个设备就会断网，原来人家设置了最多 4 个用户啊！</p><p>再比如说，打开 FTP &#x2F; TELNET 之类的服务。</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/service.png" class=""><p>还可以查看和修改账号权限：</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/auth.png" class=""><p>比如上面可以看到超级密码，也可以把普通用户的 <code>level</code> 修改为 <code>1</code>，这样普通用户也变成了管理员用户。</p><p>就算是将来超级管理员的密码被修改了，也可以用普通账户登录进行管理。</p><p>反正根据你自己的需求，调整和修改 XML 内对应的字段就好了。</p><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><p>修改完 XML 文件以后，运行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ ./ztecfg.py -p ctce8_F663N.cfg ctce8_F663N.xml</span><br><span class="line"></span><br><span class="line">Device name: F663N</span><br><span class="line"></span><br><span class="line">Block 1: size=65536, compressed=5724, offset=5796</span><br><span class="line">Block 2: size=65536, compressed=7018, offset=12826</span><br><span class="line">Block 3: size=65536, compressed=1828, offset=14666</span><br><span class="line">Block 4: size=65536, compressed=2551, offset=17229</span><br><span class="line">Block 5: size=65536, compressed=7136, offset=24377</span><br><span class="line">Block 6: size=65536, compressed=5343, offset=29732</span><br><span class="line">Block 7: size=12717, compressed=1305, offset=0</span><br><span class="line"></span><br><span class="line">Write CFG output to file <span class="string">&quot;ctce8_F663N.xml.cfg&quot;</span></span><br></pre></td></tr></table></figure><p>程序执行后会生成一个名为 <code>ctce8_F663N.xml.cfg</code> 的文件，把它复制到 U 盘的<code>e8_Config_Backup</code> 的目录里，删除旧文件，并重命名为 <code>ctce8_F663N.cfg</code>。</p><h2 id="写入新配置"><a href="#写入新配置" class="headerlink" title="写入新配置"></a>写入新配置</h2><p>把保存了新配置的 U 盘插到中兴的光猫上，然后打开光猫的管理界面。</p><p>选择「<strong>管理</strong>」-&gt;「<strong>设备管理</strong>」-&gt;「<strong>USB恢复配置</strong>」，勾选「<strong>启用</strong>」，然后点击「<strong>确定</strong>」。</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/restore.png" class=""><p>然后再选择左侧的「<strong>设备重启</strong>」，重新启动光猫后，配置就生效了。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>改成了桥接，换成了自己的路由器，刷了 OpenWrt，同时上了 802.11ac 的 Wi-Fi AP。</p><p>结果就是有图有真相，终于跑满了 100Mbps 的带宽！</p><img src="/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/speed.png" class=""><p>左侧为使用移动光猫时的测速，右侧为使用自己路由器和 AP 时的测速。</p><p>测速时间前后差距 1-2 分钟，测试服务器都为 China Mobile Shenzhen。</p><p>除此之外，所有内网的设备都拿到了 IPv6 的地址，相当于有了公网 IP，可以直连家里的 NAS 了。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>工具使用过程中有什么问题和建议，可以访问项目主页提 issue：</p><p><a href="https://github.com/TommyLau/ztecfg">https://github.com/TommyLau/ztecfg</a></p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/2020/08/10/unpack-and-pack-zte-optical-modem-config-file/f663n.jpg&quot; class=&quot;&quot;&gt;

&lt;p&gt;自从中国移动推出了高端套餐送宽带这项活动以来，我身边的朋友基本上都从&lt;code&gt;中国信不过&lt;/code&gt;叛逃到了&lt;code&gt;中国移不动&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这本无可厚非，毕竟市场竞争，最终还是价格决定一切吗。&lt;/p&gt;
&lt;p&gt;但是在日常使用过程中，却由于由于光猫的各种问题，导致上网体验非常不好。&lt;/p&gt;
&lt;p&gt;为了改善这种情况，就必须得修改光猫的配置，而我用的 &lt;code&gt;F663N&lt;/code&gt; 的配置文件又不是明文的。&lt;/p&gt;
&lt;p&gt;于是在研究的过程中，就顺手写了个小工具，今天就花点时间跟大家黄婆卖瓜自卖自夸一下……&lt;/p&gt;</summary>
    
    
    
    <category term="Hardware" scheme="https://tommy.net.cn/categories/hardware/"/>
    
    
    <category term="Network" scheme="https://tommy.net.cn/tags/network/"/>
    
    <category term="Internet" scheme="https://tommy.net.cn/tags/internet/"/>
    
    <category term="China Mobile" scheme="https://tommy.net.cn/tags/china-mobile/"/>
    
    <category term="CMCC" scheme="https://tommy.net.cn/tags/cmcc/"/>
    
    <category term="F663N" scheme="https://tommy.net.cn/tags/f663n/"/>
    
    <category term="Modem" scheme="https://tommy.net.cn/tags/modem/"/>
    
    <category term="Optical" scheme="https://tommy.net.cn/tags/optical/"/>
    
    <category term="Router" scheme="https://tommy.net.cn/tags/router/"/>
    
    <category term="ZTE" scheme="https://tommy.net.cn/tags/zte/"/>
    
    <category term="ZXHN" scheme="https://tommy.net.cn/tags/zxhn/"/>
    
    <category term="ztecfg" scheme="https://tommy.net.cn/tags/ztecfg/"/>
    
  </entry>
  
  <entry>
    <title>将 Hexo 升级到 v5.0.0</title>
    <link href="https://tommy.net.cn/2020/08/08/upgrade-hexo-to-v5-0-0/"/>
    <id>https://tommy.net.cn/2020/08/08/upgrade-hexo-to-v5-0-0/</id>
    <published>2020-08-08T04:06:12.000Z</published>
    <updated>2025-02-19T05:47:01.156Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/08/08/upgrade-hexo-to-v5-0-0/hexo-5.png" class="" title="Hexo 5.0.0"><p>感觉刚刚才<a href="../../../../2020/07/07/upgrade-hexo-to-v4-2-1/">升级到 Hexo 4.2.1 没多久</a>，结果 Hexo 又双叒叕更新了……</p><p>而且这次升级还是大版本号升级，说不定有惊喜？ 本着好奇害死猫的精神，果断升级之！</p><span id="more"></span><p>之前升级的时候，<a href="https://zhuanlan.zhihu.com/p/157511323">写了篇文章同步在「知乎」</a>，然后有小伙伴留言说可以用 <code>ncu -u</code> 一把梭。</p><p>有这种好事岂能错过？简单搜索了一下，就领悟到了要点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ npm install npm-check-updates -g</span><br><span class="line">$ ncu</span><br><span class="line">Checking /Users/tommy/blog/package.json</span><br><span class="line">[====================] 16/16 100%</span><br><span class="line"></span><br><span class="line"> hexo                    ^4.2.0  →  ^5.0.0</span><br><span class="line"> hexo-generator-sitemap  ^2.0.0  →  ^2.1.0</span><br><span class="line"></span><br><span class="line">Run ncu -u to upgrade package.json</span><br><span class="line">$ ncu -u</span><br><span class="line">Upgrading /Users/tommy/blog/package.json</span><br><span class="line">[====================] 16/16 100%</span><br><span class="line"></span><br><span class="line"> hexo                    ^4.2.0  →  ^5.0.0</span><br><span class="line"> hexo-generator-sitemap  ^2.0.0  →  ^2.1.0</span><br><span class="line"></span><br><span class="line">Run npm install to install new versions.</span><br></pre></td></tr></table></figure><p>简单如此，就把 <code>package.json</code> 文件给更新了，果然是一把梭啊，爽～～～</p><p>对于强迫症的我，习惯性删除重来是必须的！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">rm</span> -fr node_modules/</span><br><span class="line">$ npm install --save</span><br></pre></td></tr></table></figure><p>顺手升级一下 CLI：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">/usr/local/bin/hexo -&gt; /usr/local/lib/node_modules/hexo-cli/bin/hexo</span><br><span class="line">+ hexo-cli@4.1.0</span><br><span class="line">added 1 package from 1 contributor, removed 21 packages and updated 13 packages <span class="keyword">in</span> 4.121s</span><br></pre></td></tr></table></figure><p>搞掂，检查一下版本信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br><span class="line">INFO  Validating config</span><br><span class="line">hexo: 5.0.0</span><br><span class="line">hexo-cli: 4.1.0</span><br><span class="line">os: Darwin 19.6.0 darwin x64</span><br><span class="line">node: 12.18.3</span><br><span class="line">v8: 7.8.279.23-node.39</span><br><span class="line">uv: 1.38.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.16.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.41.0</span><br><span class="line">napi: 6</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">http_parser: 2.9.3</span><br><span class="line">openssl: 1.1.1g</span><br><span class="line">cldr: 37.0</span><br><span class="line">icu: 67.1</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 13.0</span><br></pre></td></tr></table></figure><p>既然是大版本升级，绝对不可能这么简简单单一升级就 OK 的。</p><p>以我多年来瞎折腾的经验看，肯定还有坑。</p><p>运行 <code>hexo server</code> 验证一下我的想法，果不其然：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO  Validating config</span><br><span class="line">WARN  Deprecated config detected: <span class="string">&quot;external_link&quot;</span> with a Boolean value is deprecated. See https://hexo.io/docs/configuration <span class="keyword">for</span> more details.</span><br></pre></td></tr></table></figure><p>嗯……「deprecated」啊……查一下<a href="https://hexo.io/news/2020/07/29/hexo-5-released/">官方的 Release Note</a>。</p><p>果然有个叫「Breaking change」的东东，里面就有说到配置文件的变化。</p><figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deprecated</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span><span class="string">|false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># New option</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span><span class="string">|false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deprecated</span></span><br><span class="line"><span class="attr">use_date_for_updated:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># New option</span></span><br><span class="line"><span class="comment"># https://hexo.io/docs/configuration#Date-Time-format</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">date</span></span><br></pre></td></tr></table></figure><p>对比以后，发现主要有如下变化，大家根据自己的需要调整修改就好了：</p><figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br><span class="line"></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">&#x27;mtime&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the &#x27;source/&#x27; folder</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br></pre></td></tr></table></figure><p>简单调整后，Hexo 已经可以正常使用了。</p><p>暂时还没有体会到 Hexo 5.0.0 有什么特别不同的地方，再慢慢体会一下吧。</p>]]></content>
    
    
    <summary type="html">&lt;img src=&quot;/2020/08/08/upgrade-hexo-to-v5-0-0/hexo-5.png&quot; class=&quot;&quot; title=&quot;Hexo 5.0.0&quot;&gt;

&lt;p&gt;感觉刚刚才&lt;a href=&quot;../../../../2020/07/07/upgrade-hexo-to-v4-2-1/&quot;&gt;升级到 Hexo 4.2.1 没多久&lt;/a&gt;，结果 Hexo 又双叒叕更新了……&lt;/p&gt;
&lt;p&gt;而且这次升级还是大版本号升级，说不定有惊喜？ 本着好奇害死猫的精神，果断升级之！&lt;/p&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://tommy.net.cn/categories/blog/"/>
    
    
    <category term="Hexo" scheme="https://tommy.net.cn/tags/hexo/"/>
    
    <category term="Node.js" scheme="https://tommy.net.cn/tags/node-js/"/>
    
  </entry>
  
</feed>
